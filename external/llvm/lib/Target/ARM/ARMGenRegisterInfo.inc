//===- TableGen'erated file -------------------------------------*- C++ -*-===//
//
// Target Register Enum Values
//
// Automatically generated file, do not edit!
//
//===----------------------------------------------------------------------===//


#ifdef GET_REGINFO_ENUM
#undef GET_REGINFO_ENUM
namespace llvm {

class MCRegisterClass;
extern const MCRegisterClass ARMMCRegisterClasses[];

namespace ARM {
enum {
  NoRegister,
  APSR = 1,
  CPSR = 2,
  D0 = 3,
  D1 = 4,
  D2 = 5,
  D3 = 6,
  D4 = 7,
  D5 = 8,
  D6 = 9,
  D7 = 10,
  D8 = 11,
  D9 = 12,
  D10 = 13,
  D11 = 14,
  D12 = 15,
  D13 = 16,
  D14 = 17,
  D15 = 18,
  D16 = 19,
  D17 = 20,
  D18 = 21,
  D19 = 22,
  D20 = 23,
  D21 = 24,
  D22 = 25,
  D23 = 26,
  D24 = 27,
  D25 = 28,
  D26 = 29,
  D27 = 30,
  D28 = 31,
  D29 = 32,
  D30 = 33,
  D31 = 34,
  FPEXC = 35,
  FPSCR = 36,
  FPSCR_NZCV = 37,
  FPSID = 38,
  ITSTATE = 39,
  LR = 40,
  MVFR0 = 41,
  MVFR1 = 42,
  PC = 43,
  Q0 = 44,
  Q1 = 45,
  Q2 = 46,
  Q3 = 47,
  Q4 = 48,
  Q5 = 49,
  Q6 = 50,
  Q7 = 51,
  Q8 = 52,
  Q9 = 53,
  Q10 = 54,
  Q11 = 55,
  Q12 = 56,
  Q13 = 57,
  Q14 = 58,
  Q15 = 59,
  R0 = 60,
  R1 = 61,
  R2 = 62,
  R3 = 63,
  R4 = 64,
  R5 = 65,
  R6 = 66,
  R7 = 67,
  R8 = 68,
  R9 = 69,
  R10 = 70,
  R11 = 71,
  R12 = 72,
  S0 = 73,
  S1 = 74,
  S2 = 75,
  S3 = 76,
  S4 = 77,
  S5 = 78,
  S6 = 79,
  S7 = 80,
  S8 = 81,
  S9 = 82,
  S10 = 83,
  S11 = 84,
  S12 = 85,
  S13 = 86,
  S14 = 87,
  S15 = 88,
  S16 = 89,
  S17 = 90,
  S18 = 91,
  S19 = 92,
  S20 = 93,
  S21 = 94,
  S22 = 95,
  S23 = 96,
  S24 = 97,
  S25 = 98,
  S26 = 99,
  S27 = 100,
  S28 = 101,
  S29 = 102,
  S30 = 103,
  S31 = 104,
  SP = 105,
  SPSR = 106,
  D0_D2 = 107,
  D1_D3 = 108,
  D2_D4 = 109,
  D3_D5 = 110,
  D4_D6 = 111,
  D5_D7 = 112,
  D6_D8 = 113,
  D7_D9 = 114,
  D8_D10 = 115,
  D9_D11 = 116,
  D10_D12 = 117,
  D11_D13 = 118,
  D12_D14 = 119,
  D13_D15 = 120,
  D14_D16 = 121,
  D15_D17 = 122,
  D16_D18 = 123,
  D17_D19 = 124,
  D18_D20 = 125,
  D19_D21 = 126,
  D20_D22 = 127,
  D21_D23 = 128,
  D22_D24 = 129,
  D23_D25 = 130,
  D24_D26 = 131,
  D25_D27 = 132,
  D26_D28 = 133,
  D27_D29 = 134,
  D28_D30 = 135,
  D29_D31 = 136,
  Q0_Q1 = 137,
  Q1_Q2 = 138,
  Q2_Q3 = 139,
  Q3_Q4 = 140,
  Q4_Q5 = 141,
  Q5_Q6 = 142,
  Q6_Q7 = 143,
  Q7_Q8 = 144,
  Q8_Q9 = 145,
  Q9_Q10 = 146,
  Q10_Q11 = 147,
  Q11_Q12 = 148,
  Q12_Q13 = 149,
  Q13_Q14 = 150,
  Q14_Q15 = 151,
  Q0_Q1_Q2_Q3 = 152,
  Q1_Q2_Q3_Q4 = 153,
  Q2_Q3_Q4_Q5 = 154,
  Q3_Q4_Q5_Q6 = 155,
  Q4_Q5_Q6_Q7 = 156,
  Q5_Q6_Q7_Q8 = 157,
  Q6_Q7_Q8_Q9 = 158,
  Q7_Q8_Q9_Q10 = 159,
  Q8_Q9_Q10_Q11 = 160,
  Q9_Q10_Q11_Q12 = 161,
  Q10_Q11_Q12_Q13 = 162,
  Q11_Q12_Q13_Q14 = 163,
  Q12_Q13_Q14_Q15 = 164,
  D0_D1_D2 = 165,
  D1_D2_D3 = 166,
  D2_D3_D4 = 167,
  D3_D4_D5 = 168,
  D4_D5_D6 = 169,
  D5_D6_D7 = 170,
  D6_D7_D8 = 171,
  D7_D8_D9 = 172,
  D8_D9_D10 = 173,
  D9_D10_D11 = 174,
  D10_D11_D12 = 175,
  D11_D12_D13 = 176,
  D12_D13_D14 = 177,
  D13_D14_D15 = 178,
  D14_D15_D16 = 179,
  D15_D16_D17 = 180,
  D16_D17_D18 = 181,
  D17_D18_D19 = 182,
  D18_D19_D20 = 183,
  D19_D20_D21 = 184,
  D20_D21_D22 = 185,
  D21_D22_D23 = 186,
  D22_D23_D24 = 187,
  D23_D24_D25 = 188,
  D24_D25_D26 = 189,
  D25_D26_D27 = 190,
  D26_D27_D28 = 191,
  D27_D28_D29 = 192,
  D28_D29_D30 = 193,
  D29_D30_D31 = 194,
  D0_D2_D4 = 195,
  D1_D3_D5 = 196,
  D2_D4_D6 = 197,
  D3_D5_D7 = 198,
  D4_D6_D8 = 199,
  D5_D7_D9 = 200,
  D6_D8_D10 = 201,
  D7_D9_D11 = 202,
  D8_D10_D12 = 203,
  D9_D11_D13 = 204,
  D10_D12_D14 = 205,
  D11_D13_D15 = 206,
  D12_D14_D16 = 207,
  D13_D15_D17 = 208,
  D14_D16_D18 = 209,
  D15_D17_D19 = 210,
  D16_D18_D20 = 211,
  D17_D19_D21 = 212,
  D18_D20_D22 = 213,
  D19_D21_D23 = 214,
  D20_D22_D24 = 215,
  D21_D23_D25 = 216,
  D22_D24_D26 = 217,
  D23_D25_D27 = 218,
  D24_D26_D28 = 219,
  D25_D27_D29 = 220,
  D26_D28_D30 = 221,
  D27_D29_D31 = 222,
  D0_D2_D4_D6 = 223,
  D1_D3_D5_D7 = 224,
  D2_D4_D6_D8 = 225,
  D3_D5_D7_D9 = 226,
  D4_D6_D8_D10 = 227,
  D5_D7_D9_D11 = 228,
  D6_D8_D10_D12 = 229,
  D7_D9_D11_D13 = 230,
  D8_D10_D12_D14 = 231,
  D9_D11_D13_D15 = 232,
  D10_D12_D14_D16 = 233,
  D11_D13_D15_D17 = 234,
  D12_D14_D16_D18 = 235,
  D13_D15_D17_D19 = 236,
  D14_D16_D18_D20 = 237,
  D15_D17_D19_D21 = 238,
  D16_D18_D20_D22 = 239,
  D17_D19_D21_D23 = 240,
  D18_D20_D22_D24 = 241,
  D19_D21_D23_D25 = 242,
  D20_D22_D24_D26 = 243,
  D21_D23_D25_D27 = 244,
  D22_D24_D26_D28 = 245,
  D23_D25_D27_D29 = 246,
  D24_D26_D28_D30 = 247,
  D25_D27_D29_D31 = 248,
  D1_D2 = 249,
  D3_D4 = 250,
  D5_D6 = 251,
  D7_D8 = 252,
  D9_D10 = 253,
  D11_D12 = 254,
  D13_D14 = 255,
  D15_D16 = 256,
  D17_D18 = 257,
  D19_D20 = 258,
  D21_D22 = 259,
  D23_D24 = 260,
  D25_D26 = 261,
  D27_D28 = 262,
  D29_D30 = 263,
  D1_D2_D3_D4 = 264,
  D3_D4_D5_D6 = 265,
  D5_D6_D7_D8 = 266,
  D7_D8_D9_D10 = 267,
  D9_D10_D11_D12 = 268,
  D11_D12_D13_D14 = 269,
  D13_D14_D15_D16 = 270,
  D15_D16_D17_D18 = 271,
  D17_D18_D19_D20 = 272,
  D19_D20_D21_D22 = 273,
  D21_D22_D23_D24 = 274,
  D23_D24_D25_D26 = 275,
  D25_D26_D27_D28 = 276,
  D27_D28_D29_D30 = 277,
  NUM_TARGET_REGS 	// 278
};
}

// Register classes
namespace ARM {
enum {
  SPRRegClassID = 0,
  DPRRegClassID = 1,
  DPairRegClassID = 2,
  DPairSpcRegClassID = 3,
  DTripleRegClassID = 4,
  DQuadRegClassID = 5,
  DTripleSpcRegClassID = 6,
  DQuadSpcRegClassID = 7,
  GPRRegClassID = 8,
  SPR_8RegClassID = 9,
  DPR_VFP2RegClassID = 10,
  DPairSpc_with_ssub_0RegClassID = 11,
  DPair_with_ssub_0RegClassID = 12,
  QPRRegClassID = 13,
  DTripleSpc_with_ssub_0RegClassID = 14,
  DTriple_with_ssub_0RegClassID = 15,
  DQuadSpc_with_ssub_0RegClassID = 16,
  DQuad_with_ssub_0RegClassID = 17,
  GPRnopcRegClassID = 18,
  DPair_with_ssub_2RegClassID = 19,
  DTriple_with_ssub_2RegClassID = 20,
  DQuad_with_ssub_2RegClassID = 21,
  QQPRRegClassID = 22,
  rGPRRegClassID = 23,
  DPairSpc_with_dsub_2_then_ssub_0RegClassID = 24,
  DTripleSpc_with_dsub_2_then_ssub_0RegClassID = 25,
  DTriple_with_dsub_2_then_ssub_0RegClassID = 26,
  DQuadSpc_with_dsub_2_then_ssub_0RegClassID = 27,
  DQuad_with_dsub_2_then_ssub_0RegClassID = 28,
  DQuad_with_dsub_3_then_ssub_0RegClassID = 29,
  QQQQPRRegClassID = 30,
  DTripleSpc_with_dsub_4_then_ssub_0RegClassID = 31,
  DQuadSpc_with_dsub_4_then_ssub_0RegClassID = 32,
  hGPRRegClassID = 33,
  tGPRRegClassID = 34,
  DPR_8RegClassID = 35,
  DPairSpc_with_dsub_0_in_DPR_8RegClassID = 36,
  DPair_with_dsub_0_in_DPR_8RegClassID = 37,
  QPR_VFP2RegClassID = 38,
  DTripleSpc_with_dsub_0_in_DPR_8RegClassID = 39,
  DTriple_with_dsub_0_in_DPR_8RegClassID = 40,
  DQuadSpc_with_dsub_0_in_DPR_8RegClassID = 41,
  DQuad_with_dsub_0_in_DPR_8RegClassID = 42,
  QQPR_with_ssub_0RegClassID = 43,
  QQQQPR_with_ssub_0RegClassID = 44,
  GPRnopc_and_hGPRRegClassID = 45,
  DPair_with_dsub_1_in_DPR_8RegClassID = 46,
  DTriple_with_dsub_1_in_DPR_8RegClassID = 47,
  DQuad_with_dsub_1_in_DPR_8RegClassID = 48,
  QQPR_with_dsub_2_then_ssub_0RegClassID = 49,
  QQQQPR_with_dsub_2_then_ssub_0RegClassID = 50,
  hGPR_and_rGPRRegClassID = 51,
  tcGPRRegClassID = 52,
  DPairSpc_with_dsub_2_in_DPR_8RegClassID = 53,
  DTripleSpc_with_dsub_2_in_DPR_8RegClassID = 54,
  DTriple_with_dsub_2_in_DPR_8RegClassID = 55,
  DQuadSpc_with_dsub_2_in_DPR_8RegClassID = 56,
  DQuad_with_dsub_2_in_DPR_8RegClassID = 57,
  QQQQPR_with_dsub_5_then_ssub_0RegClassID = 58,
  DQuad_with_dsub_3_in_DPR_8RegClassID = 59,
  QQQQPR_with_dsub_7_then_ssub_0RegClassID = 60,
  tGPR_and_tcGPRRegClassID = 61,
  QPR_8RegClassID = 62,
  DTripleSpc_with_dsub_4_in_DPR_8RegClassID = 63,
  DQuadSpc_with_dsub_4_in_DPR_8RegClassID = 64,
  QQPR_and_DQuad_with_dsub_0_in_DPR_8RegClassID = 65,
  QQQQPR_with_dsub_0_in_DPR_8RegClassID = 66,
  QQPR_and_DQuad_with_dsub_2_in_DPR_8RegClassID = 67,
  QQQQPR_with_dsub_2_in_DPR_8RegClassID = 68,
  hGPR_and_tcGPRRegClassID = 69,
  QQQQPR_with_dsub_4_in_DPR_8RegClassID = 70,
  CCRRegClassID = 71,
  GPRspRegClassID = 72,
  QQQQPR_with_dsub_6_in_DPR_8RegClassID = 73
  };
}

// Subregister indices
namespace ARM {
enum {
  NoSubRegister,
  dsub_0,	// 1
  dsub_1,	// 2
  dsub_2,	// 3
  dsub_3,	// 4
  dsub_4,	// 5
  dsub_5,	// 6
  dsub_6,	// 7
  dsub_7,	// 8
  qqsub_0,	// 9
  qqsub_1,	// 10
  qsub_0,	// 11
  qsub_1,	// 12
  qsub_2,	// 13
  qsub_3,	// 14
  ssub_0,	// 15
  ssub_1,	// 16
  ssub_2,	// 17
  ssub_3,	// 18
  NUM_TARGET_NAMED_SUBREGS
};
}
} // End llvm namespace 
#endif // GET_REGINFO_ENUM

//===- TableGen'erated file -------------------------------------*- C++ -*-===//
//
// MC Register Information
//
// Automatically generated file, do not edit!
//
//===----------------------------------------------------------------------===//


#ifdef GET_REGINFO_MC_DESC
#undef GET_REGINFO_MC_DESC
namespace llvm {

extern const uint16_t ARMRegLists[] = {
  /* 0 */ ARM::APSR, 0,
  /* 2 */ ARM::CPSR, 0,
  /* 4 */ ARM::D10_D12_D14_D16, ARM::Q5, ARM::Q6, ARM::Q7, ARM::Q8, ARM::D8_D10, ARM::D10_D12, ARM::D12_D14, ARM::D14_D16, ARM::D16_D18, ARM::Q4_Q5, ARM::Q5_Q6, ARM::Q6_Q7, ARM::Q7_Q8, ARM::Q8_Q9, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::D8_D9_D10, ARM::D9_D10_D11, ARM::D10_D11_D12, ARM::D11_D12_D13, ARM::D12_D13_D14, ARM::D13_D14_D15, ARM::D14_D15_D16, ARM::D15_D16_D17, ARM::D16_D17_D18, ARM::D6_D8_D10, ARM::D8_D10_D12, ARM::D10_D12_D14, ARM::D12_D14_D16, ARM::D14_D16_D18, ARM::D16_D18_D20, ARM::D4_D6_D8_D10, ARM::D6_D8_D10_D12, ARM::D8_D10_D12_D14, ARM::D12_D14_D16_D18, ARM::D14_D16_D18_D20, ARM::D16_D18_D20_D22, ARM::D9_D10, ARM::D11_D12, ARM::D13_D14, ARM::D15_D16, ARM::D7_D8_D9_D10, ARM::D9_D10_D11_D12, ARM::D11_D12_D13_D14, ARM::D13_D14_D15_D16, ARM::D15_D16_D17_D18, ARM::D10, ARM::S20, ARM::S21, ARM::D12, ARM::S24, ARM::S25, ARM::D14, ARM::S28, ARM::S29, ARM::D16, 0,
  /* 67 */ ARM::D12_D14_D16, ARM::Q6, ARM::Q7, ARM::Q8, ARM::D10_D12, ARM::D12_D14, ARM::D14_D16, ARM::D16_D18, ARM::Q5_Q6, ARM::Q6_Q7, ARM::Q7_Q8, ARM::Q8_Q9, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::D10_D11_D12, ARM::D11_D12_D13, ARM::D12_D13_D14, ARM::D13_D14_D15, ARM::D14_D15_D16, ARM::D15_D16_D17, ARM::D16_D17_D18, ARM::D8_D10_D12, ARM::D10_D12_D14, ARM::D14_D16_D18, ARM::D16_D18_D20, ARM::D6_D8_D10_D12, ARM::D8_D10_D12_D14, ARM::D10_D12_D14_D16, ARM::D12_D14_D16_D18, ARM::D14_D16_D18_D20, ARM::D16_D18_D20_D22, ARM::D11_D12, ARM::D13_D14, ARM::D15_D16, ARM::D9_D10_D11_D12, ARM::D11_D12_D13_D14, ARM::D13_D14_D15_D16, ARM::D15_D16_D17_D18, ARM::D12, ARM::S24, ARM::S25, ARM::D14, ARM::S28, ARM::S29, ARM::D16, 0,
  /* 117 */ ARM::D14_D16, ARM::Q7, ARM::Q8, ARM::D12_D14, ARM::D16_D18, ARM::Q6_Q7, ARM::Q7_Q8, ARM::Q8_Q9, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::D12_D13_D14, ARM::D13_D14_D15, ARM::D14_D15_D16, ARM::D15_D16_D17, ARM::D16_D17_D18, ARM::D10_D12_D14, ARM::D12_D14_D16, ARM::D14_D16_D18, ARM::D16_D18_D20, ARM::D8_D10_D12_D14, ARM::D10_D12_D14_D16, ARM::D12_D14_D16_D18, ARM::D14_D16_D18_D20, ARM::D16_D18_D20_D22, ARM::D13_D14, ARM::D15_D16, ARM::D11_D12_D13_D14, ARM::D13_D14_D15_D16, ARM::D15_D16_D17_D18, ARM::D14, ARM::S28, ARM::S29, ARM::D16, 0,
  /* 154 */ ARM::D13_D14_D15_D16, ARM::Q6, ARM::Q7, ARM::Q8, ARM::D11_D13, ARM::D12_D14, ARM::D13_D15, ARM::D14_D16, ARM::D15_D17, ARM::D16_D18, ARM::Q5_Q6, ARM::Q6_Q7, ARM::Q7_Q8, ARM::Q8_Q9, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::D11_D12_D13, ARM::D12_D13_D14, ARM::D13_D14_D15, ARM::D14_D15_D16, ARM::D15_D16_D17, ARM::D16_D17_D18, ARM::D9_D11_D13, ARM::D10_D12_D14, ARM::D11_D13_D15, ARM::D12_D14_D16, ARM::D13_D15_D17, ARM::D14_D16_D18, ARM::D15_D17_D19, ARM::D16_D18_D20, ARM::D7_D9_D11_D13, ARM::D8_D10_D12_D14, ARM::D9_D11_D13_D15, ARM::D10_D12_D14_D16, ARM::D11_D13_D15_D17, ARM::D12_D14_D16_D18, ARM::D13_D15_D17_D19, ARM::D14_D16_D18_D20, ARM::D15_D17_D19_D21, ARM::D16_D18_D20_D22, ARM::D13_D14, ARM::D15_D16, ARM::D11_D12_D13_D14, ARM::D15_D16_D17_D18, ARM::D13, ARM::S26, ARM::S27, ARM::D14, ARM::S28, ARM::S29, ARM::D15, ARM::S30, ARM::S31, ARM::D16, 0,
  /* 213 */ ARM::D14_D15_D16, ARM::Q7, ARM::Q8, ARM::D12_D14, ARM::D13_D15, ARM::D14_D16, ARM::D15_D17, ARM::D16_D18, ARM::Q6_Q7, ARM::Q7_Q8, ARM::Q8_Q9, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::D12_D13_D14, ARM::D13_D14_D15, ARM::D15_D16_D17, ARM::D16_D17_D18, ARM::D10_D12_D14, ARM::D11_D13_D15, ARM::D12_D14_D16, ARM::D13_D15_D17, ARM::D14_D16_D18, ARM::D15_D17_D19, ARM::D16_D18_D20, ARM::D8_D10_D12_D14, ARM::D9_D11_D13_D15, ARM::D10_D12_D14_D16, ARM::D11_D13_D15_D17, ARM::D12_D14_D16_D18, ARM::D13_D15_D17_D19, ARM::D14_D16_D18_D20, ARM::D15_D17_D19_D21, ARM::D16_D18_D20_D22, ARM::D13_D14, ARM::D15_D16, ARM::D11_D12_D13_D14, ARM::D13_D14_D15_D16, ARM::D15_D16_D17_D18, ARM::D14, ARM::S28, ARM::S29, ARM::D15, ARM::S30, ARM::S31, ARM::D16, 0,
  /* 262 */ ARM::D15_D16, ARM::Q7, ARM::Q8, ARM::D13_D15, ARM::D14_D16, ARM::D15_D17, ARM::D16_D18, ARM::Q6_Q7, ARM::Q7_Q8, ARM::Q8_Q9, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::D13_D14_D15, ARM::D14_D15_D16, ARM::D15_D16_D17, ARM::D16_D17_D18, ARM::D11_D13_D15, ARM::D12_D14_D16, ARM::D13_D15_D17, ARM::D14_D16_D18, ARM::D15_D17_D19, ARM::D16_D18_D20, ARM::D9_D11_D13_D15, ARM::D10_D12_D14_D16, ARM::D11_D13_D15_D17, ARM::D12_D14_D16_D18, ARM::D13_D15_D17_D19, ARM::D14_D16_D18_D20, ARM::D15_D17_D19_D21, ARM::D16_D18_D20_D22, ARM::D13_D14_D15_D16, ARM::D15_D16_D17_D18, ARM::D15, ARM::S30, ARM::S31, ARM::D16, 0,
  /* 302 */ ARM::Q5_Q6_Q7_Q8, ARM::D8_D10, ARM::D9_D11, ARM::D10_D12, ARM::D11_D13, ARM::D12_D14, ARM::D13_D15, ARM::D14_D16, ARM::D15_D17, ARM::D16_D18, ARM::D17_D19, ARM::Q4_Q5, ARM::Q6_Q7, ARM::Q8_Q9, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::D8_D9_D10, ARM::D9_D10_D11, ARM::D10_D11_D12, ARM::D11_D12_D13, ARM::D12_D13_D14, ARM::D13_D14_D15, ARM::D14_D15_D16, ARM::D15_D16_D17, ARM::D16_D17_D18, ARM::D17_D18_D19, ARM::D6_D8_D10, ARM::D7_D9_D11, ARM::D8_D10_D12, ARM::D9_D11_D13, ARM::D10_D12_D14, ARM::D11_D13_D15, ARM::D12_D14_D16, ARM::D13_D15_D17, ARM::D14_D16_D18, ARM::D15_D17_D19, ARM::D16_D18_D20, ARM::D17_D19_D21, ARM::D4_D6_D8_D10, ARM::D5_D7_D9_D11, ARM::D6_D8_D10_D12, ARM::D7_D9_D11_D13, ARM::D8_D10_D12_D14, ARM::D9_D11_D13_D15, ARM::D10_D12_D14_D16, ARM::D11_D13_D15_D17, ARM::D12_D14_D16_D18, ARM::D13_D15_D17_D19, ARM::D14_D16_D18_D20, ARM::D15_D17_D19_D21, ARM::D16_D18_D20_D22, ARM::D17_D19_D21_D23, ARM::D9_D10, ARM::D11_D12, ARM::D13_D14, ARM::D15_D16, ARM::D17_D18, ARM::D7_D8_D9_D10, ARM::D9_D10_D11_D12, ARM::D11_D12_D13_D14, ARM::D13_D14_D15_D16, ARM::D15_D16_D17_D18, ARM::D17_D18_D19_D20, ARM::Q5_Q6, ARM::Q5, ARM::D10, ARM::S20, ARM::S21, ARM::D11, ARM::S22, ARM::S23, ARM::Q6, ARM::D12, ARM::S24, ARM::S25, ARM::D13, ARM::S26, ARM::S27, ARM::Q7_Q8, ARM::Q7, ARM::D14, ARM::S28, ARM::S29, ARM::D15, ARM::S30, ARM::S31, ARM::Q8, ARM::D16, ARM::D17, 0,
  /* 396 */ ARM::Q7_Q8, ARM::D12_D14, ARM::D13_D15, ARM::D14_D16, ARM::D15_D17, ARM::D16_D18, ARM::D17_D19, ARM::Q6_Q7, ARM::Q8_Q9, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::D12_D13_D14, ARM::D13_D14_D15, ARM::D14_D15_D16, ARM::D15_D16_D17, ARM::D16_D17_D18, ARM::D17_D18_D19, ARM::D10_D12_D14, ARM::D11_D13_D15, ARM::D12_D14_D16, ARM::D13_D15_D17, ARM::D14_D16_D18, ARM::D15_D17_D19, ARM::D16_D18_D20, ARM::D17_D19_D21, ARM::D8_D10_D12_D14, ARM::D9_D11_D13_D15, ARM::D10_D12_D14_D16, ARM::D11_D13_D15_D17, ARM::D12_D14_D16_D18, ARM::D13_D15_D17_D19, ARM::D14_D16_D18_D20, ARM::D15_D17_D19_D21, ARM::D16_D18_D20_D22, ARM::D17_D19_D21_D23, ARM::D13_D14, ARM::D15_D16, ARM::D17_D18, ARM::D11_D12_D13_D14, ARM::D13_D14_D15_D16, ARM::D15_D16_D17_D18, ARM::D17_D18_D19_D20, ARM::Q7, ARM::D14, ARM::S28, ARM::S29, ARM::D15, ARM::S30, ARM::S31, ARM::Q8, ARM::D16, ARM::D17, 0,
  /* 452 */ ARM::D15_D16_D17, ARM::Q7, ARM::Q8, ARM::D13_D15, ARM::D14_D16, ARM::D15_D17, ARM::D16_D18, ARM::D17_D19, ARM::Q6_Q7, ARM::Q7_Q8, ARM::Q8_Q9, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::D13_D14_D15, ARM::D14_D15_D16, ARM::D16_D17_D18, ARM::D17_D18_D19, ARM::D11_D13_D15, ARM::D12_D14_D16, ARM::D13_D15_D17, ARM::D14_D16_D18, ARM::D15_D17_D19, ARM::D16_D18_D20, ARM::D17_D19_D21, ARM::D9_D11_D13_D15, ARM::D10_D12_D14_D16, ARM::D11_D13_D15_D17, ARM::D12_D14_D16_D18, ARM::D13_D15_D17_D19, ARM::D14_D16_D18_D20, ARM::D15_D17_D19_D21, ARM::D16_D18_D20_D22, ARM::D17_D19_D21_D23, ARM::D15_D16, ARM::D17_D18, ARM::D13_D14_D15_D16, ARM::D15_D16_D17_D18, ARM::D17_D18_D19_D20, ARM::D15, ARM::S30, ARM::S31, ARM::D16, ARM::D17, 0,
  /* 499 */ ARM::D11_D13_D15_D17, ARM::Q5, ARM::Q6, ARM::Q7, ARM::Q8, ARM::D9_D11, ARM::D11_D13, ARM::D13_D15, ARM::D15_D17, ARM::D17_D19, ARM::Q4_Q5, ARM::Q5_Q6, ARM::Q6_Q7, ARM::Q7_Q8, ARM::Q8_Q9, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::D9_D10_D11, ARM::D10_D11_D12, ARM::D11_D12_D13, ARM::D12_D13_D14, ARM::D13_D14_D15, ARM::D14_D15_D16, ARM::D15_D16_D17, ARM::D16_D17_D18, ARM::D17_D18_D19, ARM::D7_D9_D11, ARM::D9_D11_D13, ARM::D11_D13_D15, ARM::D13_D15_D17, ARM::D15_D17_D19, ARM::D17_D19_D21, ARM::D5_D7_D9_D11, ARM::D7_D9_D11_D13, ARM::D9_D11_D13_D15, ARM::D13_D15_D17_D19, ARM::D15_D17_D19_D21, ARM::D17_D19_D21_D23, ARM::D11_D12, ARM::D13_D14, ARM::D15_D16, ARM::D17_D18, ARM::D9_D10_D11_D12, ARM::D11_D12_D13_D14, ARM::D13_D14_D15_D16, ARM::D15_D16_D17_D18, ARM::D17_D18_D19_D20, ARM::D11, ARM::S22, ARM::S23, ARM::D13, ARM::S26, ARM::S27, ARM::D15, ARM::S30, ARM::S31, ARM::D17, 0,
  /* 562 */ ARM::D13_D15_D17, ARM::Q6, ARM::Q7, ARM::Q8, ARM::D11_D13, ARM::D13_D15, ARM::D15_D17, ARM::D17_D19, ARM::Q5_Q6, ARM::Q6_Q7, ARM::Q7_Q8, ARM::Q8_Q9, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::D11_D12_D13, ARM::D12_D13_D14, ARM::D13_D14_D15, ARM::D14_D15_D16, ARM::D15_D16_D17, ARM::D16_D17_D18, ARM::D17_D18_D19, ARM::D9_D11_D13, ARM::D11_D13_D15, ARM::D15_D17_D19, ARM::D17_D19_D21, ARM::D7_D9_D11_D13, ARM::D9_D11_D13_D15, ARM::D11_D13_D15_D17, ARM::D13_D15_D17_D19, ARM::D15_D17_D19_D21, ARM::D17_D19_D21_D23, ARM::D13_D14, ARM::D15_D16, ARM::D17_D18, ARM::D11_D12_D13_D14, ARM::D13_D14_D15_D16, ARM::D15_D16_D17_D18, ARM::D17_D18_D19_D20, ARM::D13, ARM::S26, ARM::S27, ARM::D15, ARM::S30, ARM::S31, ARM::D17, 0,
  /* 612 */ ARM::D15_D17, ARM::Q7, ARM::Q8, ARM::D13_D15, ARM::D17_D19, ARM::Q6_Q7, ARM::Q7_Q8, ARM::Q8_Q9, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::D13_D14_D15, ARM::D14_D15_D16, ARM::D15_D16_D17, ARM::D16_D17_D18, ARM::D17_D18_D19, ARM::D11_D13_D15, ARM::D13_D15_D17, ARM::D15_D17_D19, ARM::D17_D19_D21, ARM::D9_D11_D13_D15, ARM::D11_D13_D15_D17, ARM::D13_D15_D17_D19, ARM::D15_D17_D19_D21, ARM::D17_D19_D21_D23, ARM::D15_D16, ARM::D17_D18, ARM::D13_D14_D15_D16, ARM::D15_D16_D17_D18, ARM::D17_D18_D19_D20, ARM::D15, ARM::S30, ARM::S31, ARM::D17, 0,
  /* 649 */ ARM::D12_D14_D16_D18, ARM::Q6, ARM::Q7, ARM::Q8, ARM::Q9, ARM::D10_D12, ARM::D12_D14, ARM::D14_D16, ARM::D16_D18, ARM::D18_D20, ARM::Q5_Q6, ARM::Q6_Q7, ARM::Q7_Q8, ARM::Q8_Q9, ARM::Q9_Q10, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::D10_D11_D12, ARM::D11_D12_D13, ARM::D12_D13_D14, ARM::D13_D14_D15, ARM::D14_D15_D16, ARM::D15_D16_D17, ARM::D16_D17_D18, ARM::D17_D18_D19, ARM::D18_D19_D20, ARM::D8_D10_D12, ARM::D10_D12_D14, ARM::D12_D14_D16, ARM::D14_D16_D18, ARM::D16_D18_D20, ARM::D18_D20_D22, ARM::D6_D8_D10_D12, ARM::D8_D10_D12_D14, ARM::D10_D12_D14_D16, ARM::D14_D16_D18_D20, ARM::D16_D18_D20_D22, ARM::D18_D20_D22_D24, ARM::D11_D12, ARM::D13_D14, ARM::D15_D16, ARM::D17_D18, ARM::D9_D10_D11_D12, ARM::D11_D12_D13_D14, ARM::D13_D14_D15_D16, ARM::D15_D16_D17_D18, ARM::D17_D18_D19_D20, ARM::D12, ARM::S24, ARM::S25, ARM::D14, ARM::S28, ARM::S29, ARM::D16, ARM::D18, 0,
  /* 710 */ ARM::D14_D16_D18, ARM::Q7, ARM::Q8, ARM::Q9, ARM::D12_D14, ARM::D14_D16, ARM::D16_D18, ARM::D18_D20, ARM::Q6_Q7, ARM::Q7_Q8, ARM::Q8_Q9, ARM::Q9_Q10, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::D12_D13_D14, ARM::D13_D14_D15, ARM::D14_D15_D16, ARM::D15_D16_D17, ARM::D16_D17_D18, ARM::D17_D18_D19, ARM::D18_D19_D20, ARM::D10_D12_D14, ARM::D12_D14_D16, ARM::D16_D18_D20, ARM::D18_D20_D22, ARM::D8_D10_D12_D14, ARM::D10_D12_D14_D16, ARM::D12_D14_D16_D18, ARM::D14_D16_D18_D20, ARM::D16_D18_D20_D22, ARM::D18_D20_D22_D24, ARM::D13_D14, ARM::D15_D16, ARM::D17_D18, ARM::D11_D12_D13_D14, ARM::D13_D14_D15_D16, ARM::D15_D16_D17_D18, ARM::D17_D18_D19_D20, ARM::D14, ARM::S28, ARM::S29, ARM::D16, ARM::D18, 0,
  /* 758 */ ARM::D16_D18, ARM::Q8, ARM::Q9, ARM::D14_D16, ARM::D18_D20, ARM::Q7_Q8, ARM::Q8_Q9, ARM::Q9_Q10, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::D14_D15_D16, ARM::D15_D16_D17, ARM::D16_D17_D18, ARM::D17_D18_D19, ARM::D18_D19_D20, ARM::D12_D14_D16, ARM::D14_D16_D18, ARM::D16_D18_D20, ARM::D18_D20_D22, ARM::D10_D12_D14_D16, ARM::D12_D14_D16_D18, ARM::D14_D16_D18_D20, ARM::D16_D18_D20_D22, ARM::D18_D20_D22_D24, ARM::D15_D16, ARM::D17_D18, ARM::D13_D14_D15_D16, ARM::D15_D16_D17_D18, ARM::D17_D18_D19_D20, ARM::D16, ARM::D18, 0,
  /* 793 */ ARM::D15_D16_D17_D18, ARM::Q7, ARM::Q8, ARM::Q9, ARM::D13_D15, ARM::D14_D16, ARM::D15_D17, ARM::D16_D18, ARM::D17_D19, ARM::D18_D20, ARM::Q6_Q7, ARM::Q7_Q8, ARM::Q8_Q9, ARM::Q9_Q10, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::D13_D14_D15, ARM::D14_D15_D16, ARM::D15_D16_D17, ARM::D16_D17_D18, ARM::D17_D18_D19, ARM::D18_D19_D20, ARM::D11_D13_D15, ARM::D12_D14_D16, ARM::D13_D15_D17, ARM::D14_D16_D18, ARM::D15_D17_D19, ARM::D16_D18_D20, ARM::D17_D19_D21, ARM::D18_D20_D22, ARM::D9_D11_D13_D15, ARM::D10_D12_D14_D16, ARM::D11_D13_D15_D17, ARM::D12_D14_D16_D18, ARM::D13_D15_D17_D19, ARM::D14_D16_D18_D20, ARM::D15_D17_D19_D21, ARM::D16_D18_D20_D22, ARM::D17_D19_D21_D23, ARM::D18_D20_D22_D24, ARM::D15_D16, ARM::D17_D18, ARM::D13_D14_D15_D16, ARM::D17_D18_D19_D20, ARM::D15, ARM::S30, ARM::S31, ARM::D16, ARM::D17, ARM::D18, 0,
  /* 848 */ ARM::D16_D17_D18, ARM::Q8, ARM::Q9, ARM::D14_D16, ARM::D15_D17, ARM::D16_D18, ARM::D17_D19, ARM::D18_D20, ARM::Q7_Q8, ARM::Q8_Q9, ARM::Q9_Q10, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::D14_D15_D16, ARM::D15_D16_D17, ARM::D17_D18_D19, ARM::D18_D19_D20, ARM::D12_D14_D16, ARM::D13_D15_D17, ARM::D14_D16_D18, ARM::D15_D17_D19, ARM::D16_D18_D20, ARM::D17_D19_D21, ARM::D18_D20_D22, ARM::D10_D12_D14_D16, ARM::D11_D13_D15_D17, ARM::D12_D14_D16_D18, ARM::D13_D15_D17_D19, ARM::D14_D16_D18_D20, ARM::D15_D17_D19_D21, ARM::D16_D18_D20_D22, ARM::D17_D19_D21_D23, ARM::D18_D20_D22_D24, ARM::D15_D16, ARM::D17_D18, ARM::D13_D14_D15_D16, ARM::D15_D16_D17_D18, ARM::D17_D18_D19_D20, ARM::D16, ARM::D17, ARM::D18, 0,
  /* 893 */ ARM::D17_D18, ARM::Q8, ARM::Q9, ARM::D15_D17, ARM::D16_D18, ARM::D17_D19, ARM::D18_D20, ARM::Q7_Q8, ARM::Q8_Q9, ARM::Q9_Q10, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::D15_D16_D17, ARM::D16_D17_D18, ARM::D17_D18_D19, ARM::D18_D19_D20, ARM::D13_D15_D17, ARM::D14_D16_D18, ARM::D15_D17_D19, ARM::D16_D18_D20, ARM::D17_D19_D21, ARM::D18_D20_D22, ARM::D11_D13_D15_D17, ARM::D12_D14_D16_D18, ARM::D13_D15_D17_D19, ARM::D14_D16_D18_D20, ARM::D15_D17_D19_D21, ARM::D16_D18_D20_D22, ARM::D17_D19_D21_D23, ARM::D18_D20_D22_D24, ARM::D15_D16_D17_D18, ARM::D17_D18_D19_D20, ARM::D17, ARM::D18, 0,
  /* 931 */ ARM::D13_D15_D17_D19, ARM::Q6, ARM::Q7, ARM::Q8, ARM::Q9, ARM::D11_D13, ARM::D13_D15, ARM::D15_D17, ARM::D17_D19, ARM::D19_D21, ARM::Q5_Q6, ARM::Q6_Q7, ARM::Q7_Q8, ARM::Q8_Q9, ARM::Q9_Q10, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::D11_D12_D13, ARM::D12_D13_D14, ARM::D13_D14_D15, ARM::D14_D15_D16, ARM::D15_D16_D17, ARM::D16_D17_D18, ARM::D17_D18_D19, ARM::D18_D19_D20, ARM::D19_D20_D21, ARM::D9_D11_D13, ARM::D11_D13_D15, ARM::D13_D15_D17, ARM::D15_D17_D19, ARM::D17_D19_D21, ARM::D19_D21_D23, ARM::D7_D9_D11_D13, ARM::D9_D11_D13_D15, ARM::D11_D13_D15_D17, ARM::D15_D17_D19_D21, ARM::D17_D19_D21_D23, ARM::D19_D21_D23_D25, ARM::D13_D14, ARM::D15_D16, ARM::D17_D18, ARM::D19_D20, ARM::D11_D12_D13_D14, ARM::D13_D14_D15_D16, ARM::D15_D16_D17_D18, ARM::D17_D18_D19_D20, ARM::D19_D20_D21_D22, ARM::D13, ARM::S26, ARM::S27, ARM::D15, ARM::S30, ARM::S31, ARM::D17, ARM::D19, 0,
  /* 992 */ ARM::D15_D17_D19, ARM::Q7, ARM::Q8, ARM::Q9, ARM::D13_D15, ARM::D15_D17, ARM::D17_D19, ARM::D19_D21, ARM::Q6_Q7, ARM::Q7_Q8, ARM::Q8_Q9, ARM::Q9_Q10, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::D13_D14_D15, ARM::D14_D15_D16, ARM::D15_D16_D17, ARM::D16_D17_D18, ARM::D17_D18_D19, ARM::D18_D19_D20, ARM::D19_D20_D21, ARM::D11_D13_D15, ARM::D13_D15_D17, ARM::D17_D19_D21, ARM::D19_D21_D23, ARM::D9_D11_D13_D15, ARM::D11_D13_D15_D17, ARM::D13_D15_D17_D19, ARM::D15_D17_D19_D21, ARM::D17_D19_D21_D23, ARM::D19_D21_D23_D25, ARM::D15_D16, ARM::D17_D18, ARM::D19_D20, ARM::D13_D14_D15_D16, ARM::D15_D16_D17_D18, ARM::D17_D18_D19_D20, ARM::D19_D20_D21_D22, ARM::D15, ARM::S30, ARM::S31, ARM::D17, ARM::D19, 0,
  /* 1040 */ ARM::D17_D19, ARM::Q8, ARM::Q9, ARM::D15_D17, ARM::D19_D21, ARM::Q7_Q8, ARM::Q8_Q9, ARM::Q9_Q10, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::D15_D16_D17, ARM::D16_D17_D18, ARM::D17_D18_D19, ARM::D18_D19_D20, ARM::D19_D20_D21, ARM::D13_D15_D17, ARM::D15_D17_D19, ARM::D17_D19_D21, ARM::D19_D21_D23, ARM::D11_D13_D15_D17, ARM::D13_D15_D17_D19, ARM::D15_D17_D19_D21, ARM::D17_D19_D21_D23, ARM::D19_D21_D23_D25, ARM::D17_D18, ARM::D19_D20, ARM::D15_D16_D17_D18, ARM::D17_D18_D19_D20, ARM::D19_D20_D21_D22, ARM::D17, ARM::D19, 0,
  /* 1075 */ ARM::D17_D18_D19, ARM::Q8, ARM::Q9, ARM::D15_D17, ARM::D16_D18, ARM::D17_D19, ARM::D18_D20, ARM::D19_D21, ARM::Q7_Q8, ARM::Q8_Q9, ARM::Q9_Q10, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::D15_D16_D17, ARM::D16_D17_D18, ARM::D18_D19_D20, ARM::D19_D20_D21, ARM::D13_D15_D17, ARM::D14_D16_D18, ARM::D15_D17_D19, ARM::D16_D18_D20, ARM::D17_D19_D21, ARM::D18_D20_D22, ARM::D19_D21_D23, ARM::D11_D13_D15_D17, ARM::D12_D14_D16_D18, ARM::D13_D15_D17_D19, ARM::D14_D16_D18_D20, ARM::D15_D17_D19_D21, ARM::D16_D18_D20_D22, ARM::D17_D19_D21_D23, ARM::D18_D20_D22_D24, ARM::D19_D21_D23_D25, ARM::D17_D18, ARM::D19_D20, ARM::D15_D16_D17_D18, ARM::D17_D18_D19_D20, ARM::D19_D20_D21_D22, ARM::D17, ARM::D18, ARM::D19, 0,
  /* 1120 */ ARM::Q6_Q7_Q8_Q9, ARM::D10_D12, ARM::D11_D13, ARM::D12_D14, ARM::D13_D15, ARM::D14_D16, ARM::D15_D17, ARM::D16_D18, ARM::D17_D19, ARM::D18_D20, ARM::D19_D21, ARM::Q5_Q6, ARM::Q7_Q8, ARM::Q9_Q10, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::D10_D11_D12, ARM::D11_D12_D13, ARM::D12_D13_D14, ARM::D13_D14_D15, ARM::D14_D15_D16, ARM::D15_D16_D17, ARM::D16_D17_D18, ARM::D17_D18_D19, ARM::D18_D19_D20, ARM::D19_D20_D21, ARM::D8_D10_D12, ARM::D9_D11_D13, ARM::D10_D12_D14, ARM::D11_D13_D15, ARM::D12_D14_D16, ARM::D13_D15_D17, ARM::D14_D16_D18, ARM::D15_D17_D19, ARM::D16_D18_D20, ARM::D17_D19_D21, ARM::D18_D20_D22, ARM::D19_D21_D23, ARM::D6_D8_D10_D12, ARM::D7_D9_D11_D13, ARM::D8_D10_D12_D14, ARM::D9_D11_D13_D15, ARM::D10_D12_D14_D16, ARM::D11_D13_D15_D17, ARM::D12_D14_D16_D18, ARM::D13_D15_D17_D19, ARM::D14_D16_D18_D20, ARM::D15_D17_D19_D21, ARM::D16_D18_D20_D22, ARM::D17_D19_D21_D23, ARM::D18_D20_D22_D24, ARM::D19_D21_D23_D25, ARM::D11_D12, ARM::D13_D14, ARM::D15_D16, ARM::D17_D18, ARM::D19_D20, ARM::D9_D10_D11_D12, ARM::D11_D12_D13_D14, ARM::D13_D14_D15_D16, ARM::D15_D16_D17_D18, ARM::D17_D18_D19_D20, ARM::D19_D20_D21_D22, ARM::Q6_Q7, ARM::Q6, ARM::D12, ARM::S24, ARM::S25, ARM::D13, ARM::S26, ARM::S27, ARM::Q7, ARM::D14, ARM::S28, ARM::S29, ARM::D15, ARM::S30, ARM::S31, ARM::Q8_Q9, ARM::Q8, ARM::D16, ARM::D17, ARM::Q9, ARM::D18, ARM::D19, 0,
  /* 1210 */ ARM::Q8_Q9, ARM::D14_D16, ARM::D15_D17, ARM::D16_D18, ARM::D17_D19, ARM::D18_D20, ARM::D19_D21, ARM::Q7_Q8, ARM::Q9_Q10, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::D14_D15_D16, ARM::D15_D16_D17, ARM::D16_D17_D18, ARM::D17_D18_D19, ARM::D18_D19_D20, ARM::D19_D20_D21, ARM::D12_D14_D16, ARM::D13_D15_D17, ARM::D14_D16_D18, ARM::D15_D17_D19, ARM::D16_D18_D20, ARM::D17_D19_D21, ARM::D18_D20_D22, ARM::D19_D21_D23, ARM::D10_D12_D14_D16, ARM::D11_D13_D15_D17, ARM::D12_D14_D16_D18, ARM::D13_D15_D17_D19, ARM::D14_D16_D18_D20, ARM::D15_D17_D19_D21, ARM::D16_D18_D20_D22, ARM::D17_D19_D21_D23, ARM::D18_D20_D22_D24, ARM::D19_D21_D23_D25, ARM::D15_D16, ARM::D17_D18, ARM::D19_D20, ARM::D13_D14_D15_D16, ARM::D15_D16_D17_D18, ARM::D17_D18_D19_D20, ARM::D19_D20_D21_D22, ARM::Q8, ARM::D16, ARM::D17, ARM::Q9, ARM::D18, ARM::D19, 0,
  /* 1262 */ ARM::D14_D16_D18_D20, ARM::Q7, ARM::Q8, ARM::Q9, ARM::Q10, ARM::D12_D14, ARM::D14_D16, ARM::D16_D18, ARM::D18_D20, ARM::D20_D22, ARM::Q6_Q7, ARM::Q7_Q8, ARM::Q8_Q9, ARM::Q9_Q10, ARM::Q10_Q11, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::D12_D13_D14, ARM::D13_D14_D15, ARM::D14_D15_D16, ARM::D15_D16_D17, ARM::D16_D17_D18, ARM::D17_D18_D19, ARM::D18_D19_D20, ARM::D19_D20_D21, ARM::D20_D21_D22, ARM::D10_D12_D14, ARM::D12_D14_D16, ARM::D14_D16_D18, ARM::D16_D18_D20, ARM::D18_D20_D22, ARM::D20_D22_D24, ARM::D8_D10_D12_D14, ARM::D10_D12_D14_D16, ARM::D12_D14_D16_D18, ARM::D16_D18_D20_D22, ARM::D18_D20_D22_D24, ARM::D20_D22_D24_D26, ARM::D13_D14, ARM::D15_D16, ARM::D17_D18, ARM::D19_D20, ARM::D11_D12_D13_D14, ARM::D13_D14_D15_D16, ARM::D15_D16_D17_D18, ARM::D17_D18_D19_D20, ARM::D19_D20_D21_D22, ARM::D14, ARM::S28, ARM::S29, ARM::D16, ARM::D18, ARM::D20, 0,
  /* 1321 */ ARM::D16_D18_D20, ARM::Q8, ARM::Q9, ARM::Q10, ARM::D14_D16, ARM::D16_D18, ARM::D18_D20, ARM::D20_D22, ARM::Q7_Q8, ARM::Q8_Q9, ARM::Q9_Q10, ARM::Q10_Q11, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::D14_D15_D16, ARM::D15_D16_D17, ARM::D16_D17_D18, ARM::D17_D18_D19, ARM::D18_D19_D20, ARM::D19_D20_D21, ARM::D20_D21_D22, ARM::D12_D14_D16, ARM::D14_D16_D18, ARM::D18_D20_D22, ARM::D20_D22_D24, ARM::D10_D12_D14_D16, ARM::D12_D14_D16_D18, ARM::D14_D16_D18_D20, ARM::D16_D18_D20_D22, ARM::D18_D20_D22_D24, ARM::D20_D22_D24_D26, ARM::D15_D16, ARM::D17_D18, ARM::D19_D20, ARM::D13_D14_D15_D16, ARM::D15_D16_D17_D18, ARM::D17_D18_D19_D20, ARM::D19_D20_D21_D22, ARM::D16, ARM::D18, ARM::D20, 0,
  /* 1367 */ ARM::D18_D20, ARM::Q9, ARM::Q10, ARM::D16_D18, ARM::D20_D22, ARM::Q8_Q9, ARM::Q9_Q10, ARM::Q10_Q11, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::D16_D17_D18, ARM::D17_D18_D19, ARM::D18_D19_D20, ARM::D19_D20_D21, ARM::D20_D21_D22, ARM::D14_D16_D18, ARM::D16_D18_D20, ARM::D18_D20_D22, ARM::D20_D22_D24, ARM::D12_D14_D16_D18, ARM::D14_D16_D18_D20, ARM::D16_D18_D20_D22, ARM::D18_D20_D22_D24, ARM::D20_D22_D24_D26, ARM::D17_D18, ARM::D19_D20, ARM::D15_D16_D17_D18, ARM::D17_D18_D19_D20, ARM::D19_D20_D21_D22, ARM::D18, ARM::D20, 0,
  /* 1402 */ ARM::D17_D18_D19_D20, ARM::Q8, ARM::Q9, ARM::Q10, ARM::D15_D17, ARM::D16_D18, ARM::D17_D19, ARM::D18_D20, ARM::D19_D21, ARM::D20_D22, ARM::Q7_Q8, ARM::Q8_Q9, ARM::Q9_Q10, ARM::Q10_Q11, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::D15_D16_D17, ARM::D16_D17_D18, ARM::D17_D18_D19, ARM::D18_D19_D20, ARM::D19_D20_D21, ARM::D20_D21_D22, ARM::D13_D15_D17, ARM::D14_D16_D18, ARM::D15_D17_D19, ARM::D16_D18_D20, ARM::D17_D19_D21, ARM::D18_D20_D22, ARM::D19_D21_D23, ARM::D20_D22_D24, ARM::D11_D13_D15_D17, ARM::D12_D14_D16_D18, ARM::D13_D15_D17_D19, ARM::D14_D16_D18_D20, ARM::D15_D17_D19_D21, ARM::D16_D18_D20_D22, ARM::D17_D19_D21_D23, ARM::D18_D20_D22_D24, ARM::D19_D21_D23_D25, ARM::D20_D22_D24_D26, ARM::D17_D18, ARM::D19_D20, ARM::D15_D16_D17_D18, ARM::D19_D20_D21_D22, ARM::D17, ARM::D18, ARM::D19, ARM::D20, 0,
  /* 1455 */ ARM::D18_D19_D20, ARM::Q9, ARM::Q10, ARM::D16_D18, ARM::D17_D19, ARM::D18_D20, ARM::D19_D21, ARM::D20_D22, ARM::Q8_Q9, ARM::Q9_Q10, ARM::Q10_Q11, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::D16_D17_D18, ARM::D17_D18_D19, ARM::D19_D20_D21, ARM::D20_D21_D22, ARM::D14_D16_D18, ARM::D15_D17_D19, ARM::D16_D18_D20, ARM::D17_D19_D21, ARM::D18_D20_D22, ARM::D19_D21_D23, ARM::D20_D22_D24, ARM::D12_D14_D16_D18, ARM::D13_D15_D17_D19, ARM::D14_D16_D18_D20, ARM::D15_D17_D19_D21, ARM::D16_D18_D20_D22, ARM::D17_D19_D21_D23, ARM::D18_D20_D22_D24, ARM::D19_D21_D23_D25, ARM::D20_D22_D24_D26, ARM::D17_D18, ARM::D19_D20, ARM::D15_D16_D17_D18, ARM::D17_D18_D19_D20, ARM::D19_D20_D21_D22, ARM::D18, ARM::D19, ARM::D20, 0,
  /* 1500 */ ARM::D19_D20, ARM::Q9, ARM::Q10, ARM::D17_D19, ARM::D18_D20, ARM::D19_D21, ARM::D20_D22, ARM::Q8_Q9, ARM::Q9_Q10, ARM::Q10_Q11, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::D17_D18_D19, ARM::D18_D19_D20, ARM::D19_D20_D21, ARM::D20_D21_D22, ARM::D15_D17_D19, ARM::D16_D18_D20, ARM::D17_D19_D21, ARM::D18_D20_D22, ARM::D19_D21_D23, ARM::D20_D22_D24, ARM::D13_D15_D17_D19, ARM::D14_D16_D18_D20, ARM::D15_D17_D19_D21, ARM::D16_D18_D20_D22, ARM::D17_D19_D21_D23, ARM::D18_D20_D22_D24, ARM::D19_D21_D23_D25, ARM::D20_D22_D24_D26, ARM::D17_D18_D19_D20, ARM::D19_D20_D21_D22, ARM::D19, ARM::D20, 0,
  /* 1538 */ ARM::D15_D17_D19_D21, ARM::Q7, ARM::Q8, ARM::Q9, ARM::Q10, ARM::D13_D15, ARM::D15_D17, ARM::D17_D19, ARM::D19_D21, ARM::D21_D23, ARM::Q6_Q7, ARM::Q7_Q8, ARM::Q8_Q9, ARM::Q9_Q10, ARM::Q10_Q11, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::D13_D14_D15, ARM::D14_D15_D16, ARM::D15_D16_D17, ARM::D16_D17_D18, ARM::D17_D18_D19, ARM::D18_D19_D20, ARM::D19_D20_D21, ARM::D20_D21_D22, ARM::D21_D22_D23, ARM::D11_D13_D15, ARM::D13_D15_D17, ARM::D15_D17_D19, ARM::D17_D19_D21, ARM::D19_D21_D23, ARM::D21_D23_D25, ARM::D9_D11_D13_D15, ARM::D11_D13_D15_D17, ARM::D13_D15_D17_D19, ARM::D17_D19_D21_D23, ARM::D19_D21_D23_D25, ARM::D21_D23_D25_D27, ARM::D15_D16, ARM::D17_D18, ARM::D19_D20, ARM::D21_D22, ARM::D13_D14_D15_D16, ARM::D15_D16_D17_D18, ARM::D17_D18_D19_D20, ARM::D19_D20_D21_D22, ARM::D21_D22_D23_D24, ARM::D15, ARM::S30, ARM::S31, ARM::D17, ARM::D19, ARM::D21, 0,
  /* 1597 */ ARM::D17_D19_D21, ARM::Q8, ARM::Q9, ARM::Q10, ARM::D15_D17, ARM::D17_D19, ARM::D19_D21, ARM::D21_D23, ARM::Q7_Q8, ARM::Q8_Q9, ARM::Q9_Q10, ARM::Q10_Q11, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::D15_D16_D17, ARM::D16_D17_D18, ARM::D17_D18_D19, ARM::D18_D19_D20, ARM::D19_D20_D21, ARM::D20_D21_D22, ARM::D21_D22_D23, ARM::D13_D15_D17, ARM::D15_D17_D19, ARM::D19_D21_D23, ARM::D21_D23_D25, ARM::D11_D13_D15_D17, ARM::D13_D15_D17_D19, ARM::D15_D17_D19_D21, ARM::D17_D19_D21_D23, ARM::D19_D21_D23_D25, ARM::D21_D23_D25_D27, ARM::D17_D18, ARM::D19_D20, ARM::D21_D22, ARM::D15_D16_D17_D18, ARM::D17_D18_D19_D20, ARM::D19_D20_D21_D22, ARM::D21_D22_D23_D24, ARM::D17, ARM::D19, ARM::D21, 0,
  /* 1643 */ ARM::D19_D21, ARM::Q9, ARM::Q10, ARM::D17_D19, ARM::D21_D23, ARM::Q8_Q9, ARM::Q9_Q10, ARM::Q10_Q11, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::D17_D18_D19, ARM::D18_D19_D20, ARM::D19_D20_D21, ARM::D20_D21_D22, ARM::D21_D22_D23, ARM::D15_D17_D19, ARM::D17_D19_D21, ARM::D19_D21_D23, ARM::D21_D23_D25, ARM::D13_D15_D17_D19, ARM::D15_D17_D19_D21, ARM::D17_D19_D21_D23, ARM::D19_D21_D23_D25, ARM::D21_D23_D25_D27, ARM::D19_D20, ARM::D21_D22, ARM::D17_D18_D19_D20, ARM::D19_D20_D21_D22, ARM::D21_D22_D23_D24, ARM::D19, ARM::D21, 0,
  /* 1678 */ ARM::D19_D20_D21, ARM::Q9, ARM::Q10, ARM::D17_D19, ARM::D18_D20, ARM::D19_D21, ARM::D20_D22, ARM::D21_D23, ARM::Q8_Q9, ARM::Q9_Q10, ARM::Q10_Q11, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::D17_D18_D19, ARM::D18_D19_D20, ARM::D20_D21_D22, ARM::D21_D22_D23, ARM::D15_D17_D19, ARM::D16_D18_D20, ARM::D17_D19_D21, ARM::D18_D20_D22, ARM::D19_D21_D23, ARM::D20_D22_D24, ARM::D21_D23_D25, ARM::D13_D15_D17_D19, ARM::D14_D16_D18_D20, ARM::D15_D17_D19_D21, ARM::D16_D18_D20_D22, ARM::D17_D19_D21_D23, ARM::D18_D20_D22_D24, ARM::D19_D21_D23_D25, ARM::D20_D22_D24_D26, ARM::D21_D23_D25_D27, ARM::D19_D20, ARM::D21_D22, ARM::D17_D18_D19_D20, ARM::D19_D20_D21_D22, ARM::D21_D22_D23_D24, ARM::D19, ARM::D20, ARM::D21, 0,
  /* 1723 */ ARM::Q7_Q8_Q9_Q10, ARM::D12_D14, ARM::D13_D15, ARM::D14_D16, ARM::D15_D17, ARM::D16_D18, ARM::D17_D19, ARM::D18_D20, ARM::D19_D21, ARM::D20_D22, ARM::D21_D23, ARM::Q6_Q7, ARM::Q8_Q9, ARM::Q10_Q11, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::D12_D13_D14, ARM::D13_D14_D15, ARM::D14_D15_D16, ARM::D15_D16_D17, ARM::D16_D17_D18, ARM::D17_D18_D19, ARM::D18_D19_D20, ARM::D19_D20_D21, ARM::D20_D21_D22, ARM::D21_D22_D23, ARM::D10_D12_D14, ARM::D11_D13_D15, ARM::D12_D14_D16, ARM::D13_D15_D17, ARM::D14_D16_D18, ARM::D15_D17_D19, ARM::D16_D18_D20, ARM::D17_D19_D21, ARM::D18_D20_D22, ARM::D19_D21_D23, ARM::D20_D22_D24, ARM::D21_D23_D25, ARM::D8_D10_D12_D14, ARM::D9_D11_D13_D15, ARM::D10_D12_D14_D16, ARM::D11_D13_D15_D17, ARM::D12_D14_D16_D18, ARM::D13_D15_D17_D19, ARM::D14_D16_D18_D20, ARM::D15_D17_D19_D21, ARM::D16_D18_D20_D22, ARM::D17_D19_D21_D23, ARM::D18_D20_D22_D24, ARM::D19_D21_D23_D25, ARM::D20_D22_D24_D26, ARM::D21_D23_D25_D27, ARM::D13_D14, ARM::D15_D16, ARM::D17_D18, ARM::D19_D20, ARM::D21_D22, ARM::D11_D12_D13_D14, ARM::D13_D14_D15_D16, ARM::D15_D16_D17_D18, ARM::D17_D18_D19_D20, ARM::D19_D20_D21_D22, ARM::D21_D22_D23_D24, ARM::Q7_Q8, ARM::Q7, ARM::D14, ARM::S28, ARM::S29, ARM::D15, ARM::S30, ARM::S31, ARM::Q8, ARM::D16, ARM::D17, ARM::Q9_Q10, ARM::Q9, ARM::D18, ARM::D19, ARM::Q10, ARM::D20, ARM::D21, 0,
  /* 1809 */ ARM::Q9_Q10, ARM::D16_D18, ARM::D17_D19, ARM::D18_D20, ARM::D19_D21, ARM::D20_D22, ARM::D21_D23, ARM::Q8_Q9, ARM::Q10_Q11, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::D16_D17_D18, ARM::D17_D18_D19, ARM::D18_D19_D20, ARM::D19_D20_D21, ARM::D20_D21_D22, ARM::D21_D22_D23, ARM::D14_D16_D18, ARM::D15_D17_D19, ARM::D16_D18_D20, ARM::D17_D19_D21, ARM::D18_D20_D22, ARM::D19_D21_D23, ARM::D20_D22_D24, ARM::D21_D23_D25, ARM::D12_D14_D16_D18, ARM::D13_D15_D17_D19, ARM::D14_D16_D18_D20, ARM::D15_D17_D19_D21, ARM::D16_D18_D20_D22, ARM::D17_D19_D21_D23, ARM::D18_D20_D22_D24, ARM::D19_D21_D23_D25, ARM::D20_D22_D24_D26, ARM::D21_D23_D25_D27, ARM::D17_D18, ARM::D19_D20, ARM::D21_D22, ARM::D15_D16_D17_D18, ARM::D17_D18_D19_D20, ARM::D19_D20_D21_D22, ARM::D21_D22_D23_D24, ARM::Q9, ARM::D18, ARM::D19, ARM::Q10, ARM::D20, ARM::D21, 0,
  /* 1861 */ ARM::D16_D18_D20_D22, ARM::Q8, ARM::Q9, ARM::Q10, ARM::Q11, ARM::D14_D16, ARM::D16_D18, ARM::D18_D20, ARM::D20_D22, ARM::D22_D24, ARM::Q7_Q8, ARM::Q8_Q9, ARM::Q9_Q10, ARM::Q10_Q11, ARM::Q11_Q12, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::D14_D15_D16, ARM::D15_D16_D17, ARM::D16_D17_D18, ARM::D17_D18_D19, ARM::D18_D19_D20, ARM::D19_D20_D21, ARM::D20_D21_D22, ARM::D21_D22_D23, ARM::D22_D23_D24, ARM::D12_D14_D16, ARM::D14_D16_D18, ARM::D16_D18_D20, ARM::D18_D20_D22, ARM::D20_D22_D24, ARM::D22_D24_D26, ARM::D10_D12_D14_D16, ARM::D12_D14_D16_D18, ARM::D14_D16_D18_D20, ARM::D18_D20_D22_D24, ARM::D20_D22_D24_D26, ARM::D22_D24_D26_D28, ARM::D15_D16, ARM::D17_D18, ARM::D19_D20, ARM::D21_D22, ARM::D13_D14_D15_D16, ARM::D15_D16_D17_D18, ARM::D17_D18_D19_D20, ARM::D19_D20_D21_D22, ARM::D21_D22_D23_D24, ARM::D16, ARM::D18, ARM::D20, ARM::D22, 0,
  /* 1918 */ ARM::D18_D20_D22, ARM::Q9, ARM::Q10, ARM::Q11, ARM::D16_D18, ARM::D18_D20, ARM::D20_D22, ARM::D22_D24, ARM::Q8_Q9, ARM::Q9_Q10, ARM::Q10_Q11, ARM::Q11_Q12, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::D16_D17_D18, ARM::D17_D18_D19, ARM::D18_D19_D20, ARM::D19_D20_D21, ARM::D20_D21_D22, ARM::D21_D22_D23, ARM::D22_D23_D24, ARM::D14_D16_D18, ARM::D16_D18_D20, ARM::D20_D22_D24, ARM::D22_D24_D26, ARM::D12_D14_D16_D18, ARM::D14_D16_D18_D20, ARM::D16_D18_D20_D22, ARM::D18_D20_D22_D24, ARM::D20_D22_D24_D26, ARM::D22_D24_D26_D28, ARM::D17_D18, ARM::D19_D20, ARM::D21_D22, ARM::D15_D16_D17_D18, ARM::D17_D18_D19_D20, ARM::D19_D20_D21_D22, ARM::D21_D22_D23_D24, ARM::D18, ARM::D20, ARM::D22, 0,
  /* 1964 */ ARM::D20_D22, ARM::Q10, ARM::Q11, ARM::D18_D20, ARM::D22_D24, ARM::Q9_Q10, ARM::Q10_Q11, ARM::Q11_Q12, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::D18_D19_D20, ARM::D19_D20_D21, ARM::D20_D21_D22, ARM::D21_D22_D23, ARM::D22_D23_D24, ARM::D16_D18_D20, ARM::D18_D20_D22, ARM::D20_D22_D24, ARM::D22_D24_D26, ARM::D14_D16_D18_D20, ARM::D16_D18_D20_D22, ARM::D18_D20_D22_D24, ARM::D20_D22_D24_D26, ARM::D22_D24_D26_D28, ARM::D19_D20, ARM::D21_D22, ARM::D17_D18_D19_D20, ARM::D19_D20_D21_D22, ARM::D21_D22_D23_D24, ARM::D20, ARM::D22, 0,
  /* 1999 */ ARM::D19_D20_D21_D22, ARM::Q9, ARM::Q10, ARM::Q11, ARM::D17_D19, ARM::D18_D20, ARM::D19_D21, ARM::D20_D22, ARM::D21_D23, ARM::D22_D24, ARM::Q8_Q9, ARM::Q9_Q10, ARM::Q10_Q11, ARM::Q11_Q12, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::D17_D18_D19, ARM::D18_D19_D20, ARM::D19_D20_D21, ARM::D20_D21_D22, ARM::D21_D22_D23, ARM::D22_D23_D24, ARM::D15_D17_D19, ARM::D16_D18_D20, ARM::D17_D19_D21, ARM::D18_D20_D22, ARM::D19_D21_D23, ARM::D20_D22_D24, ARM::D21_D23_D25, ARM::D22_D24_D26, ARM::D13_D15_D17_D19, ARM::D14_D16_D18_D20, ARM::D15_D17_D19_D21, ARM::D16_D18_D20_D22, ARM::D17_D19_D21_D23, ARM::D18_D20_D22_D24, ARM::D19_D21_D23_D25, ARM::D20_D22_D24_D26, ARM::D21_D23_D25_D27, ARM::D22_D24_D26_D28, ARM::D19_D20, ARM::D21_D22, ARM::D17_D18_D19_D20, ARM::D21_D22_D23_D24, ARM::D19, ARM::D20, ARM::D21, ARM::D22, 0,
  /* 2052 */ ARM::D20_D21_D22, ARM::Q10, ARM::Q11, ARM::D18_D20, ARM::D19_D21, ARM::D20_D22, ARM::D21_D23, ARM::D22_D24, ARM::Q9_Q10, ARM::Q10_Q11, ARM::Q11_Q12, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::D18_D19_D20, ARM::D19_D20_D21, ARM::D21_D22_D23, ARM::D22_D23_D24, ARM::D16_D18_D20, ARM::D17_D19_D21, ARM::D18_D20_D22, ARM::D19_D21_D23, ARM::D20_D22_D24, ARM::D21_D23_D25, ARM::D22_D24_D26, ARM::D14_D16_D18_D20, ARM::D15_D17_D19_D21, ARM::D16_D18_D20_D22, ARM::D17_D19_D21_D23, ARM::D18_D20_D22_D24, ARM::D19_D21_D23_D25, ARM::D20_D22_D24_D26, ARM::D21_D23_D25_D27, ARM::D22_D24_D26_D28, ARM::D19_D20, ARM::D21_D22, ARM::D17_D18_D19_D20, ARM::D19_D20_D21_D22, ARM::D21_D22_D23_D24, ARM::D20, ARM::D21, ARM::D22, 0,
  /* 2097 */ ARM::D21_D22, ARM::Q10, ARM::Q11, ARM::D19_D21, ARM::D20_D22, ARM::D21_D23, ARM::D22_D24, ARM::Q9_Q10, ARM::Q10_Q11, ARM::Q11_Q12, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::D19_D20_D21, ARM::D20_D21_D22, ARM::D21_D22_D23, ARM::D22_D23_D24, ARM::D17_D19_D21, ARM::D18_D20_D22, ARM::D19_D21_D23, ARM::D20_D22_D24, ARM::D21_D23_D25, ARM::D22_D24_D26, ARM::D15_D17_D19_D21, ARM::D16_D18_D20_D22, ARM::D17_D19_D21_D23, ARM::D18_D20_D22_D24, ARM::D19_D21_D23_D25, ARM::D20_D22_D24_D26, ARM::D21_D23_D25_D27, ARM::D22_D24_D26_D28, ARM::D19_D20_D21_D22, ARM::D21_D22_D23_D24, ARM::D21, ARM::D22, 0,
  /* 2135 */ ARM::D17_D19_D21_D23, ARM::Q8, ARM::Q9, ARM::Q10, ARM::Q11, ARM::D15_D17, ARM::D17_D19, ARM::D19_D21, ARM::D21_D23, ARM::D23_D25, ARM::Q7_Q8, ARM::Q8_Q9, ARM::Q9_Q10, ARM::Q10_Q11, ARM::Q11_Q12, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::D15_D16_D17, ARM::D16_D17_D18, ARM::D17_D18_D19, ARM::D18_D19_D20, ARM::D19_D20_D21, ARM::D20_D21_D22, ARM::D21_D22_D23, ARM::D22_D23_D24, ARM::D23_D24_D25, ARM::D13_D15_D17, ARM::D15_D17_D19, ARM::D17_D19_D21, ARM::D19_D21_D23, ARM::D21_D23_D25, ARM::D23_D25_D27, ARM::D11_D13_D15_D17, ARM::D13_D15_D17_D19, ARM::D15_D17_D19_D21, ARM::D19_D21_D23_D25, ARM::D21_D23_D25_D27, ARM::D23_D25_D27_D29, ARM::D17_D18, ARM::D19_D20, ARM::D21_D22, ARM::D23_D24, ARM::D15_D16_D17_D18, ARM::D17_D18_D19_D20, ARM::D19_D20_D21_D22, ARM::D21_D22_D23_D24, ARM::D23_D24_D25_D26, ARM::D17, ARM::D19, ARM::D21, ARM::D23, 0,
  /* 2192 */ ARM::D19_D21_D23, ARM::Q9, ARM::Q10, ARM::Q11, ARM::D17_D19, ARM::D19_D21, ARM::D21_D23, ARM::D23_D25, ARM::Q8_Q9, ARM::Q9_Q10, ARM::Q10_Q11, ARM::Q11_Q12, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::D17_D18_D19, ARM::D18_D19_D20, ARM::D19_D20_D21, ARM::D20_D21_D22, ARM::D21_D22_D23, ARM::D22_D23_D24, ARM::D23_D24_D25, ARM::D15_D17_D19, ARM::D17_D19_D21, ARM::D21_D23_D25, ARM::D23_D25_D27, ARM::D13_D15_D17_D19, ARM::D15_D17_D19_D21, ARM::D17_D19_D21_D23, ARM::D19_D21_D23_D25, ARM::D21_D23_D25_D27, ARM::D23_D25_D27_D29, ARM::D19_D20, ARM::D21_D22, ARM::D23_D24, ARM::D17_D18_D19_D20, ARM::D19_D20_D21_D22, ARM::D21_D22_D23_D24, ARM::D23_D24_D25_D26, ARM::D19, ARM::D21, ARM::D23, 0,
  /* 2238 */ ARM::D21_D23, ARM::Q10, ARM::Q11, ARM::D19_D21, ARM::D23_D25, ARM::Q9_Q10, ARM::Q10_Q11, ARM::Q11_Q12, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::D19_D20_D21, ARM::D20_D21_D22, ARM::D21_D22_D23, ARM::D22_D23_D24, ARM::D23_D24_D25, ARM::D17_D19_D21, ARM::D19_D21_D23, ARM::D21_D23_D25, ARM::D23_D25_D27, ARM::D15_D17_D19_D21, ARM::D17_D19_D21_D23, ARM::D19_D21_D23_D25, ARM::D21_D23_D25_D27, ARM::D23_D25_D27_D29, ARM::D21_D22, ARM::D23_D24, ARM::D19_D20_D21_D22, ARM::D21_D22_D23_D24, ARM::D23_D24_D25_D26, ARM::D21, ARM::D23, 0,
  /* 2273 */ ARM::D21_D22_D23, ARM::Q10, ARM::Q11, ARM::D19_D21, ARM::D20_D22, ARM::D21_D23, ARM::D22_D24, ARM::D23_D25, ARM::Q9_Q10, ARM::Q10_Q11, ARM::Q11_Q12, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::D19_D20_D21, ARM::D20_D21_D22, ARM::D22_D23_D24, ARM::D23_D24_D25, ARM::D17_D19_D21, ARM::D18_D20_D22, ARM::D19_D21_D23, ARM::D20_D22_D24, ARM::D21_D23_D25, ARM::D22_D24_D26, ARM::D23_D25_D27, ARM::D15_D17_D19_D21, ARM::D16_D18_D20_D22, ARM::D17_D19_D21_D23, ARM::D18_D20_D22_D24, ARM::D19_D21_D23_D25, ARM::D20_D22_D24_D26, ARM::D21_D23_D25_D27, ARM::D22_D24_D26_D28, ARM::D23_D25_D27_D29, ARM::D21_D22, ARM::D23_D24, ARM::D19_D20_D21_D22, ARM::D21_D22_D23_D24, ARM::D23_D24_D25_D26, ARM::D21, ARM::D22, ARM::D23, 0,
  /* 2318 */ ARM::Q8_Q9_Q10_Q11, ARM::D14_D16, ARM::D15_D17, ARM::D16_D18, ARM::D17_D19, ARM::D18_D20, ARM::D19_D21, ARM::D20_D22, ARM::D21_D23, ARM::D22_D24, ARM::D23_D25, ARM::Q7_Q8, ARM::Q9_Q10, ARM::Q11_Q12, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::D14_D15_D16, ARM::D15_D16_D17, ARM::D16_D17_D18, ARM::D17_D18_D19, ARM::D18_D19_D20, ARM::D19_D20_D21, ARM::D20_D21_D22, ARM::D21_D22_D23, ARM::D22_D23_D24, ARM::D23_D24_D25, ARM::D12_D14_D16, ARM::D13_D15_D17, ARM::D14_D16_D18, ARM::D15_D17_D19, ARM::D16_D18_D20, ARM::D17_D19_D21, ARM::D18_D20_D22, ARM::D19_D21_D23, ARM::D20_D22_D24, ARM::D21_D23_D25, ARM::D22_D24_D26, ARM::D23_D25_D27, ARM::D10_D12_D14_D16, ARM::D11_D13_D15_D17, ARM::D12_D14_D16_D18, ARM::D13_D15_D17_D19, ARM::D14_D16_D18_D20, ARM::D15_D17_D19_D21, ARM::D16_D18_D20_D22, ARM::D17_D19_D21_D23, ARM::D18_D20_D22_D24, ARM::D19_D21_D23_D25, ARM::D20_D22_D24_D26, ARM::D21_D23_D25_D27, ARM::D22_D24_D26_D28, ARM::D23_D25_D27_D29, ARM::D15_D16, ARM::D17_D18, ARM::D19_D20, ARM::D21_D22, ARM::D23_D24, ARM::D13_D14_D15_D16, ARM::D15_D16_D17_D18, ARM::D17_D18_D19_D20, ARM::D19_D20_D21_D22, ARM::D21_D22_D23_D24, ARM::D23_D24_D25_D26, ARM::Q8_Q9, ARM::Q8, ARM::D16, ARM::D17, ARM::Q9, ARM::D18, ARM::D19, ARM::Q10_Q11, ARM::Q10, ARM::D20, ARM::D21, ARM::Q11, ARM::D22, ARM::D23, 0,
  /* 2400 */ ARM::Q10_Q11, ARM::D18_D20, ARM::D19_D21, ARM::D20_D22, ARM::D21_D23, ARM::D22_D24, ARM::D23_D25, ARM::Q9_Q10, ARM::Q11_Q12, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::D18_D19_D20, ARM::D19_D20_D21, ARM::D20_D21_D22, ARM::D21_D22_D23, ARM::D22_D23_D24, ARM::D23_D24_D25, ARM::D16_D18_D20, ARM::D17_D19_D21, ARM::D18_D20_D22, ARM::D19_D21_D23, ARM::D20_D22_D24, ARM::D21_D23_D25, ARM::D22_D24_D26, ARM::D23_D25_D27, ARM::D14_D16_D18_D20, ARM::D15_D17_D19_D21, ARM::D16_D18_D20_D22, ARM::D17_D19_D21_D23, ARM::D18_D20_D22_D24, ARM::D19_D21_D23_D25, ARM::D20_D22_D24_D26, ARM::D21_D23_D25_D27, ARM::D22_D24_D26_D28, ARM::D23_D25_D27_D29, ARM::D19_D20, ARM::D21_D22, ARM::D23_D24, ARM::D17_D18_D19_D20, ARM::D19_D20_D21_D22, ARM::D21_D22_D23_D24, ARM::D23_D24_D25_D26, ARM::Q10, ARM::D20, ARM::D21, ARM::Q11, ARM::D22, ARM::D23, 0,
  /* 2452 */ ARM::D18_D20_D22_D24, ARM::Q9, ARM::Q10, ARM::Q11, ARM::Q12, ARM::D16_D18, ARM::D18_D20, ARM::D20_D22, ARM::D22_D24, ARM::D24_D26, ARM::Q8_Q9, ARM::Q9_Q10, ARM::Q10_Q11, ARM::Q11_Q12, ARM::Q12_Q13, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::Q12_Q13_Q14_Q15, ARM::D16_D17_D18, ARM::D17_D18_D19, ARM::D18_D19_D20, ARM::D19_D20_D21, ARM::D20_D21_D22, ARM::D21_D22_D23, ARM::D22_D23_D24, ARM::D23_D24_D25, ARM::D24_D25_D26, ARM::D14_D16_D18, ARM::D16_D18_D20, ARM::D18_D20_D22, ARM::D20_D22_D24, ARM::D22_D24_D26, ARM::D24_D26_D28, ARM::D12_D14_D16_D18, ARM::D14_D16_D18_D20, ARM::D16_D18_D20_D22, ARM::D20_D22_D24_D26, ARM::D22_D24_D26_D28, ARM::D24_D26_D28_D30, ARM::D17_D18, ARM::D19_D20, ARM::D21_D22, ARM::D23_D24, ARM::D15_D16_D17_D18, ARM::D17_D18_D19_D20, ARM::D19_D20_D21_D22, ARM::D21_D22_D23_D24, ARM::D23_D24_D25_D26, ARM::D18, ARM::D20, ARM::D22, ARM::D24, 0,
  /* 2509 */ ARM::D20_D22_D24, ARM::Q10, ARM::Q11, ARM::Q12, ARM::D18_D20, ARM::D20_D22, ARM::D22_D24, ARM::D24_D26, ARM::Q9_Q10, ARM::Q10_Q11, ARM::Q11_Q12, ARM::Q12_Q13, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::Q12_Q13_Q14_Q15, ARM::D18_D19_D20, ARM::D19_D20_D21, ARM::D20_D21_D22, ARM::D21_D22_D23, ARM::D22_D23_D24, ARM::D23_D24_D25, ARM::D24_D25_D26, ARM::D16_D18_D20, ARM::D18_D20_D22, ARM::D22_D24_D26, ARM::D24_D26_D28, ARM::D14_D16_D18_D20, ARM::D16_D18_D20_D22, ARM::D18_D20_D22_D24, ARM::D20_D22_D24_D26, ARM::D22_D24_D26_D28, ARM::D24_D26_D28_D30, ARM::D19_D20, ARM::D21_D22, ARM::D23_D24, ARM::D17_D18_D19_D20, ARM::D19_D20_D21_D22, ARM::D21_D22_D23_D24, ARM::D23_D24_D25_D26, ARM::D20, ARM::D22, ARM::D24, 0,
  /* 2555 */ ARM::D22_D24, ARM::Q11, ARM::Q12, ARM::D20_D22, ARM::D24_D26, ARM::Q10_Q11, ARM::Q11_Q12, ARM::Q12_Q13, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::Q12_Q13_Q14_Q15, ARM::D20_D21_D22, ARM::D21_D22_D23, ARM::D22_D23_D24, ARM::D23_D24_D25, ARM::D24_D25_D26, ARM::D18_D20_D22, ARM::D20_D22_D24, ARM::D22_D24_D26, ARM::D24_D26_D28, ARM::D16_D18_D20_D22, ARM::D18_D20_D22_D24, ARM::D20_D22_D24_D26, ARM::D22_D24_D26_D28, ARM::D24_D26_D28_D30, ARM::D21_D22, ARM::D23_D24, ARM::D19_D20_D21_D22, ARM::D21_D22_D23_D24, ARM::D23_D24_D25_D26, ARM::D22, ARM::D24, 0,
  /* 2590 */ ARM::D21_D22_D23_D24, ARM::Q10, ARM::Q11, ARM::Q12, ARM::D19_D21, ARM::D20_D22, ARM::D21_D23, ARM::D22_D24, ARM::D23_D25, ARM::D24_D26, ARM::Q9_Q10, ARM::Q10_Q11, ARM::Q11_Q12, ARM::Q12_Q13, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::Q12_Q13_Q14_Q15, ARM::D19_D20_D21, ARM::D20_D21_D22, ARM::D21_D22_D23, ARM::D22_D23_D24, ARM::D23_D24_D25, ARM::D24_D25_D26, ARM::D17_D19_D21, ARM::D18_D20_D22, ARM::D19_D21_D23, ARM::D20_D22_D24, ARM::D21_D23_D25, ARM::D22_D24_D26, ARM::D23_D25_D27, ARM::D24_D26_D28, ARM::D15_D17_D19_D21, ARM::D16_D18_D20_D22, ARM::D17_D19_D21_D23, ARM::D18_D20_D22_D24, ARM::D19_D21_D23_D25, ARM::D20_D22_D24_D26, ARM::D21_D23_D25_D27, ARM::D22_D24_D26_D28, ARM::D23_D25_D27_D29, ARM::D24_D26_D28_D30, ARM::D21_D22, ARM::D23_D24, ARM::D19_D20_D21_D22, ARM::D23_D24_D25_D26, ARM::D21, ARM::D22, ARM::D23, ARM::D24, 0,
  /* 2643 */ ARM::D22_D23_D24, ARM::Q11, ARM::Q12, ARM::D20_D22, ARM::D21_D23, ARM::D22_D24, ARM::D23_D25, ARM::D24_D26, ARM::Q10_Q11, ARM::Q11_Q12, ARM::Q12_Q13, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::Q12_Q13_Q14_Q15, ARM::D20_D21_D22, ARM::D21_D22_D23, ARM::D23_D24_D25, ARM::D24_D25_D26, ARM::D18_D20_D22, ARM::D19_D21_D23, ARM::D20_D22_D24, ARM::D21_D23_D25, ARM::D22_D24_D26, ARM::D23_D25_D27, ARM::D24_D26_D28, ARM::D16_D18_D20_D22, ARM::D17_D19_D21_D23, ARM::D18_D20_D22_D24, ARM::D19_D21_D23_D25, ARM::D20_D22_D24_D26, ARM::D21_D23_D25_D27, ARM::D22_D24_D26_D28, ARM::D23_D25_D27_D29, ARM::D24_D26_D28_D30, ARM::D21_D22, ARM::D23_D24, ARM::D19_D20_D21_D22, ARM::D21_D22_D23_D24, ARM::D23_D24_D25_D26, ARM::D22, ARM::D23, ARM::D24, 0,
  /* 2688 */ ARM::D23_D24, ARM::Q11, ARM::Q12, ARM::D21_D23, ARM::D22_D24, ARM::D23_D25, ARM::D24_D26, ARM::Q10_Q11, ARM::Q11_Q12, ARM::Q12_Q13, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::Q12_Q13_Q14_Q15, ARM::D21_D22_D23, ARM::D22_D23_D24, ARM::D23_D24_D25, ARM::D24_D25_D26, ARM::D19_D21_D23, ARM::D20_D22_D24, ARM::D21_D23_D25, ARM::D22_D24_D26, ARM::D23_D25_D27, ARM::D24_D26_D28, ARM::D17_D19_D21_D23, ARM::D18_D20_D22_D24, ARM::D19_D21_D23_D25, ARM::D20_D22_D24_D26, ARM::D21_D23_D25_D27, ARM::D22_D24_D26_D28, ARM::D23_D25_D27_D29, ARM::D24_D26_D28_D30, ARM::D21_D22_D23_D24, ARM::D23_D24_D25_D26, ARM::D23, ARM::D24, 0,
  /* 2726 */ ARM::D19_D21_D23_D25, ARM::Q9, ARM::Q10, ARM::Q11, ARM::Q12, ARM::D17_D19, ARM::D19_D21, ARM::D21_D23, ARM::D23_D25, ARM::D25_D27, ARM::Q8_Q9, ARM::Q9_Q10, ARM::Q10_Q11, ARM::Q11_Q12, ARM::Q12_Q13, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::Q12_Q13_Q14_Q15, ARM::D17_D18_D19, ARM::D18_D19_D20, ARM::D19_D20_D21, ARM::D20_D21_D22, ARM::D21_D22_D23, ARM::D22_D23_D24, ARM::D23_D24_D25, ARM::D24_D25_D26, ARM::D25_D26_D27, ARM::D15_D17_D19, ARM::D17_D19_D21, ARM::D19_D21_D23, ARM::D21_D23_D25, ARM::D23_D25_D27, ARM::D25_D27_D29, ARM::D13_D15_D17_D19, ARM::D15_D17_D19_D21, ARM::D17_D19_D21_D23, ARM::D21_D23_D25_D27, ARM::D23_D25_D27_D29, ARM::D25_D27_D29_D31, ARM::D19_D20, ARM::D21_D22, ARM::D23_D24, ARM::D25_D26, ARM::D17_D18_D19_D20, ARM::D19_D20_D21_D22, ARM::D21_D22_D23_D24, ARM::D23_D24_D25_D26, ARM::D25_D26_D27_D28, ARM::D19, ARM::D21, ARM::D23, ARM::D25, 0,
  /* 2783 */ ARM::D21_D23_D25, ARM::Q10, ARM::Q11, ARM::Q12, ARM::D19_D21, ARM::D21_D23, ARM::D23_D25, ARM::D25_D27, ARM::Q9_Q10, ARM::Q10_Q11, ARM::Q11_Q12, ARM::Q12_Q13, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::Q12_Q13_Q14_Q15, ARM::D19_D20_D21, ARM::D20_D21_D22, ARM::D21_D22_D23, ARM::D22_D23_D24, ARM::D23_D24_D25, ARM::D24_D25_D26, ARM::D25_D26_D27, ARM::D17_D19_D21, ARM::D19_D21_D23, ARM::D23_D25_D27, ARM::D25_D27_D29, ARM::D15_D17_D19_D21, ARM::D17_D19_D21_D23, ARM::D19_D21_D23_D25, ARM::D21_D23_D25_D27, ARM::D23_D25_D27_D29, ARM::D25_D27_D29_D31, ARM::D21_D22, ARM::D23_D24, ARM::D25_D26, ARM::D19_D20_D21_D22, ARM::D21_D22_D23_D24, ARM::D23_D24_D25_D26, ARM::D25_D26_D27_D28, ARM::D21, ARM::D23, ARM::D25, 0,
  /* 2829 */ ARM::D23_D25, ARM::Q11, ARM::Q12, ARM::D21_D23, ARM::D25_D27, ARM::Q10_Q11, ARM::Q11_Q12, ARM::Q12_Q13, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::Q12_Q13_Q14_Q15, ARM::D21_D22_D23, ARM::D22_D23_D24, ARM::D23_D24_D25, ARM::D24_D25_D26, ARM::D25_D26_D27, ARM::D19_D21_D23, ARM::D21_D23_D25, ARM::D23_D25_D27, ARM::D25_D27_D29, ARM::D17_D19_D21_D23, ARM::D19_D21_D23_D25, ARM::D21_D23_D25_D27, ARM::D23_D25_D27_D29, ARM::D25_D27_D29_D31, ARM::D23_D24, ARM::D25_D26, ARM::D21_D22_D23_D24, ARM::D23_D24_D25_D26, ARM::D25_D26_D27_D28, ARM::D23, ARM::D25, 0,
  /* 2864 */ ARM::D23_D24_D25, ARM::Q11, ARM::Q12, ARM::D21_D23, ARM::D22_D24, ARM::D23_D25, ARM::D24_D26, ARM::D25_D27, ARM::Q10_Q11, ARM::Q11_Q12, ARM::Q12_Q13, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::Q12_Q13_Q14_Q15, ARM::D21_D22_D23, ARM::D22_D23_D24, ARM::D24_D25_D26, ARM::D25_D26_D27, ARM::D19_D21_D23, ARM::D20_D22_D24, ARM::D21_D23_D25, ARM::D22_D24_D26, ARM::D23_D25_D27, ARM::D24_D26_D28, ARM::D25_D27_D29, ARM::D17_D19_D21_D23, ARM::D18_D20_D22_D24, ARM::D19_D21_D23_D25, ARM::D20_D22_D24_D26, ARM::D21_D23_D25_D27, ARM::D22_D24_D26_D28, ARM::D23_D25_D27_D29, ARM::D24_D26_D28_D30, ARM::D25_D27_D29_D31, ARM::D23_D24, ARM::D25_D26, ARM::D21_D22_D23_D24, ARM::D23_D24_D25_D26, ARM::D25_D26_D27_D28, ARM::D23, ARM::D24, ARM::D25, 0,
  /* 2909 */ ARM::Q9_Q10_Q11_Q12, ARM::D16_D18, ARM::D17_D19, ARM::D18_D20, ARM::D19_D21, ARM::D20_D22, ARM::D21_D23, ARM::D22_D24, ARM::D23_D25, ARM::D24_D26, ARM::D25_D27, ARM::Q8_Q9, ARM::Q10_Q11, ARM::Q12_Q13, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::Q12_Q13_Q14_Q15, ARM::D16_D17_D18, ARM::D17_D18_D19, ARM::D18_D19_D20, ARM::D19_D20_D21, ARM::D20_D21_D22, ARM::D21_D22_D23, ARM::D22_D23_D24, ARM::D23_D24_D25, ARM::D24_D25_D26, ARM::D25_D26_D27, ARM::D14_D16_D18, ARM::D15_D17_D19, ARM::D16_D18_D20, ARM::D17_D19_D21, ARM::D18_D20_D22, ARM::D19_D21_D23, ARM::D20_D22_D24, ARM::D21_D23_D25, ARM::D22_D24_D26, ARM::D23_D25_D27, ARM::D24_D26_D28, ARM::D25_D27_D29, ARM::D12_D14_D16_D18, ARM::D13_D15_D17_D19, ARM::D14_D16_D18_D20, ARM::D15_D17_D19_D21, ARM::D16_D18_D20_D22, ARM::D17_D19_D21_D23, ARM::D18_D20_D22_D24, ARM::D19_D21_D23_D25, ARM::D20_D22_D24_D26, ARM::D21_D23_D25_D27, ARM::D22_D24_D26_D28, ARM::D23_D25_D27_D29, ARM::D24_D26_D28_D30, ARM::D25_D27_D29_D31, ARM::D17_D18, ARM::D19_D20, ARM::D21_D22, ARM::D23_D24, ARM::D25_D26, ARM::D15_D16_D17_D18, ARM::D17_D18_D19_D20, ARM::D19_D20_D21_D22, ARM::D21_D22_D23_D24, ARM::D23_D24_D25_D26, ARM::D25_D26_D27_D28, ARM::Q9_Q10, ARM::Q9, ARM::D18, ARM::D19, ARM::Q10, ARM::D20, ARM::D21, ARM::Q11_Q12, ARM::Q11, ARM::D22, ARM::D23, ARM::Q12, ARM::D24, ARM::D25, 0,
  /* 2991 */ ARM::Q11_Q12, ARM::D20_D22, ARM::D21_D23, ARM::D22_D24, ARM::D23_D25, ARM::D24_D26, ARM::D25_D27, ARM::Q10_Q11, ARM::Q12_Q13, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::Q12_Q13_Q14_Q15, ARM::D20_D21_D22, ARM::D21_D22_D23, ARM::D22_D23_D24, ARM::D23_D24_D25, ARM::D24_D25_D26, ARM::D25_D26_D27, ARM::D18_D20_D22, ARM::D19_D21_D23, ARM::D20_D22_D24, ARM::D21_D23_D25, ARM::D22_D24_D26, ARM::D23_D25_D27, ARM::D24_D26_D28, ARM::D25_D27_D29, ARM::D16_D18_D20_D22, ARM::D17_D19_D21_D23, ARM::D18_D20_D22_D24, ARM::D19_D21_D23_D25, ARM::D20_D22_D24_D26, ARM::D21_D23_D25_D27, ARM::D22_D24_D26_D28, ARM::D23_D25_D27_D29, ARM::D24_D26_D28_D30, ARM::D25_D27_D29_D31, ARM::D21_D22, ARM::D23_D24, ARM::D25_D26, ARM::D19_D20_D21_D22, ARM::D21_D22_D23_D24, ARM::D23_D24_D25_D26, ARM::D25_D26_D27_D28, ARM::Q11, ARM::D22, ARM::D23, ARM::Q12, ARM::D24, ARM::D25, 0,
  /* 3043 */ ARM::D20_D22_D24_D26, ARM::Q10, ARM::Q11, ARM::Q12, ARM::Q13, ARM::D18_D20, ARM::D20_D22, ARM::D22_D24, ARM::D24_D26, ARM::D26_D28, ARM::Q9_Q10, ARM::Q10_Q11, ARM::Q11_Q12, ARM::Q12_Q13, ARM::Q13_Q14, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::Q12_Q13_Q14_Q15, ARM::D18_D19_D20, ARM::D19_D20_D21, ARM::D20_D21_D22, ARM::D21_D22_D23, ARM::D22_D23_D24, ARM::D23_D24_D25, ARM::D24_D25_D26, ARM::D25_D26_D27, ARM::D26_D27_D28, ARM::D16_D18_D20, ARM::D18_D20_D22, ARM::D20_D22_D24, ARM::D22_D24_D26, ARM::D24_D26_D28, ARM::D26_D28_D30, ARM::D14_D16_D18_D20, ARM::D16_D18_D20_D22, ARM::D18_D20_D22_D24, ARM::D22_D24_D26_D28, ARM::D24_D26_D28_D30, ARM::D19_D20, ARM::D21_D22, ARM::D23_D24, ARM::D25_D26, ARM::D17_D18_D19_D20, ARM::D19_D20_D21_D22, ARM::D21_D22_D23_D24, ARM::D23_D24_D25_D26, ARM::D25_D26_D27_D28, ARM::D20, ARM::D22, ARM::D24, ARM::D26, 0,
  /* 3098 */ ARM::D22_D24_D26, ARM::Q11, ARM::Q12, ARM::Q13, ARM::D20_D22, ARM::D22_D24, ARM::D24_D26, ARM::D26_D28, ARM::Q10_Q11, ARM::Q11_Q12, ARM::Q12_Q13, ARM::Q13_Q14, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::Q12_Q13_Q14_Q15, ARM::D20_D21_D22, ARM::D21_D22_D23, ARM::D22_D23_D24, ARM::D23_D24_D25, ARM::D24_D25_D26, ARM::D25_D26_D27, ARM::D26_D27_D28, ARM::D18_D20_D22, ARM::D20_D22_D24, ARM::D24_D26_D28, ARM::D26_D28_D30, ARM::D16_D18_D20_D22, ARM::D18_D20_D22_D24, ARM::D20_D22_D24_D26, ARM::D22_D24_D26_D28, ARM::D24_D26_D28_D30, ARM::D21_D22, ARM::D23_D24, ARM::D25_D26, ARM::D19_D20_D21_D22, ARM::D21_D22_D23_D24, ARM::D23_D24_D25_D26, ARM::D25_D26_D27_D28, ARM::D22, ARM::D24, ARM::D26, 0,
  /* 3142 */ ARM::D24_D26, ARM::Q12, ARM::Q13, ARM::D22_D24, ARM::D26_D28, ARM::Q11_Q12, ARM::Q12_Q13, ARM::Q13_Q14, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::Q12_Q13_Q14_Q15, ARM::D22_D23_D24, ARM::D23_D24_D25, ARM::D24_D25_D26, ARM::D25_D26_D27, ARM::D26_D27_D28, ARM::D20_D22_D24, ARM::D22_D24_D26, ARM::D24_D26_D28, ARM::D26_D28_D30, ARM::D18_D20_D22_D24, ARM::D20_D22_D24_D26, ARM::D22_D24_D26_D28, ARM::D24_D26_D28_D30, ARM::D23_D24, ARM::D25_D26, ARM::D21_D22_D23_D24, ARM::D23_D24_D25_D26, ARM::D25_D26_D27_D28, ARM::D24, ARM::D26, 0,
  /* 3175 */ ARM::D23_D24_D25_D26, ARM::Q11, ARM::Q12, ARM::Q13, ARM::D21_D23, ARM::D22_D24, ARM::D23_D25, ARM::D24_D26, ARM::D25_D27, ARM::D26_D28, ARM::Q10_Q11, ARM::Q11_Q12, ARM::Q12_Q13, ARM::Q13_Q14, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::Q12_Q13_Q14_Q15, ARM::D21_D22_D23, ARM::D22_D23_D24, ARM::D23_D24_D25, ARM::D24_D25_D26, ARM::D25_D26_D27, ARM::D26_D27_D28, ARM::D19_D21_D23, ARM::D20_D22_D24, ARM::D21_D23_D25, ARM::D22_D24_D26, ARM::D23_D25_D27, ARM::D24_D26_D28, ARM::D25_D27_D29, ARM::D26_D28_D30, ARM::D17_D19_D21_D23, ARM::D18_D20_D22_D24, ARM::D19_D21_D23_D25, ARM::D20_D22_D24_D26, ARM::D21_D23_D25_D27, ARM::D22_D24_D26_D28, ARM::D23_D25_D27_D29, ARM::D24_D26_D28_D30, ARM::D25_D27_D29_D31, ARM::D23_D24, ARM::D25_D26, ARM::D21_D22_D23_D24, ARM::D25_D26_D27_D28, ARM::D23, ARM::D24, ARM::D25, ARM::D26, 0,
  /* 3226 */ ARM::D24_D25_D26, ARM::Q12, ARM::Q13, ARM::D22_D24, ARM::D23_D25, ARM::D24_D26, ARM::D25_D27, ARM::D26_D28, ARM::Q11_Q12, ARM::Q12_Q13, ARM::Q13_Q14, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::Q12_Q13_Q14_Q15, ARM::D22_D23_D24, ARM::D23_D24_D25, ARM::D25_D26_D27, ARM::D26_D27_D28, ARM::D20_D22_D24, ARM::D21_D23_D25, ARM::D22_D24_D26, ARM::D23_D25_D27, ARM::D24_D26_D28, ARM::D25_D27_D29, ARM::D26_D28_D30, ARM::D18_D20_D22_D24, ARM::D19_D21_D23_D25, ARM::D20_D22_D24_D26, ARM::D21_D23_D25_D27, ARM::D22_D24_D26_D28, ARM::D23_D25_D27_D29, ARM::D24_D26_D28_D30, ARM::D25_D27_D29_D31, ARM::D23_D24, ARM::D25_D26, ARM::D21_D22_D23_D24, ARM::D23_D24_D25_D26, ARM::D25_D26_D27_D28, ARM::D24, ARM::D25, ARM::D26, 0,
  /* 3269 */ ARM::D25_D26, ARM::Q12, ARM::Q13, ARM::D23_D25, ARM::D24_D26, ARM::D25_D27, ARM::D26_D28, ARM::Q11_Q12, ARM::Q12_Q13, ARM::Q13_Q14, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::Q12_Q13_Q14_Q15, ARM::D23_D24_D25, ARM::D24_D25_D26, ARM::D25_D26_D27, ARM::D26_D27_D28, ARM::D21_D23_D25, ARM::D22_D24_D26, ARM::D23_D25_D27, ARM::D24_D26_D28, ARM::D25_D27_D29, ARM::D26_D28_D30, ARM::D19_D21_D23_D25, ARM::D20_D22_D24_D26, ARM::D21_D23_D25_D27, ARM::D22_D24_D26_D28, ARM::D23_D25_D27_D29, ARM::D24_D26_D28_D30, ARM::D25_D27_D29_D31, ARM::D23_D24_D25_D26, ARM::D25_D26_D27_D28, ARM::D25, ARM::D26, 0,
  /* 3305 */ ARM::D21_D23_D25_D27, ARM::Q10, ARM::Q11, ARM::Q12, ARM::Q13, ARM::D19_D21, ARM::D21_D23, ARM::D23_D25, ARM::D25_D27, ARM::D27_D29, ARM::Q9_Q10, ARM::Q10_Q11, ARM::Q11_Q12, ARM::Q12_Q13, ARM::Q13_Q14, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::Q12_Q13_Q14_Q15, ARM::D19_D20_D21, ARM::D20_D21_D22, ARM::D21_D22_D23, ARM::D22_D23_D24, ARM::D23_D24_D25, ARM::D24_D25_D26, ARM::D25_D26_D27, ARM::D26_D27_D28, ARM::D27_D28_D29, ARM::D17_D19_D21, ARM::D19_D21_D23, ARM::D21_D23_D25, ARM::D23_D25_D27, ARM::D25_D27_D29, ARM::D27_D29_D31, ARM::D15_D17_D19_D21, ARM::D17_D19_D21_D23, ARM::D19_D21_D23_D25, ARM::D23_D25_D27_D29, ARM::D25_D27_D29_D31, ARM::D21_D22, ARM::D23_D24, ARM::D25_D26, ARM::D27_D28, ARM::D19_D20_D21_D22, ARM::D21_D22_D23_D24, ARM::D23_D24_D25_D26, ARM::D25_D26_D27_D28, ARM::D27_D28_D29_D30, ARM::D21, ARM::D23, ARM::D25, ARM::D27, 0,
  /* 3360 */ ARM::D23_D25_D27, ARM::Q11, ARM::Q12, ARM::Q13, ARM::D21_D23, ARM::D23_D25, ARM::D25_D27, ARM::D27_D29, ARM::Q10_Q11, ARM::Q11_Q12, ARM::Q12_Q13, ARM::Q13_Q14, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::Q12_Q13_Q14_Q15, ARM::D21_D22_D23, ARM::D22_D23_D24, ARM::D23_D24_D25, ARM::D24_D25_D26, ARM::D25_D26_D27, ARM::D26_D27_D28, ARM::D27_D28_D29, ARM::D19_D21_D23, ARM::D21_D23_D25, ARM::D25_D27_D29, ARM::D27_D29_D31, ARM::D17_D19_D21_D23, ARM::D19_D21_D23_D25, ARM::D21_D23_D25_D27, ARM::D23_D25_D27_D29, ARM::D25_D27_D29_D31, ARM::D23_D24, ARM::D25_D26, ARM::D27_D28, ARM::D21_D22_D23_D24, ARM::D23_D24_D25_D26, ARM::D25_D26_D27_D28, ARM::D27_D28_D29_D30, ARM::D23, ARM::D25, ARM::D27, 0,
  /* 3404 */ ARM::D25_D27, ARM::Q12, ARM::Q13, ARM::D23_D25, ARM::D27_D29, ARM::Q11_Q12, ARM::Q12_Q13, ARM::Q13_Q14, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::Q12_Q13_Q14_Q15, ARM::D23_D24_D25, ARM::D24_D25_D26, ARM::D25_D26_D27, ARM::D26_D27_D28, ARM::D27_D28_D29, ARM::D21_D23_D25, ARM::D23_D25_D27, ARM::D25_D27_D29, ARM::D27_D29_D31, ARM::D19_D21_D23_D25, ARM::D21_D23_D25_D27, ARM::D23_D25_D27_D29, ARM::D25_D27_D29_D31, ARM::D25_D26, ARM::D27_D28, ARM::D23_D24_D25_D26, ARM::D25_D26_D27_D28, ARM::D27_D28_D29_D30, ARM::D25, ARM::D27, 0,
  /* 3437 */ ARM::D25_D26_D27, ARM::Q12, ARM::Q13, ARM::D23_D25, ARM::D24_D26, ARM::D25_D27, ARM::D26_D28, ARM::D27_D29, ARM::Q11_Q12, ARM::Q12_Q13, ARM::Q13_Q14, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::Q12_Q13_Q14_Q15, ARM::D23_D24_D25, ARM::D24_D25_D26, ARM::D26_D27_D28, ARM::D27_D28_D29, ARM::D21_D23_D25, ARM::D22_D24_D26, ARM::D23_D25_D27, ARM::D24_D26_D28, ARM::D25_D27_D29, ARM::D26_D28_D30, ARM::D27_D29_D31, ARM::D19_D21_D23_D25, ARM::D20_D22_D24_D26, ARM::D21_D23_D25_D27, ARM::D22_D24_D26_D28, ARM::D23_D25_D27_D29, ARM::D24_D26_D28_D30, ARM::D25_D27_D29_D31, ARM::D25_D26, ARM::D27_D28, ARM::D23_D24_D25_D26, ARM::D25_D26_D27_D28, ARM::D27_D28_D29_D30, ARM::D25, ARM::D26, ARM::D27, 0,
  /* 3479 */ ARM::Q10_Q11_Q12_Q13, ARM::D18_D20, ARM::D19_D21, ARM::D20_D22, ARM::D21_D23, ARM::D22_D24, ARM::D23_D25, ARM::D24_D26, ARM::D25_D27, ARM::D26_D28, ARM::D27_D29, ARM::Q9_Q10, ARM::Q11_Q12, ARM::Q13_Q14, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::Q11_Q12_Q13_Q14, ARM::Q12_Q13_Q14_Q15, ARM::D18_D19_D20, ARM::D19_D20_D21, ARM::D20_D21_D22, ARM::D21_D22_D23, ARM::D22_D23_D24, ARM::D23_D24_D25, ARM::D24_D25_D26, ARM::D25_D26_D27, ARM::D26_D27_D28, ARM::D27_D28_D29, ARM::D16_D18_D20, ARM::D17_D19_D21, ARM::D18_D20_D22, ARM::D19_D21_D23, ARM::D20_D22_D24, ARM::D21_D23_D25, ARM::D22_D24_D26, ARM::D23_D25_D27, ARM::D24_D26_D28, ARM::D25_D27_D29, ARM::D26_D28_D30, ARM::D27_D29_D31, ARM::D14_D16_D18_D20, ARM::D15_D17_D19_D21, ARM::D16_D18_D20_D22, ARM::D17_D19_D21_D23, ARM::D18_D20_D22_D24, ARM::D19_D21_D23_D25, ARM::D20_D22_D24_D26, ARM::D21_D23_D25_D27, ARM::D22_D24_D26_D28, ARM::D23_D25_D27_D29, ARM::D24_D26_D28_D30, ARM::D25_D27_D29_D31, ARM::D19_D20, ARM::D21_D22, ARM::D23_D24, ARM::D25_D26, ARM::D27_D28, ARM::D17_D18_D19_D20, ARM::D19_D20_D21_D22, ARM::D21_D22_D23_D24, ARM::D23_D24_D25_D26, ARM::D25_D26_D27_D28, ARM::D27_D28_D29_D30, ARM::Q10_Q11, ARM::Q10, ARM::D20, ARM::D21, ARM::Q11, ARM::D22, ARM::D23, ARM::Q12_Q13, ARM::Q12, ARM::D24, ARM::D25, ARM::Q13, ARM::D26, ARM::D27, 0,
  /* 3558 */ ARM::Q12_Q13, ARM::D22_D24, ARM::D23_D25, ARM::D24_D26, ARM::D25_D27, ARM::D26_D28, ARM::D27_D29, ARM::Q11_Q12, ARM::Q13_Q14, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::Q12_Q13_Q14_Q15, ARM::D22_D23_D24, ARM::D23_D24_D25, ARM::D24_D25_D26, ARM::D25_D26_D27, ARM::D26_D27_D28, ARM::D27_D28_D29, ARM::D20_D22_D24, ARM::D21_D23_D25, ARM::D22_D24_D26, ARM::D23_D25_D27, ARM::D24_D26_D28, ARM::D25_D27_D29, ARM::D26_D28_D30, ARM::D27_D29_D31, ARM::D18_D20_D22_D24, ARM::D19_D21_D23_D25, ARM::D20_D22_D24_D26, ARM::D21_D23_D25_D27, ARM::D22_D24_D26_D28, ARM::D23_D25_D27_D29, ARM::D24_D26_D28_D30, ARM::D25_D27_D29_D31, ARM::D23_D24, ARM::D25_D26, ARM::D27_D28, ARM::D21_D22_D23_D24, ARM::D23_D24_D25_D26, ARM::D25_D26_D27_D28, ARM::D27_D28_D29_D30, ARM::Q12, ARM::D24, ARM::D25, ARM::Q13, ARM::D26, ARM::D27, 0,
  /* 3607 */ ARM::D22_D24_D26_D28, ARM::Q11, ARM::Q12, ARM::Q13, ARM::Q14, ARM::D20_D22, ARM::D22_D24, ARM::D24_D26, ARM::D26_D28, ARM::D28_D30, ARM::Q10_Q11, ARM::Q11_Q12, ARM::Q12_Q13, ARM::Q13_Q14, ARM::Q14_Q15, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::Q12_Q13_Q14_Q15, ARM::D20_D21_D22, ARM::D21_D22_D23, ARM::D22_D23_D24, ARM::D23_D24_D25, ARM::D24_D25_D26, ARM::D25_D26_D27, ARM::D26_D27_D28, ARM::D27_D28_D29, ARM::D28_D29_D30, ARM::D18_D20_D22, ARM::D20_D22_D24, ARM::D22_D24_D26, ARM::D24_D26_D28, ARM::D26_D28_D30, ARM::D16_D18_D20_D22, ARM::D18_D20_D22_D24, ARM::D20_D22_D24_D26, ARM::D24_D26_D28_D30, ARM::D21_D22, ARM::D23_D24, ARM::D25_D26, ARM::D27_D28, ARM::D19_D20_D21_D22, ARM::D21_D22_D23_D24, ARM::D23_D24_D25_D26, ARM::D25_D26_D27_D28, ARM::D27_D28_D29_D30, ARM::D22, ARM::D24, ARM::D26, ARM::D28, 0,
  /* 3659 */ ARM::D24_D26_D28, ARM::Q12, ARM::Q13, ARM::Q14, ARM::D22_D24, ARM::D24_D26, ARM::D26_D28, ARM::D28_D30, ARM::Q11_Q12, ARM::Q12_Q13, ARM::Q13_Q14, ARM::Q14_Q15, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::Q12_Q13_Q14_Q15, ARM::D22_D23_D24, ARM::D23_D24_D25, ARM::D24_D25_D26, ARM::D25_D26_D27, ARM::D26_D27_D28, ARM::D27_D28_D29, ARM::D28_D29_D30, ARM::D20_D22_D24, ARM::D22_D24_D26, ARM::D26_D28_D30, ARM::D18_D20_D22_D24, ARM::D20_D22_D24_D26, ARM::D22_D24_D26_D28, ARM::D24_D26_D28_D30, ARM::D23_D24, ARM::D25_D26, ARM::D27_D28, ARM::D21_D22_D23_D24, ARM::D23_D24_D25_D26, ARM::D25_D26_D27_D28, ARM::D27_D28_D29_D30, ARM::D24, ARM::D26, ARM::D28, 0,
  /* 3700 */ ARM::D26_D28, ARM::Q13, ARM::Q14, ARM::D24_D26, ARM::D28_D30, ARM::Q12_Q13, ARM::Q13_Q14, ARM::Q14_Q15, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::Q12_Q13_Q14_Q15, ARM::D24_D25_D26, ARM::D25_D26_D27, ARM::D26_D27_D28, ARM::D27_D28_D29, ARM::D28_D29_D30, ARM::D22_D24_D26, ARM::D24_D26_D28, ARM::D26_D28_D30, ARM::D20_D22_D24_D26, ARM::D22_D24_D26_D28, ARM::D24_D26_D28_D30, ARM::D25_D26, ARM::D27_D28, ARM::D23_D24_D25_D26, ARM::D25_D26_D27_D28, ARM::D27_D28_D29_D30, ARM::D26, ARM::D28, 0,
  /* 3730 */ ARM::D25_D26_D27_D28, ARM::Q12, ARM::Q13, ARM::Q14, ARM::D23_D25, ARM::D24_D26, ARM::D25_D27, ARM::D26_D28, ARM::D27_D29, ARM::D28_D30, ARM::Q11_Q12, ARM::Q12_Q13, ARM::Q13_Q14, ARM::Q14_Q15, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::Q12_Q13_Q14_Q15, ARM::D23_D24_D25, ARM::D24_D25_D26, ARM::D25_D26_D27, ARM::D26_D27_D28, ARM::D27_D28_D29, ARM::D28_D29_D30, ARM::D21_D23_D25, ARM::D22_D24_D26, ARM::D23_D25_D27, ARM::D24_D26_D28, ARM::D25_D27_D29, ARM::D26_D28_D30, ARM::D27_D29_D31, ARM::D19_D21_D23_D25, ARM::D20_D22_D24_D26, ARM::D21_D23_D25_D27, ARM::D22_D24_D26_D28, ARM::D23_D25_D27_D29, ARM::D24_D26_D28_D30, ARM::D25_D27_D29_D31, ARM::D25_D26, ARM::D27_D28, ARM::D23_D24_D25_D26, ARM::D27_D28_D29_D30, ARM::D25, ARM::D26, ARM::D27, ARM::D28, 0,
  /* 3777 */ ARM::D26_D27_D28, ARM::Q13, ARM::Q14, ARM::D24_D26, ARM::D25_D27, ARM::D26_D28, ARM::D27_D29, ARM::D28_D30, ARM::Q12_Q13, ARM::Q13_Q14, ARM::Q14_Q15, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::Q12_Q13_Q14_Q15, ARM::D24_D25_D26, ARM::D25_D26_D27, ARM::D27_D28_D29, ARM::D28_D29_D30, ARM::D22_D24_D26, ARM::D23_D25_D27, ARM::D24_D26_D28, ARM::D25_D27_D29, ARM::D26_D28_D30, ARM::D27_D29_D31, ARM::D20_D22_D24_D26, ARM::D21_D23_D25_D27, ARM::D22_D24_D26_D28, ARM::D23_D25_D27_D29, ARM::D24_D26_D28_D30, ARM::D25_D27_D29_D31, ARM::D25_D26, ARM::D27_D28, ARM::D23_D24_D25_D26, ARM::D25_D26_D27_D28, ARM::D27_D28_D29_D30, ARM::D26, ARM::D27, ARM::D28, 0,
  /* 3816 */ ARM::D27_D28, ARM::Q13, ARM::Q14, ARM::D25_D27, ARM::D26_D28, ARM::D27_D29, ARM::D28_D30, ARM::Q12_Q13, ARM::Q13_Q14, ARM::Q14_Q15, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::Q12_Q13_Q14_Q15, ARM::D25_D26_D27, ARM::D26_D27_D28, ARM::D27_D28_D29, ARM::D28_D29_D30, ARM::D23_D25_D27, ARM::D24_D26_D28, ARM::D25_D27_D29, ARM::D26_D28_D30, ARM::D27_D29_D31, ARM::D21_D23_D25_D27, ARM::D22_D24_D26_D28, ARM::D23_D25_D27_D29, ARM::D24_D26_D28_D30, ARM::D25_D27_D29_D31, ARM::D25_D26_D27_D28, ARM::D27_D28_D29_D30, ARM::D27, ARM::D28, 0,
  /* 3848 */ ARM::D23_D25_D27_D29, ARM::Q11, ARM::Q12, ARM::Q13, ARM::Q14, ARM::D21_D23, ARM::D23_D25, ARM::D25_D27, ARM::D27_D29, ARM::D29_D31, ARM::Q10_Q11, ARM::Q11_Q12, ARM::Q12_Q13, ARM::Q13_Q14, ARM::Q14_Q15, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::Q12_Q13_Q14_Q15, ARM::D21_D22_D23, ARM::D22_D23_D24, ARM::D23_D24_D25, ARM::D24_D25_D26, ARM::D25_D26_D27, ARM::D26_D27_D28, ARM::D27_D28_D29, ARM::D28_D29_D30, ARM::D29_D30_D31, ARM::D19_D21_D23, ARM::D21_D23_D25, ARM::D23_D25_D27, ARM::D25_D27_D29, ARM::D27_D29_D31, ARM::D17_D19_D21_D23, ARM::D19_D21_D23_D25, ARM::D21_D23_D25_D27, ARM::D25_D27_D29_D31, ARM::D23_D24, ARM::D25_D26, ARM::D27_D28, ARM::D29_D30, ARM::D21_D22_D23_D24, ARM::D23_D24_D25_D26, ARM::D25_D26_D27_D28, ARM::D27_D28_D29_D30, ARM::D23, ARM::D25, ARM::D27, ARM::D29, 0,
  /* 3899 */ ARM::D25_D27_D29, ARM::Q12, ARM::Q13, ARM::Q14, ARM::D23_D25, ARM::D25_D27, ARM::D27_D29, ARM::D29_D31, ARM::Q11_Q12, ARM::Q12_Q13, ARM::Q13_Q14, ARM::Q14_Q15, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::Q12_Q13_Q14_Q15, ARM::D23_D24_D25, ARM::D24_D25_D26, ARM::D25_D26_D27, ARM::D26_D27_D28, ARM::D27_D28_D29, ARM::D28_D29_D30, ARM::D29_D30_D31, ARM::D21_D23_D25, ARM::D23_D25_D27, ARM::D27_D29_D31, ARM::D19_D21_D23_D25, ARM::D21_D23_D25_D27, ARM::D23_D25_D27_D29, ARM::D25_D27_D29_D31, ARM::D25_D26, ARM::D27_D28, ARM::D29_D30, ARM::D23_D24_D25_D26, ARM::D25_D26_D27_D28, ARM::D27_D28_D29_D30, ARM::D25, ARM::D27, ARM::D29, 0,
  /* 3939 */ ARM::D27_D29, ARM::Q13, ARM::Q14, ARM::D25_D27, ARM::D29_D31, ARM::Q12_Q13, ARM::Q13_Q14, ARM::Q14_Q15, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::Q12_Q13_Q14_Q15, ARM::D25_D26_D27, ARM::D26_D27_D28, ARM::D27_D28_D29, ARM::D28_D29_D30, ARM::D29_D30_D31, ARM::D23_D25_D27, ARM::D25_D27_D29, ARM::D27_D29_D31, ARM::D21_D23_D25_D27, ARM::D23_D25_D27_D29, ARM::D25_D27_D29_D31, ARM::D27_D28, ARM::D29_D30, ARM::D25_D26_D27_D28, ARM::D27_D28_D29_D30, ARM::D27, ARM::D29, 0,
  /* 3968 */ ARM::D27_D28_D29, ARM::Q13, ARM::Q14, ARM::D25_D27, ARM::D26_D28, ARM::D27_D29, ARM::D28_D30, ARM::D29_D31, ARM::Q12_Q13, ARM::Q13_Q14, ARM::Q14_Q15, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::Q12_Q13_Q14_Q15, ARM::D25_D26_D27, ARM::D26_D27_D28, ARM::D28_D29_D30, ARM::D29_D30_D31, ARM::D23_D25_D27, ARM::D24_D26_D28, ARM::D25_D27_D29, ARM::D26_D28_D30, ARM::D27_D29_D31, ARM::D21_D23_D25_D27, ARM::D22_D24_D26_D28, ARM::D23_D25_D27_D29, ARM::D24_D26_D28_D30, ARM::D25_D27_D29_D31, ARM::D27_D28, ARM::D29_D30, ARM::D25_D26_D27_D28, ARM::D27_D28_D29_D30, ARM::D27, ARM::D28, ARM::D29, 0,
  /* 4004 */ ARM::Q11_Q12_Q13_Q14, ARM::D20_D22, ARM::D21_D23, ARM::D22_D24, ARM::D23_D25, ARM::D24_D26, ARM::D25_D27, ARM::D26_D28, ARM::D27_D29, ARM::D28_D30, ARM::D29_D31, ARM::Q10_Q11, ARM::Q12_Q13, ARM::Q14_Q15, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::Q12_Q13_Q14_Q15, ARM::D20_D21_D22, ARM::D21_D22_D23, ARM::D22_D23_D24, ARM::D23_D24_D25, ARM::D24_D25_D26, ARM::D25_D26_D27, ARM::D26_D27_D28, ARM::D27_D28_D29, ARM::D28_D29_D30, ARM::D29_D30_D31, ARM::D18_D20_D22, ARM::D19_D21_D23, ARM::D20_D22_D24, ARM::D21_D23_D25, ARM::D22_D24_D26, ARM::D23_D25_D27, ARM::D24_D26_D28, ARM::D25_D27_D29, ARM::D26_D28_D30, ARM::D27_D29_D31, ARM::D16_D18_D20_D22, ARM::D17_D19_D21_D23, ARM::D18_D20_D22_D24, ARM::D19_D21_D23_D25, ARM::D20_D22_D24_D26, ARM::D21_D23_D25_D27, ARM::D22_D24_D26_D28, ARM::D23_D25_D27_D29, ARM::D24_D26_D28_D30, ARM::D25_D27_D29_D31, ARM::D21_D22, ARM::D23_D24, ARM::D25_D26, ARM::D27_D28, ARM::D29_D30, ARM::D19_D20_D21_D22, ARM::D21_D22_D23_D24, ARM::D23_D24_D25_D26, ARM::D25_D26_D27_D28, ARM::D27_D28_D29_D30, ARM::Q11_Q12, ARM::Q11, ARM::D22, ARM::D23, ARM::Q12, ARM::D24, ARM::D25, ARM::Q13_Q14, ARM::Q13, ARM::D26, ARM::D27, ARM::Q14, ARM::D28, ARM::D29, 0,
  /* 4077 */ ARM::Q13_Q14, ARM::D24_D26, ARM::D25_D27, ARM::D26_D28, ARM::D27_D29, ARM::D28_D30, ARM::D29_D31, ARM::Q12_Q13, ARM::Q14_Q15, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::Q12_Q13_Q14_Q15, ARM::D24_D25_D26, ARM::D25_D26_D27, ARM::D26_D27_D28, ARM::D27_D28_D29, ARM::D28_D29_D30, ARM::D29_D30_D31, ARM::D22_D24_D26, ARM::D23_D25_D27, ARM::D24_D26_D28, ARM::D25_D27_D29, ARM::D26_D28_D30, ARM::D27_D29_D31, ARM::D20_D22_D24_D26, ARM::D21_D23_D25_D27, ARM::D22_D24_D26_D28, ARM::D23_D25_D27_D29, ARM::D24_D26_D28_D30, ARM::D25_D27_D29_D31, ARM::D25_D26, ARM::D27_D28, ARM::D29_D30, ARM::D23_D24_D25_D26, ARM::D25_D26_D27_D28, ARM::D27_D28_D29_D30, ARM::Q13, ARM::D26, ARM::D27, ARM::Q14, ARM::D28, ARM::D29, 0,
  /* 4120 */ ARM::D24_D26_D28_D30, ARM::Q12, ARM::Q13, ARM::Q14, ARM::Q15, ARM::D22_D24, ARM::D24_D26, ARM::D26_D28, ARM::D28_D30, ARM::Q11_Q12, ARM::Q12_Q13, ARM::Q13_Q14, ARM::Q14_Q15, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::Q12_Q13_Q14_Q15, ARM::D22_D23_D24, ARM::D23_D24_D25, ARM::D24_D25_D26, ARM::D25_D26_D27, ARM::D26_D27_D28, ARM::D27_D28_D29, ARM::D28_D29_D30, ARM::D29_D30_D31, ARM::D20_D22_D24, ARM::D22_D24_D26, ARM::D24_D26_D28, ARM::D26_D28_D30, ARM::D18_D20_D22_D24, ARM::D20_D22_D24_D26, ARM::D22_D24_D26_D28, ARM::D23_D24, ARM::D25_D26, ARM::D27_D28, ARM::D29_D30, ARM::D21_D22_D23_D24, ARM::D23_D24_D25_D26, ARM::D25_D26_D27_D28, ARM::D27_D28_D29_D30, ARM::D24, ARM::D26, ARM::D28, ARM::D30, 0,
  /* 4165 */ ARM::D26_D28_D30, ARM::Q13, ARM::Q14, ARM::Q15, ARM::D24_D26, ARM::D26_D28, ARM::D28_D30, ARM::Q12_Q13, ARM::Q13_Q14, ARM::Q14_Q15, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::Q12_Q13_Q14_Q15, ARM::D24_D25_D26, ARM::D25_D26_D27, ARM::D26_D27_D28, ARM::D27_D28_D29, ARM::D28_D29_D30, ARM::D29_D30_D31, ARM::D22_D24_D26, ARM::D24_D26_D28, ARM::D20_D22_D24_D26, ARM::D22_D24_D26_D28, ARM::D24_D26_D28_D30, ARM::D25_D26, ARM::D27_D28, ARM::D29_D30, ARM::D23_D24_D25_D26, ARM::D25_D26_D27_D28, ARM::D27_D28_D29_D30, ARM::D26, ARM::D28, ARM::D30, 0,
  /* 4199 */ ARM::D28_D30, ARM::Q14, ARM::Q15, ARM::D26_D28, ARM::Q13_Q14, ARM::Q14_Q15, ARM::Q11_Q12_Q13_Q14, ARM::Q12_Q13_Q14_Q15, ARM::D26_D27_D28, ARM::D27_D28_D29, ARM::D28_D29_D30, ARM::D29_D30_D31, ARM::D24_D26_D28, ARM::D26_D28_D30, ARM::D22_D24_D26_D28, ARM::D24_D26_D28_D30, ARM::D27_D28, ARM::D29_D30, ARM::D25_D26_D27_D28, ARM::D27_D28_D29_D30, ARM::D28, ARM::D30, 0,
  /* 4222 */ ARM::D27_D28_D29_D30, ARM::Q13, ARM::Q14, ARM::Q15, ARM::D25_D27, ARM::D26_D28, ARM::D27_D29, ARM::D28_D30, ARM::D29_D31, ARM::Q12_Q13, ARM::Q13_Q14, ARM::Q14_Q15, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::Q12_Q13_Q14_Q15, ARM::D25_D26_D27, ARM::D26_D27_D28, ARM::D27_D28_D29, ARM::D28_D29_D30, ARM::D29_D30_D31, ARM::D23_D25_D27, ARM::D24_D26_D28, ARM::D25_D27_D29, ARM::D26_D28_D30, ARM::D27_D29_D31, ARM::D21_D23_D25_D27, ARM::D22_D24_D26_D28, ARM::D23_D25_D27_D29, ARM::D24_D26_D28_D30, ARM::D25_D27_D29_D31, ARM::D27_D28, ARM::D29_D30, ARM::D25_D26_D27_D28, ARM::D27, ARM::D28, ARM::D29, ARM::D30, 0,
  /* 4260 */ ARM::D28_D29_D30, ARM::Q14, ARM::Q15, ARM::D26_D28, ARM::D27_D29, ARM::D28_D30, ARM::D29_D31, ARM::Q13_Q14, ARM::Q14_Q15, ARM::Q11_Q12_Q13_Q14, ARM::Q12_Q13_Q14_Q15, ARM::D26_D27_D28, ARM::D27_D28_D29, ARM::D29_D30_D31, ARM::D24_D26_D28, ARM::D25_D27_D29, ARM::D26_D28_D30, ARM::D27_D29_D31, ARM::D22_D24_D26_D28, ARM::D23_D25_D27_D29, ARM::D24_D26_D28_D30, ARM::D25_D27_D29_D31, ARM::D27_D28, ARM::D29_D30, ARM::D25_D26_D27_D28, ARM::D27_D28_D29_D30, ARM::D28, ARM::D29, ARM::D30, 0,
  /* 4290 */ ARM::D29_D30, ARM::Q14, ARM::Q15, ARM::D27_D29, ARM::D28_D30, ARM::D29_D31, ARM::Q13_Q14, ARM::Q14_Q15, ARM::Q11_Q12_Q13_Q14, ARM::Q12_Q13_Q14_Q15, ARM::D27_D28_D29, ARM::D28_D29_D30, ARM::D29_D30_D31, ARM::D25_D27_D29, ARM::D26_D28_D30, ARM::D27_D29_D31, ARM::D23_D25_D27_D29, ARM::D24_D26_D28_D30, ARM::D25_D27_D29_D31, ARM::D27_D28_D29_D30, ARM::D29, ARM::D30, 0,
  /* 4313 */ ARM::D25_D27_D29_D31, ARM::Q12, ARM::Q13, ARM::Q14, ARM::Q15, ARM::D23_D25, ARM::D25_D27, ARM::D27_D29, ARM::D29_D31, ARM::Q11_Q12, ARM::Q12_Q13, ARM::Q13_Q14, ARM::Q14_Q15, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::Q12_Q13_Q14_Q15, ARM::D23_D24_D25, ARM::D24_D25_D26, ARM::D25_D26_D27, ARM::D26_D27_D28, ARM::D27_D28_D29, ARM::D28_D29_D30, ARM::D29_D30_D31, ARM::D21_D23_D25, ARM::D23_D25_D27, ARM::D25_D27_D29, ARM::D27_D29_D31, ARM::D19_D21_D23_D25, ARM::D21_D23_D25_D27, ARM::D23_D25_D27_D29, ARM::D25_D26, ARM::D27_D28, ARM::D29_D30, ARM::D23_D24_D25_D26, ARM::D25_D26_D27_D28, ARM::D27_D28_D29_D30, ARM::D25, ARM::D27, ARM::D29, ARM::D31, 0,
  /* 4355 */ ARM::D27_D29_D31, ARM::Q13, ARM::Q14, ARM::Q15, ARM::D25_D27, ARM::D27_D29, ARM::D29_D31, ARM::Q12_Q13, ARM::Q13_Q14, ARM::Q14_Q15, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::Q12_Q13_Q14_Q15, ARM::D25_D26_D27, ARM::D26_D27_D28, ARM::D27_D28_D29, ARM::D28_D29_D30, ARM::D29_D30_D31, ARM::D23_D25_D27, ARM::D25_D27_D29, ARM::D21_D23_D25_D27, ARM::D23_D25_D27_D29, ARM::D25_D27_D29_D31, ARM::D27_D28, ARM::D29_D30, ARM::D25_D26_D27_D28, ARM::D27_D28_D29_D30, ARM::D27, ARM::D29, ARM::D31, 0,
  /* 4386 */ ARM::D29_D31, ARM::Q14, ARM::Q15, ARM::D27_D29, ARM::Q13_Q14, ARM::Q14_Q15, ARM::Q11_Q12_Q13_Q14, ARM::Q12_Q13_Q14_Q15, ARM::D27_D28_D29, ARM::D28_D29_D30, ARM::D29_D30_D31, ARM::D25_D27_D29, ARM::D27_D29_D31, ARM::D23_D25_D27_D29, ARM::D25_D27_D29_D31, ARM::D29_D30, ARM::D27_D28_D29_D30, ARM::D29, ARM::D31, 0,
  /* 4406 */ ARM::D29_D30_D31, ARM::Q14, ARM::Q15, ARM::D27_D29, ARM::D28_D30, ARM::D29_D31, ARM::Q13_Q14, ARM::Q14_Q15, ARM::Q11_Q12_Q13_Q14, ARM::Q12_Q13_Q14_Q15, ARM::D27_D28_D29, ARM::D28_D29_D30, ARM::D25_D27_D29, ARM::D26_D28_D30, ARM::D27_D29_D31, ARM::D23_D25_D27_D29, ARM::D24_D26_D28_D30, ARM::D25_D27_D29_D31, ARM::D29_D30, ARM::D27_D28_D29_D30, ARM::D29, ARM::D30, ARM::D31, 0,
  /* 4430 */ ARM::Q12_Q13_Q14_Q15, ARM::D22_D24, ARM::D23_D25, ARM::D24_D26, ARM::D25_D27, ARM::D26_D28, ARM::D27_D29, ARM::D28_D30, ARM::D29_D31, ARM::Q11_Q12, ARM::Q13_Q14, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::D22_D23_D24, ARM::D23_D24_D25, ARM::D24_D25_D26, ARM::D25_D26_D27, ARM::D26_D27_D28, ARM::D27_D28_D29, ARM::D28_D29_D30, ARM::D29_D30_D31, ARM::D20_D22_D24, ARM::D21_D23_D25, ARM::D22_D24_D26, ARM::D23_D25_D27, ARM::D24_D26_D28, ARM::D25_D27_D29, ARM::D26_D28_D30, ARM::D27_D29_D31, ARM::D18_D20_D22_D24, ARM::D19_D21_D23_D25, ARM::D20_D22_D24_D26, ARM::D21_D23_D25_D27, ARM::D22_D24_D26_D28, ARM::D23_D25_D27_D29, ARM::D24_D26_D28_D30, ARM::D25_D27_D29_D31, ARM::D23_D24, ARM::D25_D26, ARM::D27_D28, ARM::D29_D30, ARM::D21_D22_D23_D24, ARM::D23_D24_D25_D26, ARM::D25_D26_D27_D28, ARM::D27_D28_D29_D30, ARM::Q12_Q13, ARM::Q12, ARM::D24, ARM::D25, ARM::Q13, ARM::D26, ARM::D27, ARM::Q14_Q15, ARM::Q14, ARM::D28, ARM::D29, ARM::Q15, ARM::D30, ARM::D31, 0,
  /* 4491 */ ARM::Q14_Q15, ARM::D26_D28, ARM::D27_D29, ARM::D28_D30, ARM::D29_D31, ARM::Q13_Q14, ARM::Q11_Q12_Q13_Q14, ARM::Q12_Q13_Q14_Q15, ARM::D26_D27_D28, ARM::D27_D28_D29, ARM::D28_D29_D30, ARM::D29_D30_D31, ARM::D24_D26_D28, ARM::D25_D27_D29, ARM::D26_D28_D30, ARM::D27_D29_D31, ARM::D22_D24_D26_D28, ARM::D23_D25_D27_D29, ARM::D24_D26_D28_D30, ARM::D25_D27_D29_D31, ARM::D27_D28, ARM::D29_D30, ARM::D25_D26_D27_D28, ARM::D27_D28_D29_D30, ARM::Q14, ARM::D28, ARM::D29, ARM::Q15, ARM::D30, ARM::D31, 0,
  /* 4522 */ ARM::FPEXC, 0,
  /* 4524 */ ARM::FPSCR_NZCV, ARM::FPSCR, 0,
  /* 4527 */ ARM::FPSCR, ARM::FPSCR_NZCV, 0,
  /* 4530 */ ARM::FPSID, 0,
  /* 4532 */ ARM::ITSTATE, 0,
  /* 4534 */ ARM::LR, 0,
  /* 4536 */ ARM::MVFR0, 0,
  /* 4538 */ ARM::MVFR1, 0,
  /* 4540 */ ARM::PC, 0,
  /* 4542 */ ARM::R0, 0,
  /* 4544 */ ARM::R1, 0,
  /* 4546 */ ARM::R2, 0,
  /* 4548 */ ARM::R3, 0,
  /* 4550 */ ARM::R4, 0,
  /* 4552 */ ARM::R5, 0,
  /* 4554 */ ARM::R6, 0,
  /* 4556 */ ARM::R7, 0,
  /* 4558 */ ARM::R8, 0,
  /* 4560 */ ARM::R9, 0,
  /* 4562 */ ARM::R10, 0,
  /* 4564 */ ARM::R11, 0,
  /* 4566 */ ARM::R12, 0,
  /* 4568 */ ARM::S0, ARM::S1, 0,
  /* 4571 */ ARM::Q0, ARM::D0_D2, ARM::D1_D3, ARM::Q0_Q1, ARM::Q0_Q1_Q2_Q3, ARM::D0_D1_D2, ARM::D1_D2_D3, ARM::D0_D2_D4, ARM::D1_D3_D5, ARM::D0_D2_D4_D6, ARM::D1_D3_D5_D7, ARM::D1_D2, ARM::D1_D2_D3_D4, ARM::D0, ARM::S0, ARM::S1, ARM::D1, ARM::S2, ARM::S3, 0,
  /* 4591 */ ARM::D0_D2, ARM::Q0, ARM::Q1, ARM::D2_D4, ARM::Q0_Q1, ARM::Q1_Q2, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::D0_D1_D2, ARM::D1_D2_D3, ARM::D2_D3_D4, ARM::D0_D2_D4, ARM::D2_D4_D6, ARM::D0_D2_D4_D6, ARM::D2_D4_D6_D8, ARM::D1_D2, ARM::D1_D2_D3_D4, ARM::D0, ARM::S0, ARM::S1, ARM::D2, ARM::S4, ARM::S5, 0,
  /* 4615 */ ARM::D0_D1_D2, ARM::Q0, ARM::Q1, ARM::D0_D2, ARM::D1_D3, ARM::D2_D4, ARM::Q0_Q1, ARM::Q1_Q2, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::D1_D2_D3, ARM::D2_D3_D4, ARM::D0_D2_D4, ARM::D1_D3_D5, ARM::D2_D4_D6, ARM::D0_D2_D4_D6, ARM::D1_D3_D5_D7, ARM::D2_D4_D6_D8, ARM::D1_D2, ARM::D1_D2_D3_D4, ARM::D0, ARM::S0, ARM::S1, ARM::D1, ARM::S2, ARM::S3, ARM::D2, ARM::S4, ARM::S5, 0,
  /* 4645 */ ARM::D1_D2, ARM::Q0, ARM::Q1, ARM::D0_D2, ARM::D1_D3, ARM::D2_D4, ARM::Q0_Q1, ARM::Q1_Q2, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::D0_D1_D2, ARM::D1_D2_D3, ARM::D2_D3_D4, ARM::D0_D2_D4, ARM::D1_D3_D5, ARM::D2_D4_D6, ARM::D0_D2_D4_D6, ARM::D1_D3_D5_D7, ARM::D2_D4_D6_D8, ARM::D1_D2_D3_D4, ARM::D1, ARM::S2, ARM::S3, ARM::D2, ARM::S4, ARM::S5, 0,
  /* 4672 */ ARM::D1_D3, ARM::Q0, ARM::Q1, ARM::D3_D5, ARM::Q0_Q1, ARM::Q1_Q2, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::D0_D1_D2, ARM::D1_D2_D3, ARM::D2_D3_D4, ARM::D3_D4_D5, ARM::D1_D3_D5, ARM::D3_D5_D7, ARM::D1_D3_D5_D7, ARM::D3_D5_D7_D9, ARM::D1_D2, ARM::D3_D4, ARM::D1_D2_D3_D4, ARM::D3_D4_D5_D6, ARM::D1, ARM::S2, ARM::S3, ARM::D3, ARM::S6, ARM::S7, 0,
  /* 4699 */ ARM::Q0_Q1, ARM::D0_D2, ARM::D1_D3, ARM::D2_D4, ARM::D3_D5, ARM::Q1_Q2, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::D0_D1_D2, ARM::D1_D2_D3, ARM::D2_D3_D4, ARM::D3_D4_D5, ARM::D0_D2_D4, ARM::D1_D3_D5, ARM::D2_D4_D6, ARM::D3_D5_D7, ARM::D0_D2_D4_D6, ARM::D1_D3_D5_D7, ARM::D2_D4_D6_D8, ARM::D3_D5_D7_D9, ARM::D1_D2, ARM::D3_D4, ARM::D1_D2_D3_D4, ARM::D3_D4_D5_D6, ARM::Q0, ARM::D0, ARM::S0, ARM::S1, ARM::D1, ARM::S2, ARM::S3, ARM::Q1, ARM::D2, ARM::S4, ARM::S5, ARM::D3, ARM::S6, ARM::S7, 0,
  /* 4738 */ ARM::D1_D2_D3, ARM::Q0, ARM::Q1, ARM::D0_D2, ARM::D1_D3, ARM::D2_D4, ARM::D3_D5, ARM::Q0_Q1, ARM::Q1_Q2, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::D0_D1_D2, ARM::D2_D3_D4, ARM::D3_D4_D5, ARM::D0_D2_D4, ARM::D1_D3_D5, ARM::D2_D4_D6, ARM::D3_D5_D7, ARM::D0_D2_D4_D6, ARM::D1_D3_D5_D7, ARM::D2_D4_D6_D8, ARM::D3_D5_D7_D9, ARM::D1_D2, ARM::D3_D4, ARM::D1_D2_D3_D4, ARM::D3_D4_D5_D6, ARM::D1, ARM::S2, ARM::S3, ARM::D2, ARM::S4, ARM::S5, ARM::D3, ARM::S6, ARM::S7, 0,
  /* 4774 */ ARM::Q1, ARM::D0_D2, ARM::D1_D3, ARM::D2_D4, ARM::D3_D5, ARM::Q0_Q1, ARM::Q1_Q2, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::D0_D1_D2, ARM::D1_D2_D3, ARM::D2_D3_D4, ARM::D3_D4_D5, ARM::D0_D2_D4, ARM::D1_D3_D5, ARM::D2_D4_D6, ARM::D3_D5_D7, ARM::D0_D2_D4_D6, ARM::D1_D3_D5_D7, ARM::D2_D4_D6_D8, ARM::D3_D5_D7_D9, ARM::D1_D2, ARM::D3_D4, ARM::D1_D2_D3_D4, ARM::D3_D4_D5_D6, ARM::D2, ARM::S4, ARM::S5, ARM::D3, ARM::S6, ARM::S7, 0,
  /* 4806 */ ARM::D0_D2_D4, ARM::Q0, ARM::Q1, ARM::Q2, ARM::D0_D2, ARM::D2_D4, ARM::D4_D6, ARM::Q0_Q1, ARM::Q1_Q2, ARM::Q2_Q3, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::D0_D1_D2, ARM::D1_D2_D3, ARM::D2_D3_D4, ARM::D3_D4_D5, ARM::D4_D5_D6, ARM::D2_D4_D6, ARM::D4_D6_D8, ARM::D0_D2_D4_D6, ARM::D2_D4_D6_D8, ARM::D4_D6_D8_D10, ARM::D1_D2, ARM::D3_D4, ARM::D1_D2_D3_D4, ARM::D3_D4_D5_D6, ARM::D0, ARM::S0, ARM::S1, ARM::D2, ARM::S4, ARM::S5, ARM::D4, ARM::S8, ARM::S9, 0,
  /* 4843 */ ARM::D2_D4, ARM::Q1, ARM::Q2, ARM::D0_D2, ARM::D4_D6, ARM::Q0_Q1, ARM::Q1_Q2, ARM::Q2_Q3, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::D0_D1_D2, ARM::D1_D2_D3, ARM::D2_D3_D4, ARM::D3_D4_D5, ARM::D4_D5_D6, ARM::D0_D2_D4, ARM::D2_D4_D6, ARM::D4_D6_D8, ARM::D0_D2_D4_D6, ARM::D2_D4_D6_D8, ARM::D4_D6_D8_D10, ARM::D1_D2, ARM::D3_D4, ARM::D1_D2_D3_D4, ARM::D3_D4_D5_D6, ARM::D2, ARM::S4, ARM::S5, ARM::D4, ARM::S8, ARM::S9, 0,
  /* 4876 */ ARM::D1_D2_D3_D4, ARM::Q0, ARM::Q1, ARM::Q2, ARM::D0_D2, ARM::D1_D3, ARM::D2_D4, ARM::D3_D5, ARM::D4_D6, ARM::Q0_Q1, ARM::Q1_Q2, ARM::Q2_Q3, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::D0_D1_D2, ARM::D1_D2_D3, ARM::D2_D3_D4, ARM::D3_D4_D5, ARM::D4_D5_D6, ARM::D0_D2_D4, ARM::D1_D3_D5, ARM::D2_D4_D6, ARM::D3_D5_D7, ARM::D4_D6_D8, ARM::D0_D2_D4_D6, ARM::D1_D3_D5_D7, ARM::D2_D4_D6_D8, ARM::D3_D5_D7_D9, ARM::D4_D6_D8_D10, ARM::D1_D2, ARM::D3_D4, ARM::D3_D4_D5_D6, ARM::D1, ARM::S2, ARM::S3, ARM::D2, ARM::S4, ARM::S5, ARM::D3, ARM::S6, ARM::S7, ARM::D4, ARM::S8, ARM::S9, 0,
  /* 4922 */ ARM::D2_D3_D4, ARM::Q1, ARM::Q2, ARM::D0_D2, ARM::D1_D3, ARM::D2_D4, ARM::D3_D5, ARM::D4_D6, ARM::Q0_Q1, ARM::Q1_Q2, ARM::Q2_Q3, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::D0_D1_D2, ARM::D1_D2_D3, ARM::D3_D4_D5, ARM::D4_D5_D6, ARM::D0_D2_D4, ARM::D1_D3_D5, ARM::D2_D4_D6, ARM::D3_D5_D7, ARM::D4_D6_D8, ARM::D0_D2_D4_D6, ARM::D1_D3_D5_D7, ARM::D2_D4_D6_D8, ARM::D3_D5_D7_D9, ARM::D4_D6_D8_D10, ARM::D1_D2, ARM::D3_D4, ARM::D1_D2_D3_D4, ARM::D3_D4_D5_D6, ARM::D2, ARM::S4, ARM::S5, ARM::D3, ARM::S6, ARM::S7, ARM::D4, ARM::S8, ARM::S9, 0,
  /* 4964 */ ARM::D3_D4, ARM::Q1, ARM::Q2, ARM::D1_D3, ARM::D2_D4, ARM::D3_D5, ARM::D4_D6, ARM::Q0_Q1, ARM::Q1_Q2, ARM::Q2_Q3, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::D1_D2_D3, ARM::D2_D3_D4, ARM::D3_D4_D5, ARM::D4_D5_D6, ARM::D0_D2_D4, ARM::D1_D3_D5, ARM::D2_D4_D6, ARM::D3_D5_D7, ARM::D4_D6_D8, ARM::D0_D2_D4_D6, ARM::D1_D3_D5_D7, ARM::D2_D4_D6_D8, ARM::D3_D5_D7_D9, ARM::D4_D6_D8_D10, ARM::D1_D2_D3_D4, ARM::D3_D4_D5_D6, ARM::D3, ARM::S6, ARM::S7, ARM::D4, ARM::S8, ARM::S9, 0,
  /* 5000 */ ARM::D1_D3_D5, ARM::Q0, ARM::Q1, ARM::Q2, ARM::D1_D3, ARM::D3_D5, ARM::D5_D7, ARM::Q0_Q1, ARM::Q1_Q2, ARM::Q2_Q3, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::D0_D1_D2, ARM::D1_D2_D3, ARM::D2_D3_D4, ARM::D3_D4_D5, ARM::D4_D5_D6, ARM::D5_D6_D7, ARM::D3_D5_D7, ARM::D5_D7_D9, ARM::D1_D3_D5_D7, ARM::D3_D5_D7_D9, ARM::D5_D7_D9_D11, ARM::D1_D2, ARM::D3_D4, ARM::D5_D6, ARM::D1_D2_D3_D4, ARM::D3_D4_D5_D6, ARM::D5_D6_D7_D8, ARM::D1, ARM::S2, ARM::S3, ARM::D3, ARM::S6, ARM::S7, ARM::D5, ARM::S10, ARM::S11, 0,
  /* 5040 */ ARM::D3_D5, ARM::Q1, ARM::Q2, ARM::D1_D3, ARM::D5_D7, ARM::Q0_Q1, ARM::Q1_Q2, ARM::Q2_Q3, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::D1_D2_D3, ARM::D2_D3_D4, ARM::D3_D4_D5, ARM::D4_D5_D6, ARM::D5_D6_D7, ARM::D1_D3_D5, ARM::D3_D5_D7, ARM::D5_D7_D9, ARM::D1_D3_D5_D7, ARM::D3_D5_D7_D9, ARM::D5_D7_D9_D11, ARM::D3_D4, ARM::D5_D6, ARM::D1_D2_D3_D4, ARM::D3_D4_D5_D6, ARM::D5_D6_D7_D8, ARM::D3, ARM::S6, ARM::S7, ARM::D5, ARM::S10, ARM::S11, 0,
  /* 5074 */ ARM::Q1_Q2, ARM::D0_D2, ARM::D1_D3, ARM::D2_D4, ARM::D3_D5, ARM::D4_D6, ARM::D5_D7, ARM::Q0_Q1, ARM::Q2_Q3, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::D0_D1_D2, ARM::D1_D2_D3, ARM::D2_D3_D4, ARM::D3_D4_D5, ARM::D4_D5_D6, ARM::D5_D6_D7, ARM::D0_D2_D4, ARM::D1_D3_D5, ARM::D2_D4_D6, ARM::D3_D5_D7, ARM::D4_D6_D8, ARM::D5_D7_D9, ARM::D0_D2_D4_D6, ARM::D1_D3_D5_D7, ARM::D2_D4_D6_D8, ARM::D3_D5_D7_D9, ARM::D4_D6_D8_D10, ARM::D5_D7_D9_D11, ARM::D1_D2, ARM::D3_D4, ARM::D5_D6, ARM::D1_D2_D3_D4, ARM::D3_D4_D5_D6, ARM::D5_D6_D7_D8, ARM::Q1, ARM::D2, ARM::S4, ARM::S5, ARM::D3, ARM::S6, ARM::S7, ARM::Q2, ARM::D4, ARM::S8, ARM::S9, ARM::D5, ARM::S10, ARM::S11, 0,
  /* 5125 */ ARM::D3_D4_D5, ARM::Q1, ARM::Q2, ARM::D1_D3, ARM::D2_D4, ARM::D3_D5, ARM::D4_D6, ARM::D5_D7, ARM::Q0_Q1, ARM::Q1_Q2, ARM::Q2_Q3, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::D1_D2_D3, ARM::D2_D3_D4, ARM::D4_D5_D6, ARM::D5_D6_D7, ARM::D0_D2_D4, ARM::D1_D3_D5, ARM::D2_D4_D6, ARM::D3_D5_D7, ARM::D4_D6_D8, ARM::D5_D7_D9, ARM::D0_D2_D4_D6, ARM::D1_D3_D5_D7, ARM::D2_D4_D6_D8, ARM::D3_D5_D7_D9, ARM::D4_D6_D8_D10, ARM::D5_D7_D9_D11, ARM::D3_D4, ARM::D5_D6, ARM::D1_D2_D3_D4, ARM::D3_D4_D5_D6, ARM::D5_D6_D7_D8, ARM::D3, ARM::S6, ARM::S7, ARM::D4, ARM::S8, ARM::S9, ARM::D5, ARM::S10, ARM::S11, 0,
  /* 5170 */ ARM::Q2, ARM::D2_D4, ARM::D3_D5, ARM::D4_D6, ARM::D5_D7, ARM::Q1_Q2, ARM::Q2_Q3, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::D2_D3_D4, ARM::D3_D4_D5, ARM::D4_D5_D6, ARM::D5_D6_D7, ARM::D0_D2_D4, ARM::D1_D3_D5, ARM::D2_D4_D6, ARM::D3_D5_D7, ARM::D4_D6_D8, ARM::D5_D7_D9, ARM::D0_D2_D4_D6, ARM::D1_D3_D5_D7, ARM::D2_D4_D6_D8, ARM::D3_D5_D7_D9, ARM::D4_D6_D8_D10, ARM::D5_D7_D9_D11, ARM::D3_D4, ARM::D5_D6, ARM::D1_D2_D3_D4, ARM::D3_D4_D5_D6, ARM::D5_D6_D7_D8, ARM::D4, ARM::S8, ARM::S9, ARM::D5, ARM::S10, ARM::S11, 0,
  /* 5208 */ ARM::D0_D2_D4_D6, ARM::Q0, ARM::Q1, ARM::Q2, ARM::Q3, ARM::D0_D2, ARM::D2_D4, ARM::D4_D6, ARM::D6_D8, ARM::Q0_Q1, ARM::Q1_Q2, ARM::Q2_Q3, ARM::Q3_Q4, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::D0_D1_D2, ARM::D1_D2_D3, ARM::D2_D3_D4, ARM::D3_D4_D5, ARM::D4_D5_D6, ARM::D5_D6_D7, ARM::D6_D7_D8, ARM::D0_D2_D4, ARM::D2_D4_D6, ARM::D4_D6_D8, ARM::D6_D8_D10, ARM::D2_D4_D6_D8, ARM::D4_D6_D8_D10, ARM::D6_D8_D10_D12, ARM::D1_D2, ARM::D3_D4, ARM::D5_D6, ARM::D1_D2_D3_D4, ARM::D3_D4_D5_D6, ARM::D5_D6_D7_D8, ARM::D0, ARM::S0, ARM::S1, ARM::D2, ARM::S4, ARM::S5, ARM::D4, ARM::S8, ARM::S9, ARM::D6, ARM::S12, ARM::S13, 0,
  /* 5258 */ ARM::D2_D4_D6, ARM::Q1, ARM::Q2, ARM::Q3, ARM::D0_D2, ARM::D2_D4, ARM::D4_D6, ARM::D6_D8, ARM::Q0_Q1, ARM::Q1_Q2, ARM::Q2_Q3, ARM::Q3_Q4, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::D0_D1_D2, ARM::D1_D2_D3, ARM::D2_D3_D4, ARM::D3_D4_D5, ARM::D4_D5_D6, ARM::D5_D6_D7, ARM::D6_D7_D8, ARM::D0_D2_D4, ARM::D4_D6_D8, ARM::D6_D8_D10, ARM::D0_D2_D4_D6, ARM::D2_D4_D6_D8, ARM::D4_D6_D8_D10, ARM::D6_D8_D10_D12, ARM::D1_D2, ARM::D3_D4, ARM::D5_D6, ARM::D1_D2_D3_D4, ARM::D3_D4_D5_D6, ARM::D5_D6_D7_D8, ARM::D2, ARM::S4, ARM::S5, ARM::D4, ARM::S8, ARM::S9, ARM::D6, ARM::S12, ARM::S13, 0,
  /* 5304 */ ARM::D4_D6, ARM::Q2, ARM::Q3, ARM::D2_D4, ARM::D6_D8, ARM::Q1_Q2, ARM::Q2_Q3, ARM::Q3_Q4, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::D2_D3_D4, ARM::D3_D4_D5, ARM::D4_D5_D6, ARM::D5_D6_D7, ARM::D6_D7_D8, ARM::D0_D2_D4, ARM::D2_D4_D6, ARM::D4_D6_D8, ARM::D6_D8_D10, ARM::D0_D2_D4_D6, ARM::D2_D4_D6_D8, ARM::D4_D6_D8_D10, ARM::D6_D8_D10_D12, ARM::D3_D4, ARM::D5_D6, ARM::D1_D2_D3_D4, ARM::D3_D4_D5_D6, ARM::D5_D6_D7_D8, ARM::D4, ARM::S8, ARM::S9, ARM::D6, ARM::S12, ARM::S13, 0,
  /* 5341 */ ARM::D3_D4_D5_D6, ARM::Q1, ARM::Q2, ARM::Q3, ARM::D1_D3, ARM::D2_D4, ARM::D3_D5, ARM::D4_D6, ARM::D5_D7, ARM::D6_D8, ARM::Q0_Q1, ARM::Q1_Q2, ARM::Q2_Q3, ARM::Q3_Q4, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::D1_D2_D3, ARM::D2_D3_D4, ARM::D3_D4_D5, ARM::D4_D5_D6, ARM::D5_D6_D7, ARM::D6_D7_D8, ARM::D0_D2_D4, ARM::D1_D3_D5, ARM::D2_D4_D6, ARM::D3_D5_D7, ARM::D4_D6_D8, ARM::D5_D7_D9, ARM::D6_D8_D10, ARM::D0_D2_D4_D6, ARM::D1_D3_D5_D7, ARM::D2_D4_D6_D8, ARM::D3_D5_D7_D9, ARM::D4_D6_D8_D10, ARM::D5_D7_D9_D11, ARM::D6_D8_D10_D12, ARM::D3_D4, ARM::D5_D6, ARM::D1_D2_D3_D4, ARM::D5_D6_D7_D8, ARM::D3, ARM::S6, ARM::S7, ARM::D4, ARM::S8, ARM::S9, ARM::D5, ARM::S10, ARM::S11, ARM::D6, ARM::S12, ARM::S13, 0,
  /* 5396 */ ARM::D4_D5_D6, ARM::Q2, ARM::Q3, ARM::D2_D4, ARM::D3_D5, ARM::D4_D6, ARM::D5_D7, ARM::D6_D8, ARM::Q1_Q2, ARM::Q2_Q3, ARM::Q3_Q4, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::D2_D3_D4, ARM::D3_D4_D5, ARM::D5_D6_D7, ARM::D6_D7_D8, ARM::D0_D2_D4, ARM::D1_D3_D5, ARM::D2_D4_D6, ARM::D3_D5_D7, ARM::D4_D6_D8, ARM::D5_D7_D9, ARM::D6_D8_D10, ARM::D0_D2_D4_D6, ARM::D1_D3_D5_D7, ARM::D2_D4_D6_D8, ARM::D3_D5_D7_D9, ARM::D4_D6_D8_D10, ARM::D5_D7_D9_D11, ARM::D6_D8_D10_D12, ARM::D3_D4, ARM::D5_D6, ARM::D1_D2_D3_D4, ARM::D3_D4_D5_D6, ARM::D5_D6_D7_D8, ARM::D4, ARM::S8, ARM::S9, ARM::D5, ARM::S10, ARM::S11, ARM::D6, ARM::S12, ARM::S13, 0,
  /* 5444 */ ARM::D5_D6, ARM::Q2, ARM::Q3, ARM::D3_D5, ARM::D4_D6, ARM::D5_D7, ARM::D6_D8, ARM::Q1_Q2, ARM::Q2_Q3, ARM::Q3_Q4, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::D3_D4_D5, ARM::D4_D5_D6, ARM::D5_D6_D7, ARM::D6_D7_D8, ARM::D1_D3_D5, ARM::D2_D4_D6, ARM::D3_D5_D7, ARM::D4_D6_D8, ARM::D5_D7_D9, ARM::D6_D8_D10, ARM::D0_D2_D4_D6, ARM::D1_D3_D5_D7, ARM::D2_D4_D6_D8, ARM::D3_D5_D7_D9, ARM::D4_D6_D8_D10, ARM::D5_D7_D9_D11, ARM::D6_D8_D10_D12, ARM::D3_D4_D5_D6, ARM::D5_D6_D7_D8, ARM::D5, ARM::S10, ARM::S11, ARM::D6, ARM::S12, ARM::S13, 0,
  /* 5484 */ ARM::D1_D3_D5_D7, ARM::Q0, ARM::Q1, ARM::Q2, ARM::Q3, ARM::D1_D3, ARM::D3_D5, ARM::D5_D7, ARM::D7_D9, ARM::Q0_Q1, ARM::Q1_Q2, ARM::Q2_Q3, ARM::Q3_Q4, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::D0_D1_D2, ARM::D1_D2_D3, ARM::D2_D3_D4, ARM::D3_D4_D5, ARM::D4_D5_D6, ARM::D5_D6_D7, ARM::D6_D7_D8, ARM::D7_D8_D9, ARM::D1_D3_D5, ARM::D3_D5_D7, ARM::D5_D7_D9, ARM::D7_D9_D11, ARM::D3_D5_D7_D9, ARM::D5_D7_D9_D11, ARM::D7_D9_D11_D13, ARM::D1_D2, ARM::D3_D4, ARM::D5_D6, ARM::D7_D8, ARM::D1_D2_D3_D4, ARM::D3_D4_D5_D6, ARM::D5_D6_D7_D8, ARM::D7_D8_D9_D10, ARM::D1, ARM::S2, ARM::S3, ARM::D3, ARM::S6, ARM::S7, ARM::D5, ARM::S10, ARM::S11, ARM::D7, ARM::S14, ARM::S15, 0,
  /* 5537 */ ARM::D3_D5_D7, ARM::Q1, ARM::Q2, ARM::Q3, ARM::D1_D3, ARM::D3_D5, ARM::D5_D7, ARM::D7_D9, ARM::Q0_Q1, ARM::Q1_Q2, ARM::Q2_Q3, ARM::Q3_Q4, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::D1_D2_D3, ARM::D2_D3_D4, ARM::D3_D4_D5, ARM::D4_D5_D6, ARM::D5_D6_D7, ARM::D6_D7_D8, ARM::D7_D8_D9, ARM::D1_D3_D5, ARM::D5_D7_D9, ARM::D7_D9_D11, ARM::D1_D3_D5_D7, ARM::D3_D5_D7_D9, ARM::D5_D7_D9_D11, ARM::D7_D9_D11_D13, ARM::D3_D4, ARM::D5_D6, ARM::D7_D8, ARM::D1_D2_D3_D4, ARM::D3_D4_D5_D6, ARM::D5_D6_D7_D8, ARM::D7_D8_D9_D10, ARM::D3, ARM::S6, ARM::S7, ARM::D5, ARM::S10, ARM::S11, ARM::D7, ARM::S14, ARM::S15, 0,
  /* 5584 */ ARM::D5_D7, ARM::Q2, ARM::Q3, ARM::D3_D5, ARM::D7_D9, ARM::Q1_Q2, ARM::Q2_Q3, ARM::Q3_Q4, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::D3_D4_D5, ARM::D4_D5_D6, ARM::D5_D6_D7, ARM::D6_D7_D8, ARM::D7_D8_D9, ARM::D1_D3_D5, ARM::D3_D5_D7, ARM::D5_D7_D9, ARM::D7_D9_D11, ARM::D1_D3_D5_D7, ARM::D3_D5_D7_D9, ARM::D5_D7_D9_D11, ARM::D7_D9_D11_D13, ARM::D5_D6, ARM::D7_D8, ARM::D3_D4_D5_D6, ARM::D5_D6_D7_D8, ARM::D7_D8_D9_D10, ARM::D5, ARM::S10, ARM::S11, ARM::D7, ARM::S14, ARM::S15, 0,
  /* 5621 */ ARM::Q0_Q1_Q2_Q3, ARM::D0_D2, ARM::D1_D3, ARM::D2_D4, ARM::D3_D5, ARM::D4_D6, ARM::D5_D7, ARM::D6_D8, ARM::D7_D9, ARM::Q1_Q2, ARM::Q3_Q4, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::D0_D1_D2, ARM::D1_D2_D3, ARM::D2_D3_D4, ARM::D3_D4_D5, ARM::D4_D5_D6, ARM::D5_D6_D7, ARM::D6_D7_D8, ARM::D7_D8_D9, ARM::D0_D2_D4, ARM::D1_D3_D5, ARM::D2_D4_D6, ARM::D3_D5_D7, ARM::D4_D6_D8, ARM::D5_D7_D9, ARM::D6_D8_D10, ARM::D7_D9_D11, ARM::D0_D2_D4_D6, ARM::D1_D3_D5_D7, ARM::D2_D4_D6_D8, ARM::D3_D5_D7_D9, ARM::D4_D6_D8_D10, ARM::D5_D7_D9_D11, ARM::D6_D8_D10_D12, ARM::D7_D9_D11_D13, ARM::D1_D2, ARM::D3_D4, ARM::D5_D6, ARM::D7_D8, ARM::D1_D2_D3_D4, ARM::D3_D4_D5_D6, ARM::D5_D6_D7_D8, ARM::D7_D8_D9_D10, ARM::Q0_Q1, ARM::Q0, ARM::D0, ARM::S0, ARM::S1, ARM::D1, ARM::S2, ARM::S3, ARM::Q1, ARM::D2, ARM::S4, ARM::S5, ARM::D3, ARM::S6, ARM::S7, ARM::Q2_Q3, ARM::Q2, ARM::D4, ARM::S8, ARM::S9, ARM::D5, ARM::S10, ARM::S11, ARM::Q3, ARM::D6, ARM::S12, ARM::S13, ARM::D7, ARM::S14, ARM::S15, 0,
  /* 5698 */ ARM::Q2_Q3, ARM::D2_D4, ARM::D3_D5, ARM::D4_D6, ARM::D5_D7, ARM::D6_D8, ARM::D7_D9, ARM::Q1_Q2, ARM::Q3_Q4, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::D2_D3_D4, ARM::D3_D4_D5, ARM::D4_D5_D6, ARM::D5_D6_D7, ARM::D6_D7_D8, ARM::D7_D8_D9, ARM::D0_D2_D4, ARM::D1_D3_D5, ARM::D2_D4_D6, ARM::D3_D5_D7, ARM::D4_D6_D8, ARM::D5_D7_D9, ARM::D6_D8_D10, ARM::D7_D9_D11, ARM::D0_D2_D4_D6, ARM::D1_D3_D5_D7, ARM::D2_D4_D6_D8, ARM::D3_D5_D7_D9, ARM::D4_D6_D8_D10, ARM::D5_D7_D9_D11, ARM::D6_D8_D10_D12, ARM::D7_D9_D11_D13, ARM::D3_D4, ARM::D5_D6, ARM::D7_D8, ARM::D1_D2_D3_D4, ARM::D3_D4_D5_D6, ARM::D5_D6_D7_D8, ARM::D7_D8_D9_D10, ARM::Q2, ARM::D4, ARM::S8, ARM::S9, ARM::D5, ARM::S10, ARM::S11, ARM::Q3, ARM::D6, ARM::S12, ARM::S13, ARM::D7, ARM::S14, ARM::S15, 0,
  /* 5755 */ ARM::D5_D6_D7, ARM::Q2, ARM::Q3, ARM::D3_D5, ARM::D4_D6, ARM::D5_D7, ARM::D6_D8, ARM::D7_D9, ARM::Q1_Q2, ARM::Q2_Q3, ARM::Q3_Q4, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::D3_D4_D5, ARM::D4_D5_D6, ARM::D6_D7_D8, ARM::D7_D8_D9, ARM::D1_D3_D5, ARM::D2_D4_D6, ARM::D3_D5_D7, ARM::D4_D6_D8, ARM::D5_D7_D9, ARM::D6_D8_D10, ARM::D7_D9_D11, ARM::D0_D2_D4_D6, ARM::D1_D3_D5_D7, ARM::D2_D4_D6_D8, ARM::D3_D5_D7_D9, ARM::D4_D6_D8_D10, ARM::D5_D7_D9_D11, ARM::D6_D8_D10_D12, ARM::D7_D9_D11_D13, ARM::D5_D6, ARM::D7_D8, ARM::D3_D4_D5_D6, ARM::D5_D6_D7_D8, ARM::D7_D8_D9_D10, ARM::D5, ARM::S10, ARM::S11, ARM::D6, ARM::S12, ARM::S13, ARM::D7, ARM::S14, ARM::S15, 0,
  /* 5804 */ ARM::D2_D4_D6_D8, ARM::Q1, ARM::Q2, ARM::Q3, ARM::Q4, ARM::D0_D2, ARM::D2_D4, ARM::D4_D6, ARM::D6_D8, ARM::D8_D10, ARM::Q0_Q1, ARM::Q1_Q2, ARM::Q2_Q3, ARM::Q3_Q4, ARM::Q4_Q5, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::D0_D1_D2, ARM::D1_D2_D3, ARM::D2_D3_D4, ARM::D3_D4_D5, ARM::D4_D5_D6, ARM::D5_D6_D7, ARM::D6_D7_D8, ARM::D7_D8_D9, ARM::D8_D9_D10, ARM::D0_D2_D4, ARM::D2_D4_D6, ARM::D4_D6_D8, ARM::D6_D8_D10, ARM::D8_D10_D12, ARM::D0_D2_D4_D6, ARM::D4_D6_D8_D10, ARM::D6_D8_D10_D12, ARM::D8_D10_D12_D14, ARM::D1_D2, ARM::D3_D4, ARM::D5_D6, ARM::D7_D8, ARM::D1_D2_D3_D4, ARM::D3_D4_D5_D6, ARM::D5_D6_D7_D8, ARM::D7_D8_D9_D10, ARM::D2, ARM::S4, ARM::S5, ARM::D4, ARM::S8, ARM::S9, ARM::D6, ARM::S12, ARM::S13, ARM::D8, ARM::S16, ARM::S17, 0,
  /* 5863 */ ARM::D4_D6_D8, ARM::Q2, ARM::Q3, ARM::Q4, ARM::D2_D4, ARM::D4_D6, ARM::D6_D8, ARM::D8_D10, ARM::Q1_Q2, ARM::Q2_Q3, ARM::Q3_Q4, ARM::Q4_Q5, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::D2_D3_D4, ARM::D3_D4_D5, ARM::D4_D5_D6, ARM::D5_D6_D7, ARM::D6_D7_D8, ARM::D7_D8_D9, ARM::D8_D9_D10, ARM::D0_D2_D4, ARM::D2_D4_D6, ARM::D6_D8_D10, ARM::D8_D10_D12, ARM::D0_D2_D4_D6, ARM::D2_D4_D6_D8, ARM::D4_D6_D8_D10, ARM::D6_D8_D10_D12, ARM::D8_D10_D12_D14, ARM::D3_D4, ARM::D5_D6, ARM::D7_D8, ARM::D1_D2_D3_D4, ARM::D3_D4_D5_D6, ARM::D5_D6_D7_D8, ARM::D7_D8_D9_D10, ARM::D4, ARM::S8, ARM::S9, ARM::D6, ARM::S12, ARM::S13, ARM::D8, ARM::S16, ARM::S17, 0,
  /* 5913 */ ARM::D6_D8, ARM::Q3, ARM::Q4, ARM::D4_D6, ARM::D8_D10, ARM::Q2_Q3, ARM::Q3_Q4, ARM::Q4_Q5, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::D4_D5_D6, ARM::D5_D6_D7, ARM::D6_D7_D8, ARM::D7_D8_D9, ARM::D8_D9_D10, ARM::D2_D4_D6, ARM::D4_D6_D8, ARM::D6_D8_D10, ARM::D8_D10_D12, ARM::D0_D2_D4_D6, ARM::D2_D4_D6_D8, ARM::D4_D6_D8_D10, ARM::D6_D8_D10_D12, ARM::D8_D10_D12_D14, ARM::D5_D6, ARM::D7_D8, ARM::D3_D4_D5_D6, ARM::D5_D6_D7_D8, ARM::D7_D8_D9_D10, ARM::D6, ARM::S12, ARM::S13, ARM::D8, ARM::S16, ARM::S17, 0,
  /* 5952 */ ARM::D5_D6_D7_D8, ARM::Q2, ARM::Q3, ARM::Q4, ARM::D3_D5, ARM::D4_D6, ARM::D5_D7, ARM::D6_D8, ARM::D7_D9, ARM::D8_D10, ARM::Q1_Q2, ARM::Q2_Q3, ARM::Q3_Q4, ARM::Q4_Q5, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::D3_D4_D5, ARM::D4_D5_D6, ARM::D5_D6_D7, ARM::D6_D7_D8, ARM::D7_D8_D9, ARM::D8_D9_D10, ARM::D1_D3_D5, ARM::D2_D4_D6, ARM::D3_D5_D7, ARM::D4_D6_D8, ARM::D5_D7_D9, ARM::D6_D8_D10, ARM::D7_D9_D11, ARM::D8_D10_D12, ARM::D0_D2_D4_D6, ARM::D1_D3_D5_D7, ARM::D2_D4_D6_D8, ARM::D3_D5_D7_D9, ARM::D4_D6_D8_D10, ARM::D5_D7_D9_D11, ARM::D6_D8_D10_D12, ARM::D7_D9_D11_D13, ARM::D8_D10_D12_D14, ARM::D5_D6, ARM::D7_D8, ARM::D3_D4_D5_D6, ARM::D7_D8_D9_D10, ARM::D5, ARM::S10, ARM::S11, ARM::D6, ARM::S12, ARM::S13, ARM::D7, ARM::S14, ARM::S15, ARM::D8, ARM::S16, ARM::S17, 0,
  /* 6011 */ ARM::D6_D7_D8, ARM::Q3, ARM::Q4, ARM::D4_D6, ARM::D5_D7, ARM::D6_D8, ARM::D7_D9, ARM::D8_D10, ARM::Q2_Q3, ARM::Q3_Q4, ARM::Q4_Q5, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::D4_D5_D6, ARM::D5_D6_D7, ARM::D7_D8_D9, ARM::D8_D9_D10, ARM::D2_D4_D6, ARM::D3_D5_D7, ARM::D4_D6_D8, ARM::D5_D7_D9, ARM::D6_D8_D10, ARM::D7_D9_D11, ARM::D8_D10_D12, ARM::D0_D2_D4_D6, ARM::D1_D3_D5_D7, ARM::D2_D4_D6_D8, ARM::D3_D5_D7_D9, ARM::D4_D6_D8_D10, ARM::D5_D7_D9_D11, ARM::D6_D8_D10_D12, ARM::D7_D9_D11_D13, ARM::D8_D10_D12_D14, ARM::D5_D6, ARM::D7_D8, ARM::D3_D4_D5_D6, ARM::D5_D6_D7_D8, ARM::D7_D8_D9_D10, ARM::D6, ARM::S12, ARM::S13, ARM::D7, ARM::S14, ARM::S15, ARM::D8, ARM::S16, ARM::S17, 0,
  /* 6062 */ ARM::D7_D8, ARM::Q3, ARM::Q4, ARM::D5_D7, ARM::D6_D8, ARM::D7_D9, ARM::D8_D10, ARM::Q2_Q3, ARM::Q3_Q4, ARM::Q4_Q5, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::D5_D6_D7, ARM::D6_D7_D8, ARM::D7_D8_D9, ARM::D8_D9_D10, ARM::D3_D5_D7, ARM::D4_D6_D8, ARM::D5_D7_D9, ARM::D6_D8_D10, ARM::D7_D9_D11, ARM::D8_D10_D12, ARM::D1_D3_D5_D7, ARM::D2_D4_D6_D8, ARM::D3_D5_D7_D9, ARM::D4_D6_D8_D10, ARM::D5_D7_D9_D11, ARM::D6_D8_D10_D12, ARM::D7_D9_D11_D13, ARM::D8_D10_D12_D14, ARM::D5_D6_D7_D8, ARM::D7_D8_D9_D10, ARM::D7, ARM::S14, ARM::S15, ARM::D8, ARM::S16, ARM::S17, 0,
  /* 6104 */ ARM::D3_D5_D7_D9, ARM::Q1, ARM::Q2, ARM::Q3, ARM::Q4, ARM::D1_D3, ARM::D3_D5, ARM::D5_D7, ARM::D7_D9, ARM::D9_D11, ARM::Q0_Q1, ARM::Q1_Q2, ARM::Q2_Q3, ARM::Q3_Q4, ARM::Q4_Q5, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::D1_D2_D3, ARM::D2_D3_D4, ARM::D3_D4_D5, ARM::D4_D5_D6, ARM::D5_D6_D7, ARM::D6_D7_D8, ARM::D7_D8_D9, ARM::D8_D9_D10, ARM::D9_D10_D11, ARM::D1_D3_D5, ARM::D3_D5_D7, ARM::D5_D7_D9, ARM::D7_D9_D11, ARM::D9_D11_D13, ARM::D1_D3_D5_D7, ARM::D5_D7_D9_D11, ARM::D7_D9_D11_D13, ARM::D9_D11_D13_D15, ARM::D3_D4, ARM::D5_D6, ARM::D7_D8, ARM::D9_D10, ARM::D1_D2_D3_D4, ARM::D3_D4_D5_D6, ARM::D5_D6_D7_D8, ARM::D7_D8_D9_D10, ARM::D9_D10_D11_D12, ARM::D3, ARM::S6, ARM::S7, ARM::D5, ARM::S10, ARM::S11, ARM::D7, ARM::S14, ARM::S15, ARM::D9, ARM::S18, ARM::S19, 0,
  /* 6164 */ ARM::D5_D7_D9, ARM::Q2, ARM::Q3, ARM::Q4, ARM::D3_D5, ARM::D5_D7, ARM::D7_D9, ARM::D9_D11, ARM::Q1_Q2, ARM::Q2_Q3, ARM::Q3_Q4, ARM::Q4_Q5, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::D3_D4_D5, ARM::D4_D5_D6, ARM::D5_D6_D7, ARM::D6_D7_D8, ARM::D7_D8_D9, ARM::D8_D9_D10, ARM::D9_D10_D11, ARM::D1_D3_D5, ARM::D3_D5_D7, ARM::D7_D9_D11, ARM::D9_D11_D13, ARM::D1_D3_D5_D7, ARM::D3_D5_D7_D9, ARM::D5_D7_D9_D11, ARM::D7_D9_D11_D13, ARM::D9_D11_D13_D15, ARM::D5_D6, ARM::D7_D8, ARM::D9_D10, ARM::D3_D4_D5_D6, ARM::D5_D6_D7_D8, ARM::D7_D8_D9_D10, ARM::D9_D10_D11_D12, ARM::D5, ARM::S10, ARM::S11, ARM::D7, ARM::S14, ARM::S15, ARM::D9, ARM::S18, ARM::S19, 0,
  /* 6214 */ ARM::D7_D9, ARM::Q3, ARM::Q4, ARM::D5_D7, ARM::D9_D11, ARM::Q2_Q3, ARM::Q3_Q4, ARM::Q4_Q5, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::D5_D6_D7, ARM::D6_D7_D8, ARM::D7_D8_D9, ARM::D8_D9_D10, ARM::D9_D10_D11, ARM::D3_D5_D7, ARM::D5_D7_D9, ARM::D7_D9_D11, ARM::D9_D11_D13, ARM::D1_D3_D5_D7, ARM::D3_D5_D7_D9, ARM::D5_D7_D9_D11, ARM::D7_D9_D11_D13, ARM::D9_D11_D13_D15, ARM::D7_D8, ARM::D9_D10, ARM::D5_D6_D7_D8, ARM::D7_D8_D9_D10, ARM::D9_D10_D11_D12, ARM::D7, ARM::S14, ARM::S15, ARM::D9, ARM::S18, ARM::S19, 0,
  /* 6253 */ ARM::Q1_Q2_Q3_Q4, ARM::D0_D2, ARM::D1_D3, ARM::D2_D4, ARM::D3_D5, ARM::D4_D6, ARM::D5_D7, ARM::D6_D8, ARM::D7_D9, ARM::D8_D10, ARM::D9_D11, ARM::Q0_Q1, ARM::Q2_Q3, ARM::Q4_Q5, ARM::Q0_Q1_Q2_Q3, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::D0_D1_D2, ARM::D1_D2_D3, ARM::D2_D3_D4, ARM::D3_D4_D5, ARM::D4_D5_D6, ARM::D5_D6_D7, ARM::D6_D7_D8, ARM::D7_D8_D9, ARM::D8_D9_D10, ARM::D9_D10_D11, ARM::D0_D2_D4, ARM::D1_D3_D5, ARM::D2_D4_D6, ARM::D3_D5_D7, ARM::D4_D6_D8, ARM::D5_D7_D9, ARM::D6_D8_D10, ARM::D7_D9_D11, ARM::D8_D10_D12, ARM::D9_D11_D13, ARM::D0_D2_D4_D6, ARM::D1_D3_D5_D7, ARM::D2_D4_D6_D8, ARM::D3_D5_D7_D9, ARM::D4_D6_D8_D10, ARM::D5_D7_D9_D11, ARM::D6_D8_D10_D12, ARM::D7_D9_D11_D13, ARM::D8_D10_D12_D14, ARM::D9_D11_D13_D15, ARM::D1_D2, ARM::D3_D4, ARM::D5_D6, ARM::D7_D8, ARM::D9_D10, ARM::D1_D2_D3_D4, ARM::D3_D4_D5_D6, ARM::D5_D6_D7_D8, ARM::D7_D8_D9_D10, ARM::D9_D10_D11_D12, ARM::Q1_Q2, ARM::Q1, ARM::D2, ARM::S4, ARM::S5, ARM::D3, ARM::S6, ARM::S7, ARM::Q2, ARM::D4, ARM::S8, ARM::S9, ARM::D5, ARM::S10, ARM::S11, ARM::Q3_Q4, ARM::Q3, ARM::D6, ARM::S12, ARM::S13, ARM::D7, ARM::S14, ARM::S15, ARM::Q4, ARM::D8, ARM::S16, ARM::S17, ARM::D9, ARM::S18, ARM::S19, 0,
  /* 6342 */ ARM::Q3_Q4, ARM::D4_D6, ARM::D5_D7, ARM::D6_D8, ARM::D7_D9, ARM::D8_D10, ARM::D9_D11, ARM::Q2_Q3, ARM::Q4_Q5, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::D4_D5_D6, ARM::D5_D6_D7, ARM::D6_D7_D8, ARM::D7_D8_D9, ARM::D8_D9_D10, ARM::D9_D10_D11, ARM::D2_D4_D6, ARM::D3_D5_D7, ARM::D4_D6_D8, ARM::D5_D7_D9, ARM::D6_D8_D10, ARM::D7_D9_D11, ARM::D8_D10_D12, ARM::D9_D11_D13, ARM::D0_D2_D4_D6, ARM::D1_D3_D5_D7, ARM::D2_D4_D6_D8, ARM::D3_D5_D7_D9, ARM::D4_D6_D8_D10, ARM::D5_D7_D9_D11, ARM::D6_D8_D10_D12, ARM::D7_D9_D11_D13, ARM::D8_D10_D12_D14, ARM::D9_D11_D13_D15, ARM::D5_D6, ARM::D7_D8, ARM::D9_D10, ARM::D3_D4_D5_D6, ARM::D5_D6_D7_D8, ARM::D7_D8_D9_D10, ARM::D9_D10_D11_D12, ARM::Q3, ARM::D6, ARM::S12, ARM::S13, ARM::D7, ARM::S14, ARM::S15, ARM::Q4, ARM::D8, ARM::S16, ARM::S17, ARM::D9, ARM::S18, ARM::S19, 0,
  /* 6402 */ ARM::D7_D8_D9, ARM::Q3, ARM::Q4, ARM::D5_D7, ARM::D6_D8, ARM::D7_D9, ARM::D8_D10, ARM::D9_D11, ARM::Q2_Q3, ARM::Q3_Q4, ARM::Q4_Q5, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::D5_D6_D7, ARM::D6_D7_D8, ARM::D8_D9_D10, ARM::D9_D10_D11, ARM::D3_D5_D7, ARM::D4_D6_D8, ARM::D5_D7_D9, ARM::D6_D8_D10, ARM::D7_D9_D11, ARM::D8_D10_D12, ARM::D9_D11_D13, ARM::D1_D3_D5_D7, ARM::D2_D4_D6_D8, ARM::D3_D5_D7_D9, ARM::D4_D6_D8_D10, ARM::D5_D7_D9_D11, ARM::D6_D8_D10_D12, ARM::D7_D9_D11_D13, ARM::D8_D10_D12_D14, ARM::D9_D11_D13_D15, ARM::D7_D8, ARM::D9_D10, ARM::D5_D6_D7_D8, ARM::D7_D8_D9_D10, ARM::D9_D10_D11_D12, ARM::D7, ARM::S14, ARM::S15, ARM::D8, ARM::S16, ARM::S17, ARM::D9, ARM::S18, ARM::S19, 0,
  /* 6453 */ ARM::D4_D6_D8_D10, ARM::Q2, ARM::Q3, ARM::Q4, ARM::Q5, ARM::D2_D4, ARM::D4_D6, ARM::D6_D8, ARM::D8_D10, ARM::D10_D12, ARM::Q1_Q2, ARM::Q2_Q3, ARM::Q3_Q4, ARM::Q4_Q5, ARM::Q5_Q6, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::D2_D3_D4, ARM::D3_D4_D5, ARM::D4_D5_D6, ARM::D5_D6_D7, ARM::D6_D7_D8, ARM::D7_D8_D9, ARM::D8_D9_D10, ARM::D9_D10_D11, ARM::D10_D11_D12, ARM::D0_D2_D4, ARM::D2_D4_D6, ARM::D4_D6_D8, ARM::D6_D8_D10, ARM::D8_D10_D12, ARM::D10_D12_D14, ARM::D0_D2_D4_D6, ARM::D2_D4_D6_D8, ARM::D6_D8_D10_D12, ARM::D8_D10_D12_D14, ARM::D10_D12_D14_D16, ARM::D3_D4, ARM::D5_D6, ARM::D7_D8, ARM::D9_D10, ARM::D1_D2_D3_D4, ARM::D3_D4_D5_D6, ARM::D5_D6_D7_D8, ARM::D7_D8_D9_D10, ARM::D9_D10_D11_D12, ARM::D4, ARM::S8, ARM::S9, ARM::D6, ARM::S12, ARM::S13, ARM::D8, ARM::S16, ARM::S17, ARM::D10, ARM::S20, ARM::S21, 0,
  /* 6516 */ ARM::D6_D8_D10, ARM::Q3, ARM::Q4, ARM::Q5, ARM::D4_D6, ARM::D6_D8, ARM::D8_D10, ARM::D10_D12, ARM::Q2_Q3, ARM::Q3_Q4, ARM::Q4_Q5, ARM::Q5_Q6, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::D4_D5_D6, ARM::D5_D6_D7, ARM::D6_D7_D8, ARM::D7_D8_D9, ARM::D8_D9_D10, ARM::D9_D10_D11, ARM::D10_D11_D12, ARM::D2_D4_D6, ARM::D4_D6_D8, ARM::D8_D10_D12, ARM::D10_D12_D14, ARM::D0_D2_D4_D6, ARM::D2_D4_D6_D8, ARM::D4_D6_D8_D10, ARM::D6_D8_D10_D12, ARM::D8_D10_D12_D14, ARM::D10_D12_D14_D16, ARM::D5_D6, ARM::D7_D8, ARM::D9_D10, ARM::D3_D4_D5_D6, ARM::D5_D6_D7_D8, ARM::D7_D8_D9_D10, ARM::D9_D10_D11_D12, ARM::D6, ARM::S12, ARM::S13, ARM::D8, ARM::S16, ARM::S17, ARM::D10, ARM::S20, ARM::S21, 0,
  /* 6568 */ ARM::D8_D10, ARM::Q4, ARM::Q5, ARM::D6_D8, ARM::D10_D12, ARM::Q3_Q4, ARM::Q4_Q5, ARM::Q5_Q6, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::D6_D7_D8, ARM::D7_D8_D9, ARM::D8_D9_D10, ARM::D9_D10_D11, ARM::D10_D11_D12, ARM::D4_D6_D8, ARM::D6_D8_D10, ARM::D8_D10_D12, ARM::D10_D12_D14, ARM::D2_D4_D6_D8, ARM::D4_D6_D8_D10, ARM::D6_D8_D10_D12, ARM::D8_D10_D12_D14, ARM::D10_D12_D14_D16, ARM::D7_D8, ARM::D9_D10, ARM::D5_D6_D7_D8, ARM::D7_D8_D9_D10, ARM::D9_D10_D11_D12, ARM::D8, ARM::S16, ARM::S17, ARM::D10, ARM::S20, ARM::S21, 0,
  /* 6607 */ ARM::D7_D8_D9_D10, ARM::Q3, ARM::Q4, ARM::Q5, ARM::D5_D7, ARM::D6_D8, ARM::D7_D9, ARM::D8_D10, ARM::D9_D11, ARM::D10_D12, ARM::Q2_Q3, ARM::Q3_Q4, ARM::Q4_Q5, ARM::Q5_Q6, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::D5_D6_D7, ARM::D6_D7_D8, ARM::D7_D8_D9, ARM::D8_D9_D10, ARM::D9_D10_D11, ARM::D10_D11_D12, ARM::D3_D5_D7, ARM::D4_D6_D8, ARM::D5_D7_D9, ARM::D6_D8_D10, ARM::D7_D9_D11, ARM::D8_D10_D12, ARM::D9_D11_D13, ARM::D10_D12_D14, ARM::D1_D3_D5_D7, ARM::D2_D4_D6_D8, ARM::D3_D5_D7_D9, ARM::D4_D6_D8_D10, ARM::D5_D7_D9_D11, ARM::D6_D8_D10_D12, ARM::D7_D9_D11_D13, ARM::D8_D10_D12_D14, ARM::D9_D11_D13_D15, ARM::D10_D12_D14_D16, ARM::D7_D8, ARM::D9_D10, ARM::D5_D6_D7_D8, ARM::D9_D10_D11_D12, ARM::D7, ARM::S14, ARM::S15, ARM::D8, ARM::S16, ARM::S17, ARM::D9, ARM::S18, ARM::S19, ARM::D10, ARM::S20, ARM::S21, 0,
  /* 6668 */ ARM::D8_D9_D10, ARM::Q4, ARM::Q5, ARM::D6_D8, ARM::D7_D9, ARM::D8_D10, ARM::D9_D11, ARM::D10_D12, ARM::Q3_Q4, ARM::Q4_Q5, ARM::Q5_Q6, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::D6_D7_D8, ARM::D7_D8_D9, ARM::D9_D10_D11, ARM::D10_D11_D12, ARM::D4_D6_D8, ARM::D5_D7_D9, ARM::D6_D8_D10, ARM::D7_D9_D11, ARM::D8_D10_D12, ARM::D9_D11_D13, ARM::D10_D12_D14, ARM::D2_D4_D6_D8, ARM::D3_D5_D7_D9, ARM::D4_D6_D8_D10, ARM::D5_D7_D9_D11, ARM::D6_D8_D10_D12, ARM::D7_D9_D11_D13, ARM::D8_D10_D12_D14, ARM::D9_D11_D13_D15, ARM::D10_D12_D14_D16, ARM::D7_D8, ARM::D9_D10, ARM::D5_D6_D7_D8, ARM::D7_D8_D9_D10, ARM::D9_D10_D11_D12, ARM::D8, ARM::S16, ARM::S17, ARM::D9, ARM::S18, ARM::S19, ARM::D10, ARM::S20, ARM::S21, 0,
  /* 6719 */ ARM::D9_D10, ARM::Q4, ARM::Q5, ARM::D7_D9, ARM::D8_D10, ARM::D9_D11, ARM::D10_D12, ARM::Q3_Q4, ARM::Q4_Q5, ARM::Q5_Q6, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::D7_D8_D9, ARM::D8_D9_D10, ARM::D9_D10_D11, ARM::D10_D11_D12, ARM::D5_D7_D9, ARM::D6_D8_D10, ARM::D7_D9_D11, ARM::D8_D10_D12, ARM::D9_D11_D13, ARM::D10_D12_D14, ARM::D3_D5_D7_D9, ARM::D4_D6_D8_D10, ARM::D5_D7_D9_D11, ARM::D6_D8_D10_D12, ARM::D7_D9_D11_D13, ARM::D8_D10_D12_D14, ARM::D9_D11_D13_D15, ARM::D10_D12_D14_D16, ARM::D7_D8_D9_D10, ARM::D9_D10_D11_D12, ARM::D9, ARM::S18, ARM::S19, ARM::D10, ARM::S20, ARM::S21, 0,
  /* 6761 */ ARM::D5_D7_D9_D11, ARM::Q2, ARM::Q3, ARM::Q4, ARM::Q5, ARM::D3_D5, ARM::D5_D7, ARM::D7_D9, ARM::D9_D11, ARM::D11_D13, ARM::Q1_Q2, ARM::Q2_Q3, ARM::Q3_Q4, ARM::Q4_Q5, ARM::Q5_Q6, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::D3_D4_D5, ARM::D4_D5_D6, ARM::D5_D6_D7, ARM::D6_D7_D8, ARM::D7_D8_D9, ARM::D8_D9_D10, ARM::D9_D10_D11, ARM::D10_D11_D12, ARM::D11_D12_D13, ARM::D1_D3_D5, ARM::D3_D5_D7, ARM::D5_D7_D9, ARM::D7_D9_D11, ARM::D9_D11_D13, ARM::D11_D13_D15, ARM::D1_D3_D5_D7, ARM::D3_D5_D7_D9, ARM::D7_D9_D11_D13, ARM::D9_D11_D13_D15, ARM::D11_D13_D15_D17, ARM::D5_D6, ARM::D7_D8, ARM::D9_D10, ARM::D11_D12, ARM::D3_D4_D5_D6, ARM::D5_D6_D7_D8, ARM::D7_D8_D9_D10, ARM::D9_D10_D11_D12, ARM::D11_D12_D13_D14, ARM::D5, ARM::S10, ARM::S11, ARM::D7, ARM::S14, ARM::S15, ARM::D9, ARM::S18, ARM::S19, ARM::D11, ARM::S22, ARM::S23, 0,
  /* 6824 */ ARM::D7_D9_D11, ARM::Q3, ARM::Q4, ARM::Q5, ARM::D5_D7, ARM::D7_D9, ARM::D9_D11, ARM::D11_D13, ARM::Q2_Q3, ARM::Q3_Q4, ARM::Q4_Q5, ARM::Q5_Q6, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::D5_D6_D7, ARM::D6_D7_D8, ARM::D7_D8_D9, ARM::D8_D9_D10, ARM::D9_D10_D11, ARM::D10_D11_D12, ARM::D11_D12_D13, ARM::D3_D5_D7, ARM::D5_D7_D9, ARM::D9_D11_D13, ARM::D11_D13_D15, ARM::D1_D3_D5_D7, ARM::D3_D5_D7_D9, ARM::D5_D7_D9_D11, ARM::D7_D9_D11_D13, ARM::D9_D11_D13_D15, ARM::D11_D13_D15_D17, ARM::D7_D8, ARM::D9_D10, ARM::D11_D12, ARM::D5_D6_D7_D8, ARM::D7_D8_D9_D10, ARM::D9_D10_D11_D12, ARM::D11_D12_D13_D14, ARM::D7, ARM::S14, ARM::S15, ARM::D9, ARM::S18, ARM::S19, ARM::D11, ARM::S22, ARM::S23, 0,
  /* 6876 */ ARM::D9_D11, ARM::Q4, ARM::Q5, ARM::D7_D9, ARM::D11_D13, ARM::Q3_Q4, ARM::Q4_Q5, ARM::Q5_Q6, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::D7_D8_D9, ARM::D8_D9_D10, ARM::D9_D10_D11, ARM::D10_D11_D12, ARM::D11_D12_D13, ARM::D5_D7_D9, ARM::D7_D9_D11, ARM::D9_D11_D13, ARM::D11_D13_D15, ARM::D3_D5_D7_D9, ARM::D5_D7_D9_D11, ARM::D7_D9_D11_D13, ARM::D9_D11_D13_D15, ARM::D11_D13_D15_D17, ARM::D9_D10, ARM::D11_D12, ARM::D7_D8_D9_D10, ARM::D9_D10_D11_D12, ARM::D11_D12_D13_D14, ARM::D9, ARM::S18, ARM::S19, ARM::D11, ARM::S22, ARM::S23, 0,
  /* 6915 */ ARM::Q2_Q3_Q4_Q5, ARM::D2_D4, ARM::D3_D5, ARM::D4_D6, ARM::D5_D7, ARM::D6_D8, ARM::D7_D9, ARM::D8_D10, ARM::D9_D11, ARM::D10_D12, ARM::D11_D13, ARM::Q1_Q2, ARM::Q3_Q4, ARM::Q5_Q6, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::D2_D3_D4, ARM::D3_D4_D5, ARM::D4_D5_D6, ARM::D5_D6_D7, ARM::D6_D7_D8, ARM::D7_D8_D9, ARM::D8_D9_D10, ARM::D9_D10_D11, ARM::D10_D11_D12, ARM::D11_D12_D13, ARM::D0_D2_D4, ARM::D1_D3_D5, ARM::D2_D4_D6, ARM::D3_D5_D7, ARM::D4_D6_D8, ARM::D5_D7_D9, ARM::D6_D8_D10, ARM::D7_D9_D11, ARM::D8_D10_D12, ARM::D9_D11_D13, ARM::D10_D12_D14, ARM::D11_D13_D15, ARM::D0_D2_D4_D6, ARM::D1_D3_D5_D7, ARM::D2_D4_D6_D8, ARM::D3_D5_D7_D9, ARM::D4_D6_D8_D10, ARM::D5_D7_D9_D11, ARM::D6_D8_D10_D12, ARM::D7_D9_D11_D13, ARM::D8_D10_D12_D14, ARM::D9_D11_D13_D15, ARM::D10_D12_D14_D16, ARM::D11_D13_D15_D17, ARM::D3_D4, ARM::D5_D6, ARM::D7_D8, ARM::D9_D10, ARM::D11_D12, ARM::D1_D2_D3_D4, ARM::D3_D4_D5_D6, ARM::D5_D6_D7_D8, ARM::D7_D8_D9_D10, ARM::D9_D10_D11_D12, ARM::D11_D12_D13_D14, ARM::Q2_Q3, ARM::Q2, ARM::D4, ARM::S8, ARM::S9, ARM::D5, ARM::S10, ARM::S11, ARM::Q3, ARM::D6, ARM::S12, ARM::S13, ARM::D7, ARM::S14, ARM::S15, ARM::Q4_Q5, ARM::Q4, ARM::D8, ARM::S16, ARM::S17, ARM::D9, ARM::S18, ARM::S19, ARM::Q5, ARM::D10, ARM::S20, ARM::S21, ARM::D11, ARM::S22, ARM::S23, 0,
  /* 7010 */ ARM::Q4_Q5, ARM::D6_D8, ARM::D7_D9, ARM::D8_D10, ARM::D9_D11, ARM::D10_D12, ARM::D11_D13, ARM::Q3_Q4, ARM::Q5_Q6, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::D6_D7_D8, ARM::D7_D8_D9, ARM::D8_D9_D10, ARM::D9_D10_D11, ARM::D10_D11_D12, ARM::D11_D12_D13, ARM::D4_D6_D8, ARM::D5_D7_D9, ARM::D6_D8_D10, ARM::D7_D9_D11, ARM::D8_D10_D12, ARM::D9_D11_D13, ARM::D10_D12_D14, ARM::D11_D13_D15, ARM::D2_D4_D6_D8, ARM::D3_D5_D7_D9, ARM::D4_D6_D8_D10, ARM::D5_D7_D9_D11, ARM::D6_D8_D10_D12, ARM::D7_D9_D11_D13, ARM::D8_D10_D12_D14, ARM::D9_D11_D13_D15, ARM::D10_D12_D14_D16, ARM::D11_D13_D15_D17, ARM::D7_D8, ARM::D9_D10, ARM::D11_D12, ARM::D5_D6_D7_D8, ARM::D7_D8_D9_D10, ARM::D9_D10_D11_D12, ARM::D11_D12_D13_D14, ARM::Q4, ARM::D8, ARM::S16, ARM::S17, ARM::D9, ARM::S18, ARM::S19, ARM::Q5, ARM::D10, ARM::S20, ARM::S21, ARM::D11, ARM::S22, ARM::S23, 0,
  /* 7070 */ ARM::D9_D10_D11, ARM::Q4, ARM::Q5, ARM::D7_D9, ARM::D8_D10, ARM::D9_D11, ARM::D10_D12, ARM::D11_D13, ARM::Q3_Q4, ARM::Q4_Q5, ARM::Q5_Q6, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::D7_D8_D9, ARM::D8_D9_D10, ARM::D10_D11_D12, ARM::D11_D12_D13, ARM::D5_D7_D9, ARM::D6_D8_D10, ARM::D7_D9_D11, ARM::D8_D10_D12, ARM::D9_D11_D13, ARM::D10_D12_D14, ARM::D11_D13_D15, ARM::D3_D5_D7_D9, ARM::D4_D6_D8_D10, ARM::D5_D7_D9_D11, ARM::D6_D8_D10_D12, ARM::D7_D9_D11_D13, ARM::D8_D10_D12_D14, ARM::D9_D11_D13_D15, ARM::D10_D12_D14_D16, ARM::D11_D13_D15_D17, ARM::D9_D10, ARM::D11_D12, ARM::D7_D8_D9_D10, ARM::D9_D10_D11_D12, ARM::D11_D12_D13_D14, ARM::D9, ARM::S18, ARM::S19, ARM::D10, ARM::S20, ARM::S21, ARM::D11, ARM::S22, ARM::S23, 0,
  /* 7121 */ ARM::D6_D8_D10_D12, ARM::Q3, ARM::Q4, ARM::Q5, ARM::Q6, ARM::D4_D6, ARM::D6_D8, ARM::D8_D10, ARM::D10_D12, ARM::D12_D14, ARM::Q2_Q3, ARM::Q3_Q4, ARM::Q4_Q5, ARM::Q5_Q6, ARM::Q6_Q7, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::D4_D5_D6, ARM::D5_D6_D7, ARM::D6_D7_D8, ARM::D7_D8_D9, ARM::D8_D9_D10, ARM::D9_D10_D11, ARM::D10_D11_D12, ARM::D11_D12_D13, ARM::D12_D13_D14, ARM::D2_D4_D6, ARM::D4_D6_D8, ARM::D6_D8_D10, ARM::D8_D10_D12, ARM::D10_D12_D14, ARM::D12_D14_D16, ARM::D0_D2_D4_D6, ARM::D2_D4_D6_D8, ARM::D4_D6_D8_D10, ARM::D8_D10_D12_D14, ARM::D10_D12_D14_D16, ARM::D12_D14_D16_D18, ARM::D5_D6, ARM::D7_D8, ARM::D9_D10, ARM::D11_D12, ARM::D3_D4_D5_D6, ARM::D5_D6_D7_D8, ARM::D7_D8_D9_D10, ARM::D9_D10_D11_D12, ARM::D11_D12_D13_D14, ARM::D6, ARM::S12, ARM::S13, ARM::D8, ARM::S16, ARM::S17, ARM::D10, ARM::S20, ARM::S21, ARM::D12, ARM::S24, ARM::S25, 0,
  /* 7186 */ ARM::D8_D10_D12, ARM::Q4, ARM::Q5, ARM::Q6, ARM::D6_D8, ARM::D8_D10, ARM::D10_D12, ARM::D12_D14, ARM::Q3_Q4, ARM::Q4_Q5, ARM::Q5_Q6, ARM::Q6_Q7, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::D6_D7_D8, ARM::D7_D8_D9, ARM::D8_D9_D10, ARM::D9_D10_D11, ARM::D10_D11_D12, ARM::D11_D12_D13, ARM::D12_D13_D14, ARM::D4_D6_D8, ARM::D6_D8_D10, ARM::D10_D12_D14, ARM::D12_D14_D16, ARM::D2_D4_D6_D8, ARM::D4_D6_D8_D10, ARM::D6_D8_D10_D12, ARM::D8_D10_D12_D14, ARM::D10_D12_D14_D16, ARM::D12_D14_D16_D18, ARM::D7_D8, ARM::D9_D10, ARM::D11_D12, ARM::D5_D6_D7_D8, ARM::D7_D8_D9_D10, ARM::D9_D10_D11_D12, ARM::D11_D12_D13_D14, ARM::D8, ARM::S16, ARM::S17, ARM::D10, ARM::S20, ARM::S21, ARM::D12, ARM::S24, ARM::S25, 0,
  /* 7238 */ ARM::D10_D12, ARM::Q5, ARM::Q6, ARM::D8_D10, ARM::D12_D14, ARM::Q4_Q5, ARM::Q5_Q6, ARM::Q6_Q7, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::D8_D9_D10, ARM::D9_D10_D11, ARM::D10_D11_D12, ARM::D11_D12_D13, ARM::D12_D13_D14, ARM::D6_D8_D10, ARM::D8_D10_D12, ARM::D10_D12_D14, ARM::D12_D14_D16, ARM::D4_D6_D8_D10, ARM::D6_D8_D10_D12, ARM::D8_D10_D12_D14, ARM::D10_D12_D14_D16, ARM::D12_D14_D16_D18, ARM::D9_D10, ARM::D11_D12, ARM::D7_D8_D9_D10, ARM::D9_D10_D11_D12, ARM::D11_D12_D13_D14, ARM::D10, ARM::S20, ARM::S21, ARM::D12, ARM::S24, ARM::S25, 0,
  /* 7277 */ ARM::D9_D10_D11_D12, ARM::Q4, ARM::Q5, ARM::Q6, ARM::D7_D9, ARM::D8_D10, ARM::D9_D11, ARM::D10_D12, ARM::D11_D13, ARM::D12_D14, ARM::Q3_Q4, ARM::Q4_Q5, ARM::Q5_Q6, ARM::Q6_Q7, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::D7_D8_D9, ARM::D8_D9_D10, ARM::D9_D10_D11, ARM::D10_D11_D12, ARM::D11_D12_D13, ARM::D12_D13_D14, ARM::D5_D7_D9, ARM::D6_D8_D10, ARM::D7_D9_D11, ARM::D8_D10_D12, ARM::D9_D11_D13, ARM::D10_D12_D14, ARM::D11_D13_D15, ARM::D12_D14_D16, ARM::D3_D5_D7_D9, ARM::D4_D6_D8_D10, ARM::D5_D7_D9_D11, ARM::D6_D8_D10_D12, ARM::D7_D9_D11_D13, ARM::D8_D10_D12_D14, ARM::D9_D11_D13_D15, ARM::D10_D12_D14_D16, ARM::D11_D13_D15_D17, ARM::D12_D14_D16_D18, ARM::D9_D10, ARM::D11_D12, ARM::D7_D8_D9_D10, ARM::D11_D12_D13_D14, ARM::D9, ARM::S18, ARM::S19, ARM::D10, ARM::S20, ARM::S21, ARM::D11, ARM::S22, ARM::S23, ARM::D12, ARM::S24, ARM::S25, 0,
  /* 7338 */ ARM::D10_D11_D12, ARM::Q5, ARM::Q6, ARM::D8_D10, ARM::D9_D11, ARM::D10_D12, ARM::D11_D13, ARM::D12_D14, ARM::Q4_Q5, ARM::Q5_Q6, ARM::Q6_Q7, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::D8_D9_D10, ARM::D9_D10_D11, ARM::D11_D12_D13, ARM::D12_D13_D14, ARM::D6_D8_D10, ARM::D7_D9_D11, ARM::D8_D10_D12, ARM::D9_D11_D13, ARM::D10_D12_D14, ARM::D11_D13_D15, ARM::D12_D14_D16, ARM::D4_D6_D8_D10, ARM::D5_D7_D9_D11, ARM::D6_D8_D10_D12, ARM::D7_D9_D11_D13, ARM::D8_D10_D12_D14, ARM::D9_D11_D13_D15, ARM::D10_D12_D14_D16, ARM::D11_D13_D15_D17, ARM::D12_D14_D16_D18, ARM::D9_D10, ARM::D11_D12, ARM::D7_D8_D9_D10, ARM::D9_D10_D11_D12, ARM::D11_D12_D13_D14, ARM::D10, ARM::S20, ARM::S21, ARM::D11, ARM::S22, ARM::S23, ARM::D12, ARM::S24, ARM::S25, 0,
  /* 7389 */ ARM::D11_D12, ARM::Q5, ARM::Q6, ARM::D9_D11, ARM::D10_D12, ARM::D11_D13, ARM::D12_D14, ARM::Q4_Q5, ARM::Q5_Q6, ARM::Q6_Q7, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::D9_D10_D11, ARM::D10_D11_D12, ARM::D11_D12_D13, ARM::D12_D13_D14, ARM::D7_D9_D11, ARM::D8_D10_D12, ARM::D9_D11_D13, ARM::D10_D12_D14, ARM::D11_D13_D15, ARM::D12_D14_D16, ARM::D5_D7_D9_D11, ARM::D6_D8_D10_D12, ARM::D7_D9_D11_D13, ARM::D8_D10_D12_D14, ARM::D9_D11_D13_D15, ARM::D10_D12_D14_D16, ARM::D11_D13_D15_D17, ARM::D12_D14_D16_D18, ARM::D9_D10_D11_D12, ARM::D11_D12_D13_D14, ARM::D11, ARM::S22, ARM::S23, ARM::D12, ARM::S24, ARM::S25, 0,
  /* 7431 */ ARM::D7_D9_D11_D13, ARM::Q3, ARM::Q4, ARM::Q5, ARM::Q6, ARM::D5_D7, ARM::D7_D9, ARM::D9_D11, ARM::D11_D13, ARM::D13_D15, ARM::Q2_Q3, ARM::Q3_Q4, ARM::Q4_Q5, ARM::Q5_Q6, ARM::Q6_Q7, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::D5_D6_D7, ARM::D6_D7_D8, ARM::D7_D8_D9, ARM::D8_D9_D10, ARM::D9_D10_D11, ARM::D10_D11_D12, ARM::D11_D12_D13, ARM::D12_D13_D14, ARM::D13_D14_D15, ARM::D3_D5_D7, ARM::D5_D7_D9, ARM::D7_D9_D11, ARM::D9_D11_D13, ARM::D11_D13_D15, ARM::D13_D15_D17, ARM::D1_D3_D5_D7, ARM::D3_D5_D7_D9, ARM::D5_D7_D9_D11, ARM::D9_D11_D13_D15, ARM::D11_D13_D15_D17, ARM::D13_D15_D17_D19, ARM::D7_D8, ARM::D9_D10, ARM::D11_D12, ARM::D13_D14, ARM::D5_D6_D7_D8, ARM::D7_D8_D9_D10, ARM::D9_D10_D11_D12, ARM::D11_D12_D13_D14, ARM::D13_D14_D15_D16, ARM::D7, ARM::S14, ARM::S15, ARM::D9, ARM::S18, ARM::S19, ARM::D11, ARM::S22, ARM::S23, ARM::D13, ARM::S26, ARM::S27, 0,
  /* 7496 */ ARM::D9_D11_D13, ARM::Q4, ARM::Q5, ARM::Q6, ARM::D7_D9, ARM::D9_D11, ARM::D11_D13, ARM::D13_D15, ARM::Q3_Q4, ARM::Q4_Q5, ARM::Q5_Q6, ARM::Q6_Q7, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::D7_D8_D9, ARM::D8_D9_D10, ARM::D9_D10_D11, ARM::D10_D11_D12, ARM::D11_D12_D13, ARM::D12_D13_D14, ARM::D13_D14_D15, ARM::D5_D7_D9, ARM::D7_D9_D11, ARM::D11_D13_D15, ARM::D13_D15_D17, ARM::D3_D5_D7_D9, ARM::D5_D7_D9_D11, ARM::D7_D9_D11_D13, ARM::D9_D11_D13_D15, ARM::D11_D13_D15_D17, ARM::D13_D15_D17_D19, ARM::D9_D10, ARM::D11_D12, ARM::D13_D14, ARM::D7_D8_D9_D10, ARM::D9_D10_D11_D12, ARM::D11_D12_D13_D14, ARM::D13_D14_D15_D16, ARM::D9, ARM::S18, ARM::S19, ARM::D11, ARM::S22, ARM::S23, ARM::D13, ARM::S26, ARM::S27, 0,
  /* 7548 */ ARM::D11_D13, ARM::Q5, ARM::Q6, ARM::D9_D11, ARM::D13_D15, ARM::Q4_Q5, ARM::Q5_Q6, ARM::Q6_Q7, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::D9_D10_D11, ARM::D10_D11_D12, ARM::D11_D12_D13, ARM::D12_D13_D14, ARM::D13_D14_D15, ARM::D7_D9_D11, ARM::D9_D11_D13, ARM::D11_D13_D15, ARM::D13_D15_D17, ARM::D5_D7_D9_D11, ARM::D7_D9_D11_D13, ARM::D9_D11_D13_D15, ARM::D11_D13_D15_D17, ARM::D13_D15_D17_D19, ARM::D11_D12, ARM::D13_D14, ARM::D9_D10_D11_D12, ARM::D11_D12_D13_D14, ARM::D13_D14_D15_D16, ARM::D11, ARM::S22, ARM::S23, ARM::D13, ARM::S26, ARM::S27, 0,
  /* 7587 */ ARM::Q3_Q4_Q5_Q6, ARM::D4_D6, ARM::D5_D7, ARM::D6_D8, ARM::D7_D9, ARM::D8_D10, ARM::D9_D11, ARM::D10_D12, ARM::D11_D13, ARM::D12_D14, ARM::D13_D15, ARM::Q2_Q3, ARM::Q4_Q5, ARM::Q6_Q7, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::D4_D5_D6, ARM::D5_D6_D7, ARM::D6_D7_D8, ARM::D7_D8_D9, ARM::D8_D9_D10, ARM::D9_D10_D11, ARM::D10_D11_D12, ARM::D11_D12_D13, ARM::D12_D13_D14, ARM::D13_D14_D15, ARM::D2_D4_D6, ARM::D3_D5_D7, ARM::D4_D6_D8, ARM::D5_D7_D9, ARM::D6_D8_D10, ARM::D7_D9_D11, ARM::D8_D10_D12, ARM::D9_D11_D13, ARM::D10_D12_D14, ARM::D11_D13_D15, ARM::D12_D14_D16, ARM::D13_D15_D17, ARM::D0_D2_D4_D6, ARM::D1_D3_D5_D7, ARM::D2_D4_D6_D8, ARM::D3_D5_D7_D9, ARM::D4_D6_D8_D10, ARM::D5_D7_D9_D11, ARM::D6_D8_D10_D12, ARM::D7_D9_D11_D13, ARM::D8_D10_D12_D14, ARM::D9_D11_D13_D15, ARM::D10_D12_D14_D16, ARM::D11_D13_D15_D17, ARM::D12_D14_D16_D18, ARM::D13_D15_D17_D19, ARM::D5_D6, ARM::D7_D8, ARM::D9_D10, ARM::D11_D12, ARM::D13_D14, ARM::D3_D4_D5_D6, ARM::D5_D6_D7_D8, ARM::D7_D8_D9_D10, ARM::D9_D10_D11_D12, ARM::D11_D12_D13_D14, ARM::D13_D14_D15_D16, ARM::Q3_Q4, ARM::Q3, ARM::D6, ARM::S12, ARM::S13, ARM::D7, ARM::S14, ARM::S15, ARM::Q4, ARM::D8, ARM::S16, ARM::S17, ARM::D9, ARM::S18, ARM::S19, ARM::Q5_Q6, ARM::Q5, ARM::D10, ARM::S20, ARM::S21, ARM::D11, ARM::S22, ARM::S23, ARM::Q6, ARM::D12, ARM::S24, ARM::S25, ARM::D13, ARM::S26, ARM::S27, 0,
  /* 7685 */ ARM::Q5_Q6, ARM::D8_D10, ARM::D9_D11, ARM::D10_D12, ARM::D11_D13, ARM::D12_D14, ARM::D13_D15, ARM::Q4_Q5, ARM::Q6_Q7, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::D8_D9_D10, ARM::D9_D10_D11, ARM::D10_D11_D12, ARM::D11_D12_D13, ARM::D12_D13_D14, ARM::D13_D14_D15, ARM::D6_D8_D10, ARM::D7_D9_D11, ARM::D8_D10_D12, ARM::D9_D11_D13, ARM::D10_D12_D14, ARM::D11_D13_D15, ARM::D12_D14_D16, ARM::D13_D15_D17, ARM::D4_D6_D8_D10, ARM::D5_D7_D9_D11, ARM::D6_D8_D10_D12, ARM::D7_D9_D11_D13, ARM::D8_D10_D12_D14, ARM::D9_D11_D13_D15, ARM::D10_D12_D14_D16, ARM::D11_D13_D15_D17, ARM::D12_D14_D16_D18, ARM::D13_D15_D17_D19, ARM::D9_D10, ARM::D11_D12, ARM::D13_D14, ARM::D7_D8_D9_D10, ARM::D9_D10_D11_D12, ARM::D11_D12_D13_D14, ARM::D13_D14_D15_D16, ARM::Q5, ARM::D10, ARM::S20, ARM::S21, ARM::D11, ARM::S22, ARM::S23, ARM::Q6, ARM::D12, ARM::S24, ARM::S25, ARM::D13, ARM::S26, ARM::S27, 0,
  /* 7745 */ ARM::D11_D12_D13, ARM::Q5, ARM::Q6, ARM::D9_D11, ARM::D10_D12, ARM::D11_D13, ARM::D12_D14, ARM::D13_D15, ARM::Q4_Q5, ARM::Q5_Q6, ARM::Q6_Q7, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::D9_D10_D11, ARM::D10_D11_D12, ARM::D12_D13_D14, ARM::D13_D14_D15, ARM::D7_D9_D11, ARM::D8_D10_D12, ARM::D9_D11_D13, ARM::D10_D12_D14, ARM::D11_D13_D15, ARM::D12_D14_D16, ARM::D13_D15_D17, ARM::D5_D7_D9_D11, ARM::D6_D8_D10_D12, ARM::D7_D9_D11_D13, ARM::D8_D10_D12_D14, ARM::D9_D11_D13_D15, ARM::D10_D12_D14_D16, ARM::D11_D13_D15_D17, ARM::D12_D14_D16_D18, ARM::D13_D15_D17_D19, ARM::D11_D12, ARM::D13_D14, ARM::D9_D10_D11_D12, ARM::D11_D12_D13_D14, ARM::D13_D14_D15_D16, ARM::D11, ARM::S22, ARM::S23, ARM::D12, ARM::S24, ARM::S25, ARM::D13, ARM::S26, ARM::S27, 0,
  /* 7796 */ ARM::D8_D10_D12_D14, ARM::Q4, ARM::Q5, ARM::Q6, ARM::Q7, ARM::D6_D8, ARM::D8_D10, ARM::D10_D12, ARM::D12_D14, ARM::D14_D16, ARM::Q3_Q4, ARM::Q4_Q5, ARM::Q5_Q6, ARM::Q6_Q7, ARM::Q7_Q8, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::D6_D7_D8, ARM::D7_D8_D9, ARM::D8_D9_D10, ARM::D9_D10_D11, ARM::D10_D11_D12, ARM::D11_D12_D13, ARM::D12_D13_D14, ARM::D13_D14_D15, ARM::D14_D15_D16, ARM::D4_D6_D8, ARM::D6_D8_D10, ARM::D8_D10_D12, ARM::D10_D12_D14, ARM::D12_D14_D16, ARM::D14_D16_D18, ARM::D2_D4_D6_D8, ARM::D4_D6_D8_D10, ARM::D6_D8_D10_D12, ARM::D10_D12_D14_D16, ARM::D12_D14_D16_D18, ARM::D14_D16_D18_D20, ARM::D7_D8, ARM::D9_D10, ARM::D11_D12, ARM::D13_D14, ARM::D5_D6_D7_D8, ARM::D7_D8_D9_D10, ARM::D9_D10_D11_D12, ARM::D11_D12_D13_D14, ARM::D13_D14_D15_D16, ARM::D8, ARM::S16, ARM::S17, ARM::D10, ARM::S20, ARM::S21, ARM::D12, ARM::S24, ARM::S25, ARM::D14, ARM::S28, ARM::S29, 0,
  /* 7861 */ ARM::D10_D12_D14, ARM::Q5, ARM::Q6, ARM::Q7, ARM::D8_D10, ARM::D10_D12, ARM::D12_D14, ARM::D14_D16, ARM::Q4_Q5, ARM::Q5_Q6, ARM::Q6_Q7, ARM::Q7_Q8, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::D8_D9_D10, ARM::D9_D10_D11, ARM::D10_D11_D12, ARM::D11_D12_D13, ARM::D12_D13_D14, ARM::D13_D14_D15, ARM::D14_D15_D16, ARM::D6_D8_D10, ARM::D8_D10_D12, ARM::D12_D14_D16, ARM::D14_D16_D18, ARM::D4_D6_D8_D10, ARM::D6_D8_D10_D12, ARM::D8_D10_D12_D14, ARM::D10_D12_D14_D16, ARM::D12_D14_D16_D18, ARM::D14_D16_D18_D20, ARM::D9_D10, ARM::D11_D12, ARM::D13_D14, ARM::D7_D8_D9_D10, ARM::D9_D10_D11_D12, ARM::D11_D12_D13_D14, ARM::D13_D14_D15_D16, ARM::D10, ARM::S20, ARM::S21, ARM::D12, ARM::S24, ARM::S25, ARM::D14, ARM::S28, ARM::S29, 0,
  /* 7913 */ ARM::D12_D14, ARM::Q6, ARM::Q7, ARM::D10_D12, ARM::D14_D16, ARM::Q5_Q6, ARM::Q6_Q7, ARM::Q7_Q8, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::D10_D11_D12, ARM::D11_D12_D13, ARM::D12_D13_D14, ARM::D13_D14_D15, ARM::D14_D15_D16, ARM::D8_D10_D12, ARM::D10_D12_D14, ARM::D12_D14_D16, ARM::D14_D16_D18, ARM::D6_D8_D10_D12, ARM::D8_D10_D12_D14, ARM::D10_D12_D14_D16, ARM::D12_D14_D16_D18, ARM::D14_D16_D18_D20, ARM::D11_D12, ARM::D13_D14, ARM::D9_D10_D11_D12, ARM::D11_D12_D13_D14, ARM::D13_D14_D15_D16, ARM::D12, ARM::S24, ARM::S25, ARM::D14, ARM::S28, ARM::S29, 0,
  /* 7952 */ ARM::D11_D12_D13_D14, ARM::Q5, ARM::Q6, ARM::Q7, ARM::D9_D11, ARM::D10_D12, ARM::D11_D13, ARM::D12_D14, ARM::D13_D15, ARM::D14_D16, ARM::Q4_Q5, ARM::Q5_Q6, ARM::Q6_Q7, ARM::Q7_Q8, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::D9_D10_D11, ARM::D10_D11_D12, ARM::D11_D12_D13, ARM::D12_D13_D14, ARM::D13_D14_D15, ARM::D14_D15_D16, ARM::D7_D9_D11, ARM::D8_D10_D12, ARM::D9_D11_D13, ARM::D10_D12_D14, ARM::D11_D13_D15, ARM::D12_D14_D16, ARM::D13_D15_D17, ARM::D14_D16_D18, ARM::D5_D7_D9_D11, ARM::D6_D8_D10_D12, ARM::D7_D9_D11_D13, ARM::D8_D10_D12_D14, ARM::D9_D11_D13_D15, ARM::D10_D12_D14_D16, ARM::D11_D13_D15_D17, ARM::D12_D14_D16_D18, ARM::D13_D15_D17_D19, ARM::D14_D16_D18_D20, ARM::D11_D12, ARM::D13_D14, ARM::D9_D10_D11_D12, ARM::D13_D14_D15_D16, ARM::D11, ARM::S22, ARM::S23, ARM::D12, ARM::S24, ARM::S25, ARM::D13, ARM::S26, ARM::S27, ARM::D14, ARM::S28, ARM::S29, 0,
  /* 8013 */ ARM::D12_D13_D14, ARM::Q6, ARM::Q7, ARM::D10_D12, ARM::D11_D13, ARM::D12_D14, ARM::D13_D15, ARM::D14_D16, ARM::Q5_Q6, ARM::Q6_Q7, ARM::Q7_Q8, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::D10_D11_D12, ARM::D11_D12_D13, ARM::D13_D14_D15, ARM::D14_D15_D16, ARM::D8_D10_D12, ARM::D9_D11_D13, ARM::D10_D12_D14, ARM::D11_D13_D15, ARM::D12_D14_D16, ARM::D13_D15_D17, ARM::D14_D16_D18, ARM::D6_D8_D10_D12, ARM::D7_D9_D11_D13, ARM::D8_D10_D12_D14, ARM::D9_D11_D13_D15, ARM::D10_D12_D14_D16, ARM::D11_D13_D15_D17, ARM::D12_D14_D16_D18, ARM::D13_D15_D17_D19, ARM::D14_D16_D18_D20, ARM::D11_D12, ARM::D13_D14, ARM::D9_D10_D11_D12, ARM::D11_D12_D13_D14, ARM::D13_D14_D15_D16, ARM::D12, ARM::S24, ARM::S25, ARM::D13, ARM::S26, ARM::S27, ARM::D14, ARM::S28, ARM::S29, 0,
  /* 8064 */ ARM::D13_D14, ARM::Q6, ARM::Q7, ARM::D11_D13, ARM::D12_D14, ARM::D13_D15, ARM::D14_D16, ARM::Q5_Q6, ARM::Q6_Q7, ARM::Q7_Q8, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::D11_D12_D13, ARM::D12_D13_D14, ARM::D13_D14_D15, ARM::D14_D15_D16, ARM::D9_D11_D13, ARM::D10_D12_D14, ARM::D11_D13_D15, ARM::D12_D14_D16, ARM::D13_D15_D17, ARM::D14_D16_D18, ARM::D7_D9_D11_D13, ARM::D8_D10_D12_D14, ARM::D9_D11_D13_D15, ARM::D10_D12_D14_D16, ARM::D11_D13_D15_D17, ARM::D12_D14_D16_D18, ARM::D13_D15_D17_D19, ARM::D14_D16_D18_D20, ARM::D11_D12_D13_D14, ARM::D13_D14_D15_D16, ARM::D13, ARM::S26, ARM::S27, ARM::D14, ARM::S28, ARM::S29, 0,
  /* 8106 */ ARM::D9_D11_D13_D15, ARM::Q4, ARM::Q5, ARM::Q6, ARM::Q7, ARM::D7_D9, ARM::D9_D11, ARM::D11_D13, ARM::D13_D15, ARM::D15_D17, ARM::Q3_Q4, ARM::Q4_Q5, ARM::Q5_Q6, ARM::Q6_Q7, ARM::Q7_Q8, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::D7_D8_D9, ARM::D8_D9_D10, ARM::D9_D10_D11, ARM::D10_D11_D12, ARM::D11_D12_D13, ARM::D12_D13_D14, ARM::D13_D14_D15, ARM::D14_D15_D16, ARM::D15_D16_D17, ARM::D5_D7_D9, ARM::D7_D9_D11, ARM::D9_D11_D13, ARM::D11_D13_D15, ARM::D13_D15_D17, ARM::D15_D17_D19, ARM::D3_D5_D7_D9, ARM::D5_D7_D9_D11, ARM::D7_D9_D11_D13, ARM::D11_D13_D15_D17, ARM::D13_D15_D17_D19, ARM::D15_D17_D19_D21, ARM::D9_D10, ARM::D11_D12, ARM::D13_D14, ARM::D15_D16, ARM::D7_D8_D9_D10, ARM::D9_D10_D11_D12, ARM::D11_D12_D13_D14, ARM::D13_D14_D15_D16, ARM::D15_D16_D17_D18, ARM::D9, ARM::S18, ARM::S19, ARM::D11, ARM::S22, ARM::S23, ARM::D13, ARM::S26, ARM::S27, ARM::D15, ARM::S30, ARM::S31, 0,
  /* 8171 */ ARM::D11_D13_D15, ARM::Q5, ARM::Q6, ARM::Q7, ARM::D9_D11, ARM::D11_D13, ARM::D13_D15, ARM::D15_D17, ARM::Q4_Q5, ARM::Q5_Q6, ARM::Q6_Q7, ARM::Q7_Q8, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::D9_D10_D11, ARM::D10_D11_D12, ARM::D11_D12_D13, ARM::D12_D13_D14, ARM::D13_D14_D15, ARM::D14_D15_D16, ARM::D15_D16_D17, ARM::D7_D9_D11, ARM::D9_D11_D13, ARM::D13_D15_D17, ARM::D15_D17_D19, ARM::D5_D7_D9_D11, ARM::D7_D9_D11_D13, ARM::D9_D11_D13_D15, ARM::D11_D13_D15_D17, ARM::D13_D15_D17_D19, ARM::D15_D17_D19_D21, ARM::D11_D12, ARM::D13_D14, ARM::D15_D16, ARM::D9_D10_D11_D12, ARM::D11_D12_D13_D14, ARM::D13_D14_D15_D16, ARM::D15_D16_D17_D18, ARM::D11, ARM::S22, ARM::S23, ARM::D13, ARM::S26, ARM::S27, ARM::D15, ARM::S30, ARM::S31, 0,
  /* 8223 */ ARM::D13_D15, ARM::Q6, ARM::Q7, ARM::D11_D13, ARM::D15_D17, ARM::Q5_Q6, ARM::Q6_Q7, ARM::Q7_Q8, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::D11_D12_D13, ARM::D12_D13_D14, ARM::D13_D14_D15, ARM::D14_D15_D16, ARM::D15_D16_D17, ARM::D9_D11_D13, ARM::D11_D13_D15, ARM::D13_D15_D17, ARM::D15_D17_D19, ARM::D7_D9_D11_D13, ARM::D9_D11_D13_D15, ARM::D11_D13_D15_D17, ARM::D13_D15_D17_D19, ARM::D15_D17_D19_D21, ARM::D13_D14, ARM::D15_D16, ARM::D11_D12_D13_D14, ARM::D13_D14_D15_D16, ARM::D15_D16_D17_D18, ARM::D13, ARM::S26, ARM::S27, ARM::D15, ARM::S30, ARM::S31, 0,
  /* 8262 */ ARM::Q4_Q5_Q6_Q7, ARM::D6_D8, ARM::D7_D9, ARM::D8_D10, ARM::D9_D11, ARM::D10_D12, ARM::D11_D13, ARM::D12_D14, ARM::D13_D15, ARM::D14_D16, ARM::D15_D17, ARM::Q3_Q4, ARM::Q5_Q6, ARM::Q7_Q8, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::D6_D7_D8, ARM::D7_D8_D9, ARM::D8_D9_D10, ARM::D9_D10_D11, ARM::D10_D11_D12, ARM::D11_D12_D13, ARM::D12_D13_D14, ARM::D13_D14_D15, ARM::D14_D15_D16, ARM::D15_D16_D17, ARM::D4_D6_D8, ARM::D5_D7_D9, ARM::D6_D8_D10, ARM::D7_D9_D11, ARM::D8_D10_D12, ARM::D9_D11_D13, ARM::D10_D12_D14, ARM::D11_D13_D15, ARM::D12_D14_D16, ARM::D13_D15_D17, ARM::D14_D16_D18, ARM::D15_D17_D19, ARM::D2_D4_D6_D8, ARM::D3_D5_D7_D9, ARM::D4_D6_D8_D10, ARM::D5_D7_D9_D11, ARM::D6_D8_D10_D12, ARM::D7_D9_D11_D13, ARM::D8_D10_D12_D14, ARM::D9_D11_D13_D15, ARM::D10_D12_D14_D16, ARM::D11_D13_D15_D17, ARM::D12_D14_D16_D18, ARM::D13_D15_D17_D19, ARM::D14_D16_D18_D20, ARM::D15_D17_D19_D21, ARM::D7_D8, ARM::D9_D10, ARM::D11_D12, ARM::D13_D14, ARM::D15_D16, ARM::D5_D6_D7_D8, ARM::D7_D8_D9_D10, ARM::D9_D10_D11_D12, ARM::D11_D12_D13_D14, ARM::D13_D14_D15_D16, ARM::D15_D16_D17_D18, ARM::Q4_Q5, ARM::Q4, ARM::D8, ARM::S16, ARM::S17, ARM::D9, ARM::S18, ARM::S19, ARM::Q5, ARM::D10, ARM::S20, ARM::S21, ARM::D11, ARM::S22, ARM::S23, ARM::Q6_Q7, ARM::Q6, ARM::D12, ARM::S24, ARM::S25, ARM::D13, ARM::S26, ARM::S27, ARM::Q7, ARM::D14, ARM::S28, ARM::S29, ARM::D15, ARM::S30, ARM::S31, 0,
  /* 8360 */ ARM::Q6_Q7, ARM::D10_D12, ARM::D11_D13, ARM::D12_D14, ARM::D13_D15, ARM::D14_D16, ARM::D15_D17, ARM::Q5_Q6, ARM::Q7_Q8, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::D10_D11_D12, ARM::D11_D12_D13, ARM::D12_D13_D14, ARM::D13_D14_D15, ARM::D14_D15_D16, ARM::D15_D16_D17, ARM::D8_D10_D12, ARM::D9_D11_D13, ARM::D10_D12_D14, ARM::D11_D13_D15, ARM::D12_D14_D16, ARM::D13_D15_D17, ARM::D14_D16_D18, ARM::D15_D17_D19, ARM::D6_D8_D10_D12, ARM::D7_D9_D11_D13, ARM::D8_D10_D12_D14, ARM::D9_D11_D13_D15, ARM::D10_D12_D14_D16, ARM::D11_D13_D15_D17, ARM::D12_D14_D16_D18, ARM::D13_D15_D17_D19, ARM::D14_D16_D18_D20, ARM::D15_D17_D19_D21, ARM::D11_D12, ARM::D13_D14, ARM::D15_D16, ARM::D9_D10_D11_D12, ARM::D11_D12_D13_D14, ARM::D13_D14_D15_D16, ARM::D15_D16_D17_D18, ARM::Q6, ARM::D12, ARM::S24, ARM::S25, ARM::D13, ARM::S26, ARM::S27, ARM::Q7, ARM::D14, ARM::S28, ARM::S29, ARM::D15, ARM::S30, ARM::S31, 0,
  /* 8420 */ ARM::D13_D14_D15, ARM::Q6, ARM::Q7, ARM::D11_D13, ARM::D12_D14, ARM::D13_D15, ARM::D14_D16, ARM::D15_D17, ARM::Q5_Q6, ARM::Q6_Q7, ARM::Q7_Q8, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::D11_D12_D13, ARM::D12_D13_D14, ARM::D14_D15_D16, ARM::D15_D16_D17, ARM::D9_D11_D13, ARM::D10_D12_D14, ARM::D11_D13_D15, ARM::D12_D14_D16, ARM::D13_D15_D17, ARM::D14_D16_D18, ARM::D15_D17_D19, ARM::D7_D9_D11_D13, ARM::D8_D10_D12_D14, ARM::D9_D11_D13_D15, ARM::D10_D12_D14_D16, ARM::D11_D13_D15_D17, ARM::D12_D14_D16_D18, ARM::D13_D15_D17_D19, ARM::D14_D16_D18_D20, ARM::D15_D17_D19_D21, ARM::D13_D14, ARM::D15_D16, ARM::D11_D12_D13_D14, ARM::D13_D14_D15_D16, ARM::D15_D16_D17_D18, ARM::D13, ARM::S26, ARM::S27, ARM::D14, ARM::S28, ARM::S29, ARM::D15, ARM::S30, ARM::S31, 0,
  /* 8471 */ ARM::SP, 0,
  /* 8473 */ ARM::SPSR, 0,
  /* 8475 */ ARM::Q0_Q1, ARM::Q0_Q1_Q2_Q3, 0,
  /* 8478 */ ARM::Q0_Q1, ARM::Q1_Q2, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, 0,
  /* 8483 */ ARM::Q0_Q1_Q2_Q3, ARM::Q2_Q3_Q4_Q5, 0,
  /* 8486 */ ARM::Q1_Q2, ARM::Q2_Q3, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, 0,
  /* 8492 */ ARM::Q1_Q2_Q3_Q4, ARM::Q3_Q4_Q5_Q6, 0,
  /* 8495 */ ARM::Q3, ARM::D6, ARM::D7, ARM::S12, ARM::S13, ARM::S14, ARM::S15, ARM::D4_D6, ARM::D5_D7, ARM::D6_D8, ARM::D7_D9, ARM::D4_D5_D6, ARM::D5_D6_D7, ARM::D6_D7_D8, ARM::D7_D8_D9, ARM::D2_D4_D6, ARM::D3_D5_D7, ARM::D4_D6_D8, ARM::D5_D7_D9, ARM::D6_D8_D10, ARM::D7_D9_D11, ARM::D0_D2_D4_D6, ARM::D1_D3_D5_D7, ARM::D2_D4_D6_D8, ARM::D3_D5_D7_D9, ARM::D4_D6_D8_D10, ARM::D5_D7_D9_D11, ARM::D6_D8_D10_D12, ARM::D7_D9_D11_D13, ARM::D5_D6, ARM::D7_D8, ARM::D3_D4_D5_D6, ARM::D5_D6_D7_D8, ARM::D7_D8_D9_D10, ARM::Q2_Q3, ARM::Q3_Q4, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, 0,
  /* 8536 */ ARM::Q2_Q3_Q4_Q5, ARM::Q4_Q5_Q6_Q7, 0,
  /* 8539 */ ARM::Q4, ARM::D8, ARM::D9, ARM::S16, ARM::S17, ARM::S18, ARM::S19, ARM::D6_D8, ARM::D7_D9, ARM::D8_D10, ARM::D9_D11, ARM::D6_D7_D8, ARM::D7_D8_D9, ARM::D8_D9_D10, ARM::D9_D10_D11, ARM::D4_D6_D8, ARM::D5_D7_D9, ARM::D6_D8_D10, ARM::D7_D9_D11, ARM::D8_D10_D12, ARM::D9_D11_D13, ARM::D2_D4_D6_D8, ARM::D3_D5_D7_D9, ARM::D4_D6_D8_D10, ARM::D5_D7_D9_D11, ARM::D6_D8_D10_D12, ARM::D7_D9_D11_D13, ARM::D8_D10_D12_D14, ARM::D9_D11_D13_D15, ARM::D7_D8, ARM::D9_D10, ARM::D5_D6_D7_D8, ARM::D7_D8_D9_D10, ARM::D9_D10_D11_D12, ARM::Q3_Q4, ARM::Q4_Q5, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, 0,
  /* 8580 */ ARM::Q3_Q4_Q5_Q6, ARM::Q5_Q6_Q7_Q8, 0,
  /* 8583 */ ARM::Q5, ARM::D10, ARM::D11, ARM::S20, ARM::S21, ARM::S22, ARM::S23, ARM::D8_D10, ARM::D9_D11, ARM::D10_D12, ARM::D11_D13, ARM::D8_D9_D10, ARM::D9_D10_D11, ARM::D10_D11_D12, ARM::D11_D12_D13, ARM::D6_D8_D10, ARM::D7_D9_D11, ARM::D8_D10_D12, ARM::D9_D11_D13, ARM::D10_D12_D14, ARM::D11_D13_D15, ARM::D4_D6_D8_D10, ARM::D5_D7_D9_D11, ARM::D6_D8_D10_D12, ARM::D7_D9_D11_D13, ARM::D8_D10_D12_D14, ARM::D9_D11_D13_D15, ARM::D10_D12_D14_D16, ARM::D11_D13_D15_D17, ARM::D9_D10, ARM::D11_D12, ARM::D7_D8_D9_D10, ARM::D9_D10_D11_D12, ARM::D11_D12_D13_D14, ARM::Q4_Q5, ARM::Q5_Q6, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, 0,
  /* 8624 */ ARM::Q4_Q5_Q6_Q7, ARM::Q6_Q7_Q8_Q9, 0,
  /* 8627 */ ARM::Q6, ARM::D12, ARM::D13, ARM::S24, ARM::S25, ARM::S26, ARM::S27, ARM::D10_D12, ARM::D11_D13, ARM::D12_D14, ARM::D13_D15, ARM::D10_D11_D12, ARM::D11_D12_D13, ARM::D12_D13_D14, ARM::D13_D14_D15, ARM::D8_D10_D12, ARM::D9_D11_D13, ARM::D10_D12_D14, ARM::D11_D13_D15, ARM::D12_D14_D16, ARM::D13_D15_D17, ARM::D6_D8_D10_D12, ARM::D7_D9_D11_D13, ARM::D8_D10_D12_D14, ARM::D9_D11_D13_D15, ARM::D10_D12_D14_D16, ARM::D11_D13_D15_D17, ARM::D12_D14_D16_D18, ARM::D13_D15_D17_D19, ARM::D11_D12, ARM::D13_D14, ARM::D9_D10_D11_D12, ARM::D11_D12_D13_D14, ARM::D13_D14_D15_D16, ARM::Q5_Q6, ARM::Q6_Q7, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, 0,
  /* 8668 */ ARM::Q5_Q6_Q7_Q8, ARM::Q7_Q8_Q9_Q10, 0,
  /* 8671 */ ARM::Q7, ARM::D14, ARM::D15, ARM::S28, ARM::S29, ARM::S30, ARM::S31, ARM::D12_D14, ARM::D13_D15, ARM::D14_D16, ARM::D15_D17, ARM::D12_D13_D14, ARM::D13_D14_D15, ARM::D14_D15_D16, ARM::D15_D16_D17, ARM::D10_D12_D14, ARM::D11_D13_D15, ARM::D12_D14_D16, ARM::D13_D15_D17, ARM::D14_D16_D18, ARM::D15_D17_D19, ARM::D8_D10_D12_D14, ARM::D9_D11_D13_D15, ARM::D10_D12_D14_D16, ARM::D11_D13_D15_D17, ARM::D12_D14_D16_D18, ARM::D13_D15_D17_D19, ARM::D14_D16_D18_D20, ARM::D15_D17_D19_D21, ARM::D13_D14, ARM::D15_D16, ARM::D11_D12_D13_D14, ARM::D13_D14_D15_D16, ARM::D15_D16_D17_D18, ARM::Q6_Q7, ARM::Q7_Q8, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, 0,
  /* 8712 */ ARM::Q6_Q7_Q8_Q9, ARM::Q8_Q9_Q10_Q11, 0,
  /* 8715 */ ARM::Q8, ARM::D16, ARM::D17, ARM::D14_D16, ARM::D15_D17, ARM::D16_D18, ARM::D17_D19, ARM::D14_D15_D16, ARM::D15_D16_D17, ARM::D16_D17_D18, ARM::D17_D18_D19, ARM::D12_D14_D16, ARM::D13_D15_D17, ARM::D14_D16_D18, ARM::D15_D17_D19, ARM::D16_D18_D20, ARM::D17_D19_D21, ARM::D10_D12_D14_D16, ARM::D11_D13_D15_D17, ARM::D12_D14_D16_D18, ARM::D13_D15_D17_D19, ARM::D14_D16_D18_D20, ARM::D15_D17_D19_D21, ARM::D16_D18_D20_D22, ARM::D17_D19_D21_D23, ARM::D15_D16, ARM::D17_D18, ARM::D13_D14_D15_D16, ARM::D15_D16_D17_D18, ARM::D17_D18_D19_D20, ARM::Q7_Q8, ARM::Q8_Q9, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, 0,
  /* 8752 */ ARM::Q7_Q8_Q9_Q10, ARM::Q9_Q10_Q11_Q12, 0,
  /* 8755 */ ARM::Q9, ARM::D18, ARM::D19, ARM::D16_D18, ARM::D17_D19, ARM::D18_D20, ARM::D19_D21, ARM::D16_D17_D18, ARM::D17_D18_D19, ARM::D18_D19_D20, ARM::D19_D20_D21, ARM::D14_D16_D18, ARM::D15_D17_D19, ARM::D16_D18_D20, ARM::D17_D19_D21, ARM::D18_D20_D22, ARM::D19_D21_D23, ARM::D12_D14_D16_D18, ARM::D13_D15_D17_D19, ARM::D14_D16_D18_D20, ARM::D15_D17_D19_D21, ARM::D16_D18_D20_D22, ARM::D17_D19_D21_D23, ARM::D18_D20_D22_D24, ARM::D19_D21_D23_D25, ARM::D17_D18, ARM::D19_D20, ARM::D15_D16_D17_D18, ARM::D17_D18_D19_D20, ARM::D19_D20_D21_D22, ARM::Q8_Q9, ARM::Q9_Q10, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, 0,
  /* 8792 */ ARM::Q8_Q9_Q10_Q11, ARM::Q10_Q11_Q12_Q13, 0,
  /* 8795 */ ARM::Q10, ARM::D20, ARM::D21, ARM::D18_D20, ARM::D19_D21, ARM::D20_D22, ARM::D21_D23, ARM::D18_D19_D20, ARM::D19_D20_D21, ARM::D20_D21_D22, ARM::D21_D22_D23, ARM::D16_D18_D20, ARM::D17_D19_D21, ARM::D18_D20_D22, ARM::D19_D21_D23, ARM::D20_D22_D24, ARM::D21_D23_D25, ARM::D14_D16_D18_D20, ARM::D15_D17_D19_D21, ARM::D16_D18_D20_D22, ARM::D17_D19_D21_D23, ARM::D18_D20_D22_D24, ARM::D19_D21_D23_D25, ARM::D20_D22_D24_D26, ARM::D21_D23_D25_D27, ARM::D19_D20, ARM::D21_D22, ARM::D17_D18_D19_D20, ARM::D19_D20_D21_D22, ARM::D21_D22_D23_D24, ARM::Q9_Q10, ARM::Q10_Q11, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, 0,
  /* 8832 */ ARM::Q9_Q10_Q11_Q12, ARM::Q11_Q12_Q13_Q14, 0,
  /* 8835 */ ARM::Q11, ARM::D22, ARM::D23, ARM::D20_D22, ARM::D21_D23, ARM::D22_D24, ARM::D23_D25, ARM::D20_D21_D22, ARM::D21_D22_D23, ARM::D22_D23_D24, ARM::D23_D24_D25, ARM::D18_D20_D22, ARM::D19_D21_D23, ARM::D20_D22_D24, ARM::D21_D23_D25, ARM::D22_D24_D26, ARM::D23_D25_D27, ARM::D16_D18_D20_D22, ARM::D17_D19_D21_D23, ARM::D18_D20_D22_D24, ARM::D19_D21_D23_D25, ARM::D20_D22_D24_D26, ARM::D21_D23_D25_D27, ARM::D22_D24_D26_D28, ARM::D23_D25_D27_D29, ARM::D21_D22, ARM::D23_D24, ARM::D19_D20_D21_D22, ARM::D21_D22_D23_D24, ARM::D23_D24_D25_D26, ARM::Q10_Q11, ARM::Q11_Q12, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, 0,
  /* 8872 */ ARM::Q15, ARM::D30, ARM::D31, ARM::D28_D30, ARM::D29_D31, ARM::D28_D29_D30, ARM::D29_D30_D31, ARM::D26_D28_D30, ARM::D27_D29_D31, ARM::D24_D26_D28_D30, ARM::D25_D27_D29_D31, ARM::D29_D30, ARM::D27_D28_D29_D30, ARM::Q14_Q15, ARM::Q12_Q13_Q14_Q15, 0,
  /* 8888 */ ARM::Q10_Q11_Q12_Q13, ARM::Q12_Q13_Q14_Q15, 0,
  /* 8891 */ ARM::Q14, ARM::D28, ARM::D29, ARM::D26_D28, ARM::D27_D29, ARM::D28_D30, ARM::D29_D31, ARM::D26_D27_D28, ARM::D27_D28_D29, ARM::D28_D29_D30, ARM::D29_D30_D31, ARM::D24_D26_D28, ARM::D25_D27_D29, ARM::D26_D28_D30, ARM::D27_D29_D31, ARM::D22_D24_D26_D28, ARM::D23_D25_D27_D29, ARM::D24_D26_D28_D30, ARM::D25_D27_D29_D31, ARM::D27_D28, ARM::D29_D30, ARM::D25_D26_D27_D28, ARM::D27_D28_D29_D30, ARM::Q13_Q14, ARM::Q14_Q15, ARM::Q11_Q12_Q13_Q14, ARM::Q12_Q13_Q14_Q15, 0,
  /* 8919 */ ARM::Q13, ARM::D26, ARM::D27, ARM::D24_D26, ARM::D25_D27, ARM::D26_D28, ARM::D27_D29, ARM::D24_D25_D26, ARM::D25_D26_D27, ARM::D26_D27_D28, ARM::D27_D28_D29, ARM::D22_D24_D26, ARM::D23_D25_D27, ARM::D24_D26_D28, ARM::D25_D27_D29, ARM::D26_D28_D30, ARM::D27_D29_D31, ARM::D20_D22_D24_D26, ARM::D21_D23_D25_D27, ARM::D22_D24_D26_D28, ARM::D23_D25_D27_D29, ARM::D24_D26_D28_D30, ARM::D25_D27_D29_D31, ARM::D25_D26, ARM::D27_D28, ARM::D23_D24_D25_D26, ARM::D25_D26_D27_D28, ARM::D27_D28_D29_D30, ARM::Q12_Q13, ARM::Q13_Q14, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::Q12_Q13_Q14_Q15, 0,
  /* 8953 */ ARM::Q12, ARM::D24, ARM::D25, ARM::D22_D24, ARM::D23_D25, ARM::D24_D26, ARM::D25_D27, ARM::D22_D23_D24, ARM::D23_D24_D25, ARM::D24_D25_D26, ARM::D25_D26_D27, ARM::D20_D22_D24, ARM::D21_D23_D25, ARM::D22_D24_D26, ARM::D23_D25_D27, ARM::D24_D26_D28, ARM::D25_D27_D29, ARM::D18_D20_D22_D24, ARM::D19_D21_D23_D25, ARM::D20_D22_D24_D26, ARM::D21_D23_D25_D27, ARM::D22_D24_D26_D28, ARM::D23_D25_D27_D29, ARM::D24_D26_D28_D30, ARM::D25_D27_D29_D31, ARM::D23_D24, ARM::D25_D26, ARM::D21_D22_D23_D24, ARM::D23_D24_D25_D26, ARM::D25_D26_D27_D28, ARM::Q11_Q12, ARM::Q12_Q13, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::Q12_Q13_Q14_Q15, 0,
  /* 8990 */ ARM::S0, ARM::D0, ARM::Q0, ARM::D0_D2, ARM::Q0_Q1, ARM::Q0_Q1_Q2_Q3, ARM::D0_D1_D2, ARM::D0_D2_D4, ARM::D0_D2_D4_D6, 0,
  /* 9000 */ ARM::S1, ARM::D0, ARM::Q0, ARM::D0_D2, ARM::Q0_Q1, ARM::Q0_Q1_Q2_Q3, ARM::D0_D1_D2, ARM::D0_D2_D4, ARM::D0_D2_D4_D6, 0,
  /* 9010 */ ARM::D0, ARM::S0, ARM::S1, ARM::Q0, ARM::D0_D2, ARM::Q0_Q1, ARM::Q0_Q1_Q2_Q3, ARM::D0_D1_D2, ARM::D0_D2_D4, ARM::D0_D2_D4_D6, 0,
  /* 9021 */ ARM::D31, ARM::Q15, ARM::D29_D31, ARM::Q14_Q15, ARM::Q12_Q13_Q14_Q15, ARM::D29_D30_D31, ARM::D27_D29_D31, ARM::D25_D27_D29_D31, 0,
  /* 9030 */ ARM::S2, ARM::D1, ARM::Q0, ARM::D1_D3, ARM::Q0_Q1, ARM::Q0_Q1_Q2_Q3, ARM::D0_D1_D2, ARM::D1_D2_D3, ARM::D1_D3_D5, ARM::D1_D3_D5_D7, ARM::D1_D2, ARM::D1_D2_D3_D4, 0,
  /* 9043 */ ARM::S3, ARM::D1, ARM::Q0, ARM::D1_D3, ARM::Q0_Q1, ARM::Q0_Q1_Q2_Q3, ARM::D0_D1_D2, ARM::D1_D2_D3, ARM::D1_D3_D5, ARM::D1_D3_D5_D7, ARM::D1_D2, ARM::D1_D2_D3_D4, 0,
  /* 9056 */ ARM::D1, ARM::S2, ARM::S3, ARM::Q0, ARM::D1_D3, ARM::Q0_Q1, ARM::Q0_Q1_Q2_Q3, ARM::D0_D1_D2, ARM::D1_D2_D3, ARM::D1_D3_D5, ARM::D1_D3_D5_D7, ARM::D1_D2, ARM::D1_D2_D3_D4, 0,
  /* 9070 */ ARM::S4, ARM::D2, ARM::Q1, ARM::D0_D2, ARM::D2_D4, ARM::Q0_Q1, ARM::Q1_Q2, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::D0_D1_D2, ARM::D1_D2_D3, ARM::D2_D3_D4, ARM::D0_D2_D4, ARM::D2_D4_D6, ARM::D0_D2_D4_D6, ARM::D2_D4_D6_D8, ARM::D1_D2, ARM::D1_D2_D3_D4, 0,
  /* 9089 */ ARM::S5, ARM::D2, ARM::Q1, ARM::D0_D2, ARM::D2_D4, ARM::Q0_Q1, ARM::Q1_Q2, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::D0_D1_D2, ARM::D1_D2_D3, ARM::D2_D3_D4, ARM::D0_D2_D4, ARM::D2_D4_D6, ARM::D0_D2_D4_D6, ARM::D2_D4_D6_D8, ARM::D1_D2, ARM::D1_D2_D3_D4, 0,
  /* 9108 */ ARM::D2, ARM::S4, ARM::S5, ARM::Q1, ARM::D0_D2, ARM::D2_D4, ARM::Q0_Q1, ARM::Q1_Q2, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::D0_D1_D2, ARM::D1_D2_D3, ARM::D2_D3_D4, ARM::D0_D2_D4, ARM::D2_D4_D6, ARM::D0_D2_D4_D6, ARM::D2_D4_D6_D8, ARM::D1_D2, ARM::D1_D2_D3_D4, 0,
  /* 9128 */ ARM::S6, ARM::D3, ARM::Q1, ARM::D1_D3, ARM::D3_D5, ARM::Q0_Q1, ARM::Q1_Q2, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::D1_D2_D3, ARM::D2_D3_D4, ARM::D3_D4_D5, ARM::D1_D3_D5, ARM::D3_D5_D7, ARM::D1_D3_D5_D7, ARM::D3_D5_D7_D9, ARM::D3_D4, ARM::D1_D2_D3_D4, ARM::D3_D4_D5_D6, 0,
  /* 9148 */ ARM::S7, ARM::D3, ARM::Q1, ARM::D1_D3, ARM::D3_D5, ARM::Q0_Q1, ARM::Q1_Q2, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::D1_D2_D3, ARM::D2_D3_D4, ARM::D3_D4_D5, ARM::D1_D3_D5, ARM::D3_D5_D7, ARM::D1_D3_D5_D7, ARM::D3_D5_D7_D9, ARM::D3_D4, ARM::D1_D2_D3_D4, ARM::D3_D4_D5_D6, 0,
  /* 9168 */ ARM::D3, ARM::S6, ARM::S7, ARM::Q1, ARM::D1_D3, ARM::D3_D5, ARM::Q0_Q1, ARM::Q1_Q2, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::D1_D2_D3, ARM::D2_D3_D4, ARM::D3_D4_D5, ARM::D1_D3_D5, ARM::D3_D5_D7, ARM::D1_D3_D5_D7, ARM::D3_D5_D7_D9, ARM::D3_D4, ARM::D1_D2_D3_D4, ARM::D3_D4_D5_D6, 0,
  /* 9189 */ ARM::S8, ARM::D4, ARM::Q2, ARM::D2_D4, ARM::D4_D6, ARM::Q1_Q2, ARM::Q2_Q3, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::D2_D3_D4, ARM::D3_D4_D5, ARM::D4_D5_D6, ARM::D0_D2_D4, ARM::D2_D4_D6, ARM::D4_D6_D8, ARM::D0_D2_D4_D6, ARM::D2_D4_D6_D8, ARM::D4_D6_D8_D10, ARM::D3_D4, ARM::D1_D2_D3_D4, ARM::D3_D4_D5_D6, 0,
  /* 9212 */ ARM::S9, ARM::D4, ARM::Q2, ARM::D2_D4, ARM::D4_D6, ARM::Q1_Q2, ARM::Q2_Q3, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::D2_D3_D4, ARM::D3_D4_D5, ARM::D4_D5_D6, ARM::D0_D2_D4, ARM::D2_D4_D6, ARM::D4_D6_D8, ARM::D0_D2_D4_D6, ARM::D2_D4_D6_D8, ARM::D4_D6_D8_D10, ARM::D3_D4, ARM::D1_D2_D3_D4, ARM::D3_D4_D5_D6, 0,
  /* 9235 */ ARM::D4, ARM::S8, ARM::S9, ARM::Q2, ARM::D2_D4, ARM::D4_D6, ARM::Q1_Q2, ARM::Q2_Q3, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::D2_D3_D4, ARM::D3_D4_D5, ARM::D4_D5_D6, ARM::D0_D2_D4, ARM::D2_D4_D6, ARM::D4_D6_D8, ARM::D0_D2_D4_D6, ARM::D2_D4_D6_D8, ARM::D4_D6_D8_D10, ARM::D3_D4, ARM::D1_D2_D3_D4, ARM::D3_D4_D5_D6, 0,
  /* 9259 */ ARM::S10, ARM::D5, ARM::Q2, ARM::D3_D5, ARM::D5_D7, ARM::Q1_Q2, ARM::Q2_Q3, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::D3_D4_D5, ARM::D4_D5_D6, ARM::D5_D6_D7, ARM::D1_D3_D5, ARM::D3_D5_D7, ARM::D5_D7_D9, ARM::D1_D3_D5_D7, ARM::D3_D5_D7_D9, ARM::D5_D7_D9_D11, ARM::D5_D6, ARM::D3_D4_D5_D6, ARM::D5_D6_D7_D8, 0,
  /* 9282 */ ARM::S11, ARM::D5, ARM::Q2, ARM::D3_D5, ARM::D5_D7, ARM::Q1_Q2, ARM::Q2_Q3, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::D3_D4_D5, ARM::D4_D5_D6, ARM::D5_D6_D7, ARM::D1_D3_D5, ARM::D3_D5_D7, ARM::D5_D7_D9, ARM::D1_D3_D5_D7, ARM::D3_D5_D7_D9, ARM::D5_D7_D9_D11, ARM::D5_D6, ARM::D3_D4_D5_D6, ARM::D5_D6_D7_D8, 0,
  /* 9305 */ ARM::D5, ARM::S10, ARM::S11, ARM::Q2, ARM::D3_D5, ARM::D5_D7, ARM::Q1_Q2, ARM::Q2_Q3, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::D3_D4_D5, ARM::D4_D5_D6, ARM::D5_D6_D7, ARM::D1_D3_D5, ARM::D3_D5_D7, ARM::D5_D7_D9, ARM::D1_D3_D5_D7, ARM::D3_D5_D7_D9, ARM::D5_D7_D9_D11, ARM::D5_D6, ARM::D3_D4_D5_D6, ARM::D5_D6_D7_D8, 0,
  /* 9329 */ ARM::S12, ARM::D6, ARM::Q3, ARM::D4_D6, ARM::D6_D8, ARM::Q2_Q3, ARM::Q3_Q4, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::D4_D5_D6, ARM::D5_D6_D7, ARM::D6_D7_D8, ARM::D2_D4_D6, ARM::D4_D6_D8, ARM::D6_D8_D10, ARM::D0_D2_D4_D6, ARM::D2_D4_D6_D8, ARM::D4_D6_D8_D10, ARM::D6_D8_D10_D12, ARM::D5_D6, ARM::D3_D4_D5_D6, ARM::D5_D6_D7_D8, 0,
  /* 9354 */ ARM::S13, ARM::D6, ARM::Q3, ARM::D4_D6, ARM::D6_D8, ARM::Q2_Q3, ARM::Q3_Q4, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::D4_D5_D6, ARM::D5_D6_D7, ARM::D6_D7_D8, ARM::D2_D4_D6, ARM::D4_D6_D8, ARM::D6_D8_D10, ARM::D0_D2_D4_D6, ARM::D2_D4_D6_D8, ARM::D4_D6_D8_D10, ARM::D6_D8_D10_D12, ARM::D5_D6, ARM::D3_D4_D5_D6, ARM::D5_D6_D7_D8, 0,
  /* 9379 */ ARM::D6, ARM::S12, ARM::S13, ARM::Q3, ARM::D4_D6, ARM::D6_D8, ARM::Q2_Q3, ARM::Q3_Q4, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::D4_D5_D6, ARM::D5_D6_D7, ARM::D6_D7_D8, ARM::D2_D4_D6, ARM::D4_D6_D8, ARM::D6_D8_D10, ARM::D0_D2_D4_D6, ARM::D2_D4_D6_D8, ARM::D4_D6_D8_D10, ARM::D6_D8_D10_D12, ARM::D5_D6, ARM::D3_D4_D5_D6, ARM::D5_D6_D7_D8, 0,
  /* 9405 */ ARM::S14, ARM::D7, ARM::Q3, ARM::D5_D7, ARM::D7_D9, ARM::Q2_Q3, ARM::Q3_Q4, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::D5_D6_D7, ARM::D6_D7_D8, ARM::D7_D8_D9, ARM::D3_D5_D7, ARM::D5_D7_D9, ARM::D7_D9_D11, ARM::D1_D3_D5_D7, ARM::D3_D5_D7_D9, ARM::D5_D7_D9_D11, ARM::D7_D9_D11_D13, ARM::D7_D8, ARM::D5_D6_D7_D8, ARM::D7_D8_D9_D10, 0,
  /* 9430 */ ARM::S15, ARM::D7, ARM::Q3, ARM::D5_D7, ARM::D7_D9, ARM::Q2_Q3, ARM::Q3_Q4, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::D5_D6_D7, ARM::D6_D7_D8, ARM::D7_D8_D9, ARM::D3_D5_D7, ARM::D5_D7_D9, ARM::D7_D9_D11, ARM::D1_D3_D5_D7, ARM::D3_D5_D7_D9, ARM::D5_D7_D9_D11, ARM::D7_D9_D11_D13, ARM::D7_D8, ARM::D5_D6_D7_D8, ARM::D7_D8_D9_D10, 0,
  /* 9455 */ ARM::D7, ARM::S14, ARM::S15, ARM::Q3, ARM::D5_D7, ARM::D7_D9, ARM::Q2_Q3, ARM::Q3_Q4, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::D5_D6_D7, ARM::D6_D7_D8, ARM::D7_D8_D9, ARM::D3_D5_D7, ARM::D5_D7_D9, ARM::D7_D9_D11, ARM::D1_D3_D5_D7, ARM::D3_D5_D7_D9, ARM::D5_D7_D9_D11, ARM::D7_D9_D11_D13, ARM::D7_D8, ARM::D5_D6_D7_D8, ARM::D7_D8_D9_D10, 0,
  /* 9481 */ ARM::S16, ARM::D8, ARM::Q4, ARM::D6_D8, ARM::D8_D10, ARM::Q3_Q4, ARM::Q4_Q5, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::D6_D7_D8, ARM::D7_D8_D9, ARM::D8_D9_D10, ARM::D4_D6_D8, ARM::D6_D8_D10, ARM::D8_D10_D12, ARM::D2_D4_D6_D8, ARM::D4_D6_D8_D10, ARM::D6_D8_D10_D12, ARM::D8_D10_D12_D14, ARM::D7_D8, ARM::D5_D6_D7_D8, ARM::D7_D8_D9_D10, 0,
  /* 9506 */ ARM::S17, ARM::D8, ARM::Q4, ARM::D6_D8, ARM::D8_D10, ARM::Q3_Q4, ARM::Q4_Q5, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::D6_D7_D8, ARM::D7_D8_D9, ARM::D8_D9_D10, ARM::D4_D6_D8, ARM::D6_D8_D10, ARM::D8_D10_D12, ARM::D2_D4_D6_D8, ARM::D4_D6_D8_D10, ARM::D6_D8_D10_D12, ARM::D8_D10_D12_D14, ARM::D7_D8, ARM::D5_D6_D7_D8, ARM::D7_D8_D9_D10, 0,
  /* 9531 */ ARM::D8, ARM::S16, ARM::S17, ARM::Q4, ARM::D6_D8, ARM::D8_D10, ARM::Q3_Q4, ARM::Q4_Q5, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::D6_D7_D8, ARM::D7_D8_D9, ARM::D8_D9_D10, ARM::D4_D6_D8, ARM::D6_D8_D10, ARM::D8_D10_D12, ARM::D2_D4_D6_D8, ARM::D4_D6_D8_D10, ARM::D6_D8_D10_D12, ARM::D8_D10_D12_D14, ARM::D7_D8, ARM::D5_D6_D7_D8, ARM::D7_D8_D9_D10, 0,
  /* 9557 */ ARM::S18, ARM::D9, ARM::Q4, ARM::D7_D9, ARM::D9_D11, ARM::Q3_Q4, ARM::Q4_Q5, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::D7_D8_D9, ARM::D8_D9_D10, ARM::D9_D10_D11, ARM::D5_D7_D9, ARM::D7_D9_D11, ARM::D9_D11_D13, ARM::D3_D5_D7_D9, ARM::D5_D7_D9_D11, ARM::D7_D9_D11_D13, ARM::D9_D11_D13_D15, ARM::D9_D10, ARM::D7_D8_D9_D10, ARM::D9_D10_D11_D12, 0,
  /* 9582 */ ARM::S19, ARM::D9, ARM::Q4, ARM::D7_D9, ARM::D9_D11, ARM::Q3_Q4, ARM::Q4_Q5, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::D7_D8_D9, ARM::D8_D9_D10, ARM::D9_D10_D11, ARM::D5_D7_D9, ARM::D7_D9_D11, ARM::D9_D11_D13, ARM::D3_D5_D7_D9, ARM::D5_D7_D9_D11, ARM::D7_D9_D11_D13, ARM::D9_D11_D13_D15, ARM::D9_D10, ARM::D7_D8_D9_D10, ARM::D9_D10_D11_D12, 0,
  /* 9607 */ ARM::D9, ARM::S18, ARM::S19, ARM::Q4, ARM::D7_D9, ARM::D9_D11, ARM::Q3_Q4, ARM::Q4_Q5, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::D7_D8_D9, ARM::D8_D9_D10, ARM::D9_D10_D11, ARM::D5_D7_D9, ARM::D7_D9_D11, ARM::D9_D11_D13, ARM::D3_D5_D7_D9, ARM::D5_D7_D9_D11, ARM::D7_D9_D11_D13, ARM::D9_D11_D13_D15, ARM::D9_D10, ARM::D7_D8_D9_D10, ARM::D9_D10_D11_D12, 0,
  /* 9633 */ ARM::S20, ARM::D10, ARM::Q5, ARM::D8_D10, ARM::D10_D12, ARM::Q4_Q5, ARM::Q5_Q6, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::D8_D9_D10, ARM::D9_D10_D11, ARM::D10_D11_D12, ARM::D6_D8_D10, ARM::D8_D10_D12, ARM::D10_D12_D14, ARM::D4_D6_D8_D10, ARM::D6_D8_D10_D12, ARM::D8_D10_D12_D14, ARM::D10_D12_D14_D16, ARM::D9_D10, ARM::D7_D8_D9_D10, ARM::D9_D10_D11_D12, 0,
  /* 9658 */ ARM::S21, ARM::D10, ARM::Q5, ARM::D8_D10, ARM::D10_D12, ARM::Q4_Q5, ARM::Q5_Q6, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::D8_D9_D10, ARM::D9_D10_D11, ARM::D10_D11_D12, ARM::D6_D8_D10, ARM::D8_D10_D12, ARM::D10_D12_D14, ARM::D4_D6_D8_D10, ARM::D6_D8_D10_D12, ARM::D8_D10_D12_D14, ARM::D10_D12_D14_D16, ARM::D9_D10, ARM::D7_D8_D9_D10, ARM::D9_D10_D11_D12, 0,
  /* 9683 */ ARM::D10, ARM::S20, ARM::S21, ARM::Q5, ARM::D8_D10, ARM::D10_D12, ARM::Q4_Q5, ARM::Q5_Q6, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::D8_D9_D10, ARM::D9_D10_D11, ARM::D10_D11_D12, ARM::D6_D8_D10, ARM::D8_D10_D12, ARM::D10_D12_D14, ARM::D4_D6_D8_D10, ARM::D6_D8_D10_D12, ARM::D8_D10_D12_D14, ARM::D10_D12_D14_D16, ARM::D9_D10, ARM::D7_D8_D9_D10, ARM::D9_D10_D11_D12, 0,
  /* 9709 */ ARM::S22, ARM::D11, ARM::Q5, ARM::D9_D11, ARM::D11_D13, ARM::Q4_Q5, ARM::Q5_Q6, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::D9_D10_D11, ARM::D10_D11_D12, ARM::D11_D12_D13, ARM::D7_D9_D11, ARM::D9_D11_D13, ARM::D11_D13_D15, ARM::D5_D7_D9_D11, ARM::D7_D9_D11_D13, ARM::D9_D11_D13_D15, ARM::D11_D13_D15_D17, ARM::D11_D12, ARM::D9_D10_D11_D12, ARM::D11_D12_D13_D14, 0,
  /* 9734 */ ARM::S23, ARM::D11, ARM::Q5, ARM::D9_D11, ARM::D11_D13, ARM::Q4_Q5, ARM::Q5_Q6, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::D9_D10_D11, ARM::D10_D11_D12, ARM::D11_D12_D13, ARM::D7_D9_D11, ARM::D9_D11_D13, ARM::D11_D13_D15, ARM::D5_D7_D9_D11, ARM::D7_D9_D11_D13, ARM::D9_D11_D13_D15, ARM::D11_D13_D15_D17, ARM::D11_D12, ARM::D9_D10_D11_D12, ARM::D11_D12_D13_D14, 0,
  /* 9759 */ ARM::D11, ARM::S22, ARM::S23, ARM::Q5, ARM::D9_D11, ARM::D11_D13, ARM::Q4_Q5, ARM::Q5_Q6, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::D9_D10_D11, ARM::D10_D11_D12, ARM::D11_D12_D13, ARM::D7_D9_D11, ARM::D9_D11_D13, ARM::D11_D13_D15, ARM::D5_D7_D9_D11, ARM::D7_D9_D11_D13, ARM::D9_D11_D13_D15, ARM::D11_D13_D15_D17, ARM::D11_D12, ARM::D9_D10_D11_D12, ARM::D11_D12_D13_D14, 0,
  /* 9785 */ ARM::S24, ARM::D12, ARM::Q6, ARM::D10_D12, ARM::D12_D14, ARM::Q5_Q6, ARM::Q6_Q7, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::D10_D11_D12, ARM::D11_D12_D13, ARM::D12_D13_D14, ARM::D8_D10_D12, ARM::D10_D12_D14, ARM::D12_D14_D16, ARM::D6_D8_D10_D12, ARM::D8_D10_D12_D14, ARM::D10_D12_D14_D16, ARM::D12_D14_D16_D18, ARM::D11_D12, ARM::D9_D10_D11_D12, ARM::D11_D12_D13_D14, 0,
  /* 9810 */ ARM::S25, ARM::D12, ARM::Q6, ARM::D10_D12, ARM::D12_D14, ARM::Q5_Q6, ARM::Q6_Q7, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::D10_D11_D12, ARM::D11_D12_D13, ARM::D12_D13_D14, ARM::D8_D10_D12, ARM::D10_D12_D14, ARM::D12_D14_D16, ARM::D6_D8_D10_D12, ARM::D8_D10_D12_D14, ARM::D10_D12_D14_D16, ARM::D12_D14_D16_D18, ARM::D11_D12, ARM::D9_D10_D11_D12, ARM::D11_D12_D13_D14, 0,
  /* 9835 */ ARM::D12, ARM::S24, ARM::S25, ARM::Q6, ARM::D10_D12, ARM::D12_D14, ARM::Q5_Q6, ARM::Q6_Q7, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::D10_D11_D12, ARM::D11_D12_D13, ARM::D12_D13_D14, ARM::D8_D10_D12, ARM::D10_D12_D14, ARM::D12_D14_D16, ARM::D6_D8_D10_D12, ARM::D8_D10_D12_D14, ARM::D10_D12_D14_D16, ARM::D12_D14_D16_D18, ARM::D11_D12, ARM::D9_D10_D11_D12, ARM::D11_D12_D13_D14, 0,
  /* 9861 */ ARM::S26, ARM::D13, ARM::Q6, ARM::D11_D13, ARM::D13_D15, ARM::Q5_Q6, ARM::Q6_Q7, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::D11_D12_D13, ARM::D12_D13_D14, ARM::D13_D14_D15, ARM::D9_D11_D13, ARM::D11_D13_D15, ARM::D13_D15_D17, ARM::D7_D9_D11_D13, ARM::D9_D11_D13_D15, ARM::D11_D13_D15_D17, ARM::D13_D15_D17_D19, ARM::D13_D14, ARM::D11_D12_D13_D14, ARM::D13_D14_D15_D16, 0,
  /* 9886 */ ARM::S27, ARM::D13, ARM::Q6, ARM::D11_D13, ARM::D13_D15, ARM::Q5_Q6, ARM::Q6_Q7, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::D11_D12_D13, ARM::D12_D13_D14, ARM::D13_D14_D15, ARM::D9_D11_D13, ARM::D11_D13_D15, ARM::D13_D15_D17, ARM::D7_D9_D11_D13, ARM::D9_D11_D13_D15, ARM::D11_D13_D15_D17, ARM::D13_D15_D17_D19, ARM::D13_D14, ARM::D11_D12_D13_D14, ARM::D13_D14_D15_D16, 0,
  /* 9911 */ ARM::D13, ARM::S26, ARM::S27, ARM::Q6, ARM::D11_D13, ARM::D13_D15, ARM::Q5_Q6, ARM::Q6_Q7, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::D11_D12_D13, ARM::D12_D13_D14, ARM::D13_D14_D15, ARM::D9_D11_D13, ARM::D11_D13_D15, ARM::D13_D15_D17, ARM::D7_D9_D11_D13, ARM::D9_D11_D13_D15, ARM::D11_D13_D15_D17, ARM::D13_D15_D17_D19, ARM::D13_D14, ARM::D11_D12_D13_D14, ARM::D13_D14_D15_D16, 0,
  /* 9937 */ ARM::S28, ARM::D14, ARM::Q7, ARM::D12_D14, ARM::D14_D16, ARM::Q6_Q7, ARM::Q7_Q8, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::D12_D13_D14, ARM::D13_D14_D15, ARM::D14_D15_D16, ARM::D10_D12_D14, ARM::D12_D14_D16, ARM::D14_D16_D18, ARM::D8_D10_D12_D14, ARM::D10_D12_D14_D16, ARM::D12_D14_D16_D18, ARM::D14_D16_D18_D20, ARM::D13_D14, ARM::D11_D12_D13_D14, ARM::D13_D14_D15_D16, 0,
  /* 9962 */ ARM::S29, ARM::D14, ARM::Q7, ARM::D12_D14, ARM::D14_D16, ARM::Q6_Q7, ARM::Q7_Q8, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::D12_D13_D14, ARM::D13_D14_D15, ARM::D14_D15_D16, ARM::D10_D12_D14, ARM::D12_D14_D16, ARM::D14_D16_D18, ARM::D8_D10_D12_D14, ARM::D10_D12_D14_D16, ARM::D12_D14_D16_D18, ARM::D14_D16_D18_D20, ARM::D13_D14, ARM::D11_D12_D13_D14, ARM::D13_D14_D15_D16, 0,
  /* 9987 */ ARM::D14, ARM::S28, ARM::S29, ARM::Q7, ARM::D12_D14, ARM::D14_D16, ARM::Q6_Q7, ARM::Q7_Q8, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::D12_D13_D14, ARM::D13_D14_D15, ARM::D14_D15_D16, ARM::D10_D12_D14, ARM::D12_D14_D16, ARM::D14_D16_D18, ARM::D8_D10_D12_D14, ARM::D10_D12_D14_D16, ARM::D12_D14_D16_D18, ARM::D14_D16_D18_D20, ARM::D13_D14, ARM::D11_D12_D13_D14, ARM::D13_D14_D15_D16, 0,
  /* 10013 */ ARM::S30, ARM::D15, ARM::Q7, ARM::D13_D15, ARM::D15_D17, ARM::Q6_Q7, ARM::Q7_Q8, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::D13_D14_D15, ARM::D14_D15_D16, ARM::D15_D16_D17, ARM::D11_D13_D15, ARM::D13_D15_D17, ARM::D15_D17_D19, ARM::D9_D11_D13_D15, ARM::D11_D13_D15_D17, ARM::D13_D15_D17_D19, ARM::D15_D17_D19_D21, ARM::D15_D16, ARM::D13_D14_D15_D16, ARM::D15_D16_D17_D18, 0,
  /* 10038 */ ARM::S31, ARM::D15, ARM::Q7, ARM::D13_D15, ARM::D15_D17, ARM::Q6_Q7, ARM::Q7_Q8, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::D13_D14_D15, ARM::D14_D15_D16, ARM::D15_D16_D17, ARM::D11_D13_D15, ARM::D13_D15_D17, ARM::D15_D17_D19, ARM::D9_D11_D13_D15, ARM::D11_D13_D15_D17, ARM::D13_D15_D17_D19, ARM::D15_D17_D19_D21, ARM::D15_D16, ARM::D13_D14_D15_D16, ARM::D15_D16_D17_D18, 0,
  /* 10063 */ ARM::D15, ARM::S30, ARM::S31, ARM::Q7, ARM::D13_D15, ARM::D15_D17, ARM::Q6_Q7, ARM::Q7_Q8, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::D13_D14_D15, ARM::D14_D15_D16, ARM::D15_D16_D17, ARM::D11_D13_D15, ARM::D13_D15_D17, ARM::D15_D17_D19, ARM::D9_D11_D13_D15, ARM::D11_D13_D15_D17, ARM::D13_D15_D17_D19, ARM::D15_D17_D19_D21, ARM::D15_D16, ARM::D13_D14_D15_D16, ARM::D15_D16_D17_D18, 0,
  /* 10089 */ ARM::D16, ARM::Q8, ARM::D14_D16, ARM::D16_D18, ARM::Q7_Q8, ARM::Q8_Q9, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::D14_D15_D16, ARM::D15_D16_D17, ARM::D16_D17_D18, ARM::D12_D14_D16, ARM::D14_D16_D18, ARM::D16_D18_D20, ARM::D10_D12_D14_D16, ARM::D12_D14_D16_D18, ARM::D14_D16_D18_D20, ARM::D16_D18_D20_D22, ARM::D15_D16, ARM::D13_D14_D15_D16, ARM::D15_D16_D17_D18, 0,
  /* 10113 */ ARM::D17, ARM::Q8, ARM::D15_D17, ARM::D17_D19, ARM::Q7_Q8, ARM::Q8_Q9, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::D15_D16_D17, ARM::D16_D17_D18, ARM::D17_D18_D19, ARM::D13_D15_D17, ARM::D15_D17_D19, ARM::D17_D19_D21, ARM::D11_D13_D15_D17, ARM::D13_D15_D17_D19, ARM::D15_D17_D19_D21, ARM::D17_D19_D21_D23, ARM::D17_D18, ARM::D15_D16_D17_D18, ARM::D17_D18_D19_D20, 0,
  /* 10137 */ ARM::D18, ARM::Q9, ARM::D16_D18, ARM::D18_D20, ARM::Q8_Q9, ARM::Q9_Q10, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::D16_D17_D18, ARM::D17_D18_D19, ARM::D18_D19_D20, ARM::D14_D16_D18, ARM::D16_D18_D20, ARM::D18_D20_D22, ARM::D12_D14_D16_D18, ARM::D14_D16_D18_D20, ARM::D16_D18_D20_D22, ARM::D18_D20_D22_D24, ARM::D17_D18, ARM::D15_D16_D17_D18, ARM::D17_D18_D19_D20, 0,
  /* 10161 */ ARM::D19, ARM::Q9, ARM::D17_D19, ARM::D19_D21, ARM::Q8_Q9, ARM::Q9_Q10, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::D17_D18_D19, ARM::D18_D19_D20, ARM::D19_D20_D21, ARM::D15_D17_D19, ARM::D17_D19_D21, ARM::D19_D21_D23, ARM::D13_D15_D17_D19, ARM::D15_D17_D19_D21, ARM::D17_D19_D21_D23, ARM::D19_D21_D23_D25, ARM::D19_D20, ARM::D17_D18_D19_D20, ARM::D19_D20_D21_D22, 0,
  /* 10185 */ ARM::D20, ARM::Q10, ARM::D18_D20, ARM::D20_D22, ARM::Q9_Q10, ARM::Q10_Q11, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::D18_D19_D20, ARM::D19_D20_D21, ARM::D20_D21_D22, ARM::D16_D18_D20, ARM::D18_D20_D22, ARM::D20_D22_D24, ARM::D14_D16_D18_D20, ARM::D16_D18_D20_D22, ARM::D18_D20_D22_D24, ARM::D20_D22_D24_D26, ARM::D19_D20, ARM::D17_D18_D19_D20, ARM::D19_D20_D21_D22, 0,
  /* 10209 */ ARM::D21, ARM::Q10, ARM::D19_D21, ARM::D21_D23, ARM::Q9_Q10, ARM::Q10_Q11, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::D19_D20_D21, ARM::D20_D21_D22, ARM::D21_D22_D23, ARM::D17_D19_D21, ARM::D19_D21_D23, ARM::D21_D23_D25, ARM::D15_D17_D19_D21, ARM::D17_D19_D21_D23, ARM::D19_D21_D23_D25, ARM::D21_D23_D25_D27, ARM::D21_D22, ARM::D19_D20_D21_D22, ARM::D21_D22_D23_D24, 0,
  /* 10233 */ ARM::D22, ARM::Q11, ARM::D20_D22, ARM::D22_D24, ARM::Q10_Q11, ARM::Q11_Q12, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::D20_D21_D22, ARM::D21_D22_D23, ARM::D22_D23_D24, ARM::D18_D20_D22, ARM::D20_D22_D24, ARM::D22_D24_D26, ARM::D16_D18_D20_D22, ARM::D18_D20_D22_D24, ARM::D20_D22_D24_D26, ARM::D22_D24_D26_D28, ARM::D21_D22, ARM::D19_D20_D21_D22, ARM::D21_D22_D23_D24, 0,
  /* 10257 */ ARM::D23, ARM::Q11, ARM::D21_D23, ARM::D23_D25, ARM::Q10_Q11, ARM::Q11_Q12, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::D21_D22_D23, ARM::D22_D23_D24, ARM::D23_D24_D25, ARM::D19_D21_D23, ARM::D21_D23_D25, ARM::D23_D25_D27, ARM::D17_D19_D21_D23, ARM::D19_D21_D23_D25, ARM::D21_D23_D25_D27, ARM::D23_D25_D27_D29, ARM::D23_D24, ARM::D21_D22_D23_D24, ARM::D23_D24_D25_D26, 0,
  /* 10281 */ ARM::D24, ARM::Q12, ARM::D22_D24, ARM::D24_D26, ARM::Q11_Q12, ARM::Q12_Q13, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::Q12_Q13_Q14_Q15, ARM::D22_D23_D24, ARM::D23_D24_D25, ARM::D24_D25_D26, ARM::D20_D22_D24, ARM::D22_D24_D26, ARM::D24_D26_D28, ARM::D18_D20_D22_D24, ARM::D20_D22_D24_D26, ARM::D22_D24_D26_D28, ARM::D24_D26_D28_D30, ARM::D23_D24, ARM::D21_D22_D23_D24, ARM::D23_D24_D25_D26, 0,
  /* 10305 */ ARM::D26, ARM::Q13, ARM::D24_D26, ARM::D26_D28, ARM::Q12_Q13, ARM::Q13_Q14, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::Q12_Q13_Q14_Q15, ARM::D24_D25_D26, ARM::D25_D26_D27, ARM::D26_D27_D28, ARM::D22_D24_D26, ARM::D24_D26_D28, ARM::D26_D28_D30, ARM::D20_D22_D24_D26, ARM::D22_D24_D26_D28, ARM::D24_D26_D28_D30, ARM::D25_D26, ARM::D23_D24_D25_D26, ARM::D25_D26_D27_D28, 0,
  /* 10327 */ ARM::D25, ARM::Q12, ARM::D23_D25, ARM::D25_D27, ARM::Q11_Q12, ARM::Q12_Q13, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::Q12_Q13_Q14_Q15, ARM::D23_D24_D25, ARM::D24_D25_D26, ARM::D25_D26_D27, ARM::D21_D23_D25, ARM::D23_D25_D27, ARM::D25_D27_D29, ARM::D19_D21_D23_D25, ARM::D21_D23_D25_D27, ARM::D23_D25_D27_D29, ARM::D25_D27_D29_D31, ARM::D25_D26, ARM::D23_D24_D25_D26, ARM::D25_D26_D27_D28, 0,
  /* 10351 */ ARM::D30, ARM::Q15, ARM::D28_D30, ARM::Q14_Q15, ARM::Q12_Q13_Q14_Q15, ARM::D28_D29_D30, ARM::D29_D30_D31, ARM::D26_D28_D30, ARM::D24_D26_D28_D30, ARM::D29_D30, ARM::D27_D28_D29_D30, 0,
  /* 10363 */ ARM::D29, ARM::Q14, ARM::D27_D29, ARM::D29_D31, ARM::Q13_Q14, ARM::Q14_Q15, ARM::Q11_Q12_Q13_Q14, ARM::Q12_Q13_Q14_Q15, ARM::D27_D28_D29, ARM::D28_D29_D30, ARM::D29_D30_D31, ARM::D25_D27_D29, ARM::D27_D29_D31, ARM::D23_D25_D27_D29, ARM::D25_D27_D29_D31, ARM::D29_D30, ARM::D27_D28_D29_D30, 0,
  /* 10381 */ ARM::D28, ARM::Q14, ARM::D26_D28, ARM::D28_D30, ARM::Q13_Q14, ARM::Q14_Q15, ARM::Q11_Q12_Q13_Q14, ARM::Q12_Q13_Q14_Q15, ARM::D26_D27_D28, ARM::D27_D28_D29, ARM::D28_D29_D30, ARM::D24_D26_D28, ARM::D26_D28_D30, ARM::D22_D24_D26_D28, ARM::D24_D26_D28_D30, ARM::D27_D28, ARM::D25_D26_D27_D28, ARM::D27_D28_D29_D30, 0,
  /* 10400 */ ARM::D27, ARM::Q13, ARM::D25_D27, ARM::D27_D29, ARM::Q12_Q13, ARM::Q13_Q14, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::Q12_Q13_Q14_Q15, ARM::D25_D26_D27, ARM::D26_D27_D28, ARM::D27_D28_D29, ARM::D23_D25_D27, ARM::D25_D27_D29, ARM::D27_D29_D31, ARM::D21_D23_D25_D27, ARM::D23_D25_D27_D29, ARM::D25_D27_D29_D31, ARM::D27_D28, ARM::D25_D26_D27_D28, ARM::D27_D28_D29_D30, 0,
};

extern const MCRegisterDesc ARMRegDesc[] = { // Descriptors
  { "NOREG", 0, 0, 0 },
  { "APSR", 0, 1, 1 },
  { "CPSR", 2, 1, 1 },
  { "D0", 9010, 4568, 8992 },
  { "D1", 9056, 4588, 9032 },
  { "D2", 9108, 4612, 9072 },
  { "D3", 9168, 4696, 9130 },
  { "D4", 9235, 4840, 9191 },
  { "D5", 9305, 5037, 9261 },
  { "D6", 9379, 5255, 9331 },
  { "D7", 9455, 5534, 9407 },
  { "D8", 9531, 5860, 9483 },
  { "D9", 9607, 6161, 9559 },
  { "D10", 9683, 6513, 9635 },
  { "D11", 9759, 6821, 9711 },
  { "D12", 9835, 7183, 9787 },
  { "D13", 9911, 7493, 9863 },
  { "D14", 9987, 7858, 9939 },
  { "D15", 10063, 8168, 10015 },
  { "D16", 10089, 1, 10090 },
  { "D17", 10113, 1, 10114 },
  { "D18", 10137, 1, 10138 },
  { "D19", 10161, 1, 10162 },
  { "D20", 10185, 1, 10186 },
  { "D21", 10209, 1, 10210 },
  { "D22", 10233, 1, 10234 },
  { "D23", 10257, 1, 10258 },
  { "D24", 10281, 1, 10282 },
  { "D25", 10327, 1, 10328 },
  { "D26", 10305, 1, 10306 },
  { "D27", 10400, 1, 10401 },
  { "D28", 10381, 1, 10382 },
  { "D29", 10363, 1, 10364 },
  { "D30", 10351, 1, 10352 },
  { "D31", 9021, 1, 9022 },
  { "FPEXC", 4522, 1, 1 },
  { "FPSCR", 4527, 1, 1 },
  { "FPSCR_NZCV", 4524, 1, 1 },
  { "FPSID", 4530, 1, 1 },
  { "ITSTATE", 4532, 1, 1 },
  { "LR", 4534, 1, 1 },
  { "MVFR0", 4536, 1, 1 },
  { "MVFR1", 4538, 1, 1 },
  { "PC", 4540, 1, 1 },
  { "Q0", 4571, 4584, 8475 },
  { "Q1", 4774, 4731, 8478 },
  { "Q2", 5170, 5118, 8486 },
  { "Q3", 8495, 5691, 8529 },
  { "Q4", 8539, 6335, 8573 },
  { "Q5", 8583, 7003, 8617 },
  { "Q6", 8627, 7678, 8661 },
  { "Q7", 8671, 8353, 8705 },
  { "Q8", 8715, 393, 8745 },
  { "Q9", 8755, 1117, 8785 },
  { "Q10", 8795, 1720, 8825 },
  { "Q11", 8835, 2315, 8865 },
  { "Q12", 8953, 2906, 8983 },
  { "Q13", 8919, 3476, 8947 },
  { "Q14", 8891, 4001, 8914 },
  { "Q15", 8872, 4427, 8885 },
  { "R0", 4542, 1, 1 },
  { "R1", 4544, 1, 1 },
  { "R2", 4546, 1, 1 },
  { "R3", 4548, 1, 1 },
  { "R4", 4550, 1, 1 },
  { "R5", 4552, 1, 1 },
  { "R6", 4554, 1, 1 },
  { "R7", 4556, 1, 1 },
  { "R8", 4558, 1, 1 },
  { "R9", 4560, 1, 1 },
  { "R10", 4562, 1, 1 },
  { "R11", 4564, 1, 1 },
  { "R12", 4566, 1, 1 },
  { "S0", 8990, 1, 8991 },
  { "S1", 9000, 1, 8991 },
  { "S2", 9030, 1, 9031 },
  { "S3", 9043, 1, 9031 },
  { "S4", 9070, 1, 9071 },
  { "S5", 9089, 1, 9071 },
  { "S6", 9128, 1, 9129 },
  { "S7", 9148, 1, 9129 },
  { "S8", 9189, 1, 9190 },
  { "S9", 9212, 1, 9190 },
  { "S10", 9259, 1, 9260 },
  { "S11", 9282, 1, 9260 },
  { "S12", 9329, 1, 9330 },
  { "S13", 9354, 1, 9330 },
  { "S14", 9405, 1, 9406 },
  { "S15", 9430, 1, 9406 },
  { "S16", 9481, 1, 9482 },
  { "S17", 9506, 1, 9482 },
  { "S18", 9557, 1, 9558 },
  { "S19", 9582, 1, 9558 },
  { "S20", 9633, 1, 9634 },
  { "S21", 9658, 1, 9634 },
  { "S22", 9709, 1, 9710 },
  { "S23", 9734, 1, 9710 },
  { "S24", 9785, 1, 9786 },
  { "S25", 9810, 1, 9786 },
  { "S26", 9861, 1, 9862 },
  { "S27", 9886, 1, 9862 },
  { "S28", 9937, 1, 9938 },
  { "S29", 9962, 1, 9938 },
  { "S30", 10013, 1, 10014 },
  { "S31", 10038, 1, 10014 },
  { "SP", 8471, 1, 1 },
  { "SPSR", 8473, 1, 1 },
  { "D0_D2", 4591, 4608, 1 },
  { "D1_D3", 4672, 4692, 1 },
  { "D2_D4", 4843, 4836, 1 },
  { "D3_D5", 5040, 5033, 1 },
  { "D4_D6", 5304, 5251, 1 },
  { "D5_D7", 5584, 5530, 1 },
  { "D6_D8", 5913, 5856, 1 },
  { "D7_D9", 6214, 6157, 1 },
  { "D8_D10", 6568, 6509, 1 },
  { "D9_D11", 6876, 6817, 1 },
  { "D10_D12", 7238, 7179, 1 },
  { "D11_D13", 7548, 7489, 1 },
  { "D12_D14", 7913, 7854, 1 },
  { "D13_D15", 8223, 8164, 1 },
  { "D14_D16", 117, 62, 1 },
  { "D15_D17", 612, 557, 1 },
  { "D16_D18", 758, 707, 1 },
  { "D17_D19", 1040, 989, 1 },
  { "D18_D20", 1367, 1318, 1 },
  { "D19_D21", 1643, 1594, 1 },
  { "D20_D22", 1964, 1915, 1 },
  { "D21_D23", 2238, 2189, 1 },
  { "D22_D24", 2555, 2506, 1 },
  { "D23_D25", 2829, 2780, 1 },
  { "D24_D26", 3142, 3095, 1 },
  { "D25_D27", 3404, 3357, 1 },
  { "D26_D28", 3700, 3656, 1 },
  { "D27_D29", 3939, 3896, 1 },
  { "D28_D30", 4199, 4162, 1 },
  { "D29_D31", 4386, 4352, 1 },
  { "Q0_Q1", 4699, 4723, 8476 },
  { "Q1_Q2", 5074, 5110, 8481 },
  { "Q2_Q3", 5698, 5683, 8483 },
  { "Q3_Q4", 6342, 6327, 8492 },
  { "Q4_Q5", 7010, 6995, 8536 },
  { "Q5_Q6", 7685, 7670, 8580 },
  { "Q6_Q7", 8360, 8345, 8624 },
  { "Q7_Q8", 396, 385, 8668 },
  { "Q8_Q9", 1210, 1203, 8712 },
  { "Q9_Q10", 1809, 1802, 8752 },
  { "Q10_Q11", 2400, 2393, 8792 },
  { "Q11_Q12", 2991, 2984, 8832 },
  { "Q12_Q13", 3558, 3551, 8888 },
  { "Q13_Q14", 4077, 4070, 8833 },
  { "Q14_Q15", 4491, 4484, 8886 },
  { "Q0_Q1_Q2_Q3", 5621, 5667, 1 },
  { "Q1_Q2_Q3_Q4", 6253, 6311, 1 },
  { "Q2_Q3_Q4_Q5", 6915, 6979, 1 },
  { "Q3_Q4_Q5_Q6", 7587, 7654, 1 },
  { "Q4_Q5_Q6_Q7", 8262, 8329, 1 },
  { "Q5_Q6_Q7_Q8", 302, 369, 1 },
  { "Q6_Q7_Q8_Q9", 1120, 1187, 1 },
  { "Q7_Q8_Q9_Q10", 1723, 1790, 1 },
  { "Q8_Q9_Q10_Q11", 2318, 2385, 1 },
  { "Q9_Q10_Q11_Q12", 2909, 2976, 1 },
  { "Q10_Q11_Q12_Q13", 3479, 3543, 1 },
  { "Q11_Q12_Q13_Q14", 4004, 4062, 1 },
  { "Q12_Q13_Q14_Q15", 4430, 4476, 1 },
  { "D0_D1_D2", 4615, 4635, 1 },
  { "D1_D2_D3", 4738, 4764, 1 },
  { "D2_D3_D4", 4922, 4912, 1 },
  { "D3_D4_D5", 5125, 5160, 1 },
  { "D4_D5_D6", 5396, 5386, 1 },
  { "D5_D6_D7", 5755, 5794, 1 },
  { "D6_D7_D8", 6011, 6001, 1 },
  { "D7_D8_D9", 6402, 6443, 1 },
  { "D8_D9_D10", 6668, 6658, 1 },
  { "D9_D10_D11", 7070, 7111, 1 },
  { "D10_D11_D12", 7338, 7328, 1 },
  { "D11_D12_D13", 7745, 7786, 1 },
  { "D12_D13_D14", 8013, 8003, 1 },
  { "D13_D14_D15", 8420, 8461, 1 },
  { "D14_D15_D16", 213, 205, 1 },
  { "D15_D16_D17", 452, 493, 1 },
  { "D16_D17_D18", 848, 844, 1 },
  { "D17_D18_D19", 1075, 1116, 1 },
  { "D18_D19_D20", 1455, 1451, 1 },
  { "D19_D20_D21", 1678, 1719, 1 },
  { "D20_D21_D22", 2052, 2048, 1 },
  { "D21_D22_D23", 2273, 2314, 1 },
  { "D22_D23_D24", 2643, 2639, 1 },
  { "D23_D24_D25", 2864, 2905, 1 },
  { "D24_D25_D26", 3226, 3222, 1 },
  { "D25_D26_D27", 3437, 3475, 1 },
  { "D26_D27_D28", 3777, 3773, 1 },
  { "D27_D28_D29", 3968, 4000, 1 },
  { "D28_D29_D30", 4260, 4256, 1 },
  { "D29_D30_D31", 4406, 4426, 1 },
  { "D0_D2_D4", 4806, 4833, 1 },
  { "D1_D3_D5", 5000, 5030, 1 },
  { "D2_D4_D6", 5258, 5248, 1 },
  { "D3_D5_D7", 5537, 5527, 1 },
  { "D4_D6_D8", 5863, 5853, 1 },
  { "D5_D7_D9", 6164, 6154, 1 },
  { "D6_D8_D10", 6516, 6506, 1 },
  { "D7_D9_D11", 6824, 6814, 1 },
  { "D8_D10_D12", 7186, 7176, 1 },
  { "D9_D11_D13", 7496, 7486, 1 },
  { "D10_D12_D14", 7861, 7851, 1 },
  { "D11_D13_D15", 8171, 8161, 1 },
  { "D12_D14_D16", 67, 59, 1 },
  { "D13_D15_D17", 562, 554, 1 },
  { "D14_D16_D18", 710, 704, 1 },
  { "D15_D17_D19", 992, 986, 1 },
  { "D16_D18_D20", 1321, 1317, 1 },
  { "D17_D19_D21", 1597, 1593, 1 },
  { "D18_D20_D22", 1918, 1914, 1 },
  { "D19_D21_D23", 2192, 2188, 1 },
  { "D20_D22_D24", 2509, 2505, 1 },
  { "D21_D23_D25", 2783, 2779, 1 },
  { "D22_D24_D26", 3098, 3094, 1 },
  { "D23_D25_D27", 3360, 3356, 1 },
  { "D24_D26_D28", 3659, 3655, 1 },
  { "D25_D27_D29", 3899, 3895, 1 },
  { "D26_D28_D30", 4165, 4161, 1 },
  { "D27_D29_D31", 4355, 4351, 1 },
  { "D0_D2_D4_D6", 5208, 5245, 1 },
  { "D1_D3_D5_D7", 5484, 5524, 1 },
  { "D2_D4_D6_D8", 5804, 5850, 1 },
  { "D3_D5_D7_D9", 6104, 6151, 1 },
  { "D4_D6_D8_D10", 6453, 6503, 1 },
  { "D5_D7_D9_D11", 6761, 6811, 1 },
  { "D6_D8_D10_D12", 7121, 7173, 1 },
  { "D7_D9_D11_D13", 7431, 7483, 1 },
  { "D8_D10_D12_D14", 7796, 7848, 1 },
  { "D9_D11_D13_D15", 8106, 8158, 1 },
  { "D10_D12_D14_D16", 4, 56, 1 },
  { "D11_D13_D15_D17", 499, 551, 1 },
  { "D12_D14_D16_D18", 649, 701, 1 },
  { "D13_D15_D17_D19", 931, 983, 1 },
  { "D14_D16_D18_D20", 1262, 1314, 1 },
  { "D15_D17_D19_D21", 1538, 1590, 1 },
  { "D16_D18_D20_D22", 1861, 1913, 1 },
  { "D17_D19_D21_D23", 2135, 2187, 1 },
  { "D18_D20_D22_D24", 2452, 2504, 1 },
  { "D19_D21_D23_D25", 2726, 2778, 1 },
  { "D20_D22_D24_D26", 3043, 3093, 1 },
  { "D21_D23_D25_D27", 3305, 3355, 1 },
  { "D22_D24_D26_D28", 3607, 3654, 1 },
  { "D23_D25_D27_D29", 3848, 3894, 1 },
  { "D24_D26_D28_D30", 4120, 4160, 1 },
  { "D25_D27_D29_D31", 4313, 4350, 1 },
  { "D1_D2", 4645, 4638, 1 },
  { "D3_D4", 4964, 4915, 1 },
  { "D5_D6", 5444, 5389, 1 },
  { "D7_D8", 6062, 6004, 1 },
  { "D9_D10", 6719, 6661, 1 },
  { "D11_D12", 7389, 7331, 1 },
  { "D13_D14", 8064, 8006, 1 },
  { "D15_D16", 262, 208, 1 },
  { "D17_D18", 893, 845, 1 },
  { "D19_D20", 1500, 1452, 1 },
  { "D21_D22", 2097, 2049, 1 },
  { "D23_D24", 2688, 2640, 1 },
  { "D25_D26", 3269, 3223, 1 },
  { "D27_D28", 3816, 3774, 1 },
  { "D29_D30", 4290, 4257, 1 },
  { "D1_D2_D3_D4", 4876, 4909, 1 },
  { "D3_D4_D5_D6", 5341, 5383, 1 },
  { "D5_D6_D7_D8", 5952, 5998, 1 },
  { "D7_D8_D9_D10", 6607, 6655, 1 },
  { "D9_D10_D11_D12", 7277, 7325, 1 },
  { "D11_D12_D13_D14", 7952, 8000, 1 },
  { "D13_D14_D15_D16", 154, 202, 1 },
  { "D15_D16_D17_D18", 793, 841, 1 },
  { "D17_D18_D19_D20", 1402, 1450, 1 },
  { "D19_D20_D21_D22", 1999, 2047, 1 },
  { "D21_D22_D23_D24", 2590, 2638, 1 },
  { "D23_D24_D25_D26", 3175, 3221, 1 },
  { "D25_D26_D27_D28", 3730, 3772, 1 },
  { "D27_D28_D29_D30", 4222, 4255, 1 },
};

namespace {     // Register classes...
  // SPR Register Class...
  const uint16_t SPR[] = {
    ARM::S0, ARM::S1, ARM::S2, ARM::S3, ARM::S4, ARM::S5, ARM::S6, ARM::S7, ARM::S8, ARM::S9, ARM::S10, ARM::S11, ARM::S12, ARM::S13, ARM::S14, ARM::S15, ARM::S16, ARM::S17, ARM::S18, ARM::S19, ARM::S20, ARM::S21, ARM::S22, ARM::S23, ARM::S24, ARM::S25, ARM::S26, ARM::S27, ARM::S28, ARM::S29, ARM::S30, ARM::S31, 
  };

  // SPR Bit set.
  const uint8_t SPRBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0xff, 0xff, 0xff, 0x01, 
  };

  // DPR Register Class...
  const uint16_t DPR[] = {
    ARM::D0, ARM::D1, ARM::D2, ARM::D3, ARM::D4, ARM::D5, ARM::D6, ARM::D7, ARM::D8, ARM::D9, ARM::D10, ARM::D11, ARM::D12, ARM::D13, ARM::D14, ARM::D15, ARM::D16, ARM::D17, ARM::D18, ARM::D19, ARM::D20, ARM::D21, ARM::D22, ARM::D23, ARM::D24, ARM::D25, ARM::D26, ARM::D27, ARM::D28, ARM::D29, ARM::D30, ARM::D31, 
  };

  // DPR Bit set.
  const uint8_t DPRBits[] = {
    0xf8, 0xff, 0xff, 0xff, 0x07, 
  };

  // DPair Register Class...
  const uint16_t DPair[] = {
    ARM::Q0, ARM::D1_D2, ARM::Q1, ARM::D3_D4, ARM::Q2, ARM::D5_D6, ARM::Q3, ARM::D7_D8, ARM::Q4, ARM::D9_D10, ARM::Q5, ARM::D11_D12, ARM::Q6, ARM::D13_D14, ARM::Q7, ARM::D15_D16, ARM::Q8, ARM::D17_D18, ARM::Q9, ARM::D19_D20, ARM::Q10, ARM::D21_D22, ARM::Q11, ARM::D23_D24, ARM::Q12, ARM::D25_D26, ARM::Q13, ARM::D27_D28, ARM::Q14, ARM::D29_D30, ARM::Q15, 
  };

  // DPair Bit set.
  const uint8_t DPairBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0xff, 
  };

  // DPairSpc Register Class...
  const uint16_t DPairSpc[] = {
    ARM::D0_D2, ARM::D1_D3, ARM::D2_D4, ARM::D3_D5, ARM::D4_D6, ARM::D5_D7, ARM::D6_D8, ARM::D7_D9, ARM::D8_D10, ARM::D9_D11, ARM::D10_D12, ARM::D11_D13, ARM::D12_D14, ARM::D13_D15, ARM::D14_D16, ARM::D15_D17, ARM::D16_D18, ARM::D17_D19, ARM::D18_D20, ARM::D19_D21, ARM::D20_D22, ARM::D21_D23, ARM::D22_D24, ARM::D23_D25, ARM::D24_D26, ARM::D25_D27, ARM::D26_D28, ARM::D27_D29, ARM::D28_D30, ARM::D29_D31, 
  };

  // DPairSpc Bit set.
  const uint8_t DPairSpcBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0xff, 0xff, 0x01, 
  };

  // DTriple Register Class...
  const uint16_t DTriple[] = {
    ARM::D0_D1_D2, ARM::D1_D2_D3, ARM::D2_D3_D4, ARM::D3_D4_D5, ARM::D4_D5_D6, ARM::D5_D6_D7, ARM::D6_D7_D8, ARM::D7_D8_D9, ARM::D8_D9_D10, ARM::D9_D10_D11, ARM::D10_D11_D12, ARM::D11_D12_D13, ARM::D12_D13_D14, ARM::D13_D14_D15, ARM::D14_D15_D16, ARM::D15_D16_D17, ARM::D16_D17_D18, ARM::D17_D18_D19, ARM::D18_D19_D20, ARM::D19_D20_D21, ARM::D20_D21_D22, ARM::D21_D22_D23, ARM::D22_D23_D24, ARM::D23_D24_D25, ARM::D24_D25_D26, ARM::D25_D26_D27, ARM::D26_D27_D28, ARM::D27_D28_D29, ARM::D28_D29_D30, ARM::D29_D30_D31, 
  };

  // DTriple Bit set.
  const uint8_t DTripleBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xff, 0xff, 0xff, 0x07, 
  };

  // DQuad Register Class...
  const uint16_t DQuad[] = {
    ARM::Q0_Q1, ARM::D1_D2_D3_D4, ARM::Q1_Q2, ARM::D3_D4_D5_D6, ARM::Q2_Q3, ARM::D5_D6_D7_D8, ARM::Q3_Q4, ARM::D7_D8_D9_D10, ARM::Q4_Q5, ARM::D9_D10_D11_D12, ARM::Q5_Q6, ARM::D11_D12_D13_D14, ARM::Q6_Q7, ARM::D13_D14_D15_D16, ARM::Q7_Q8, ARM::D15_D16_D17_D18, ARM::Q8_Q9, ARM::D17_D18_D19_D20, ARM::Q9_Q10, ARM::D19_D20_D21_D22, ARM::Q10_Q11, ARM::D21_D22_D23_D24, ARM::Q11_Q12, ARM::D23_D24_D25_D26, ARM::Q12_Q13, ARM::D25_D26_D27_D28, ARM::Q13_Q14, ARM::D27_D28_D29_D30, ARM::Q14_Q15, 
  };

  // DQuad Bit set.
  const uint8_t DQuadBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x3f, 
  };

  // DTripleSpc Register Class...
  const uint16_t DTripleSpc[] = {
    ARM::D0_D2_D4, ARM::D1_D3_D5, ARM::D2_D4_D6, ARM::D3_D5_D7, ARM::D4_D6_D8, ARM::D5_D7_D9, ARM::D6_D8_D10, ARM::D7_D9_D11, ARM::D8_D10_D12, ARM::D9_D11_D13, ARM::D10_D12_D14, ARM::D11_D13_D15, ARM::D12_D14_D16, ARM::D13_D15_D17, ARM::D14_D16_D18, ARM::D15_D17_D19, ARM::D16_D18_D20, ARM::D17_D19_D21, ARM::D18_D20_D22, ARM::D19_D21_D23, ARM::D20_D22_D24, ARM::D21_D23_D25, ARM::D22_D24_D26, ARM::D23_D25_D27, ARM::D24_D26_D28, ARM::D25_D27_D29, ARM::D26_D28_D30, ARM::D27_D29_D31, 
  };

  // DTripleSpc Bit set.
  const uint8_t DTripleSpcBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0xff, 0x7f, 
  };

  // DQuadSpc Register Class...
  const uint16_t DQuadSpc[] = {
    ARM::D0_D2_D4, ARM::D1_D3_D5, ARM::D2_D4_D6, ARM::D3_D5_D7, ARM::D4_D6_D8, ARM::D5_D7_D9, ARM::D6_D8_D10, ARM::D7_D9_D11, ARM::D8_D10_D12, ARM::D9_D11_D13, ARM::D10_D12_D14, ARM::D11_D13_D15, ARM::D12_D14_D16, ARM::D13_D15_D17, ARM::D14_D16_D18, ARM::D15_D17_D19, ARM::D16_D18_D20, ARM::D17_D19_D21, ARM::D18_D20_D22, ARM::D19_D21_D23, ARM::D20_D22_D24, ARM::D21_D23_D25, ARM::D22_D24_D26, ARM::D23_D25_D27, ARM::D24_D26_D28, ARM::D25_D27_D29, ARM::D26_D28_D30, ARM::D27_D29_D31, 
  };

  // DQuadSpc Bit set.
  const uint8_t DQuadSpcBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0xff, 0x7f, 
  };

  // GPR Register Class...
  const uint16_t GPR[] = {
    ARM::R0, ARM::R1, ARM::R2, ARM::R3, ARM::R4, ARM::R5, ARM::R6, ARM::R7, ARM::R8, ARM::R9, ARM::R10, ARM::R11, ARM::R12, ARM::SP, ARM::LR, ARM::PC, 
  };

  // GPR Bit set.
  const uint8_t GPRBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0xf0, 0xff, 0x01, 0x00, 0x00, 0x00, 0x02, 
  };

  // SPR_8 Register Class...
  const uint16_t SPR_8[] = {
    ARM::S0, ARM::S1, ARM::S2, ARM::S3, ARM::S4, ARM::S5, ARM::S6, ARM::S7, ARM::S8, ARM::S9, ARM::S10, ARM::S11, ARM::S12, ARM::S13, ARM::S14, ARM::S15, 
  };

  // SPR_8 Bit set.
  const uint8_t SPR_8Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0xff, 0x01, 
  };

  // DPR_VFP2 Register Class...
  const uint16_t DPR_VFP2[] = {
    ARM::D0, ARM::D1, ARM::D2, ARM::D3, ARM::D4, ARM::D5, ARM::D6, ARM::D7, ARM::D8, ARM::D9, ARM::D10, ARM::D11, ARM::D12, ARM::D13, ARM::D14, ARM::D15, 
  };

  // DPR_VFP2 Bit set.
  const uint8_t DPR_VFP2Bits[] = {
    0xf8, 0xff, 0x07, 
  };

  // DPairSpc_with_ssub_0 Register Class...
  const uint16_t DPairSpc_with_ssub_0[] = {
    ARM::D0_D2, ARM::D1_D3, ARM::D2_D4, ARM::D3_D5, ARM::D4_D6, ARM::D5_D7, ARM::D6_D8, ARM::D7_D9, ARM::D8_D10, ARM::D9_D11, ARM::D10_D12, ARM::D11_D13, ARM::D12_D14, ARM::D13_D15, ARM::D14_D16, ARM::D15_D17, 
  };

  // DPairSpc_with_ssub_0 Bit set.
  const uint8_t DPairSpc_with_ssub_0Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0x07, 
  };

  // DPair_with_ssub_0 Register Class...
  const uint16_t DPair_with_ssub_0[] = {
    ARM::Q0, ARM::D1_D2, ARM::Q1, ARM::D3_D4, ARM::Q2, ARM::D5_D6, ARM::Q3, ARM::D7_D8, ARM::Q4, ARM::D9_D10, ARM::Q5, ARM::D11_D12, ARM::Q6, ARM::D13_D14, ARM::Q7, ARM::D15_D16, 
  };

  // DPair_with_ssub_0 Bit set.
  const uint8_t DPair_with_ssub_0Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x01, 
  };

  // QPR Register Class...
  const uint16_t QPR[] = {
    ARM::Q0, ARM::Q1, ARM::Q2, ARM::Q3, ARM::Q4, ARM::Q5, ARM::Q6, ARM::Q7, ARM::Q8, ARM::Q9, ARM::Q10, ARM::Q11, ARM::Q12, ARM::Q13, ARM::Q14, ARM::Q15, 
  };

  // QPR Bit set.
  const uint8_t QPRBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0x0f, 
  };

  // DTripleSpc_with_ssub_0 Register Class...
  const uint16_t DTripleSpc_with_ssub_0[] = {
    ARM::D0_D2_D4, ARM::D1_D3_D5, ARM::D2_D4_D6, ARM::D3_D5_D7, ARM::D4_D6_D8, ARM::D5_D7_D9, ARM::D6_D8_D10, ARM::D7_D9_D11, ARM::D8_D10_D12, ARM::D9_D11_D13, ARM::D10_D12_D14, ARM::D11_D13_D15, ARM::D12_D14_D16, ARM::D13_D15_D17, ARM::D14_D16_D18, ARM::D15_D17_D19, 
  };

  // DTripleSpc_with_ssub_0 Bit set.
  const uint8_t DTripleSpc_with_ssub_0Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0x07, 
  };

  // DTriple_with_ssub_0 Register Class...
  const uint16_t DTriple_with_ssub_0[] = {
    ARM::D0_D1_D2, ARM::D1_D2_D3, ARM::D2_D3_D4, ARM::D3_D4_D5, ARM::D4_D5_D6, ARM::D5_D6_D7, ARM::D6_D7_D8, ARM::D7_D8_D9, ARM::D8_D9_D10, ARM::D9_D10_D11, ARM::D10_D11_D12, ARM::D11_D12_D13, ARM::D12_D13_D14, ARM::D13_D14_D15, ARM::D14_D15_D16, ARM::D15_D16_D17, 
  };

  // DTriple_with_ssub_0 Bit set.
  const uint8_t DTriple_with_ssub_0Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xff, 0x1f, 
  };

  // DQuadSpc_with_ssub_0 Register Class...
  const uint16_t DQuadSpc_with_ssub_0[] = {
    ARM::D0_D2_D4, ARM::D1_D3_D5, ARM::D2_D4_D6, ARM::D3_D5_D7, ARM::D4_D6_D8, ARM::D5_D7_D9, ARM::D6_D8_D10, ARM::D7_D9_D11, ARM::D8_D10_D12, ARM::D9_D11_D13, ARM::D10_D12_D14, ARM::D11_D13_D15, ARM::D12_D14_D16, ARM::D13_D15_D17, ARM::D14_D16_D18, ARM::D15_D17_D19, 
  };

  // DQuadSpc_with_ssub_0 Bit set.
  const uint8_t DQuadSpc_with_ssub_0Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0x07, 
  };

  // DQuad_with_ssub_0 Register Class...
  const uint16_t DQuad_with_ssub_0[] = {
    ARM::Q0_Q1, ARM::D1_D2_D3_D4, ARM::Q1_Q2, ARM::D3_D4_D5_D6, ARM::Q2_Q3, ARM::D5_D6_D7_D8, ARM::Q3_Q4, ARM::D7_D8_D9_D10, ARM::Q4_Q5, ARM::D9_D10_D11_D12, ARM::Q5_Q6, ARM::D11_D12_D13_D14, ARM::Q6_Q7, ARM::D13_D14_D15_D16, ARM::Q7_Q8, ARM::D15_D16_D17_D18, 
  };

  // DQuad_with_ssub_0 Bit set.
  const uint8_t DQuad_with_ssub_0Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 
  };

  // GPRnopc Register Class...
  const uint16_t GPRnopc[] = {
    ARM::R0, ARM::R1, ARM::R2, ARM::R3, ARM::R4, ARM::R5, ARM::R6, ARM::R7, ARM::R8, ARM::R9, ARM::R10, ARM::R11, ARM::R12, ARM::SP, ARM::LR, 
  };

  // GPRnopc Bit set.
  const uint8_t GPRnopcBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0xf0, 0xff, 0x01, 0x00, 0x00, 0x00, 0x02, 
  };

  // DPair_with_ssub_2 Register Class...
  const uint16_t DPair_with_ssub_2[] = {
    ARM::Q0, ARM::D1_D2, ARM::Q1, ARM::D3_D4, ARM::Q2, ARM::D5_D6, ARM::Q3, ARM::D7_D8, ARM::Q4, ARM::D9_D10, ARM::Q5, ARM::D11_D12, ARM::Q6, ARM::D13_D14, ARM::Q7, 
  };

  // DPair_with_ssub_2 Bit set.
  const uint8_t DPair_with_ssub_2Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 
  };

  // DTriple_with_ssub_2 Register Class...
  const uint16_t DTriple_with_ssub_2[] = {
    ARM::D0_D1_D2, ARM::D1_D2_D3, ARM::D2_D3_D4, ARM::D3_D4_D5, ARM::D4_D5_D6, ARM::D5_D6_D7, ARM::D6_D7_D8, ARM::D7_D8_D9, ARM::D8_D9_D10, ARM::D9_D10_D11, ARM::D10_D11_D12, ARM::D11_D12_D13, ARM::D12_D13_D14, ARM::D13_D14_D15, ARM::D14_D15_D16, 
  };

  // DTriple_with_ssub_2 Bit set.
  const uint8_t DTriple_with_ssub_2Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xff, 0x0f, 
  };

  // DQuad_with_ssub_2 Register Class...
  const uint16_t DQuad_with_ssub_2[] = {
    ARM::Q0_Q1, ARM::D1_D2_D3_D4, ARM::Q1_Q2, ARM::D3_D4_D5_D6, ARM::Q2_Q3, ARM::D5_D6_D7_D8, ARM::Q3_Q4, ARM::D7_D8_D9_D10, ARM::Q4_Q5, ARM::D9_D10_D11_D12, ARM::Q5_Q6, ARM::D11_D12_D13_D14, ARM::Q6_Q7, ARM::D13_D14_D15_D16, ARM::Q7_Q8, 
  };

  // DQuad_with_ssub_2 Bit set.
  const uint8_t DQuad_with_ssub_2Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 
  };

  // QQPR Register Class...
  const uint16_t QQPR[] = {
    ARM::Q0_Q1, ARM::Q1_Q2, ARM::Q2_Q3, ARM::Q3_Q4, ARM::Q4_Q5, ARM::Q5_Q6, ARM::Q6_Q7, ARM::Q7_Q8, ARM::Q8_Q9, ARM::Q9_Q10, ARM::Q10_Q11, ARM::Q11_Q12, ARM::Q12_Q13, ARM::Q13_Q14, ARM::Q14_Q15, 
  };

  // QQPR Bit set.
  const uint8_t QQPRBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0xff, 
  };

  // rGPR Register Class...
  const uint16_t rGPR[] = {
    ARM::R0, ARM::R1, ARM::R2, ARM::R3, ARM::R4, ARM::R5, ARM::R6, ARM::R7, ARM::R8, ARM::R9, ARM::R10, ARM::R11, ARM::R12, ARM::LR, 
  };

  // rGPR Bit set.
  const uint8_t rGPRBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0xf0, 0xff, 0x01, 
  };

  // DPairSpc_with_dsub_2_then_ssub_0 Register Class...
  const uint16_t DPairSpc_with_dsub_2_then_ssub_0[] = {
    ARM::D0_D2, ARM::D1_D3, ARM::D2_D4, ARM::D3_D5, ARM::D4_D6, ARM::D5_D7, ARM::D6_D8, ARM::D7_D9, ARM::D8_D10, ARM::D9_D11, ARM::D10_D12, ARM::D11_D13, ARM::D12_D14, ARM::D13_D15, 
  };

  // DPairSpc_with_dsub_2_then_ssub_0 Bit set.
  const uint8_t DPairSpc_with_dsub_2_then_ssub_0Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0x01, 
  };

  // DTripleSpc_with_dsub_2_then_ssub_0 Register Class...
  const uint16_t DTripleSpc_with_dsub_2_then_ssub_0[] = {
    ARM::D0_D2_D4, ARM::D1_D3_D5, ARM::D2_D4_D6, ARM::D3_D5_D7, ARM::D4_D6_D8, ARM::D5_D7_D9, ARM::D6_D8_D10, ARM::D7_D9_D11, ARM::D8_D10_D12, ARM::D9_D11_D13, ARM::D10_D12_D14, ARM::D11_D13_D15, ARM::D12_D14_D16, ARM::D13_D15_D17, 
  };

  // DTripleSpc_with_dsub_2_then_ssub_0 Bit set.
  const uint8_t DTripleSpc_with_dsub_2_then_ssub_0Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0x01, 
  };

  // DTriple_with_dsub_2_then_ssub_0 Register Class...
  const uint16_t DTriple_with_dsub_2_then_ssub_0[] = {
    ARM::D0_D1_D2, ARM::D1_D2_D3, ARM::D2_D3_D4, ARM::D3_D4_D5, ARM::D4_D5_D6, ARM::D5_D6_D7, ARM::D6_D7_D8, ARM::D7_D8_D9, ARM::D8_D9_D10, ARM::D9_D10_D11, ARM::D10_D11_D12, ARM::D11_D12_D13, ARM::D12_D13_D14, ARM::D13_D14_D15, 
  };

  // DTriple_with_dsub_2_then_ssub_0 Bit set.
  const uint8_t DTriple_with_dsub_2_then_ssub_0Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xff, 0x07, 
  };

  // DQuadSpc_with_dsub_2_then_ssub_0 Register Class...
  const uint16_t DQuadSpc_with_dsub_2_then_ssub_0[] = {
    ARM::D0_D2_D4, ARM::D1_D3_D5, ARM::D2_D4_D6, ARM::D3_D5_D7, ARM::D4_D6_D8, ARM::D5_D7_D9, ARM::D6_D8_D10, ARM::D7_D9_D11, ARM::D8_D10_D12, ARM::D9_D11_D13, ARM::D10_D12_D14, ARM::D11_D13_D15, ARM::D12_D14_D16, ARM::D13_D15_D17, 
  };

  // DQuadSpc_with_dsub_2_then_ssub_0 Bit set.
  const uint8_t DQuadSpc_with_dsub_2_then_ssub_0Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0x01, 
  };

  // DQuad_with_dsub_2_then_ssub_0 Register Class...
  const uint16_t DQuad_with_dsub_2_then_ssub_0[] = {
    ARM::Q0_Q1, ARM::D1_D2_D3_D4, ARM::Q1_Q2, ARM::D3_D4_D5_D6, ARM::Q2_Q3, ARM::D5_D6_D7_D8, ARM::Q3_Q4, ARM::D7_D8_D9_D10, ARM::Q4_Q5, ARM::D9_D10_D11_D12, ARM::Q5_Q6, ARM::D11_D12_D13_D14, ARM::Q6_Q7, ARM::D13_D14_D15_D16, 
  };

  // DQuad_with_dsub_2_then_ssub_0 Bit set.
  const uint8_t DQuad_with_dsub_2_then_ssub_0Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 
  };

  // DQuad_with_dsub_3_then_ssub_0 Register Class...
  const uint16_t DQuad_with_dsub_3_then_ssub_0[] = {
    ARM::Q0_Q1, ARM::D1_D2_D3_D4, ARM::Q1_Q2, ARM::D3_D4_D5_D6, ARM::Q2_Q3, ARM::D5_D6_D7_D8, ARM::Q3_Q4, ARM::D7_D8_D9_D10, ARM::Q4_Q5, ARM::D9_D10_D11_D12, ARM::Q5_Q6, ARM::D11_D12_D13_D14, ARM::Q6_Q7, 
  };

  // DQuad_with_dsub_3_then_ssub_0 Bit set.
  const uint8_t DQuad_with_dsub_3_then_ssub_0Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 
  };

  // QQQQPR Register Class...
  const uint16_t QQQQPR[] = {
    ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::Q12_Q13_Q14_Q15, 
  };

  // QQQQPR Bit set.
  const uint8_t QQQQPRBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x1f, 
  };

  // DTripleSpc_with_dsub_4_then_ssub_0 Register Class...
  const uint16_t DTripleSpc_with_dsub_4_then_ssub_0[] = {
    ARM::D0_D2_D4, ARM::D1_D3_D5, ARM::D2_D4_D6, ARM::D3_D5_D7, ARM::D4_D6_D8, ARM::D5_D7_D9, ARM::D6_D8_D10, ARM::D7_D9_D11, ARM::D8_D10_D12, ARM::D9_D11_D13, ARM::D10_D12_D14, ARM::D11_D13_D15, 
  };

  // DTripleSpc_with_dsub_4_then_ssub_0 Bit set.
  const uint8_t DTripleSpc_with_dsub_4_then_ssub_0Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x7f, 
  };

  // DQuadSpc_with_dsub_4_then_ssub_0 Register Class...
  const uint16_t DQuadSpc_with_dsub_4_then_ssub_0[] = {
    ARM::D0_D2_D4, ARM::D1_D3_D5, ARM::D2_D4_D6, ARM::D3_D5_D7, ARM::D4_D6_D8, ARM::D5_D7_D9, ARM::D6_D8_D10, ARM::D7_D9_D11, ARM::D8_D10_D12, ARM::D9_D11_D13, ARM::D10_D12_D14, ARM::D11_D13_D15, 
  };

  // DQuadSpc_with_dsub_4_then_ssub_0 Bit set.
  const uint8_t DQuadSpc_with_dsub_4_then_ssub_0Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x7f, 
  };

  // hGPR Register Class...
  const uint16_t hGPR[] = {
    ARM::R8, ARM::R9, ARM::R10, ARM::R11, ARM::R12, ARM::SP, ARM::LR, ARM::PC, 
  };

  // hGPR Bit set.
  const uint8_t hGPRBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0xf0, 0x01, 0x00, 0x00, 0x00, 0x02, 
  };

  // tGPR Register Class...
  const uint16_t tGPR[] = {
    ARM::R0, ARM::R1, ARM::R2, ARM::R3, ARM::R4, ARM::R5, ARM::R6, ARM::R7, 
  };

  // tGPR Bit set.
  const uint8_t tGPRBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x0f, 
  };

  // DPR_8 Register Class...
  const uint16_t DPR_8[] = {
    ARM::D0, ARM::D1, ARM::D2, ARM::D3, ARM::D4, ARM::D5, ARM::D6, ARM::D7, 
  };

  // DPR_8 Bit set.
  const uint8_t DPR_8Bits[] = {
    0xf8, 0x07, 
  };

  // DPairSpc_with_dsub_0_in_DPR_8 Register Class...
  const uint16_t DPairSpc_with_dsub_0_in_DPR_8[] = {
    ARM::D0_D2, ARM::D1_D3, ARM::D2_D4, ARM::D3_D5, ARM::D4_D6, ARM::D5_D7, ARM::D6_D8, ARM::D7_D9, 
  };

  // DPairSpc_with_dsub_0_in_DPR_8 Bit set.
  const uint8_t DPairSpc_with_dsub_0_in_DPR_8Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x07, 
  };

  // DPair_with_dsub_0_in_DPR_8 Register Class...
  const uint16_t DPair_with_dsub_0_in_DPR_8[] = {
    ARM::Q0, ARM::D1_D2, ARM::Q1, ARM::D3_D4, ARM::Q2, ARM::D5_D6, ARM::Q3, ARM::D7_D8, 
  };

  // DPair_with_dsub_0_in_DPR_8 Bit set.
  const uint8_t DPair_with_dsub_0_in_DPR_8Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 
  };

  // QPR_VFP2 Register Class...
  const uint16_t QPR_VFP2[] = {
    ARM::Q0, ARM::Q1, ARM::Q2, ARM::Q3, ARM::Q4, ARM::Q5, ARM::Q6, ARM::Q7, 
  };

  // QPR_VFP2 Bit set.
  const uint8_t QPR_VFP2Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x0f, 
  };

  // DTripleSpc_with_dsub_0_in_DPR_8 Register Class...
  const uint16_t DTripleSpc_with_dsub_0_in_DPR_8[] = {
    ARM::D0_D2_D4, ARM::D1_D3_D5, ARM::D2_D4_D6, ARM::D3_D5_D7, ARM::D4_D6_D8, ARM::D5_D7_D9, ARM::D6_D8_D10, ARM::D7_D9_D11, 
  };

  // DTripleSpc_with_dsub_0_in_DPR_8 Bit set.
  const uint8_t DTripleSpc_with_dsub_0_in_DPR_8Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x07, 
  };

  // DTriple_with_dsub_0_in_DPR_8 Register Class...
  const uint16_t DTriple_with_dsub_0_in_DPR_8[] = {
    ARM::D0_D1_D2, ARM::D1_D2_D3, ARM::D2_D3_D4, ARM::D3_D4_D5, ARM::D4_D5_D6, ARM::D5_D6_D7, ARM::D6_D7_D8, ARM::D7_D8_D9, 
  };

  // DTriple_with_dsub_0_in_DPR_8 Bit set.
  const uint8_t DTriple_with_dsub_0_in_DPR_8Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x1f, 
  };

  // DQuadSpc_with_dsub_0_in_DPR_8 Register Class...
  const uint16_t DQuadSpc_with_dsub_0_in_DPR_8[] = {
    ARM::D0_D2_D4, ARM::D1_D3_D5, ARM::D2_D4_D6, ARM::D3_D5_D7, ARM::D4_D6_D8, ARM::D5_D7_D9, ARM::D6_D8_D10, ARM::D7_D9_D11, 
  };

  // DQuadSpc_with_dsub_0_in_DPR_8 Bit set.
  const uint8_t DQuadSpc_with_dsub_0_in_DPR_8Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x07, 
  };

  // DQuad_with_dsub_0_in_DPR_8 Register Class...
  const uint16_t DQuad_with_dsub_0_in_DPR_8[] = {
    ARM::Q0_Q1, ARM::D1_D2_D3_D4, ARM::Q1_Q2, ARM::D3_D4_D5_D6, ARM::Q2_Q3, ARM::D5_D6_D7_D8, ARM::Q3_Q4, ARM::D7_D8_D9_D10, 
  };

  // DQuad_with_dsub_0_in_DPR_8 Bit set.
  const uint8_t DQuad_with_dsub_0_in_DPR_8Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 
  };

  // QQPR_with_ssub_0 Register Class...
  const uint16_t QQPR_with_ssub_0[] = {
    ARM::Q0_Q1, ARM::Q1_Q2, ARM::Q2_Q3, ARM::Q3_Q4, ARM::Q4_Q5, ARM::Q5_Q6, ARM::Q6_Q7, ARM::Q7_Q8, 
  };

  // QQPR_with_ssub_0 Bit set.
  const uint8_t QQPR_with_ssub_0Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x01, 
  };

  // QQQQPR_with_ssub_0 Register Class...
  const uint16_t QQQQPR_with_ssub_0[] = {
    ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10, 
  };

  // QQQQPR_with_ssub_0 Bit set.
  const uint8_t QQQQPR_with_ssub_0Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 
  };

  // GPRnopc_and_hGPR Register Class...
  const uint16_t GPRnopc_and_hGPR[] = {
    ARM::R8, ARM::R9, ARM::R10, ARM::R11, ARM::R12, ARM::SP, ARM::LR, 
  };

  // GPRnopc_and_hGPR Bit set.
  const uint8_t GPRnopc_and_hGPRBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0xf0, 0x01, 0x00, 0x00, 0x00, 0x02, 
  };

  // DPair_with_dsub_1_in_DPR_8 Register Class...
  const uint16_t DPair_with_dsub_1_in_DPR_8[] = {
    ARM::Q0, ARM::D1_D2, ARM::Q1, ARM::D3_D4, ARM::Q2, ARM::D5_D6, ARM::Q3, 
  };

  // DPair_with_dsub_1_in_DPR_8 Bit set.
  const uint8_t DPair_with_dsub_1_in_DPR_8Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 
  };

  // DTriple_with_dsub_1_in_DPR_8 Register Class...
  const uint16_t DTriple_with_dsub_1_in_DPR_8[] = {
    ARM::D0_D1_D2, ARM::D1_D2_D3, ARM::D2_D3_D4, ARM::D3_D4_D5, ARM::D4_D5_D6, ARM::D5_D6_D7, ARM::D6_D7_D8, 
  };

  // DTriple_with_dsub_1_in_DPR_8 Bit set.
  const uint8_t DTriple_with_dsub_1_in_DPR_8Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x0f, 
  };

  // DQuad_with_dsub_1_in_DPR_8 Register Class...
  const uint16_t DQuad_with_dsub_1_in_DPR_8[] = {
    ARM::Q0_Q1, ARM::D1_D2_D3_D4, ARM::Q1_Q2, ARM::D3_D4_D5_D6, ARM::Q2_Q3, ARM::D5_D6_D7_D8, ARM::Q3_Q4, 
  };

  // DQuad_with_dsub_1_in_DPR_8 Bit set.
  const uint8_t DQuad_with_dsub_1_in_DPR_8Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 
  };

  // QQPR_with_dsub_2_then_ssub_0 Register Class...
  const uint16_t QQPR_with_dsub_2_then_ssub_0[] = {
    ARM::Q0_Q1, ARM::Q1_Q2, ARM::Q2_Q3, ARM::Q3_Q4, ARM::Q4_Q5, ARM::Q5_Q6, ARM::Q6_Q7, 
  };

  // QQPR_with_dsub_2_then_ssub_0 Bit set.
  const uint8_t QQPR_with_dsub_2_then_ssub_0Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 
  };

  // QQQQPR_with_dsub_2_then_ssub_0 Register Class...
  const uint16_t QQQQPR_with_dsub_2_then_ssub_0[] = {
    ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, 
  };

  // QQQQPR_with_dsub_2_then_ssub_0 Bit set.
  const uint8_t QQQQPR_with_dsub_2_then_ssub_0Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 
  };

  // hGPR_and_rGPR Register Class...
  const uint16_t hGPR_and_rGPR[] = {
    ARM::R8, ARM::R9, ARM::R10, ARM::R11, ARM::R12, ARM::LR, 
  };

  // hGPR_and_rGPR Bit set.
  const uint8_t hGPR_and_rGPRBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0xf0, 0x01, 
  };

  // tcGPR Register Class...
  const uint16_t tcGPR[] = {
    ARM::R0, ARM::R1, ARM::R2, ARM::R3, ARM::R9, ARM::R12, 
  };

  // tcGPR Bit set.
  const uint8_t tcGPRBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x20, 0x01, 
  };

  // DPairSpc_with_dsub_2_in_DPR_8 Register Class...
  const uint16_t DPairSpc_with_dsub_2_in_DPR_8[] = {
    ARM::D0_D2, ARM::D1_D3, ARM::D2_D4, ARM::D3_D5, ARM::D4_D6, ARM::D5_D7, 
  };

  // DPairSpc_with_dsub_2_in_DPR_8 Bit set.
  const uint8_t DPairSpc_with_dsub_2_in_DPR_8Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x01, 
  };

  // DTripleSpc_with_dsub_2_in_DPR_8 Register Class...
  const uint16_t DTripleSpc_with_dsub_2_in_DPR_8[] = {
    ARM::D0_D2_D4, ARM::D1_D3_D5, ARM::D2_D4_D6, ARM::D3_D5_D7, ARM::D4_D6_D8, ARM::D5_D7_D9, 
  };

  // DTripleSpc_with_dsub_2_in_DPR_8 Bit set.
  const uint8_t DTripleSpc_with_dsub_2_in_DPR_8Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x01, 
  };

  // DTriple_with_dsub_2_in_DPR_8 Register Class...
  const uint16_t DTriple_with_dsub_2_in_DPR_8[] = {
    ARM::D0_D1_D2, ARM::D1_D2_D3, ARM::D2_D3_D4, ARM::D3_D4_D5, ARM::D4_D5_D6, ARM::D5_D6_D7, 
  };

  // DTriple_with_dsub_2_in_DPR_8 Bit set.
  const uint8_t DTriple_with_dsub_2_in_DPR_8Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x07, 
  };

  // DQuadSpc_with_dsub_2_in_DPR_8 Register Class...
  const uint16_t DQuadSpc_with_dsub_2_in_DPR_8[] = {
    ARM::D0_D2_D4, ARM::D1_D3_D5, ARM::D2_D4_D6, ARM::D3_D5_D7, ARM::D4_D6_D8, ARM::D5_D7_D9, 
  };

  // DQuadSpc_with_dsub_2_in_DPR_8 Bit set.
  const uint8_t DQuadSpc_with_dsub_2_in_DPR_8Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x01, 
  };

  // DQuad_with_dsub_2_in_DPR_8 Register Class...
  const uint16_t DQuad_with_dsub_2_in_DPR_8[] = {
    ARM::Q0_Q1, ARM::D1_D2_D3_D4, ARM::Q1_Q2, ARM::D3_D4_D5_D6, ARM::Q2_Q3, ARM::D5_D6_D7_D8, 
  };

  // DQuad_with_dsub_2_in_DPR_8 Bit set.
  const uint8_t DQuad_with_dsub_2_in_DPR_8Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 
  };

  // QQQQPR_with_dsub_5_then_ssub_0 Register Class...
  const uint16_t QQQQPR_with_dsub_5_then_ssub_0[] = {
    ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, 
  };

  // QQQQPR_with_dsub_5_then_ssub_0 Bit set.
  const uint8_t QQQQPR_with_dsub_5_then_ssub_0Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 
  };

  // DQuad_with_dsub_3_in_DPR_8 Register Class...
  const uint16_t DQuad_with_dsub_3_in_DPR_8[] = {
    ARM::Q0_Q1, ARM::D1_D2_D3_D4, ARM::Q1_Q2, ARM::D3_D4_D5_D6, ARM::Q2_Q3, 
  };

  // DQuad_with_dsub_3_in_DPR_8 Bit set.
  const uint8_t DQuad_with_dsub_3_in_DPR_8Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 
  };

  // QQQQPR_with_dsub_7_then_ssub_0 Register Class...
  const uint16_t QQQQPR_with_dsub_7_then_ssub_0[] = {
    ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, 
  };

  // QQQQPR_with_dsub_7_then_ssub_0 Bit set.
  const uint8_t QQQQPR_with_dsub_7_then_ssub_0Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 
  };

  // tGPR_and_tcGPR Register Class...
  const uint16_t tGPR_and_tcGPR[] = {
    ARM::R0, ARM::R1, ARM::R2, ARM::R3, 
  };

  // tGPR_and_tcGPR Bit set.
  const uint8_t tGPR_and_tcGPRBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 
  };

  // QPR_8 Register Class...
  const uint16_t QPR_8[] = {
    ARM::Q0, ARM::Q1, ARM::Q2, ARM::Q3, 
  };

  // QPR_8 Bit set.
  const uint8_t QPR_8Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 
  };

  // DTripleSpc_with_dsub_4_in_DPR_8 Register Class...
  const uint16_t DTripleSpc_with_dsub_4_in_DPR_8[] = {
    ARM::D0_D2_D4, ARM::D1_D3_D5, ARM::D2_D4_D6, ARM::D3_D5_D7, 
  };

  // DTripleSpc_with_dsub_4_in_DPR_8 Bit set.
  const uint8_t DTripleSpc_with_dsub_4_in_DPR_8Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 
  };

  // DQuadSpc_with_dsub_4_in_DPR_8 Register Class...
  const uint16_t DQuadSpc_with_dsub_4_in_DPR_8[] = {
    ARM::D0_D2_D4, ARM::D1_D3_D5, ARM::D2_D4_D6, ARM::D3_D5_D7, 
  };

  // DQuadSpc_with_dsub_4_in_DPR_8 Bit set.
  const uint8_t DQuadSpc_with_dsub_4_in_DPR_8Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 
  };

  // QQPR_and_DQuad_with_dsub_0_in_DPR_8 Register Class...
  const uint16_t QQPR_and_DQuad_with_dsub_0_in_DPR_8[] = {
    ARM::Q0_Q1, ARM::Q1_Q2, ARM::Q2_Q3, ARM::Q3_Q4, 
  };

  // QQPR_and_DQuad_with_dsub_0_in_DPR_8 Bit set.
  const uint8_t QQPR_and_DQuad_with_dsub_0_in_DPR_8Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 
  };

  // QQQQPR_with_dsub_0_in_DPR_8 Register Class...
  const uint16_t QQQQPR_with_dsub_0_in_DPR_8[] = {
    ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, 
  };

  // QQQQPR_with_dsub_0_in_DPR_8 Bit set.
  const uint8_t QQQQPR_with_dsub_0_in_DPR_8Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 
  };

  // QQPR_and_DQuad_with_dsub_2_in_DPR_8 Register Class...
  const uint16_t QQPR_and_DQuad_with_dsub_2_in_DPR_8[] = {
    ARM::Q0_Q1, ARM::Q1_Q2, ARM::Q2_Q3, 
  };

  // QQPR_and_DQuad_with_dsub_2_in_DPR_8 Bit set.
  const uint8_t QQPR_and_DQuad_with_dsub_2_in_DPR_8Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 
  };

  // QQQQPR_with_dsub_2_in_DPR_8 Register Class...
  const uint16_t QQQQPR_with_dsub_2_in_DPR_8[] = {
    ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, 
  };

  // QQQQPR_with_dsub_2_in_DPR_8 Bit set.
  const uint8_t QQQQPR_with_dsub_2_in_DPR_8Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 
  };

  // hGPR_and_tcGPR Register Class...
  const uint16_t hGPR_and_tcGPR[] = {
    ARM::R9, ARM::R12, 
  };

  // hGPR_and_tcGPR Bit set.
  const uint8_t hGPR_and_tcGPRBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x01, 
  };

  // QQQQPR_with_dsub_4_in_DPR_8 Register Class...
  const uint16_t QQQQPR_with_dsub_4_in_DPR_8[] = {
    ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, 
  };

  // QQQQPR_with_dsub_4_in_DPR_8 Bit set.
  const uint8_t QQQQPR_with_dsub_4_in_DPR_8Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 
  };

  // CCR Register Class...
  const uint16_t CCR[] = {
    ARM::CPSR, 
  };

  // CCR Bit set.
  const uint8_t CCRBits[] = {
    0x04, 
  };

  // GPRsp Register Class...
  const uint16_t GPRsp[] = {
    ARM::SP, 
  };

  // GPRsp Bit set.
  const uint8_t GPRspBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 
  };

  // QQQQPR_with_dsub_6_in_DPR_8 Register Class...
  const uint16_t QQQQPR_with_dsub_6_in_DPR_8[] = {
    ARM::Q0_Q1_Q2_Q3, 
  };

  // QQQQPR_with_dsub_6_in_DPR_8 Bit set.
  const uint8_t QQQQPR_with_dsub_6_in_DPR_8Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
  };

}

extern const MCRegisterClass ARMMCRegisterClasses[] = {
  { "SPR", SPR, SPRBits, 32, sizeof(SPRBits), ARM::SPRRegClassID, 4, 4, 1, 1 },
  { "DPR", DPR, DPRBits, 32, sizeof(DPRBits), ARM::DPRRegClassID, 8, 8, 1, 1 },
  { "DPair", DPair, DPairBits, 31, sizeof(DPairBits), ARM::DPairRegClassID, 16, 16, 1, 1 },
  { "DPairSpc", DPairSpc, DPairSpcBits, 30, sizeof(DPairSpcBits), ARM::DPairSpcRegClassID, 16, 8, 1, 1 },
  { "DTriple", DTriple, DTripleBits, 30, sizeof(DTripleBits), ARM::DTripleRegClassID, 24, 8, 1, 1 },
  { "DQuad", DQuad, DQuadBits, 29, sizeof(DQuadBits), ARM::DQuadRegClassID, 32, 32, 1, 1 },
  { "DTripleSpc", DTripleSpc, DTripleSpcBits, 28, sizeof(DTripleSpcBits), ARM::DTripleSpcRegClassID, 24, 8, 1, 1 },
  { "DQuadSpc", DQuadSpc, DQuadSpcBits, 28, sizeof(DQuadSpcBits), ARM::DQuadSpcRegClassID, 32, 8, 1, 1 },
  { "GPR", GPR, GPRBits, 16, sizeof(GPRBits), ARM::GPRRegClassID, 4, 4, 1, 1 },
  { "SPR_8", SPR_8, SPR_8Bits, 16, sizeof(SPR_8Bits), ARM::SPR_8RegClassID, 4, 4, 1, 1 },
  { "DPR_VFP2", DPR_VFP2, DPR_VFP2Bits, 16, sizeof(DPR_VFP2Bits), ARM::DPR_VFP2RegClassID, 8, 8, 1, 1 },
  { "DPairSpc_with_ssub_0", DPairSpc_with_ssub_0, DPairSpc_with_ssub_0Bits, 16, sizeof(DPairSpc_with_ssub_0Bits), ARM::DPairSpc_with_ssub_0RegClassID, 16, 8, 1, 1 },
  { "DPair_with_ssub_0", DPair_with_ssub_0, DPair_with_ssub_0Bits, 16, sizeof(DPair_with_ssub_0Bits), ARM::DPair_with_ssub_0RegClassID, 16, 16, 1, 1 },
  { "QPR", QPR, QPRBits, 16, sizeof(QPRBits), ARM::QPRRegClassID, 16, 16, 1, 1 },
  { "DTripleSpc_with_ssub_0", DTripleSpc_with_ssub_0, DTripleSpc_with_ssub_0Bits, 16, sizeof(DTripleSpc_with_ssub_0Bits), ARM::DTripleSpc_with_ssub_0RegClassID, 24, 8, 1, 1 },
  { "DTriple_with_ssub_0", DTriple_with_ssub_0, DTriple_with_ssub_0Bits, 16, sizeof(DTriple_with_ssub_0Bits), ARM::DTriple_with_ssub_0RegClassID, 24, 8, 1, 1 },
  { "DQuadSpc_with_ssub_0", DQuadSpc_with_ssub_0, DQuadSpc_with_ssub_0Bits, 16, sizeof(DQuadSpc_with_ssub_0Bits), ARM::DQuadSpc_with_ssub_0RegClassID, 32, 8, 1, 1 },
  { "DQuad_with_ssub_0", DQuad_with_ssub_0, DQuad_with_ssub_0Bits, 16, sizeof(DQuad_with_ssub_0Bits), ARM::DQuad_with_ssub_0RegClassID, 32, 32, 1, 1 },
  { "GPRnopc", GPRnopc, GPRnopcBits, 15, sizeof(GPRnopcBits), ARM::GPRnopcRegClassID, 4, 4, 1, 1 },
  { "DPair_with_ssub_2", DPair_with_ssub_2, DPair_with_ssub_2Bits, 15, sizeof(DPair_with_ssub_2Bits), ARM::DPair_with_ssub_2RegClassID, 16, 16, 1, 1 },
  { "DTriple_with_ssub_2", DTriple_with_ssub_2, DTriple_with_ssub_2Bits, 15, sizeof(DTriple_with_ssub_2Bits), ARM::DTriple_with_ssub_2RegClassID, 24, 8, 1, 1 },
  { "DQuad_with_ssub_2", DQuad_with_ssub_2, DQuad_with_ssub_2Bits, 15, sizeof(DQuad_with_ssub_2Bits), ARM::DQuad_with_ssub_2RegClassID, 32, 32, 1, 1 },
  { "QQPR", QQPR, QQPRBits, 15, sizeof(QQPRBits), ARM::QQPRRegClassID, 32, 32, 1, 1 },
  { "rGPR", rGPR, rGPRBits, 14, sizeof(rGPRBits), ARM::rGPRRegClassID, 4, 4, 1, 1 },
  { "DPairSpc_with_dsub_2_then_ssub_0", DPairSpc_with_dsub_2_then_ssub_0, DPairSpc_with_dsub_2_then_ssub_0Bits, 14, sizeof(DPairSpc_with_dsub_2_then_ssub_0Bits), ARM::DPairSpc_with_dsub_2_then_ssub_0RegClassID, 16, 8, 1, 1 },
  { "DTripleSpc_with_dsub_2_then_ssub_0", DTripleSpc_with_dsub_2_then_ssub_0, DTripleSpc_with_dsub_2_then_ssub_0Bits, 14, sizeof(DTripleSpc_with_dsub_2_then_ssub_0Bits), ARM::DTripleSpc_with_dsub_2_then_ssub_0RegClassID, 24, 8, 1, 1 },
  { "DTriple_with_dsub_2_then_ssub_0", DTriple_with_dsub_2_then_ssub_0, DTriple_with_dsub_2_then_ssub_0Bits, 14, sizeof(DTriple_with_dsub_2_then_ssub_0Bits), ARM::DTriple_with_dsub_2_then_ssub_0RegClassID, 24, 8, 1, 1 },
  { "DQuadSpc_with_dsub_2_then_ssub_0", DQuadSpc_with_dsub_2_then_ssub_0, DQuadSpc_with_dsub_2_then_ssub_0Bits, 14, sizeof(DQuadSpc_with_dsub_2_then_ssub_0Bits), ARM::DQuadSpc_with_dsub_2_then_ssub_0RegClassID, 32, 8, 1, 1 },
  { "DQuad_with_dsub_2_then_ssub_0", DQuad_with_dsub_2_then_ssub_0, DQuad_with_dsub_2_then_ssub_0Bits, 14, sizeof(DQuad_with_dsub_2_then_ssub_0Bits), ARM::DQuad_with_dsub_2_then_ssub_0RegClassID, 32, 32, 1, 1 },
  { "DQuad_with_dsub_3_then_ssub_0", DQuad_with_dsub_3_then_ssub_0, DQuad_with_dsub_3_then_ssub_0Bits, 13, sizeof(DQuad_with_dsub_3_then_ssub_0Bits), ARM::DQuad_with_dsub_3_then_ssub_0RegClassID, 32, 32, 1, 1 },
  { "QQQQPR", QQQQPR, QQQQPRBits, 13, sizeof(QQQQPRBits), ARM::QQQQPRRegClassID, 64, 32, 1, 1 },
  { "DTripleSpc_with_dsub_4_then_ssub_0", DTripleSpc_with_dsub_4_then_ssub_0, DTripleSpc_with_dsub_4_then_ssub_0Bits, 12, sizeof(DTripleSpc_with_dsub_4_then_ssub_0Bits), ARM::DTripleSpc_with_dsub_4_then_ssub_0RegClassID, 24, 8, 1, 1 },
  { "DQuadSpc_with_dsub_4_then_ssub_0", DQuadSpc_with_dsub_4_then_ssub_0, DQuadSpc_with_dsub_4_then_ssub_0Bits, 12, sizeof(DQuadSpc_with_dsub_4_then_ssub_0Bits), ARM::DQuadSpc_with_dsub_4_then_ssub_0RegClassID, 32, 8, 1, 1 },
  { "hGPR", hGPR, hGPRBits, 8, sizeof(hGPRBits), ARM::hGPRRegClassID, 4, 4, 1, 1 },
  { "tGPR", tGPR, tGPRBits, 8, sizeof(tGPRBits), ARM::tGPRRegClassID, 4, 4, 1, 1 },
  { "DPR_8", DPR_8, DPR_8Bits, 8, sizeof(DPR_8Bits), ARM::DPR_8RegClassID, 8, 8, 1, 1 },
  { "DPairSpc_with_dsub_0_in_DPR_8", DPairSpc_with_dsub_0_in_DPR_8, DPairSpc_with_dsub_0_in_DPR_8Bits, 8, sizeof(DPairSpc_with_dsub_0_in_DPR_8Bits), ARM::DPairSpc_with_dsub_0_in_DPR_8RegClassID, 16, 8, 1, 1 },
  { "DPair_with_dsub_0_in_DPR_8", DPair_with_dsub_0_in_DPR_8, DPair_with_dsub_0_in_DPR_8Bits, 8, sizeof(DPair_with_dsub_0_in_DPR_8Bits), ARM::DPair_with_dsub_0_in_DPR_8RegClassID, 16, 16, 1, 1 },
  { "QPR_VFP2", QPR_VFP2, QPR_VFP2Bits, 8, sizeof(QPR_VFP2Bits), ARM::QPR_VFP2RegClassID, 16, 16, 1, 1 },
  { "DTripleSpc_with_dsub_0_in_DPR_8", DTripleSpc_with_dsub_0_in_DPR_8, DTripleSpc_with_dsub_0_in_DPR_8Bits, 8, sizeof(DTripleSpc_with_dsub_0_in_DPR_8Bits), ARM::DTripleSpc_with_dsub_0_in_DPR_8RegClassID, 24, 8, 1, 1 },
  { "DTriple_with_dsub_0_in_DPR_8", DTriple_with_dsub_0_in_DPR_8, DTriple_with_dsub_0_in_DPR_8Bits, 8, sizeof(DTriple_with_dsub_0_in_DPR_8Bits), ARM::DTriple_with_dsub_0_in_DPR_8RegClassID, 24, 8, 1, 1 },
  { "DQuadSpc_with_dsub_0_in_DPR_8", DQuadSpc_with_dsub_0_in_DPR_8, DQuadSpc_with_dsub_0_in_DPR_8Bits, 8, sizeof(DQuadSpc_with_dsub_0_in_DPR_8Bits), ARM::DQuadSpc_with_dsub_0_in_DPR_8RegClassID, 32, 8, 1, 1 },
  { "DQuad_with_dsub_0_in_DPR_8", DQuad_with_dsub_0_in_DPR_8, DQuad_with_dsub_0_in_DPR_8Bits, 8, sizeof(DQuad_with_dsub_0_in_DPR_8Bits), ARM::DQuad_with_dsub_0_in_DPR_8RegClassID, 32, 32, 1, 1 },
  { "QQPR_with_ssub_0", QQPR_with_ssub_0, QQPR_with_ssub_0Bits, 8, sizeof(QQPR_with_ssub_0Bits), ARM::QQPR_with_ssub_0RegClassID, 32, 32, 1, 1 },
  { "QQQQPR_with_ssub_0", QQQQPR_with_ssub_0, QQQQPR_with_ssub_0Bits, 8, sizeof(QQQQPR_with_ssub_0Bits), ARM::QQQQPR_with_ssub_0RegClassID, 64, 32, 1, 1 },
  { "GPRnopc_and_hGPR", GPRnopc_and_hGPR, GPRnopc_and_hGPRBits, 7, sizeof(GPRnopc_and_hGPRBits), ARM::GPRnopc_and_hGPRRegClassID, 4, 4, 1, 1 },
  { "DPair_with_dsub_1_in_DPR_8", DPair_with_dsub_1_in_DPR_8, DPair_with_dsub_1_in_DPR_8Bits, 7, sizeof(DPair_with_dsub_1_in_DPR_8Bits), ARM::DPair_with_dsub_1_in_DPR_8RegClassID, 16, 16, 1, 1 },
  { "DTriple_with_dsub_1_in_DPR_8", DTriple_with_dsub_1_in_DPR_8, DTriple_with_dsub_1_in_DPR_8Bits, 7, sizeof(DTriple_with_dsub_1_in_DPR_8Bits), ARM::DTriple_with_dsub_1_in_DPR_8RegClassID, 24, 8, 1, 1 },
  { "DQuad_with_dsub_1_in_DPR_8", DQuad_with_dsub_1_in_DPR_8, DQuad_with_dsub_1_in_DPR_8Bits, 7, sizeof(DQuad_with_dsub_1_in_DPR_8Bits), ARM::DQuad_with_dsub_1_in_DPR_8RegClassID, 32, 32, 1, 1 },
  { "QQPR_with_dsub_2_then_ssub_0", QQPR_with_dsub_2_then_ssub_0, QQPR_with_dsub_2_then_ssub_0Bits, 7, sizeof(QQPR_with_dsub_2_then_ssub_0Bits), ARM::QQPR_with_dsub_2_then_ssub_0RegClassID, 32, 32, 1, 1 },
  { "QQQQPR_with_dsub_2_then_ssub_0", QQQQPR_with_dsub_2_then_ssub_0, QQQQPR_with_dsub_2_then_ssub_0Bits, 7, sizeof(QQQQPR_with_dsub_2_then_ssub_0Bits), ARM::QQQQPR_with_dsub_2_then_ssub_0RegClassID, 64, 32, 1, 1 },
  { "hGPR_and_rGPR", hGPR_and_rGPR, hGPR_and_rGPRBits, 6, sizeof(hGPR_and_rGPRBits), ARM::hGPR_and_rGPRRegClassID, 4, 4, 1, 1 },
  { "tcGPR", tcGPR, tcGPRBits, 6, sizeof(tcGPRBits), ARM::tcGPRRegClassID, 4, 4, 1, 1 },
  { "DPairSpc_with_dsub_2_in_DPR_8", DPairSpc_with_dsub_2_in_DPR_8, DPairSpc_with_dsub_2_in_DPR_8Bits, 6, sizeof(DPairSpc_with_dsub_2_in_DPR_8Bits), ARM::DPairSpc_with_dsub_2_in_DPR_8RegClassID, 16, 8, 1, 1 },
  { "DTripleSpc_with_dsub_2_in_DPR_8", DTripleSpc_with_dsub_2_in_DPR_8, DTripleSpc_with_dsub_2_in_DPR_8Bits, 6, sizeof(DTripleSpc_with_dsub_2_in_DPR_8Bits), ARM::DTripleSpc_with_dsub_2_in_DPR_8RegClassID, 24, 8, 1, 1 },
  { "DTriple_with_dsub_2_in_DPR_8", DTriple_with_dsub_2_in_DPR_8, DTriple_with_dsub_2_in_DPR_8Bits, 6, sizeof(DTriple_with_dsub_2_in_DPR_8Bits), ARM::DTriple_with_dsub_2_in_DPR_8RegClassID, 24, 8, 1, 1 },
  { "DQuadSpc_with_dsub_2_in_DPR_8", DQuadSpc_with_dsub_2_in_DPR_8, DQuadSpc_with_dsub_2_in_DPR_8Bits, 6, sizeof(DQuadSpc_with_dsub_2_in_DPR_8Bits), ARM::DQuadSpc_with_dsub_2_in_DPR_8RegClassID, 32, 8, 1, 1 },
  { "DQuad_with_dsub_2_in_DPR_8", DQuad_with_dsub_2_in_DPR_8, DQuad_with_dsub_2_in_DPR_8Bits, 6, sizeof(DQuad_with_dsub_2_in_DPR_8Bits), ARM::DQuad_with_dsub_2_in_DPR_8RegClassID, 32, 32, 1, 1 },
  { "QQQQPR_with_dsub_5_then_ssub_0", QQQQPR_with_dsub_5_then_ssub_0, QQQQPR_with_dsub_5_then_ssub_0Bits, 6, sizeof(QQQQPR_with_dsub_5_then_ssub_0Bits), ARM::QQQQPR_with_dsub_5_then_ssub_0RegClassID, 64, 32, 1, 1 },
  { "DQuad_with_dsub_3_in_DPR_8", DQuad_with_dsub_3_in_DPR_8, DQuad_with_dsub_3_in_DPR_8Bits, 5, sizeof(DQuad_with_dsub_3_in_DPR_8Bits), ARM::DQuad_with_dsub_3_in_DPR_8RegClassID, 32, 32, 1, 1 },
  { "QQQQPR_with_dsub_7_then_ssub_0", QQQQPR_with_dsub_7_then_ssub_0, QQQQPR_with_dsub_7_then_ssub_0Bits, 5, sizeof(QQQQPR_with_dsub_7_then_ssub_0Bits), ARM::QQQQPR_with_dsub_7_then_ssub_0RegClassID, 64, 32, 1, 1 },
  { "tGPR_and_tcGPR", tGPR_and_tcGPR, tGPR_and_tcGPRBits, 4, sizeof(tGPR_and_tcGPRBits), ARM::tGPR_and_tcGPRRegClassID, 4, 4, 1, 1 },
  { "QPR_8", QPR_8, QPR_8Bits, 4, sizeof(QPR_8Bits), ARM::QPR_8RegClassID, 16, 16, 1, 1 },
  { "DTripleSpc_with_dsub_4_in_DPR_8", DTripleSpc_with_dsub_4_in_DPR_8, DTripleSpc_with_dsub_4_in_DPR_8Bits, 4, sizeof(DTripleSpc_with_dsub_4_in_DPR_8Bits), ARM::DTripleSpc_with_dsub_4_in_DPR_8RegClassID, 24, 8, 1, 1 },
  { "DQuadSpc_with_dsub_4_in_DPR_8", DQuadSpc_with_dsub_4_in_DPR_8, DQuadSpc_with_dsub_4_in_DPR_8Bits, 4, sizeof(DQuadSpc_with_dsub_4_in_DPR_8Bits), ARM::DQuadSpc_with_dsub_4_in_DPR_8RegClassID, 32, 8, 1, 1 },
  { "QQPR_and_DQuad_with_dsub_0_in_DPR_8", QQPR_and_DQuad_with_dsub_0_in_DPR_8, QQPR_and_DQuad_with_dsub_0_in_DPR_8Bits, 4, sizeof(QQPR_and_DQuad_with_dsub_0_in_DPR_8Bits), ARM::QQPR_and_DQuad_with_dsub_0_in_DPR_8RegClassID, 32, 32, 1, 1 },
  { "QQQQPR_with_dsub_0_in_DPR_8", QQQQPR_with_dsub_0_in_DPR_8, QQQQPR_with_dsub_0_in_DPR_8Bits, 4, sizeof(QQQQPR_with_dsub_0_in_DPR_8Bits), ARM::QQQQPR_with_dsub_0_in_DPR_8RegClassID, 64, 32, 1, 1 },
  { "QQPR_and_DQuad_with_dsub_2_in_DPR_8", QQPR_and_DQuad_with_dsub_2_in_DPR_8, QQPR_and_DQuad_with_dsub_2_in_DPR_8Bits, 3, sizeof(QQPR_and_DQuad_with_dsub_2_in_DPR_8Bits), ARM::QQPR_and_DQuad_with_dsub_2_in_DPR_8RegClassID, 32, 32, 1, 1 },
  { "QQQQPR_with_dsub_2_in_DPR_8", QQQQPR_with_dsub_2_in_DPR_8, QQQQPR_with_dsub_2_in_DPR_8Bits, 3, sizeof(QQQQPR_with_dsub_2_in_DPR_8Bits), ARM::QQQQPR_with_dsub_2_in_DPR_8RegClassID, 64, 32, 1, 1 },
  { "hGPR_and_tcGPR", hGPR_and_tcGPR, hGPR_and_tcGPRBits, 2, sizeof(hGPR_and_tcGPRBits), ARM::hGPR_and_tcGPRRegClassID, 4, 4, 1, 1 },
  { "QQQQPR_with_dsub_4_in_DPR_8", QQQQPR_with_dsub_4_in_DPR_8, QQQQPR_with_dsub_4_in_DPR_8Bits, 2, sizeof(QQQQPR_with_dsub_4_in_DPR_8Bits), ARM::QQQQPR_with_dsub_4_in_DPR_8RegClassID, 64, 32, 1, 1 },
  { "CCR", CCR, CCRBits, 1, sizeof(CCRBits), ARM::CCRRegClassID, 4, 4, -1, 0 },
  { "GPRsp", GPRsp, GPRspBits, 1, sizeof(GPRspBits), ARM::GPRspRegClassID, 4, 4, 1, 1 },
  { "QQQQPR_with_dsub_6_in_DPR_8", QQQQPR_with_dsub_6_in_DPR_8, QQQQPR_with_dsub_6_in_DPR_8Bits, 1, sizeof(QQQQPR_with_dsub_6_in_DPR_8Bits), ARM::QQQQPR_with_dsub_6_in_DPR_8RegClassID, 64, 32, 1, 1 },
};

const uint16_t ARMSubRegTable[][30] = {
  /* APSR */
  {0},
  /* CPSR */
  {0},
  /* D0 */
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S0, ARM::S1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D1 */
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S2, ARM::S3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D2 */
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S4, ARM::S5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D3 */
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S6, ARM::S7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D4 */
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S8, ARM::S9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D5 */
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S10, ARM::S11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D6 */
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S12, ARM::S13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D7 */
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S14, ARM::S15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D8 */
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S16, ARM::S17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D9 */
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S18, ARM::S19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D10 */
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S20, ARM::S21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D11 */
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S22, ARM::S23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D12 */
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S24, ARM::S25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D13 */
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S26, ARM::S27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D14 */
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S28, ARM::S29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D15 */
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S30, ARM::S31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D16 */
  {0},
  /* D17 */
  {0},
  /* D18 */
  {0},
  /* D19 */
  {0},
  /* D20 */
  {0},
  /* D21 */
  {0},
  /* D22 */
  {0},
  /* D23 */
  {0},
  /* D24 */
  {0},
  /* D25 */
  {0},
  /* D26 */
  {0},
  /* D27 */
  {0},
  /* D28 */
  {0},
  /* D29 */
  {0},
  /* D30 */
  {0},
  /* D31 */
  {0},
  /* FPEXC */
  {0},
  /* FPSCR */
  {0},
  /* FPSCR_NZCV */
  {0},
  /* FPSID */
  {0},
  /* ITSTATE */
  {0},
  /* LR */
  {0},
  /* MVFR0 */
  {0},
  /* MVFR1 */
  {0},
  /* PC */
  {0},
  /* Q0 */
  {ARM::D0, ARM::D1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S0, ARM::S1, ARM::S2, ARM::S3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* Q1 */
  {ARM::D2, ARM::D3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S4, ARM::S5, ARM::S6, ARM::S7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* Q2 */
  {ARM::D4, ARM::D5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S8, ARM::S9, ARM::S10, ARM::S11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* Q3 */
  {ARM::D6, ARM::D7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S12, ARM::S13, ARM::S14, ARM::S15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* Q4 */
  {ARM::D8, ARM::D9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S16, ARM::S17, ARM::S18, ARM::S19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* Q5 */
  {ARM::D10, ARM::D11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S20, ARM::S21, ARM::S22, ARM::S23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* Q6 */
  {ARM::D12, ARM::D13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S24, ARM::S25, ARM::S26, ARM::S27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* Q7 */
  {ARM::D14, ARM::D15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S28, ARM::S29, ARM::S30, ARM::S31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* Q8 */
  {ARM::D16, ARM::D17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* Q9 */
  {ARM::D18, ARM::D19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* Q10 */
  {ARM::D20, ARM::D21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* Q11 */
  {ARM::D22, ARM::D23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* Q12 */
  {ARM::D24, ARM::D25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* Q13 */
  {ARM::D26, ARM::D27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* Q14 */
  {ARM::D28, ARM::D29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* Q15 */
  {ARM::D30, ARM::D31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* R0 */
  {0},
  /* R1 */
  {0},
  /* R2 */
  {0},
  /* R3 */
  {0},
  /* R4 */
  {0},
  /* R5 */
  {0},
  /* R6 */
  {0},
  /* R7 */
  {0},
  /* R8 */
  {0},
  /* R9 */
  {0},
  /* R10 */
  {0},
  /* R11 */
  {0},
  /* R12 */
  {0},
  /* S0 */
  {0},
  /* S1 */
  {0},
  /* S2 */
  {0},
  /* S3 */
  {0},
  /* S4 */
  {0},
  /* S5 */
  {0},
  /* S6 */
  {0},
  /* S7 */
  {0},
  /* S8 */
  {0},
  /* S9 */
  {0},
  /* S10 */
  {0},
  /* S11 */
  {0},
  /* S12 */
  {0},
  /* S13 */
  {0},
  /* S14 */
  {0},
  /* S15 */
  {0},
  /* S16 */
  {0},
  /* S17 */
  {0},
  /* S18 */
  {0},
  /* S19 */
  {0},
  /* S20 */
  {0},
  /* S21 */
  {0},
  /* S22 */
  {0},
  /* S23 */
  {0},
  /* S24 */
  {0},
  /* S25 */
  {0},
  /* S26 */
  {0},
  /* S27 */
  {0},
  /* S28 */
  {0},
  /* S29 */
  {0},
  /* S30 */
  {0},
  /* S31 */
  {0},
  /* SP */
  {0},
  /* SPSR */
  {0},
  /* D0_D2 */
  {ARM::D0, 0, ARM::D2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S0, ARM::S1, 0, 0, ARM::S4, ARM::S5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D1_D3 */
  {ARM::D1, 0, ARM::D3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S2, ARM::S3, 0, 0, ARM::S6, ARM::S7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D2_D4 */
  {ARM::D2, 0, ARM::D4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S4, ARM::S5, 0, 0, ARM::S8, ARM::S9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D3_D5 */
  {ARM::D3, 0, ARM::D5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S6, ARM::S7, 0, 0, ARM::S10, ARM::S11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D4_D6 */
  {ARM::D4, 0, ARM::D6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S8, ARM::S9, 0, 0, ARM::S12, ARM::S13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D5_D7 */
  {ARM::D5, 0, ARM::D7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S10, ARM::S11, 0, 0, ARM::S14, ARM::S15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D6_D8 */
  {ARM::D6, 0, ARM::D8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S12, ARM::S13, 0, 0, ARM::S16, ARM::S17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D7_D9 */
  {ARM::D7, 0, ARM::D9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S14, ARM::S15, 0, 0, ARM::S18, ARM::S19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D8_D10 */
  {ARM::D8, 0, ARM::D10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S16, ARM::S17, 0, 0, ARM::S20, ARM::S21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D9_D11 */
  {ARM::D9, 0, ARM::D11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S18, ARM::S19, 0, 0, ARM::S22, ARM::S23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D10_D12 */
  {ARM::D10, 0, ARM::D12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S20, ARM::S21, 0, 0, ARM::S24, ARM::S25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D11_D13 */
  {ARM::D11, 0, ARM::D13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S22, ARM::S23, 0, 0, ARM::S26, ARM::S27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D12_D14 */
  {ARM::D12, 0, ARM::D14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S24, ARM::S25, 0, 0, ARM::S28, ARM::S29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D13_D15 */
  {ARM::D13, 0, ARM::D15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S26, ARM::S27, 0, 0, ARM::S30, ARM::S31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D14_D16 */
  {ARM::D14, 0, ARM::D16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S28, ARM::S29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D15_D17 */
  {ARM::D15, 0, ARM::D17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S30, ARM::S31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D16_D18 */
  {ARM::D16, 0, ARM::D18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D17_D19 */
  {ARM::D17, 0, ARM::D19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D18_D20 */
  {ARM::D18, 0, ARM::D20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D19_D21 */
  {ARM::D19, 0, ARM::D21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D20_D22 */
  {ARM::D20, 0, ARM::D22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D21_D23 */
  {ARM::D21, 0, ARM::D23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D22_D24 */
  {ARM::D22, 0, ARM::D24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D23_D25 */
  {ARM::D23, 0, ARM::D25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D24_D26 */
  {ARM::D24, 0, ARM::D26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D25_D27 */
  {ARM::D25, 0, ARM::D27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D26_D28 */
  {ARM::D26, 0, ARM::D28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D27_D29 */
  {ARM::D27, 0, ARM::D29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D28_D30 */
  {ARM::D28, 0, ARM::D30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D29_D31 */
  {ARM::D29, 0, ARM::D31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* Q0_Q1 */
  {ARM::D0, ARM::D1, ARM::D2, ARM::D3, 0, 0, 0, 0, 0, 0, ARM::Q0, ARM::Q1, 0, 0, ARM::S0, ARM::S1, ARM::S2, ARM::S3, ARM::S4, ARM::S5, ARM::S6, ARM::S7, 0, 0, 0, 0, 0, 0, 0, 0},
  /* Q1_Q2 */
  {ARM::D2, ARM::D3, ARM::D4, ARM::D5, 0, 0, 0, 0, 0, 0, ARM::Q1, ARM::Q2, 0, 0, ARM::S4, ARM::S5, ARM::S6, ARM::S7, ARM::S8, ARM::S9, ARM::S10, ARM::S11, 0, 0, 0, 0, 0, 0, 0, 0},
  /* Q2_Q3 */
  {ARM::D4, ARM::D5, ARM::D6, ARM::D7, 0, 0, 0, 0, 0, 0, ARM::Q2, ARM::Q3, 0, 0, ARM::S8, ARM::S9, ARM::S10, ARM::S11, ARM::S12, ARM::S13, ARM::S14, ARM::S15, 0, 0, 0, 0, 0, 0, 0, 0},
  /* Q3_Q4 */
  {ARM::D6, ARM::D7, ARM::D8, ARM::D9, 0, 0, 0, 0, 0, 0, ARM::Q3, ARM::Q4, 0, 0, ARM::S12, ARM::S13, ARM::S14, ARM::S15, ARM::S16, ARM::S17, ARM::S18, ARM::S19, 0, 0, 0, 0, 0, 0, 0, 0},
  /* Q4_Q5 */
  {ARM::D8, ARM::D9, ARM::D10, ARM::D11, 0, 0, 0, 0, 0, 0, ARM::Q4, ARM::Q5, 0, 0, ARM::S16, ARM::S17, ARM::S18, ARM::S19, ARM::S20, ARM::S21, ARM::S22, ARM::S23, 0, 0, 0, 0, 0, 0, 0, 0},
  /* Q5_Q6 */
  {ARM::D10, ARM::D11, ARM::D12, ARM::D13, 0, 0, 0, 0, 0, 0, ARM::Q5, ARM::Q6, 0, 0, ARM::S20, ARM::S21, ARM::S22, ARM::S23, ARM::S24, ARM::S25, ARM::S26, ARM::S27, 0, 0, 0, 0, 0, 0, 0, 0},
  /* Q6_Q7 */
  {ARM::D12, ARM::D13, ARM::D14, ARM::D15, 0, 0, 0, 0, 0, 0, ARM::Q6, ARM::Q7, 0, 0, ARM::S24, ARM::S25, ARM::S26, ARM::S27, ARM::S28, ARM::S29, ARM::S30, ARM::S31, 0, 0, 0, 0, 0, 0, 0, 0},
  /* Q7_Q8 */
  {ARM::D14, ARM::D15, ARM::D16, ARM::D17, 0, 0, 0, 0, 0, 0, ARM::Q7, ARM::Q8, 0, 0, ARM::S28, ARM::S29, ARM::S30, ARM::S31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* Q8_Q9 */
  {ARM::D16, ARM::D17, ARM::D18, ARM::D19, 0, 0, 0, 0, 0, 0, ARM::Q8, ARM::Q9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* Q9_Q10 */
  {ARM::D18, ARM::D19, ARM::D20, ARM::D21, 0, 0, 0, 0, 0, 0, ARM::Q9, ARM::Q10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* Q10_Q11 */
  {ARM::D20, ARM::D21, ARM::D22, ARM::D23, 0, 0, 0, 0, 0, 0, ARM::Q10, ARM::Q11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* Q11_Q12 */
  {ARM::D22, ARM::D23, ARM::D24, ARM::D25, 0, 0, 0, 0, 0, 0, ARM::Q11, ARM::Q12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* Q12_Q13 */
  {ARM::D24, ARM::D25, ARM::D26, ARM::D27, 0, 0, 0, 0, 0, 0, ARM::Q12, ARM::Q13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* Q13_Q14 */
  {ARM::D26, ARM::D27, ARM::D28, ARM::D29, 0, 0, 0, 0, 0, 0, ARM::Q13, ARM::Q14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* Q14_Q15 */
  {ARM::D28, ARM::D29, ARM::D30, ARM::D31, 0, 0, 0, 0, 0, 0, ARM::Q14, ARM::Q15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* Q0_Q1_Q2_Q3 */
  {ARM::D0, ARM::D1, ARM::D2, ARM::D3, ARM::D4, ARM::D5, ARM::D6, ARM::D7, ARM::Q0_Q1, ARM::Q2_Q3, ARM::Q0, ARM::Q1, ARM::Q2, ARM::Q3, ARM::S0, ARM::S1, ARM::S2, ARM::S3, ARM::S4, ARM::S5, ARM::S6, ARM::S7, ARM::S14, ARM::S15, ARM::S12, ARM::S13, ARM::S10, ARM::S11, ARM::S8, ARM::S9},
  /* Q1_Q2_Q3_Q4 */
  {ARM::D2, ARM::D3, ARM::D4, ARM::D5, ARM::D6, ARM::D7, ARM::D8, ARM::D9, ARM::Q1_Q2, ARM::Q3_Q4, ARM::Q1, ARM::Q2, ARM::Q3, ARM::Q4, ARM::S4, ARM::S5, ARM::S6, ARM::S7, ARM::S8, ARM::S9, ARM::S10, ARM::S11, ARM::S18, ARM::S19, ARM::S16, ARM::S17, ARM::S14, ARM::S15, ARM::S12, ARM::S13},
  /* Q2_Q3_Q4_Q5 */
  {ARM::D4, ARM::D5, ARM::D6, ARM::D7, ARM::D8, ARM::D9, ARM::D10, ARM::D11, ARM::Q2_Q3, ARM::Q4_Q5, ARM::Q2, ARM::Q3, ARM::Q4, ARM::Q5, ARM::S8, ARM::S9, ARM::S10, ARM::S11, ARM::S12, ARM::S13, ARM::S14, ARM::S15, ARM::S22, ARM::S23, ARM::S20, ARM::S21, ARM::S18, ARM::S19, ARM::S16, ARM::S17},
  /* Q3_Q4_Q5_Q6 */
  {ARM::D6, ARM::D7, ARM::D8, ARM::D9, ARM::D10, ARM::D11, ARM::D12, ARM::D13, ARM::Q3_Q4, ARM::Q5_Q6, ARM::Q3, ARM::Q4, ARM::Q5, ARM::Q6, ARM::S12, ARM::S13, ARM::S14, ARM::S15, ARM::S16, ARM::S17, ARM::S18, ARM::S19, ARM::S26, ARM::S27, ARM::S24, ARM::S25, ARM::S22, ARM::S23, ARM::S20, ARM::S21},
  /* Q4_Q5_Q6_Q7 */
  {ARM::D8, ARM::D9, ARM::D10, ARM::D11, ARM::D12, ARM::D13, ARM::D14, ARM::D15, ARM::Q4_Q5, ARM::Q6_Q7, ARM::Q4, ARM::Q5, ARM::Q6, ARM::Q7, ARM::S16, ARM::S17, ARM::S18, ARM::S19, ARM::S20, ARM::S21, ARM::S22, ARM::S23, ARM::S30, ARM::S31, ARM::S28, ARM::S29, ARM::S26, ARM::S27, ARM::S24, ARM::S25},
  /* Q5_Q6_Q7_Q8 */
  {ARM::D10, ARM::D11, ARM::D12, ARM::D13, ARM::D14, ARM::D15, ARM::D16, ARM::D17, ARM::Q5_Q6, ARM::Q7_Q8, ARM::Q5, ARM::Q6, ARM::Q7, ARM::Q8, ARM::S20, ARM::S21, ARM::S22, ARM::S23, ARM::S24, ARM::S25, ARM::S26, ARM::S27, 0, 0, 0, 0, ARM::S30, ARM::S31, ARM::S28, ARM::S29},
  /* Q6_Q7_Q8_Q9 */
  {ARM::D12, ARM::D13, ARM::D14, ARM::D15, ARM::D16, ARM::D17, ARM::D18, ARM::D19, ARM::Q6_Q7, ARM::Q8_Q9, ARM::Q6, ARM::Q7, ARM::Q8, ARM::Q9, ARM::S24, ARM::S25, ARM::S26, ARM::S27, ARM::S28, ARM::S29, ARM::S30, ARM::S31, 0, 0, 0, 0, 0, 0, 0, 0},
  /* Q7_Q8_Q9_Q10 */
  {ARM::D14, ARM::D15, ARM::D16, ARM::D17, ARM::D18, ARM::D19, ARM::D20, ARM::D21, ARM::Q7_Q8, ARM::Q9_Q10, ARM::Q7, ARM::Q8, ARM::Q9, ARM::Q10, ARM::S28, ARM::S29, ARM::S30, ARM::S31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* Q8_Q9_Q10_Q11 */
  {ARM::D16, ARM::D17, ARM::D18, ARM::D19, ARM::D20, ARM::D21, ARM::D22, ARM::D23, ARM::Q8_Q9, ARM::Q10_Q11, ARM::Q8, ARM::Q9, ARM::Q10, ARM::Q11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* Q9_Q10_Q11_Q12 */
  {ARM::D18, ARM::D19, ARM::D20, ARM::D21, ARM::D22, ARM::D23, ARM::D24, ARM::D25, ARM::Q9_Q10, ARM::Q11_Q12, ARM::Q9, ARM::Q10, ARM::Q11, ARM::Q12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* Q10_Q11_Q12_Q13 */
  {ARM::D20, ARM::D21, ARM::D22, ARM::D23, ARM::D24, ARM::D25, ARM::D26, ARM::D27, ARM::Q10_Q11, ARM::Q12_Q13, ARM::Q10, ARM::Q11, ARM::Q12, ARM::Q13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* Q11_Q12_Q13_Q14 */
  {ARM::D22, ARM::D23, ARM::D24, ARM::D25, ARM::D26, ARM::D27, ARM::D28, ARM::D29, ARM::Q11_Q12, ARM::Q13_Q14, ARM::Q11, ARM::Q12, ARM::Q13, ARM::Q14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* Q12_Q13_Q14_Q15 */
  {ARM::D24, ARM::D25, ARM::D26, ARM::D27, ARM::D28, ARM::D29, ARM::D30, ARM::D31, ARM::Q12_Q13, ARM::Q14_Q15, ARM::Q12, ARM::Q13, ARM::Q14, ARM::Q15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D0_D1_D2 */
  {ARM::D0, ARM::D1, ARM::D2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S0, ARM::S1, ARM::S2, ARM::S3, ARM::S4, ARM::S5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D1_D2_D3 */
  {ARM::D1, ARM::D2, ARM::D3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S2, ARM::S3, ARM::S4, ARM::S5, ARM::S6, ARM::S7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D2_D3_D4 */
  {ARM::D2, ARM::D3, ARM::D4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S4, ARM::S5, ARM::S6, ARM::S7, ARM::S8, ARM::S9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D3_D4_D5 */
  {ARM::D3, ARM::D4, ARM::D5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S6, ARM::S7, ARM::S8, ARM::S9, ARM::S10, ARM::S11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D4_D5_D6 */
  {ARM::D4, ARM::D5, ARM::D6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S8, ARM::S9, ARM::S10, ARM::S11, ARM::S12, ARM::S13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D5_D6_D7 */
  {ARM::D5, ARM::D6, ARM::D7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S10, ARM::S11, ARM::S12, ARM::S13, ARM::S14, ARM::S15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D6_D7_D8 */
  {ARM::D6, ARM::D7, ARM::D8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S12, ARM::S13, ARM::S14, ARM::S15, ARM::S16, ARM::S17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D7_D8_D9 */
  {ARM::D7, ARM::D8, ARM::D9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S14, ARM::S15, ARM::S16, ARM::S17, ARM::S18, ARM::S19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D8_D9_D10 */
  {ARM::D8, ARM::D9, ARM::D10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S16, ARM::S17, ARM::S18, ARM::S19, ARM::S20, ARM::S21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D9_D10_D11 */
  {ARM::D9, ARM::D10, ARM::D11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S18, ARM::S19, ARM::S20, ARM::S21, ARM::S22, ARM::S23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D10_D11_D12 */
  {ARM::D10, ARM::D11, ARM::D12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S20, ARM::S21, ARM::S22, ARM::S23, ARM::S24, ARM::S25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D11_D12_D13 */
  {ARM::D11, ARM::D12, ARM::D13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S22, ARM::S23, ARM::S24, ARM::S25, ARM::S26, ARM::S27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D12_D13_D14 */
  {ARM::D12, ARM::D13, ARM::D14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S24, ARM::S25, ARM::S26, ARM::S27, ARM::S28, ARM::S29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D13_D14_D15 */
  {ARM::D13, ARM::D14, ARM::D15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S26, ARM::S27, ARM::S28, ARM::S29, ARM::S30, ARM::S31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D14_D15_D16 */
  {ARM::D14, ARM::D15, ARM::D16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S28, ARM::S29, ARM::S30, ARM::S31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D15_D16_D17 */
  {ARM::D15, ARM::D16, ARM::D17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S30, ARM::S31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D16_D17_D18 */
  {ARM::D16, ARM::D17, ARM::D18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D17_D18_D19 */
  {ARM::D17, ARM::D18, ARM::D19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D18_D19_D20 */
  {ARM::D18, ARM::D19, ARM::D20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D19_D20_D21 */
  {ARM::D19, ARM::D20, ARM::D21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D20_D21_D22 */
  {ARM::D20, ARM::D21, ARM::D22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D21_D22_D23 */
  {ARM::D21, ARM::D22, ARM::D23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D22_D23_D24 */
  {ARM::D22, ARM::D23, ARM::D24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D23_D24_D25 */
  {ARM::D23, ARM::D24, ARM::D25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D24_D25_D26 */
  {ARM::D24, ARM::D25, ARM::D26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D25_D26_D27 */
  {ARM::D25, ARM::D26, ARM::D27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D26_D27_D28 */
  {ARM::D26, ARM::D27, ARM::D28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D27_D28_D29 */
  {ARM::D27, ARM::D28, ARM::D29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D28_D29_D30 */
  {ARM::D28, ARM::D29, ARM::D30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D29_D30_D31 */
  {ARM::D29, ARM::D30, ARM::D31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D0_D2_D4 */
  {ARM::D0, 0, ARM::D2, 0, ARM::D4, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S0, ARM::S1, 0, 0, ARM::S4, ARM::S5, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S8, ARM::S9},
  /* D1_D3_D5 */
  {ARM::D1, 0, ARM::D3, 0, ARM::D5, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S2, ARM::S3, 0, 0, ARM::S6, ARM::S7, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S10, ARM::S11},
  /* D2_D4_D6 */
  {ARM::D2, 0, ARM::D4, 0, ARM::D6, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S4, ARM::S5, 0, 0, ARM::S8, ARM::S9, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S12, ARM::S13},
  /* D3_D5_D7 */
  {ARM::D3, 0, ARM::D5, 0, ARM::D7, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S6, ARM::S7, 0, 0, ARM::S10, ARM::S11, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S14, ARM::S15},
  /* D4_D6_D8 */
  {ARM::D4, 0, ARM::D6, 0, ARM::D8, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S8, ARM::S9, 0, 0, ARM::S12, ARM::S13, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S16, ARM::S17},
  /* D5_D7_D9 */
  {ARM::D5, 0, ARM::D7, 0, ARM::D9, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S10, ARM::S11, 0, 0, ARM::S14, ARM::S15, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S18, ARM::S19},
  /* D6_D8_D10 */
  {ARM::D6, 0, ARM::D8, 0, ARM::D10, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S12, ARM::S13, 0, 0, ARM::S16, ARM::S17, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S20, ARM::S21},
  /* D7_D9_D11 */
  {ARM::D7, 0, ARM::D9, 0, ARM::D11, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S14, ARM::S15, 0, 0, ARM::S18, ARM::S19, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S22, ARM::S23},
  /* D8_D10_D12 */
  {ARM::D8, 0, ARM::D10, 0, ARM::D12, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S16, ARM::S17, 0, 0, ARM::S20, ARM::S21, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S24, ARM::S25},
  /* D9_D11_D13 */
  {ARM::D9, 0, ARM::D11, 0, ARM::D13, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S18, ARM::S19, 0, 0, ARM::S22, ARM::S23, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S26, ARM::S27},
  /* D10_D12_D14 */
  {ARM::D10, 0, ARM::D12, 0, ARM::D14, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S20, ARM::S21, 0, 0, ARM::S24, ARM::S25, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S28, ARM::S29},
  /* D11_D13_D15 */
  {ARM::D11, 0, ARM::D13, 0, ARM::D15, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S22, ARM::S23, 0, 0, ARM::S26, ARM::S27, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S30, ARM::S31},
  /* D12_D14_D16 */
  {ARM::D12, 0, ARM::D14, 0, ARM::D16, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S24, ARM::S25, 0, 0, ARM::S28, ARM::S29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D13_D15_D17 */
  {ARM::D13, 0, ARM::D15, 0, ARM::D17, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S26, ARM::S27, 0, 0, ARM::S30, ARM::S31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D14_D16_D18 */
  {ARM::D14, 0, ARM::D16, 0, ARM::D18, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S28, ARM::S29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D15_D17_D19 */
  {ARM::D15, 0, ARM::D17, 0, ARM::D19, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S30, ARM::S31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D16_D18_D20 */
  {ARM::D16, 0, ARM::D18, 0, ARM::D20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D17_D19_D21 */
  {ARM::D17, 0, ARM::D19, 0, ARM::D21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D18_D20_D22 */
  {ARM::D18, 0, ARM::D20, 0, ARM::D22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D19_D21_D23 */
  {ARM::D19, 0, ARM::D21, 0, ARM::D23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D20_D22_D24 */
  {ARM::D20, 0, ARM::D22, 0, ARM::D24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D21_D23_D25 */
  {ARM::D21, 0, ARM::D23, 0, ARM::D25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D22_D24_D26 */
  {ARM::D22, 0, ARM::D24, 0, ARM::D26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D23_D25_D27 */
  {ARM::D23, 0, ARM::D25, 0, ARM::D27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D24_D26_D28 */
  {ARM::D24, 0, ARM::D26, 0, ARM::D28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D25_D27_D29 */
  {ARM::D25, 0, ARM::D27, 0, ARM::D29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D26_D28_D30 */
  {ARM::D26, 0, ARM::D28, 0, ARM::D30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D27_D29_D31 */
  {ARM::D27, 0, ARM::D29, 0, ARM::D31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D0_D2_D4_D6 */
  {ARM::D0, 0, ARM::D2, 0, ARM::D4, 0, ARM::D6, 0, 0, 0, 0, 0, 0, 0, ARM::S0, ARM::S1, 0, 0, ARM::S4, ARM::S5, 0, 0, 0, 0, ARM::S12, ARM::S13, 0, 0, ARM::S8, ARM::S9},
  /* D1_D3_D5_D7 */
  {ARM::D1, 0, ARM::D3, 0, ARM::D5, 0, ARM::D7, 0, 0, 0, 0, 0, 0, 0, ARM::S2, ARM::S3, 0, 0, ARM::S6, ARM::S7, 0, 0, 0, 0, ARM::S14, ARM::S15, 0, 0, ARM::S10, ARM::S11},
  /* D2_D4_D6_D8 */
  {ARM::D2, 0, ARM::D4, 0, ARM::D6, 0, ARM::D8, 0, 0, 0, 0, 0, 0, 0, ARM::S4, ARM::S5, 0, 0, ARM::S8, ARM::S9, 0, 0, 0, 0, ARM::S16, ARM::S17, 0, 0, ARM::S12, ARM::S13},
  /* D3_D5_D7_D9 */
  {ARM::D3, 0, ARM::D5, 0, ARM::D7, 0, ARM::D9, 0, 0, 0, 0, 0, 0, 0, ARM::S6, ARM::S7, 0, 0, ARM::S10, ARM::S11, 0, 0, 0, 0, ARM::S18, ARM::S19, 0, 0, ARM::S14, ARM::S15},
  /* D4_D6_D8_D10 */
  {ARM::D4, 0, ARM::D6, 0, ARM::D8, 0, ARM::D10, 0, 0, 0, 0, 0, 0, 0, ARM::S8, ARM::S9, 0, 0, ARM::S12, ARM::S13, 0, 0, 0, 0, ARM::S20, ARM::S21, 0, 0, ARM::S16, ARM::S17},
  /* D5_D7_D9_D11 */
  {ARM::D5, 0, ARM::D7, 0, ARM::D9, 0, ARM::D11, 0, 0, 0, 0, 0, 0, 0, ARM::S10, ARM::S11, 0, 0, ARM::S14, ARM::S15, 0, 0, 0, 0, ARM::S22, ARM::S23, 0, 0, ARM::S18, ARM::S19},
  /* D6_D8_D10_D12 */
  {ARM::D6, 0, ARM::D8, 0, ARM::D10, 0, ARM::D12, 0, 0, 0, 0, 0, 0, 0, ARM::S12, ARM::S13, 0, 0, ARM::S16, ARM::S17, 0, 0, 0, 0, ARM::S24, ARM::S25, 0, 0, ARM::S20, ARM::S21},
  /* D7_D9_D11_D13 */
  {ARM::D7, 0, ARM::D9, 0, ARM::D11, 0, ARM::D13, 0, 0, 0, 0, 0, 0, 0, ARM::S14, ARM::S15, 0, 0, ARM::S18, ARM::S19, 0, 0, 0, 0, ARM::S26, ARM::S27, 0, 0, ARM::S22, ARM::S23},
  /* D8_D10_D12_D14 */
  {ARM::D8, 0, ARM::D10, 0, ARM::D12, 0, ARM::D14, 0, 0, 0, 0, 0, 0, 0, ARM::S16, ARM::S17, 0, 0, ARM::S20, ARM::S21, 0, 0, 0, 0, ARM::S28, ARM::S29, 0, 0, ARM::S24, ARM::S25},
  /* D9_D11_D13_D15 */
  {ARM::D9, 0, ARM::D11, 0, ARM::D13, 0, ARM::D15, 0, 0, 0, 0, 0, 0, 0, ARM::S18, ARM::S19, 0, 0, ARM::S22, ARM::S23, 0, 0, 0, 0, ARM::S30, ARM::S31, 0, 0, ARM::S26, ARM::S27},
  /* D10_D12_D14_D16 */
  {ARM::D10, 0, ARM::D12, 0, ARM::D14, 0, ARM::D16, 0, 0, 0, 0, 0, 0, 0, ARM::S20, ARM::S21, 0, 0, ARM::S24, ARM::S25, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S28, ARM::S29},
  /* D11_D13_D15_D17 */
  {ARM::D11, 0, ARM::D13, 0, ARM::D15, 0, ARM::D17, 0, 0, 0, 0, 0, 0, 0, ARM::S22, ARM::S23, 0, 0, ARM::S26, ARM::S27, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S30, ARM::S31},
  /* D12_D14_D16_D18 */
  {ARM::D12, 0, ARM::D14, 0, ARM::D16, 0, ARM::D18, 0, 0, 0, 0, 0, 0, 0, ARM::S24, ARM::S25, 0, 0, ARM::S28, ARM::S29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D13_D15_D17_D19 */
  {ARM::D13, 0, ARM::D15, 0, ARM::D17, 0, ARM::D19, 0, 0, 0, 0, 0, 0, 0, ARM::S26, ARM::S27, 0, 0, ARM::S30, ARM::S31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D14_D16_D18_D20 */
  {ARM::D14, 0, ARM::D16, 0, ARM::D18, 0, ARM::D20, 0, 0, 0, 0, 0, 0, 0, ARM::S28, ARM::S29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D15_D17_D19_D21 */
  {ARM::D15, 0, ARM::D17, 0, ARM::D19, 0, ARM::D21, 0, 0, 0, 0, 0, 0, 0, ARM::S30, ARM::S31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D16_D18_D20_D22 */
  {ARM::D16, 0, ARM::D18, 0, ARM::D20, 0, ARM::D22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D17_D19_D21_D23 */
  {ARM::D17, 0, ARM::D19, 0, ARM::D21, 0, ARM::D23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D18_D20_D22_D24 */
  {ARM::D18, 0, ARM::D20, 0, ARM::D22, 0, ARM::D24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D19_D21_D23_D25 */
  {ARM::D19, 0, ARM::D21, 0, ARM::D23, 0, ARM::D25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D20_D22_D24_D26 */
  {ARM::D20, 0, ARM::D22, 0, ARM::D24, 0, ARM::D26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D21_D23_D25_D27 */
  {ARM::D21, 0, ARM::D23, 0, ARM::D25, 0, ARM::D27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D22_D24_D26_D28 */
  {ARM::D22, 0, ARM::D24, 0, ARM::D26, 0, ARM::D28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D23_D25_D27_D29 */
  {ARM::D23, 0, ARM::D25, 0, ARM::D27, 0, ARM::D29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D24_D26_D28_D30 */
  {ARM::D24, 0, ARM::D26, 0, ARM::D28, 0, ARM::D30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D25_D27_D29_D31 */
  {ARM::D25, 0, ARM::D27, 0, ARM::D29, 0, ARM::D31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D1_D2 */
  {ARM::D1, ARM::D2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S2, ARM::S3, ARM::S4, ARM::S5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D3_D4 */
  {ARM::D3, ARM::D4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S6, ARM::S7, ARM::S8, ARM::S9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D5_D6 */
  {ARM::D5, ARM::D6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S10, ARM::S11, ARM::S12, ARM::S13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D7_D8 */
  {ARM::D7, ARM::D8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S14, ARM::S15, ARM::S16, ARM::S17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D9_D10 */
  {ARM::D9, ARM::D10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S18, ARM::S19, ARM::S20, ARM::S21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D11_D12 */
  {ARM::D11, ARM::D12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S22, ARM::S23, ARM::S24, ARM::S25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D13_D14 */
  {ARM::D13, ARM::D14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S26, ARM::S27, ARM::S28, ARM::S29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D15_D16 */
  {ARM::D15, ARM::D16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S30, ARM::S31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D17_D18 */
  {ARM::D17, ARM::D18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D19_D20 */
  {ARM::D19, ARM::D20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D21_D22 */
  {ARM::D21, ARM::D22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D23_D24 */
  {ARM::D23, ARM::D24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D25_D26 */
  {ARM::D25, ARM::D26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D27_D28 */
  {ARM::D27, ARM::D28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D29_D30 */
  {ARM::D29, ARM::D30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D1_D2_D3_D4 */
  {ARM::D1, ARM::D2, ARM::D3, ARM::D4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S2, ARM::S3, ARM::S4, ARM::S5, ARM::S6, ARM::S7, ARM::S8, ARM::S9, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D3_D4_D5_D6 */
  {ARM::D3, ARM::D4, ARM::D5, ARM::D6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S6, ARM::S7, ARM::S8, ARM::S9, ARM::S10, ARM::S11, ARM::S12, ARM::S13, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D5_D6_D7_D8 */
  {ARM::D5, ARM::D6, ARM::D7, ARM::D8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S10, ARM::S11, ARM::S12, ARM::S13, ARM::S14, ARM::S15, ARM::S16, ARM::S17, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D7_D8_D9_D10 */
  {ARM::D7, ARM::D8, ARM::D9, ARM::D10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S14, ARM::S15, ARM::S16, ARM::S17, ARM::S18, ARM::S19, ARM::S20, ARM::S21, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D9_D10_D11_D12 */
  {ARM::D9, ARM::D10, ARM::D11, ARM::D12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S18, ARM::S19, ARM::S20, ARM::S21, ARM::S22, ARM::S23, ARM::S24, ARM::S25, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D11_D12_D13_D14 */
  {ARM::D11, ARM::D12, ARM::D13, ARM::D14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S22, ARM::S23, ARM::S24, ARM::S25, ARM::S26, ARM::S27, ARM::S28, ARM::S29, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D13_D14_D15_D16 */
  {ARM::D13, ARM::D14, ARM::D15, ARM::D16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S26, ARM::S27, ARM::S28, ARM::S29, ARM::S30, ARM::S31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D15_D16_D17_D18 */
  {ARM::D15, ARM::D16, ARM::D17, ARM::D18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ARM::S30, ARM::S31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D17_D18_D19_D20 */
  {ARM::D17, ARM::D18, ARM::D19, ARM::D20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D19_D20_D21_D22 */
  {ARM::D19, ARM::D20, ARM::D21, ARM::D22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D21_D22_D23_D24 */
  {ARM::D21, ARM::D22, ARM::D23, ARM::D24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D23_D24_D25_D26 */
  {ARM::D23, ARM::D24, ARM::D25, ARM::D26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D25_D26_D27_D28 */
  {ARM::D25, ARM::D26, ARM::D27, ARM::D28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  /* D27_D28_D29_D30 */
  {ARM::D27, ARM::D28, ARM::D29, ARM::D30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
};

const uint16_t *getARMSubRegTable() {
  return (const uint16_t *)ARMSubRegTable;
}

// ARM Dwarf<->LLVM register mappings.
extern const MCRegisterInfo::DwarfLLVMRegPair ARMDwarfFlavour0Dwarf2L[] = {
  { 0U, ARM::R0 },
  { 1U, ARM::R1 },
  { 2U, ARM::R2 },
  { 3U, ARM::R3 },
  { 4U, ARM::R4 },
  { 5U, ARM::R5 },
  { 6U, ARM::R6 },
  { 7U, ARM::R7 },
  { 8U, ARM::R8 },
  { 9U, ARM::R9 },
  { 10U, ARM::R10 },
  { 11U, ARM::R11 },
  { 12U, ARM::R12 },
  { 13U, ARM::SP },
  { 14U, ARM::LR },
  { 15U, ARM::PC },
  { 256U, ARM::D0 },
  { 257U, ARM::D1 },
  { 258U, ARM::D2 },
  { 259U, ARM::D3 },
  { 260U, ARM::D4 },
  { 261U, ARM::D5 },
  { 262U, ARM::D6 },
  { 263U, ARM::D7 },
  { 264U, ARM::D8 },
  { 265U, ARM::D9 },
  { 266U, ARM::D10 },
  { 267U, ARM::D11 },
  { 268U, ARM::D12 },
  { 269U, ARM::D13 },
  { 270U, ARM::D14 },
  { 271U, ARM::D15 },
  { 272U, ARM::D16 },
  { 273U, ARM::D17 },
  { 274U, ARM::D18 },
  { 275U, ARM::D19 },
  { 276U, ARM::D20 },
  { 277U, ARM::D21 },
  { 278U, ARM::D22 },
  { 279U, ARM::D23 },
  { 280U, ARM::D24 },
  { 281U, ARM::D25 },
  { 282U, ARM::D26 },
  { 283U, ARM::D27 },
  { 284U, ARM::D28 },
  { 285U, ARM::D29 },
  { 286U, ARM::D30 },
  { 287U, ARM::D31 },
};
extern const unsigned ARMDwarfFlavour0Dwarf2LSize = sizeof(ARMDwarfFlavour0Dwarf2L)/sizeof(MCRegisterInfo::DwarfLLVMRegPair);

extern const MCRegisterInfo::DwarfLLVMRegPair ARMEHFlavour0Dwarf2L[] = {
  { 0U, ARM::R0 },
  { 1U, ARM::R1 },
  { 2U, ARM::R2 },
  { 3U, ARM::R3 },
  { 4U, ARM::R4 },
  { 5U, ARM::R5 },
  { 6U, ARM::R6 },
  { 7U, ARM::R7 },
  { 8U, ARM::R8 },
  { 9U, ARM::R9 },
  { 10U, ARM::R10 },
  { 11U, ARM::R11 },
  { 12U, ARM::R12 },
  { 13U, ARM::SP },
  { 14U, ARM::LR },
  { 15U, ARM::PC },
  { 256U, ARM::D0 },
  { 257U, ARM::D1 },
  { 258U, ARM::D2 },
  { 259U, ARM::D3 },
  { 260U, ARM::D4 },
  { 261U, ARM::D5 },
  { 262U, ARM::D6 },
  { 263U, ARM::D7 },
  { 264U, ARM::D8 },
  { 265U, ARM::D9 },
  { 266U, ARM::D10 },
  { 267U, ARM::D11 },
  { 268U, ARM::D12 },
  { 269U, ARM::D13 },
  { 270U, ARM::D14 },
  { 271U, ARM::D15 },
  { 272U, ARM::D16 },
  { 273U, ARM::D17 },
  { 274U, ARM::D18 },
  { 275U, ARM::D19 },
  { 276U, ARM::D20 },
  { 277U, ARM::D21 },
  { 278U, ARM::D22 },
  { 279U, ARM::D23 },
  { 280U, ARM::D24 },
  { 281U, ARM::D25 },
  { 282U, ARM::D26 },
  { 283U, ARM::D27 },
  { 284U, ARM::D28 },
  { 285U, ARM::D29 },
  { 286U, ARM::D30 },
  { 287U, ARM::D31 },
};
extern const unsigned ARMEHFlavour0Dwarf2LSize = sizeof(ARMEHFlavour0Dwarf2L)/sizeof(MCRegisterInfo::DwarfLLVMRegPair);

extern const MCRegisterInfo::DwarfLLVMRegPair ARMDwarfFlavour0L2Dwarf[] = {
  { ARM::D0, 256U },
  { ARM::D1, 257U },
  { ARM::D2, 258U },
  { ARM::D3, 259U },
  { ARM::D4, 260U },
  { ARM::D5, 261U },
  { ARM::D6, 262U },
  { ARM::D7, 263U },
  { ARM::D8, 264U },
  { ARM::D9, 265U },
  { ARM::D10, 266U },
  { ARM::D11, 267U },
  { ARM::D12, 268U },
  { ARM::D13, 269U },
  { ARM::D14, 270U },
  { ARM::D15, 271U },
  { ARM::D16, 272U },
  { ARM::D17, 273U },
  { ARM::D18, 274U },
  { ARM::D19, 275U },
  { ARM::D20, 276U },
  { ARM::D21, 277U },
  { ARM::D22, 278U },
  { ARM::D23, 279U },
  { ARM::D24, 280U },
  { ARM::D25, 281U },
  { ARM::D26, 282U },
  { ARM::D27, 283U },
  { ARM::D28, 284U },
  { ARM::D29, 285U },
  { ARM::D30, 286U },
  { ARM::D31, 287U },
  { ARM::LR, 14U },
  { ARM::PC, 15U },
  { ARM::R0, 0U },
  { ARM::R1, 1U },
  { ARM::R2, 2U },
  { ARM::R3, 3U },
  { ARM::R4, 4U },
  { ARM::R5, 5U },
  { ARM::R6, 6U },
  { ARM::R7, 7U },
  { ARM::R8, 8U },
  { ARM::R9, 9U },
  { ARM::R10, 10U },
  { ARM::R11, 11U },
  { ARM::R12, 12U },
  { ARM::SP, 13U },
};
extern const unsigned ARMDwarfFlavour0L2DwarfSize = sizeof(ARMDwarfFlavour0L2Dwarf)/sizeof(MCRegisterInfo::DwarfLLVMRegPair);

extern const MCRegisterInfo::DwarfLLVMRegPair ARMEHFlavour0L2Dwarf[] = {
  { ARM::D0, 256U },
  { ARM::D1, 257U },
  { ARM::D2, 258U },
  { ARM::D3, 259U },
  { ARM::D4, 260U },
  { ARM::D5, 261U },
  { ARM::D6, 262U },
  { ARM::D7, 263U },
  { ARM::D8, 264U },
  { ARM::D9, 265U },
  { ARM::D10, 266U },
  { ARM::D11, 267U },
  { ARM::D12, 268U },
  { ARM::D13, 269U },
  { ARM::D14, 270U },
  { ARM::D15, 271U },
  { ARM::D16, 272U },
  { ARM::D17, 273U },
  { ARM::D18, 274U },
  { ARM::D19, 275U },
  { ARM::D20, 276U },
  { ARM::D21, 277U },
  { ARM::D22, 278U },
  { ARM::D23, 279U },
  { ARM::D24, 280U },
  { ARM::D25, 281U },
  { ARM::D26, 282U },
  { ARM::D27, 283U },
  { ARM::D28, 284U },
  { ARM::D29, 285U },
  { ARM::D30, 286U },
  { ARM::D31, 287U },
  { ARM::LR, 14U },
  { ARM::PC, 15U },
  { ARM::R0, 0U },
  { ARM::R1, 1U },
  { ARM::R2, 2U },
  { ARM::R3, 3U },
  { ARM::R4, 4U },
  { ARM::R5, 5U },
  { ARM::R6, 6U },
  { ARM::R7, 7U },
  { ARM::R8, 8U },
  { ARM::R9, 9U },
  { ARM::R10, 10U },
  { ARM::R11, 11U },
  { ARM::R12, 12U },
  { ARM::SP, 13U },
};
extern const unsigned ARMEHFlavour0L2DwarfSize = sizeof(ARMEHFlavour0L2Dwarf)/sizeof(MCRegisterInfo::DwarfLLVMRegPair);

static inline void InitARMMCRegisterInfo(MCRegisterInfo *RI, unsigned RA, unsigned DwarfFlavour = 0, unsigned EHFlavour = 0) {
  RI->InitMCRegisterInfo(ARMRegDesc, 278, RA, ARMMCRegisterClasses, 74, ARMRegLists, (uint16_t*)ARMSubRegTable, 30);

  switch (DwarfFlavour) {
  default:
    llvm_unreachable("Unknown DWARF flavour");
  case 0:
    RI->mapDwarfRegsToLLVMRegs(ARMDwarfFlavour0Dwarf2L, ARMDwarfFlavour0Dwarf2LSize, false);
    break;
  }
  switch (EHFlavour) {
  default:
    llvm_unreachable("Unknown DWARF flavour");
  case 0:
    RI->mapDwarfRegsToLLVMRegs(ARMEHFlavour0Dwarf2L, ARMEHFlavour0Dwarf2LSize, true);
    break;
  }
  switch (DwarfFlavour) {
  default:
    llvm_unreachable("Unknown DWARF flavour");
  case 0:
    RI->mapLLVMRegsToDwarfRegs(ARMDwarfFlavour0L2Dwarf, ARMDwarfFlavour0L2DwarfSize, false);
    break;
  }
  switch (EHFlavour) {
  default:
    llvm_unreachable("Unknown DWARF flavour");
  case 0:
    RI->mapLLVMRegsToDwarfRegs(ARMEHFlavour0L2Dwarf, ARMEHFlavour0L2DwarfSize, true);
    break;
  }
}

} // End llvm namespace 
#endif // GET_REGINFO_MC_DESC

//===- TableGen'erated file -------------------------------------*- C++ -*-===//
//
// Register Information Header Fragment
//
// Automatically generated file, do not edit!
//
//===----------------------------------------------------------------------===//


#ifdef GET_REGINFO_HEADER
#undef GET_REGINFO_HEADER
#include "llvm/Target/TargetRegisterInfo.h"

namespace llvm {

struct ARMGenRegisterInfo : public TargetRegisterInfo {
  explicit ARMGenRegisterInfo(unsigned RA, unsigned D = 0, unsigned E = 0);
  virtual bool needsStackRealignment(const MachineFunction &) const
     { return false; }
  unsigned composeSubRegIndices(unsigned, unsigned) const;
  const TargetRegisterClass *getSubClassWithSubReg(const TargetRegisterClass*, unsigned) const;
  const TargetRegisterClass *getMatchingSuperRegClass(const TargetRegisterClass*, const TargetRegisterClass*, unsigned) const;
  const RegClassWeight &getRegClassWeight(const TargetRegisterClass *RC) const;
  unsigned getNumRegPressureSets() const;
  unsigned getRegPressureSetLimit(unsigned Idx) const;
  const int *getRegClassPressureSets(const TargetRegisterClass *RC) const;
};

namespace ARM { // Register classes
  extern const TargetRegisterClass SPRRegClass;
  static const TargetRegisterClass * const SPRRegisterClass = &SPRRegClass;
  extern const TargetRegisterClass DPRRegClass;
  static const TargetRegisterClass * const DPRRegisterClass = &DPRRegClass;
  extern const TargetRegisterClass DPairRegClass;
  static const TargetRegisterClass * const DPairRegisterClass = &DPairRegClass;
  extern const TargetRegisterClass DPairSpcRegClass;
  static const TargetRegisterClass * const DPairSpcRegisterClass = &DPairSpcRegClass;
  extern const TargetRegisterClass DTripleRegClass;
  static const TargetRegisterClass * const DTripleRegisterClass = &DTripleRegClass;
  extern const TargetRegisterClass DQuadRegClass;
  static const TargetRegisterClass * const DQuadRegisterClass = &DQuadRegClass;
  extern const TargetRegisterClass DTripleSpcRegClass;
  static const TargetRegisterClass * const DTripleSpcRegisterClass = &DTripleSpcRegClass;
  extern const TargetRegisterClass DQuadSpcRegClass;
  static const TargetRegisterClass * const DQuadSpcRegisterClass = &DQuadSpcRegClass;
  extern const TargetRegisterClass GPRRegClass;
  static const TargetRegisterClass * const GPRRegisterClass = &GPRRegClass;
  extern const TargetRegisterClass SPR_8RegClass;
  static const TargetRegisterClass * const SPR_8RegisterClass = &SPR_8RegClass;
  extern const TargetRegisterClass DPR_VFP2RegClass;
  static const TargetRegisterClass * const DPR_VFP2RegisterClass = &DPR_VFP2RegClass;
  extern const TargetRegisterClass DPairSpc_with_ssub_0RegClass;
  static const TargetRegisterClass * const DPairSpc_with_ssub_0RegisterClass = &DPairSpc_with_ssub_0RegClass;
  extern const TargetRegisterClass DPair_with_ssub_0RegClass;
  static const TargetRegisterClass * const DPair_with_ssub_0RegisterClass = &DPair_with_ssub_0RegClass;
  extern const TargetRegisterClass QPRRegClass;
  static const TargetRegisterClass * const QPRRegisterClass = &QPRRegClass;
  extern const TargetRegisterClass DTripleSpc_with_ssub_0RegClass;
  static const TargetRegisterClass * const DTripleSpc_with_ssub_0RegisterClass = &DTripleSpc_with_ssub_0RegClass;
  extern const TargetRegisterClass DTriple_with_ssub_0RegClass;
  static const TargetRegisterClass * const DTriple_with_ssub_0RegisterClass = &DTriple_with_ssub_0RegClass;
  extern const TargetRegisterClass DQuadSpc_with_ssub_0RegClass;
  static const TargetRegisterClass * const DQuadSpc_with_ssub_0RegisterClass = &DQuadSpc_with_ssub_0RegClass;
  extern const TargetRegisterClass DQuad_with_ssub_0RegClass;
  static const TargetRegisterClass * const DQuad_with_ssub_0RegisterClass = &DQuad_with_ssub_0RegClass;
  extern const TargetRegisterClass GPRnopcRegClass;
  static const TargetRegisterClass * const GPRnopcRegisterClass = &GPRnopcRegClass;
  extern const TargetRegisterClass DPair_with_ssub_2RegClass;
  static const TargetRegisterClass * const DPair_with_ssub_2RegisterClass = &DPair_with_ssub_2RegClass;
  extern const TargetRegisterClass DTriple_with_ssub_2RegClass;
  static const TargetRegisterClass * const DTriple_with_ssub_2RegisterClass = &DTriple_with_ssub_2RegClass;
  extern const TargetRegisterClass DQuad_with_ssub_2RegClass;
  static const TargetRegisterClass * const DQuad_with_ssub_2RegisterClass = &DQuad_with_ssub_2RegClass;
  extern const TargetRegisterClass QQPRRegClass;
  static const TargetRegisterClass * const QQPRRegisterClass = &QQPRRegClass;
  extern const TargetRegisterClass rGPRRegClass;
  static const TargetRegisterClass * const rGPRRegisterClass = &rGPRRegClass;
  extern const TargetRegisterClass DPairSpc_with_dsub_2_then_ssub_0RegClass;
  static const TargetRegisterClass * const DPairSpc_with_dsub_2_then_ssub_0RegisterClass = &DPairSpc_with_dsub_2_then_ssub_0RegClass;
  extern const TargetRegisterClass DTripleSpc_with_dsub_2_then_ssub_0RegClass;
  static const TargetRegisterClass * const DTripleSpc_with_dsub_2_then_ssub_0RegisterClass = &DTripleSpc_with_dsub_2_then_ssub_0RegClass;
  extern const TargetRegisterClass DTriple_with_dsub_2_then_ssub_0RegClass;
  static const TargetRegisterClass * const DTriple_with_dsub_2_then_ssub_0RegisterClass = &DTriple_with_dsub_2_then_ssub_0RegClass;
  extern const TargetRegisterClass DQuadSpc_with_dsub_2_then_ssub_0RegClass;
  static const TargetRegisterClass * const DQuadSpc_with_dsub_2_then_ssub_0RegisterClass = &DQuadSpc_with_dsub_2_then_ssub_0RegClass;
  extern const TargetRegisterClass DQuad_with_dsub_2_then_ssub_0RegClass;
  static const TargetRegisterClass * const DQuad_with_dsub_2_then_ssub_0RegisterClass = &DQuad_with_dsub_2_then_ssub_0RegClass;
  extern const TargetRegisterClass DQuad_with_dsub_3_then_ssub_0RegClass;
  static const TargetRegisterClass * const DQuad_with_dsub_3_then_ssub_0RegisterClass = &DQuad_with_dsub_3_then_ssub_0RegClass;
  extern const TargetRegisterClass QQQQPRRegClass;
  static const TargetRegisterClass * const QQQQPRRegisterClass = &QQQQPRRegClass;
  extern const TargetRegisterClass DTripleSpc_with_dsub_4_then_ssub_0RegClass;
  static const TargetRegisterClass * const DTripleSpc_with_dsub_4_then_ssub_0RegisterClass = &DTripleSpc_with_dsub_4_then_ssub_0RegClass;
  extern const TargetRegisterClass DQuadSpc_with_dsub_4_then_ssub_0RegClass;
  static const TargetRegisterClass * const DQuadSpc_with_dsub_4_then_ssub_0RegisterClass = &DQuadSpc_with_dsub_4_then_ssub_0RegClass;
  extern const TargetRegisterClass hGPRRegClass;
  static const TargetRegisterClass * const hGPRRegisterClass = &hGPRRegClass;
  extern const TargetRegisterClass tGPRRegClass;
  static const TargetRegisterClass * const tGPRRegisterClass = &tGPRRegClass;
  extern const TargetRegisterClass DPR_8RegClass;
  static const TargetRegisterClass * const DPR_8RegisterClass = &DPR_8RegClass;
  extern const TargetRegisterClass DPairSpc_with_dsub_0_in_DPR_8RegClass;
  static const TargetRegisterClass * const DPairSpc_with_dsub_0_in_DPR_8RegisterClass = &DPairSpc_with_dsub_0_in_DPR_8RegClass;
  extern const TargetRegisterClass DPair_with_dsub_0_in_DPR_8RegClass;
  static const TargetRegisterClass * const DPair_with_dsub_0_in_DPR_8RegisterClass = &DPair_with_dsub_0_in_DPR_8RegClass;
  extern const TargetRegisterClass QPR_VFP2RegClass;
  static const TargetRegisterClass * const QPR_VFP2RegisterClass = &QPR_VFP2RegClass;
  extern const TargetRegisterClass DTripleSpc_with_dsub_0_in_DPR_8RegClass;
  static const TargetRegisterClass * const DTripleSpc_with_dsub_0_in_DPR_8RegisterClass = &DTripleSpc_with_dsub_0_in_DPR_8RegClass;
  extern const TargetRegisterClass DTriple_with_dsub_0_in_DPR_8RegClass;
  static const TargetRegisterClass * const DTriple_with_dsub_0_in_DPR_8RegisterClass = &DTriple_with_dsub_0_in_DPR_8RegClass;
  extern const TargetRegisterClass DQuadSpc_with_dsub_0_in_DPR_8RegClass;
  static const TargetRegisterClass * const DQuadSpc_with_dsub_0_in_DPR_8RegisterClass = &DQuadSpc_with_dsub_0_in_DPR_8RegClass;
  extern const TargetRegisterClass DQuad_with_dsub_0_in_DPR_8RegClass;
  static const TargetRegisterClass * const DQuad_with_dsub_0_in_DPR_8RegisterClass = &DQuad_with_dsub_0_in_DPR_8RegClass;
  extern const TargetRegisterClass QQPR_with_ssub_0RegClass;
  static const TargetRegisterClass * const QQPR_with_ssub_0RegisterClass = &QQPR_with_ssub_0RegClass;
  extern const TargetRegisterClass QQQQPR_with_ssub_0RegClass;
  static const TargetRegisterClass * const QQQQPR_with_ssub_0RegisterClass = &QQQQPR_with_ssub_0RegClass;
  extern const TargetRegisterClass GPRnopc_and_hGPRRegClass;
  static const TargetRegisterClass * const GPRnopc_and_hGPRRegisterClass = &GPRnopc_and_hGPRRegClass;
  extern const TargetRegisterClass DPair_with_dsub_1_in_DPR_8RegClass;
  static const TargetRegisterClass * const DPair_with_dsub_1_in_DPR_8RegisterClass = &DPair_with_dsub_1_in_DPR_8RegClass;
  extern const TargetRegisterClass DTriple_with_dsub_1_in_DPR_8RegClass;
  static const TargetRegisterClass * const DTriple_with_dsub_1_in_DPR_8RegisterClass = &DTriple_with_dsub_1_in_DPR_8RegClass;
  extern const TargetRegisterClass DQuad_with_dsub_1_in_DPR_8RegClass;
  static const TargetRegisterClass * const DQuad_with_dsub_1_in_DPR_8RegisterClass = &DQuad_with_dsub_1_in_DPR_8RegClass;
  extern const TargetRegisterClass QQPR_with_dsub_2_then_ssub_0RegClass;
  static const TargetRegisterClass * const QQPR_with_dsub_2_then_ssub_0RegisterClass = &QQPR_with_dsub_2_then_ssub_0RegClass;
  extern const TargetRegisterClass QQQQPR_with_dsub_2_then_ssub_0RegClass;
  static const TargetRegisterClass * const QQQQPR_with_dsub_2_then_ssub_0RegisterClass = &QQQQPR_with_dsub_2_then_ssub_0RegClass;
  extern const TargetRegisterClass hGPR_and_rGPRRegClass;
  static const TargetRegisterClass * const hGPR_and_rGPRRegisterClass = &hGPR_and_rGPRRegClass;
  extern const TargetRegisterClass tcGPRRegClass;
  static const TargetRegisterClass * const tcGPRRegisterClass = &tcGPRRegClass;
  extern const TargetRegisterClass DPairSpc_with_dsub_2_in_DPR_8RegClass;
  static const TargetRegisterClass * const DPairSpc_with_dsub_2_in_DPR_8RegisterClass = &DPairSpc_with_dsub_2_in_DPR_8RegClass;
  extern const TargetRegisterClass DTripleSpc_with_dsub_2_in_DPR_8RegClass;
  static const TargetRegisterClass * const DTripleSpc_with_dsub_2_in_DPR_8RegisterClass = &DTripleSpc_with_dsub_2_in_DPR_8RegClass;
  extern const TargetRegisterClass DTriple_with_dsub_2_in_DPR_8RegClass;
  static const TargetRegisterClass * const DTriple_with_dsub_2_in_DPR_8RegisterClass = &DTriple_with_dsub_2_in_DPR_8RegClass;
  extern const TargetRegisterClass DQuadSpc_with_dsub_2_in_DPR_8RegClass;
  static const TargetRegisterClass * const DQuadSpc_with_dsub_2_in_DPR_8RegisterClass = &DQuadSpc_with_dsub_2_in_DPR_8RegClass;
  extern const TargetRegisterClass DQuad_with_dsub_2_in_DPR_8RegClass;
  static const TargetRegisterClass * const DQuad_with_dsub_2_in_DPR_8RegisterClass = &DQuad_with_dsub_2_in_DPR_8RegClass;
  extern const TargetRegisterClass QQQQPR_with_dsub_5_then_ssub_0RegClass;
  static const TargetRegisterClass * const QQQQPR_with_dsub_5_then_ssub_0RegisterClass = &QQQQPR_with_dsub_5_then_ssub_0RegClass;
  extern const TargetRegisterClass DQuad_with_dsub_3_in_DPR_8RegClass;
  static const TargetRegisterClass * const DQuad_with_dsub_3_in_DPR_8RegisterClass = &DQuad_with_dsub_3_in_DPR_8RegClass;
  extern const TargetRegisterClass QQQQPR_with_dsub_7_then_ssub_0RegClass;
  static const TargetRegisterClass * const QQQQPR_with_dsub_7_then_ssub_0RegisterClass = &QQQQPR_with_dsub_7_then_ssub_0RegClass;
  extern const TargetRegisterClass tGPR_and_tcGPRRegClass;
  static const TargetRegisterClass * const tGPR_and_tcGPRRegisterClass = &tGPR_and_tcGPRRegClass;
  extern const TargetRegisterClass QPR_8RegClass;
  static const TargetRegisterClass * const QPR_8RegisterClass = &QPR_8RegClass;
  extern const TargetRegisterClass DTripleSpc_with_dsub_4_in_DPR_8RegClass;
  static const TargetRegisterClass * const DTripleSpc_with_dsub_4_in_DPR_8RegisterClass = &DTripleSpc_with_dsub_4_in_DPR_8RegClass;
  extern const TargetRegisterClass DQuadSpc_with_dsub_4_in_DPR_8RegClass;
  static const TargetRegisterClass * const DQuadSpc_with_dsub_4_in_DPR_8RegisterClass = &DQuadSpc_with_dsub_4_in_DPR_8RegClass;
  extern const TargetRegisterClass QQPR_and_DQuad_with_dsub_0_in_DPR_8RegClass;
  static const TargetRegisterClass * const QQPR_and_DQuad_with_dsub_0_in_DPR_8RegisterClass = &QQPR_and_DQuad_with_dsub_0_in_DPR_8RegClass;
  extern const TargetRegisterClass QQQQPR_with_dsub_0_in_DPR_8RegClass;
  static const TargetRegisterClass * const QQQQPR_with_dsub_0_in_DPR_8RegisterClass = &QQQQPR_with_dsub_0_in_DPR_8RegClass;
  extern const TargetRegisterClass QQPR_and_DQuad_with_dsub_2_in_DPR_8RegClass;
  static const TargetRegisterClass * const QQPR_and_DQuad_with_dsub_2_in_DPR_8RegisterClass = &QQPR_and_DQuad_with_dsub_2_in_DPR_8RegClass;
  extern const TargetRegisterClass QQQQPR_with_dsub_2_in_DPR_8RegClass;
  static const TargetRegisterClass * const QQQQPR_with_dsub_2_in_DPR_8RegisterClass = &QQQQPR_with_dsub_2_in_DPR_8RegClass;
  extern const TargetRegisterClass hGPR_and_tcGPRRegClass;
  static const TargetRegisterClass * const hGPR_and_tcGPRRegisterClass = &hGPR_and_tcGPRRegClass;
  extern const TargetRegisterClass QQQQPR_with_dsub_4_in_DPR_8RegClass;
  static const TargetRegisterClass * const QQQQPR_with_dsub_4_in_DPR_8RegisterClass = &QQQQPR_with_dsub_4_in_DPR_8RegClass;
  extern const TargetRegisterClass CCRRegClass;
  static const TargetRegisterClass * const CCRRegisterClass = &CCRRegClass;
  extern const TargetRegisterClass GPRspRegClass;
  static const TargetRegisterClass * const GPRspRegisterClass = &GPRspRegClass;
  extern const TargetRegisterClass QQQQPR_with_dsub_6_in_DPR_8RegClass;
  static const TargetRegisterClass * const QQQQPR_with_dsub_6_in_DPR_8RegisterClass = &QQQQPR_with_dsub_6_in_DPR_8RegClass;
} // end of namespace ARM

} // End llvm namespace 
#endif // GET_REGINFO_HEADER

//===- TableGen'erated file -------------------------------------*- C++ -*-===//
//
// Target Register and Register Classes Information
//
// Automatically generated file, do not edit!
//
//===----------------------------------------------------------------------===//


#ifdef GET_REGINFO_TARGET_DESC
#undef GET_REGINFO_TARGET_DESC
namespace llvm {

extern const MCRegisterClass ARMMCRegisterClasses[];

static const MVT::SimpleValueType VTLists[] = {
  /* 0 */ MVT::i32, MVT::Other,
  /* 2 */ MVT::f32, MVT::Other,
  /* 4 */ MVT::v2i64, MVT::Other,
  /* 6 */ MVT::v4i64, MVT::Other,
  /* 8 */ MVT::v8i64, MVT::Other,
  /* 10 */ MVT::f64, MVT::v8i8, MVT::v4i16, MVT::v2i32, MVT::v1i64, MVT::v2f32, MVT::Other,
  /* 17 */ MVT::v16i8, MVT::v8i16, MVT::v4i32, MVT::v2i64, MVT::v4f32, MVT::v2f64, MVT::Other,
  /* 24 */ MVT::Untyped, MVT::Other,
};

static const TargetRegisterClass *const NullRegClasses[] = { NULL };

// SPR Super-register Classes...
static const TargetRegisterClass *const SPRSuperRegClasses[] = {
  &ARM::DPR_VFP2RegClass, &ARM::QPR_VFP2RegClass, NULL
};

// DPR Super-register Classes...
static const TargetRegisterClass *const DPRSuperRegClasses[] = {
  &ARM::QPRRegClass, &ARM::QQPRRegClass, &ARM::QQQQPRRegClass, NULL
};

// DPair Super-register Classes...
static const TargetRegisterClass *const DPairSuperRegClasses[] = {
  NULL
};

// DPairSpc Super-register Classes...
static const TargetRegisterClass *const DPairSpcSuperRegClasses[] = {
  NULL
};

// DTriple Super-register Classes...
static const TargetRegisterClass *const DTripleSuperRegClasses[] = {
  NULL
};

// DQuad Super-register Classes...
static const TargetRegisterClass *const DQuadSuperRegClasses[] = {
  NULL
};

// DTripleSpc Super-register Classes...
static const TargetRegisterClass *const DTripleSpcSuperRegClasses[] = {
  NULL
};

// DQuadSpc Super-register Classes...
static const TargetRegisterClass *const DQuadSpcSuperRegClasses[] = {
  NULL
};

// GPR Super-register Classes...
static const TargetRegisterClass *const GPRSuperRegClasses[] = {
  NULL
};

// SPR_8 Super-register Classes...
static const TargetRegisterClass *const SPR_8SuperRegClasses[] = {
  &ARM::DPR_8RegClass, &ARM::QPR_8RegClass, NULL
};

// DPR_VFP2 Super-register Classes...
static const TargetRegisterClass *const DPR_VFP2SuperRegClasses[] = {
  &ARM::QPR_VFP2RegClass, NULL
};

// DPairSpc_with_ssub_0 Super-register Classes...
static const TargetRegisterClass *const DPairSpc_with_ssub_0SuperRegClasses[] = {
  NULL
};

// DPair_with_ssub_0 Super-register Classes...
static const TargetRegisterClass *const DPair_with_ssub_0SuperRegClasses[] = {
  NULL
};

// QPR Super-register Classes...
static const TargetRegisterClass *const QPRSuperRegClasses[] = {
  &ARM::QQPRRegClass, &ARM::QQQQPRRegClass, NULL
};

// DTripleSpc_with_ssub_0 Super-register Classes...
static const TargetRegisterClass *const DTripleSpc_with_ssub_0SuperRegClasses[] = {
  NULL
};

// DTriple_with_ssub_0 Super-register Classes...
static const TargetRegisterClass *const DTriple_with_ssub_0SuperRegClasses[] = {
  NULL
};

// DQuadSpc_with_ssub_0 Super-register Classes...
static const TargetRegisterClass *const DQuadSpc_with_ssub_0SuperRegClasses[] = {
  NULL
};

// DQuad_with_ssub_0 Super-register Classes...
static const TargetRegisterClass *const DQuad_with_ssub_0SuperRegClasses[] = {
  NULL
};

// GPRnopc Super-register Classes...
static const TargetRegisterClass *const GPRnopcSuperRegClasses[] = {
  NULL
};

// DPair_with_ssub_2 Super-register Classes...
static const TargetRegisterClass *const DPair_with_ssub_2SuperRegClasses[] = {
  NULL
};

// DTriple_with_ssub_2 Super-register Classes...
static const TargetRegisterClass *const DTriple_with_ssub_2SuperRegClasses[] = {
  NULL
};

// DQuad_with_ssub_2 Super-register Classes...
static const TargetRegisterClass *const DQuad_with_ssub_2SuperRegClasses[] = {
  NULL
};

// QQPR Super-register Classes...
static const TargetRegisterClass *const QQPRSuperRegClasses[] = {
  NULL
};

// rGPR Super-register Classes...
static const TargetRegisterClass *const rGPRSuperRegClasses[] = {
  NULL
};

// DPairSpc_with_dsub_2_then_ssub_0 Super-register Classes...
static const TargetRegisterClass *const DPairSpc_with_dsub_2_then_ssub_0SuperRegClasses[] = {
  NULL
};

// DTripleSpc_with_dsub_2_then_ssub_0 Super-register Classes...
static const TargetRegisterClass *const DTripleSpc_with_dsub_2_then_ssub_0SuperRegClasses[] = {
  NULL
};

// DTriple_with_dsub_2_then_ssub_0 Super-register Classes...
static const TargetRegisterClass *const DTriple_with_dsub_2_then_ssub_0SuperRegClasses[] = {
  NULL
};

// DQuadSpc_with_dsub_2_then_ssub_0 Super-register Classes...
static const TargetRegisterClass *const DQuadSpc_with_dsub_2_then_ssub_0SuperRegClasses[] = {
  NULL
};

// DQuad_with_dsub_2_then_ssub_0 Super-register Classes...
static const TargetRegisterClass *const DQuad_with_dsub_2_then_ssub_0SuperRegClasses[] = {
  NULL
};

// DQuad_with_dsub_3_then_ssub_0 Super-register Classes...
static const TargetRegisterClass *const DQuad_with_dsub_3_then_ssub_0SuperRegClasses[] = {
  NULL
};

// QQQQPR Super-register Classes...
static const TargetRegisterClass *const QQQQPRSuperRegClasses[] = {
  NULL
};

// DTripleSpc_with_dsub_4_then_ssub_0 Super-register Classes...
static const TargetRegisterClass *const DTripleSpc_with_dsub_4_then_ssub_0SuperRegClasses[] = {
  NULL
};

// DQuadSpc_with_dsub_4_then_ssub_0 Super-register Classes...
static const TargetRegisterClass *const DQuadSpc_with_dsub_4_then_ssub_0SuperRegClasses[] = {
  NULL
};

// hGPR Super-register Classes...
static const TargetRegisterClass *const hGPRSuperRegClasses[] = {
  NULL
};

// tGPR Super-register Classes...
static const TargetRegisterClass *const tGPRSuperRegClasses[] = {
  NULL
};

// DPR_8 Super-register Classes...
static const TargetRegisterClass *const DPR_8SuperRegClasses[] = {
  &ARM::QPR_8RegClass, NULL
};

// DPairSpc_with_dsub_0_in_DPR_8 Super-register Classes...
static const TargetRegisterClass *const DPairSpc_with_dsub_0_in_DPR_8SuperRegClasses[] = {
  NULL
};

// DPair_with_dsub_0_in_DPR_8 Super-register Classes...
static const TargetRegisterClass *const DPair_with_dsub_0_in_DPR_8SuperRegClasses[] = {
  NULL
};

// QPR_VFP2 Super-register Classes...
static const TargetRegisterClass *const QPR_VFP2SuperRegClasses[] = {
  NULL
};

// DTripleSpc_with_dsub_0_in_DPR_8 Super-register Classes...
static const TargetRegisterClass *const DTripleSpc_with_dsub_0_in_DPR_8SuperRegClasses[] = {
  NULL
};

// DTriple_with_dsub_0_in_DPR_8 Super-register Classes...
static const TargetRegisterClass *const DTriple_with_dsub_0_in_DPR_8SuperRegClasses[] = {
  NULL
};

// DQuadSpc_with_dsub_0_in_DPR_8 Super-register Classes...
static const TargetRegisterClass *const DQuadSpc_with_dsub_0_in_DPR_8SuperRegClasses[] = {
  NULL
};

// DQuad_with_dsub_0_in_DPR_8 Super-register Classes...
static const TargetRegisterClass *const DQuad_with_dsub_0_in_DPR_8SuperRegClasses[] = {
  NULL
};

// QQPR_with_ssub_0 Super-register Classes...
static const TargetRegisterClass *const QQPR_with_ssub_0SuperRegClasses[] = {
  NULL
};

// QQQQPR_with_ssub_0 Super-register Classes...
static const TargetRegisterClass *const QQQQPR_with_ssub_0SuperRegClasses[] = {
  NULL
};

// GPRnopc_and_hGPR Super-register Classes...
static const TargetRegisterClass *const GPRnopc_and_hGPRSuperRegClasses[] = {
  NULL
};

// DPair_with_dsub_1_in_DPR_8 Super-register Classes...
static const TargetRegisterClass *const DPair_with_dsub_1_in_DPR_8SuperRegClasses[] = {
  NULL
};

// DTriple_with_dsub_1_in_DPR_8 Super-register Classes...
static const TargetRegisterClass *const DTriple_with_dsub_1_in_DPR_8SuperRegClasses[] = {
  NULL
};

// DQuad_with_dsub_1_in_DPR_8 Super-register Classes...
static const TargetRegisterClass *const DQuad_with_dsub_1_in_DPR_8SuperRegClasses[] = {
  NULL
};

// QQPR_with_dsub_2_then_ssub_0 Super-register Classes...
static const TargetRegisterClass *const QQPR_with_dsub_2_then_ssub_0SuperRegClasses[] = {
  NULL
};

// QQQQPR_with_dsub_2_then_ssub_0 Super-register Classes...
static const TargetRegisterClass *const QQQQPR_with_dsub_2_then_ssub_0SuperRegClasses[] = {
  NULL
};

// hGPR_and_rGPR Super-register Classes...
static const TargetRegisterClass *const hGPR_and_rGPRSuperRegClasses[] = {
  NULL
};

// tcGPR Super-register Classes...
static const TargetRegisterClass *const tcGPRSuperRegClasses[] = {
  NULL
};

// DPairSpc_with_dsub_2_in_DPR_8 Super-register Classes...
static const TargetRegisterClass *const DPairSpc_with_dsub_2_in_DPR_8SuperRegClasses[] = {
  NULL
};

// DTripleSpc_with_dsub_2_in_DPR_8 Super-register Classes...
static const TargetRegisterClass *const DTripleSpc_with_dsub_2_in_DPR_8SuperRegClasses[] = {
  NULL
};

// DTriple_with_dsub_2_in_DPR_8 Super-register Classes...
static const TargetRegisterClass *const DTriple_with_dsub_2_in_DPR_8SuperRegClasses[] = {
  NULL
};

// DQuadSpc_with_dsub_2_in_DPR_8 Super-register Classes...
static const TargetRegisterClass *const DQuadSpc_with_dsub_2_in_DPR_8SuperRegClasses[] = {
  NULL
};

// DQuad_with_dsub_2_in_DPR_8 Super-register Classes...
static const TargetRegisterClass *const DQuad_with_dsub_2_in_DPR_8SuperRegClasses[] = {
  NULL
};

// QQQQPR_with_dsub_5_then_ssub_0 Super-register Classes...
static const TargetRegisterClass *const QQQQPR_with_dsub_5_then_ssub_0SuperRegClasses[] = {
  NULL
};

// DQuad_with_dsub_3_in_DPR_8 Super-register Classes...
static const TargetRegisterClass *const DQuad_with_dsub_3_in_DPR_8SuperRegClasses[] = {
  NULL
};

// QQQQPR_with_dsub_7_then_ssub_0 Super-register Classes...
static const TargetRegisterClass *const QQQQPR_with_dsub_7_then_ssub_0SuperRegClasses[] = {
  NULL
};

// tGPR_and_tcGPR Super-register Classes...
static const TargetRegisterClass *const tGPR_and_tcGPRSuperRegClasses[] = {
  NULL
};

// QPR_8 Super-register Classes...
static const TargetRegisterClass *const QPR_8SuperRegClasses[] = {
  NULL
};

// DTripleSpc_with_dsub_4_in_DPR_8 Super-register Classes...
static const TargetRegisterClass *const DTripleSpc_with_dsub_4_in_DPR_8SuperRegClasses[] = {
  NULL
};

// DQuadSpc_with_dsub_4_in_DPR_8 Super-register Classes...
static const TargetRegisterClass *const DQuadSpc_with_dsub_4_in_DPR_8SuperRegClasses[] = {
  NULL
};

// QQPR_and_DQuad_with_dsub_0_in_DPR_8 Super-register Classes...
static const TargetRegisterClass *const QQPR_and_DQuad_with_dsub_0_in_DPR_8SuperRegClasses[] = {
  NULL
};

// QQQQPR_with_dsub_0_in_DPR_8 Super-register Classes...
static const TargetRegisterClass *const QQQQPR_with_dsub_0_in_DPR_8SuperRegClasses[] = {
  NULL
};

// QQPR_and_DQuad_with_dsub_2_in_DPR_8 Super-register Classes...
static const TargetRegisterClass *const QQPR_and_DQuad_with_dsub_2_in_DPR_8SuperRegClasses[] = {
  NULL
};

// QQQQPR_with_dsub_2_in_DPR_8 Super-register Classes...
static const TargetRegisterClass *const QQQQPR_with_dsub_2_in_DPR_8SuperRegClasses[] = {
  NULL
};

// hGPR_and_tcGPR Super-register Classes...
static const TargetRegisterClass *const hGPR_and_tcGPRSuperRegClasses[] = {
  NULL
};

// QQQQPR_with_dsub_4_in_DPR_8 Super-register Classes...
static const TargetRegisterClass *const QQQQPR_with_dsub_4_in_DPR_8SuperRegClasses[] = {
  NULL
};

// CCR Super-register Classes...
static const TargetRegisterClass *const CCRSuperRegClasses[] = {
  NULL
};

// GPRsp Super-register Classes...
static const TargetRegisterClass *const GPRspSuperRegClasses[] = {
  NULL
};

// QQQQPR_with_dsub_6_in_DPR_8 Super-register Classes...
static const TargetRegisterClass *const QQQQPR_with_dsub_6_in_DPR_8SuperRegClasses[] = {
  NULL
};

static const uint32_t SPRSubclassMask[] = {
  0x00000201, 0x00000000, 0x00000000, 
};

static const uint32_t DPRSubclassMask[] = {
  0x00000402, 0x00000008, 0x00000000, 
};

static const uint32_t DPairSubclassMask[] = {
  0x00083004, 0x40004060, 0x00000000, 
};

static const uint32_t DPairSpcSubclassMask[] = {
  0x01000808, 0x00200010, 0x00000000, 
};

static const uint32_t DTripleSubclassMask[] = {
  0x04108010, 0x00808100, 0x00000000, 
};

static const uint32_t DQuadSubclassMask[] = {
  0x30620020, 0x0a030c00, 0x0000000a, 
};

static const uint32_t DTripleSpcSubclassMask[] = {
  0x8a0140c0, 0x81400281, 0x00000001, 
};

static const uint32_t DQuadSpcSubclassMask[] = {
  0x08010080, 0x01000201, 0x00000001, 
};

static const uint32_t GPRSubclassMask[] = {
  0x00840100, 0x20182006, 0x00000120, 
};

static const uint32_t SPR_8SubclassMask[] = {
  0x00000200, 0x00000000, 0x00000000, 
};

static const uint32_t DPR_VFP2SubclassMask[] = {
  0x00000400, 0x00000008, 0x00000000, 
};

static const uint32_t DPairSpc_with_ssub_0SubclassMask[] = {
  0x01000800, 0x00200010, 0x00000000, 
};

static const uint32_t DPair_with_ssub_0SubclassMask[] = {
  0x00081000, 0x40004060, 0x00000000, 
};

static const uint32_t QPRSubclassMask[] = {
  0x00002000, 0x40000040, 0x00000000, 
};

static const uint32_t DTripleSpc_with_ssub_0SubclassMask[] = {
  0x8a014000, 0x81400281, 0x00000001, 
};

static const uint32_t DTriple_with_ssub_0SubclassMask[] = {
  0x04108000, 0x00808100, 0x00000000, 
};

static const uint32_t DQuadSpc_with_ssub_0SubclassMask[] = {
  0x08010000, 0x01000201, 0x00000001, 
};

static const uint32_t DQuad_with_ssub_0SubclassMask[] = {
  0x30220000, 0x0a030c00, 0x0000000a, 
};

static const uint32_t GPRnopcSubclassMask[] = {
  0x00840000, 0x20182004, 0x00000120, 
};

static const uint32_t DPair_with_ssub_2SubclassMask[] = {
  0x00080000, 0x40004060, 0x00000000, 
};

static const uint32_t DTriple_with_ssub_2SubclassMask[] = {
  0x04100000, 0x00808100, 0x00000000, 
};

static const uint32_t DQuad_with_ssub_2SubclassMask[] = {
  0x30200000, 0x0a030c00, 0x0000000a, 
};

static const uint32_t QQPRSubclassMask[] = {
  0x00400000, 0x00020800, 0x0000000a, 
};

static const uint32_t rGPRSubclassMask[] = {
  0x00800000, 0x20180004, 0x00000020, 
};

static const uint32_t DPairSpc_with_dsub_2_then_ssub_0SubclassMask[] = {
  0x01000000, 0x00200010, 0x00000000, 
};

static const uint32_t DTripleSpc_with_dsub_2_then_ssub_0SubclassMask[] = {
  0x8a000000, 0x81400281, 0x00000001, 
};

static const uint32_t DTriple_with_dsub_2_then_ssub_0SubclassMask[] = {
  0x04000000, 0x00808100, 0x00000000, 
};

static const uint32_t DQuadSpc_with_dsub_2_then_ssub_0SubclassMask[] = {
  0x08000000, 0x01000201, 0x00000001, 
};

static const uint32_t DQuad_with_dsub_2_then_ssub_0SubclassMask[] = {
  0x30000000, 0x0a030400, 0x0000000a, 
};

static const uint32_t DQuad_with_dsub_3_then_ssub_0SubclassMask[] = {
  0x20000000, 0x0a030400, 0x0000000a, 
};

static const uint32_t QQQQPRSubclassMask[] = {
  0x40000000, 0x14041000, 0x00000254, 
};

static const uint32_t DTripleSpc_with_dsub_4_then_ssub_0SubclassMask[] = {
  0x80000000, 0x81400281, 0x00000001, 
};

static const uint32_t DQuadSpc_with_dsub_4_then_ssub_0SubclassMask[] = {
  0x00000000, 0x01000201, 0x00000001, 
};

static const uint32_t hGPRSubclassMask[] = {
  0x00000000, 0x00082002, 0x00000120, 
};

static const uint32_t tGPRSubclassMask[] = {
  0x00000000, 0x20000004, 0x00000000, 
};

static const uint32_t DPR_8SubclassMask[] = {
  0x00000000, 0x00000008, 0x00000000, 
};

static const uint32_t DPairSpc_with_dsub_0_in_DPR_8SubclassMask[] = {
  0x00000000, 0x00200010, 0x00000000, 
};

static const uint32_t DPair_with_dsub_0_in_DPR_8SubclassMask[] = {
  0x00000000, 0x40004020, 0x00000000, 
};

static const uint32_t QPR_VFP2SubclassMask[] = {
  0x00000000, 0x40000040, 0x00000000, 
};

static const uint32_t DTripleSpc_with_dsub_0_in_DPR_8SubclassMask[] = {
  0x00000000, 0x81400280, 0x00000001, 
};

static const uint32_t DTriple_with_dsub_0_in_DPR_8SubclassMask[] = {
  0x00000000, 0x00808100, 0x00000000, 
};

static const uint32_t DQuadSpc_with_dsub_0_in_DPR_8SubclassMask[] = {
  0x00000000, 0x01000200, 0x00000001, 
};

static const uint32_t DQuad_with_dsub_0_in_DPR_8SubclassMask[] = {
  0x00000000, 0x0a010400, 0x0000000a, 
};

static const uint32_t QQPR_with_ssub_0SubclassMask[] = {
  0x00000000, 0x00020800, 0x0000000a, 
};

static const uint32_t QQQQPR_with_ssub_0SubclassMask[] = {
  0x00000000, 0x14041000, 0x00000254, 
};

static const uint32_t GPRnopc_and_hGPRSubclassMask[] = {
  0x00000000, 0x00082000, 0x00000120, 
};

static const uint32_t DPair_with_dsub_1_in_DPR_8SubclassMask[] = {
  0x00000000, 0x40004000, 0x00000000, 
};

static const uint32_t DTriple_with_dsub_1_in_DPR_8SubclassMask[] = {
  0x00000000, 0x00808000, 0x00000000, 
};

static const uint32_t DQuad_with_dsub_1_in_DPR_8SubclassMask[] = {
  0x00000000, 0x0a010000, 0x0000000a, 
};

static const uint32_t QQPR_with_dsub_2_then_ssub_0SubclassMask[] = {
  0x00000000, 0x00020000, 0x0000000a, 
};

static const uint32_t QQQQPR_with_dsub_2_then_ssub_0SubclassMask[] = {
  0x00000000, 0x14040000, 0x00000254, 
};

static const uint32_t hGPR_and_rGPRSubclassMask[] = {
  0x00000000, 0x00080000, 0x00000020, 
};

static const uint32_t tcGPRSubclassMask[] = {
  0x00000000, 0x20100000, 0x00000020, 
};

static const uint32_t DPairSpc_with_dsub_2_in_DPR_8SubclassMask[] = {
  0x00000000, 0x00200000, 0x00000000, 
};

static const uint32_t DTripleSpc_with_dsub_2_in_DPR_8SubclassMask[] = {
  0x00000000, 0x81400000, 0x00000001, 
};

static const uint32_t DTriple_with_dsub_2_in_DPR_8SubclassMask[] = {
  0x00000000, 0x00800000, 0x00000000, 
};

static const uint32_t DQuadSpc_with_dsub_2_in_DPR_8SubclassMask[] = {
  0x00000000, 0x01000000, 0x00000001, 
};

static const uint32_t DQuad_with_dsub_2_in_DPR_8SubclassMask[] = {
  0x00000000, 0x0a000000, 0x00000008, 
};

static const uint32_t QQQQPR_with_dsub_5_then_ssub_0SubclassMask[] = {
  0x00000000, 0x14000000, 0x00000254, 
};

static const uint32_t DQuad_with_dsub_3_in_DPR_8SubclassMask[] = {
  0x00000000, 0x08000000, 0x00000008, 
};

static const uint32_t QQQQPR_with_dsub_7_then_ssub_0SubclassMask[] = {
  0x00000000, 0x10000000, 0x00000254, 
};

static const uint32_t tGPR_and_tcGPRSubclassMask[] = {
  0x00000000, 0x20000000, 0x00000000, 
};

static const uint32_t QPR_8SubclassMask[] = {
  0x00000000, 0x40000000, 0x00000000, 
};

static const uint32_t DTripleSpc_with_dsub_4_in_DPR_8SubclassMask[] = {
  0x00000000, 0x80000000, 0x00000001, 
};

static const uint32_t DQuadSpc_with_dsub_4_in_DPR_8SubclassMask[] = {
  0x00000000, 0x00000000, 0x00000001, 
};

static const uint32_t QQPR_and_DQuad_with_dsub_0_in_DPR_8SubclassMask[] = {
  0x00000000, 0x00000000, 0x0000000a, 
};

static const uint32_t QQQQPR_with_dsub_0_in_DPR_8SubclassMask[] = {
  0x00000000, 0x00000000, 0x00000254, 
};

static const uint32_t QQPR_and_DQuad_with_dsub_2_in_DPR_8SubclassMask[] = {
  0x00000000, 0x00000000, 0x00000008, 
};

static const uint32_t QQQQPR_with_dsub_2_in_DPR_8SubclassMask[] = {
  0x00000000, 0x00000000, 0x00000250, 
};

static const uint32_t hGPR_and_tcGPRSubclassMask[] = {
  0x00000000, 0x00000000, 0x00000020, 
};

static const uint32_t QQQQPR_with_dsub_4_in_DPR_8SubclassMask[] = {
  0x00000000, 0x00000000, 0x00000240, 
};

static const uint32_t CCRSubclassMask[] = {
  0x00000000, 0x00000000, 0x00000080, 
};

static const uint32_t GPRspSubclassMask[] = {
  0x00000000, 0x00000000, 0x00000100, 
};

static const uint32_t QQQQPR_with_dsub_6_in_DPR_8SubclassMask[] = {
  0x00000000, 0x00000000, 0x00000200, 
};

static const TargetRegisterClass *const DQuadSpcSuperclasses[] = {
  &ARM::DTripleSpcRegClass,
  NULL
};

static const TargetRegisterClass *const SPR_8Superclasses[] = {
  &ARM::SPRRegClass,
  NULL
};

static const TargetRegisterClass *const DPR_VFP2Superclasses[] = {
  &ARM::DPRRegClass,
  NULL
};

static const TargetRegisterClass *const DPairSpc_with_ssub_0Superclasses[] = {
  &ARM::DPairSpcRegClass,
  NULL
};

static const TargetRegisterClass *const DPair_with_ssub_0Superclasses[] = {
  &ARM::DPairRegClass,
  NULL
};

static const TargetRegisterClass *const QPRSuperclasses[] = {
  &ARM::DPairRegClass,
  NULL
};

static const TargetRegisterClass *const DTripleSpc_with_ssub_0Superclasses[] = {
  &ARM::DTripleSpcRegClass,
  NULL
};

static const TargetRegisterClass *const DTriple_with_ssub_0Superclasses[] = {
  &ARM::DTripleRegClass,
  NULL
};

static const TargetRegisterClass *const DQuadSpc_with_ssub_0Superclasses[] = {
  &ARM::DTripleSpcRegClass,
  &ARM::DQuadSpcRegClass,
  &ARM::DTripleSpc_with_ssub_0RegClass,
  NULL
};

static const TargetRegisterClass *const DQuad_with_ssub_0Superclasses[] = {
  &ARM::DQuadRegClass,
  NULL
};

static const TargetRegisterClass *const GPRnopcSuperclasses[] = {
  &ARM::GPRRegClass,
  NULL
};

static const TargetRegisterClass *const DPair_with_ssub_2Superclasses[] = {
  &ARM::DPairRegClass,
  &ARM::DPair_with_ssub_0RegClass,
  NULL
};

static const TargetRegisterClass *const DTriple_with_ssub_2Superclasses[] = {
  &ARM::DTripleRegClass,
  &ARM::DTriple_with_ssub_0RegClass,
  NULL
};

static const TargetRegisterClass *const DQuad_with_ssub_2Superclasses[] = {
  &ARM::DQuadRegClass,
  &ARM::DQuad_with_ssub_0RegClass,
  NULL
};

static const TargetRegisterClass *const QQPRSuperclasses[] = {
  &ARM::DQuadRegClass,
  NULL
};

static const TargetRegisterClass *const rGPRSuperclasses[] = {
  &ARM::GPRRegClass,
  &ARM::GPRnopcRegClass,
  NULL
};

static const TargetRegisterClass *const DPairSpc_with_dsub_2_then_ssub_0Superclasses[] = {
  &ARM::DPairSpcRegClass,
  &ARM::DPairSpc_with_ssub_0RegClass,
  NULL
};

static const TargetRegisterClass *const DTripleSpc_with_dsub_2_then_ssub_0Superclasses[] = {
  &ARM::DTripleSpcRegClass,
  &ARM::DTripleSpc_with_ssub_0RegClass,
  NULL
};

static const TargetRegisterClass *const DTriple_with_dsub_2_then_ssub_0Superclasses[] = {
  &ARM::DTripleRegClass,
  &ARM::DTriple_with_ssub_0RegClass,
  &ARM::DTriple_with_ssub_2RegClass,
  NULL
};

static const TargetRegisterClass *const DQuadSpc_with_dsub_2_then_ssub_0Superclasses[] = {
  &ARM::DTripleSpcRegClass,
  &ARM::DQuadSpcRegClass,
  &ARM::DTripleSpc_with_ssub_0RegClass,
  &ARM::DQuadSpc_with_ssub_0RegClass,
  &ARM::DTripleSpc_with_dsub_2_then_ssub_0RegClass,
  NULL
};

static const TargetRegisterClass *const DQuad_with_dsub_2_then_ssub_0Superclasses[] = {
  &ARM::DQuadRegClass,
  &ARM::DQuad_with_ssub_0RegClass,
  &ARM::DQuad_with_ssub_2RegClass,
  NULL
};

static const TargetRegisterClass *const DQuad_with_dsub_3_then_ssub_0Superclasses[] = {
  &ARM::DQuadRegClass,
  &ARM::DQuad_with_ssub_0RegClass,
  &ARM::DQuad_with_ssub_2RegClass,
  &ARM::DQuad_with_dsub_2_then_ssub_0RegClass,
  NULL
};

static const TargetRegisterClass *const DTripleSpc_with_dsub_4_then_ssub_0Superclasses[] = {
  &ARM::DTripleSpcRegClass,
  &ARM::DTripleSpc_with_ssub_0RegClass,
  &ARM::DTripleSpc_with_dsub_2_then_ssub_0RegClass,
  NULL
};

static const TargetRegisterClass *const DQuadSpc_with_dsub_4_then_ssub_0Superclasses[] = {
  &ARM::DTripleSpcRegClass,
  &ARM::DQuadSpcRegClass,
  &ARM::DTripleSpc_with_ssub_0RegClass,
  &ARM::DQuadSpc_with_ssub_0RegClass,
  &ARM::DTripleSpc_with_dsub_2_then_ssub_0RegClass,
  &ARM::DQuadSpc_with_dsub_2_then_ssub_0RegClass,
  &ARM::DTripleSpc_with_dsub_4_then_ssub_0RegClass,
  NULL
};

static const TargetRegisterClass *const hGPRSuperclasses[] = {
  &ARM::GPRRegClass,
  NULL
};

static const TargetRegisterClass *const tGPRSuperclasses[] = {
  &ARM::GPRRegClass,
  &ARM::GPRnopcRegClass,
  &ARM::rGPRRegClass,
  NULL
};

static const TargetRegisterClass *const DPR_8Superclasses[] = {
  &ARM::DPRRegClass,
  &ARM::DPR_VFP2RegClass,
  NULL
};

static const TargetRegisterClass *const DPairSpc_with_dsub_0_in_DPR_8Superclasses[] = {
  &ARM::DPairSpcRegClass,
  &ARM::DPairSpc_with_ssub_0RegClass,
  &ARM::DPairSpc_with_dsub_2_then_ssub_0RegClass,
  NULL
};

static const TargetRegisterClass *const DPair_with_dsub_0_in_DPR_8Superclasses[] = {
  &ARM::DPairRegClass,
  &ARM::DPair_with_ssub_0RegClass,
  &ARM::DPair_with_ssub_2RegClass,
  NULL
};

static const TargetRegisterClass *const QPR_VFP2Superclasses[] = {
  &ARM::DPairRegClass,
  &ARM::DPair_with_ssub_0RegClass,
  &ARM::QPRRegClass,
  &ARM::DPair_with_ssub_2RegClass,
  NULL
};

static const TargetRegisterClass *const DTripleSpc_with_dsub_0_in_DPR_8Superclasses[] = {
  &ARM::DTripleSpcRegClass,
  &ARM::DTripleSpc_with_ssub_0RegClass,
  &ARM::DTripleSpc_with_dsub_2_then_ssub_0RegClass,
  &ARM::DTripleSpc_with_dsub_4_then_ssub_0RegClass,
  NULL
};

static const TargetRegisterClass *const DTriple_with_dsub_0_in_DPR_8Superclasses[] = {
  &ARM::DTripleRegClass,
  &ARM::DTriple_with_ssub_0RegClass,
  &ARM::DTriple_with_ssub_2RegClass,
  &ARM::DTriple_with_dsub_2_then_ssub_0RegClass,
  NULL
};

static const TargetRegisterClass *const DQuadSpc_with_dsub_0_in_DPR_8Superclasses[] = {
  &ARM::DTripleSpcRegClass,
  &ARM::DQuadSpcRegClass,
  &ARM::DTripleSpc_with_ssub_0RegClass,
  &ARM::DQuadSpc_with_ssub_0RegClass,
  &ARM::DTripleSpc_with_dsub_2_then_ssub_0RegClass,
  &ARM::DQuadSpc_with_dsub_2_then_ssub_0RegClass,
  &ARM::DTripleSpc_with_dsub_4_then_ssub_0RegClass,
  &ARM::DQuadSpc_with_dsub_4_then_ssub_0RegClass,
  &ARM::DTripleSpc_with_dsub_0_in_DPR_8RegClass,
  NULL
};

static const TargetRegisterClass *const DQuad_with_dsub_0_in_DPR_8Superclasses[] = {
  &ARM::DQuadRegClass,
  &ARM::DQuad_with_ssub_0RegClass,
  &ARM::DQuad_with_ssub_2RegClass,
  &ARM::DQuad_with_dsub_2_then_ssub_0RegClass,
  &ARM::DQuad_with_dsub_3_then_ssub_0RegClass,
  NULL
};

static const TargetRegisterClass *const QQPR_with_ssub_0Superclasses[] = {
  &ARM::DQuadRegClass,
  &ARM::DQuad_with_ssub_0RegClass,
  &ARM::DQuad_with_ssub_2RegClass,
  &ARM::QQPRRegClass,
  NULL
};

static const TargetRegisterClass *const QQQQPR_with_ssub_0Superclasses[] = {
  &ARM::QQQQPRRegClass,
  NULL
};

static const TargetRegisterClass *const GPRnopc_and_hGPRSuperclasses[] = {
  &ARM::GPRRegClass,
  &ARM::GPRnopcRegClass,
  &ARM::hGPRRegClass,
  NULL
};

static const TargetRegisterClass *const DPair_with_dsub_1_in_DPR_8Superclasses[] = {
  &ARM::DPairRegClass,
  &ARM::DPair_with_ssub_0RegClass,
  &ARM::DPair_with_ssub_2RegClass,
  &ARM::DPair_with_dsub_0_in_DPR_8RegClass,
  NULL
};

static const TargetRegisterClass *const DTriple_with_dsub_1_in_DPR_8Superclasses[] = {
  &ARM::DTripleRegClass,
  &ARM::DTriple_with_ssub_0RegClass,
  &ARM::DTriple_with_ssub_2RegClass,
  &ARM::DTriple_with_dsub_2_then_ssub_0RegClass,
  &ARM::DTriple_with_dsub_0_in_DPR_8RegClass,
  NULL
};

static const TargetRegisterClass *const DQuad_with_dsub_1_in_DPR_8Superclasses[] = {
  &ARM::DQuadRegClass,
  &ARM::DQuad_with_ssub_0RegClass,
  &ARM::DQuad_with_ssub_2RegClass,
  &ARM::DQuad_with_dsub_2_then_ssub_0RegClass,
  &ARM::DQuad_with_dsub_3_then_ssub_0RegClass,
  &ARM::DQuad_with_dsub_0_in_DPR_8RegClass,
  NULL
};

static const TargetRegisterClass *const QQPR_with_dsub_2_then_ssub_0Superclasses[] = {
  &ARM::DQuadRegClass,
  &ARM::DQuad_with_ssub_0RegClass,
  &ARM::DQuad_with_ssub_2RegClass,
  &ARM::QQPRRegClass,
  &ARM::DQuad_with_dsub_2_then_ssub_0RegClass,
  &ARM::DQuad_with_dsub_3_then_ssub_0RegClass,
  &ARM::QQPR_with_ssub_0RegClass,
  NULL
};

static const TargetRegisterClass *const QQQQPR_with_dsub_2_then_ssub_0Superclasses[] = {
  &ARM::QQQQPRRegClass,
  &ARM::QQQQPR_with_ssub_0RegClass,
  NULL
};

static const TargetRegisterClass *const hGPR_and_rGPRSuperclasses[] = {
  &ARM::GPRRegClass,
  &ARM::GPRnopcRegClass,
  &ARM::rGPRRegClass,
  &ARM::hGPRRegClass,
  &ARM::GPRnopc_and_hGPRRegClass,
  NULL
};

static const TargetRegisterClass *const tcGPRSuperclasses[] = {
  &ARM::GPRRegClass,
  &ARM::GPRnopcRegClass,
  &ARM::rGPRRegClass,
  NULL
};

static const TargetRegisterClass *const DPairSpc_with_dsub_2_in_DPR_8Superclasses[] = {
  &ARM::DPairSpcRegClass,
  &ARM::DPairSpc_with_ssub_0RegClass,
  &ARM::DPairSpc_with_dsub_2_then_ssub_0RegClass,
  &ARM::DPairSpc_with_dsub_0_in_DPR_8RegClass,
  NULL
};

static const TargetRegisterClass *const DTripleSpc_with_dsub_2_in_DPR_8Superclasses[] = {
  &ARM::DTripleSpcRegClass,
  &ARM::DTripleSpc_with_ssub_0RegClass,
  &ARM::DTripleSpc_with_dsub_2_then_ssub_0RegClass,
  &ARM::DTripleSpc_with_dsub_4_then_ssub_0RegClass,
  &ARM::DTripleSpc_with_dsub_0_in_DPR_8RegClass,
  NULL
};

static const TargetRegisterClass *const DTriple_with_dsub_2_in_DPR_8Superclasses[] = {
  &ARM::DTripleRegClass,
  &ARM::DTriple_with_ssub_0RegClass,
  &ARM::DTriple_with_ssub_2RegClass,
  &ARM::DTriple_with_dsub_2_then_ssub_0RegClass,
  &ARM::DTriple_with_dsub_0_in_DPR_8RegClass,
  &ARM::DTriple_with_dsub_1_in_DPR_8RegClass,
  NULL
};

static const TargetRegisterClass *const DQuadSpc_with_dsub_2_in_DPR_8Superclasses[] = {
  &ARM::DTripleSpcRegClass,
  &ARM::DQuadSpcRegClass,
  &ARM::DTripleSpc_with_ssub_0RegClass,
  &ARM::DQuadSpc_with_ssub_0RegClass,
  &ARM::DTripleSpc_with_dsub_2_then_ssub_0RegClass,
  &ARM::DQuadSpc_with_dsub_2_then_ssub_0RegClass,
  &ARM::DTripleSpc_with_dsub_4_then_ssub_0RegClass,
  &ARM::DQuadSpc_with_dsub_4_then_ssub_0RegClass,
  &ARM::DTripleSpc_with_dsub_0_in_DPR_8RegClass,
  &ARM::DQuadSpc_with_dsub_0_in_DPR_8RegClass,
  &ARM::DTripleSpc_with_dsub_2_in_DPR_8RegClass,
  NULL
};

static const TargetRegisterClass *const DQuad_with_dsub_2_in_DPR_8Superclasses[] = {
  &ARM::DQuadRegClass,
  &ARM::DQuad_with_ssub_0RegClass,
  &ARM::DQuad_with_ssub_2RegClass,
  &ARM::DQuad_with_dsub_2_then_ssub_0RegClass,
  &ARM::DQuad_with_dsub_3_then_ssub_0RegClass,
  &ARM::DQuad_with_dsub_0_in_DPR_8RegClass,
  &ARM::DQuad_with_dsub_1_in_DPR_8RegClass,
  NULL
};

static const TargetRegisterClass *const QQQQPR_with_dsub_5_then_ssub_0Superclasses[] = {
  &ARM::QQQQPRRegClass,
  &ARM::QQQQPR_with_ssub_0RegClass,
  &ARM::QQQQPR_with_dsub_2_then_ssub_0RegClass,
  NULL
};

static const TargetRegisterClass *const DQuad_with_dsub_3_in_DPR_8Superclasses[] = {
  &ARM::DQuadRegClass,
  &ARM::DQuad_with_ssub_0RegClass,
  &ARM::DQuad_with_ssub_2RegClass,
  &ARM::DQuad_with_dsub_2_then_ssub_0RegClass,
  &ARM::DQuad_with_dsub_3_then_ssub_0RegClass,
  &ARM::DQuad_with_dsub_0_in_DPR_8RegClass,
  &ARM::DQuad_with_dsub_1_in_DPR_8RegClass,
  &ARM::DQuad_with_dsub_2_in_DPR_8RegClass,
  NULL
};

static const TargetRegisterClass *const QQQQPR_with_dsub_7_then_ssub_0Superclasses[] = {
  &ARM::QQQQPRRegClass,
  &ARM::QQQQPR_with_ssub_0RegClass,
  &ARM::QQQQPR_with_dsub_2_then_ssub_0RegClass,
  &ARM::QQQQPR_with_dsub_5_then_ssub_0RegClass,
  NULL
};

static const TargetRegisterClass *const tGPR_and_tcGPRSuperclasses[] = {
  &ARM::GPRRegClass,
  &ARM::GPRnopcRegClass,
  &ARM::rGPRRegClass,
  &ARM::tGPRRegClass,
  &ARM::tcGPRRegClass,
  NULL
};

static const TargetRegisterClass *const QPR_8Superclasses[] = {
  &ARM::DPairRegClass,
  &ARM::DPair_with_ssub_0RegClass,
  &ARM::QPRRegClass,
  &ARM::DPair_with_ssub_2RegClass,
  &ARM::DPair_with_dsub_0_in_DPR_8RegClass,
  &ARM::QPR_VFP2RegClass,
  &ARM::DPair_with_dsub_1_in_DPR_8RegClass,
  NULL
};

static const TargetRegisterClass *const DTripleSpc_with_dsub_4_in_DPR_8Superclasses[] = {
  &ARM::DTripleSpcRegClass,
  &ARM::DTripleSpc_with_ssub_0RegClass,
  &ARM::DTripleSpc_with_dsub_2_then_ssub_0RegClass,
  &ARM::DTripleSpc_with_dsub_4_then_ssub_0RegClass,
  &ARM::DTripleSpc_with_dsub_0_in_DPR_8RegClass,
  &ARM::DTripleSpc_with_dsub_2_in_DPR_8RegClass,
  NULL
};

static const TargetRegisterClass *const DQuadSpc_with_dsub_4_in_DPR_8Superclasses[] = {
  &ARM::DTripleSpcRegClass,
  &ARM::DQuadSpcRegClass,
  &ARM::DTripleSpc_with_ssub_0RegClass,
  &ARM::DQuadSpc_with_ssub_0RegClass,
  &ARM::DTripleSpc_with_dsub_2_then_ssub_0RegClass,
  &ARM::DQuadSpc_with_dsub_2_then_ssub_0RegClass,
  &ARM::DTripleSpc_with_dsub_4_then_ssub_0RegClass,
  &ARM::DQuadSpc_with_dsub_4_then_ssub_0RegClass,
  &ARM::DTripleSpc_with_dsub_0_in_DPR_8RegClass,
  &ARM::DQuadSpc_with_dsub_0_in_DPR_8RegClass,
  &ARM::DTripleSpc_with_dsub_2_in_DPR_8RegClass,
  &ARM::DQuadSpc_with_dsub_2_in_DPR_8RegClass,
  &ARM::DTripleSpc_with_dsub_4_in_DPR_8RegClass,
  NULL
};

static const TargetRegisterClass *const QQPR_and_DQuad_with_dsub_0_in_DPR_8Superclasses[] = {
  &ARM::DQuadRegClass,
  &ARM::DQuad_with_ssub_0RegClass,
  &ARM::DQuad_with_ssub_2RegClass,
  &ARM::QQPRRegClass,
  &ARM::DQuad_with_dsub_2_then_ssub_0RegClass,
  &ARM::DQuad_with_dsub_3_then_ssub_0RegClass,
  &ARM::DQuad_with_dsub_0_in_DPR_8RegClass,
  &ARM::QQPR_with_ssub_0RegClass,
  &ARM::DQuad_with_dsub_1_in_DPR_8RegClass,
  &ARM::QQPR_with_dsub_2_then_ssub_0RegClass,
  NULL
};

static const TargetRegisterClass *const QQQQPR_with_dsub_0_in_DPR_8Superclasses[] = {
  &ARM::QQQQPRRegClass,
  &ARM::QQQQPR_with_ssub_0RegClass,
  &ARM::QQQQPR_with_dsub_2_then_ssub_0RegClass,
  &ARM::QQQQPR_with_dsub_5_then_ssub_0RegClass,
  &ARM::QQQQPR_with_dsub_7_then_ssub_0RegClass,
  NULL
};

static const TargetRegisterClass *const QQPR_and_DQuad_with_dsub_2_in_DPR_8Superclasses[] = {
  &ARM::DQuadRegClass,
  &ARM::DQuad_with_ssub_0RegClass,
  &ARM::DQuad_with_ssub_2RegClass,
  &ARM::QQPRRegClass,
  &ARM::DQuad_with_dsub_2_then_ssub_0RegClass,
  &ARM::DQuad_with_dsub_3_then_ssub_0RegClass,
  &ARM::DQuad_with_dsub_0_in_DPR_8RegClass,
  &ARM::QQPR_with_ssub_0RegClass,
  &ARM::DQuad_with_dsub_1_in_DPR_8RegClass,
  &ARM::QQPR_with_dsub_2_then_ssub_0RegClass,
  &ARM::DQuad_with_dsub_2_in_DPR_8RegClass,
  &ARM::DQuad_with_dsub_3_in_DPR_8RegClass,
  &ARM::QQPR_and_DQuad_with_dsub_0_in_DPR_8RegClass,
  NULL
};

static const TargetRegisterClass *const QQQQPR_with_dsub_2_in_DPR_8Superclasses[] = {
  &ARM::QQQQPRRegClass,
  &ARM::QQQQPR_with_ssub_0RegClass,
  &ARM::QQQQPR_with_dsub_2_then_ssub_0RegClass,
  &ARM::QQQQPR_with_dsub_5_then_ssub_0RegClass,
  &ARM::QQQQPR_with_dsub_7_then_ssub_0RegClass,
  &ARM::QQQQPR_with_dsub_0_in_DPR_8RegClass,
  NULL
};

static const TargetRegisterClass *const hGPR_and_tcGPRSuperclasses[] = {
  &ARM::GPRRegClass,
  &ARM::GPRnopcRegClass,
  &ARM::rGPRRegClass,
  &ARM::hGPRRegClass,
  &ARM::GPRnopc_and_hGPRRegClass,
  &ARM::hGPR_and_rGPRRegClass,
  &ARM::tcGPRRegClass,
  NULL
};

static const TargetRegisterClass *const QQQQPR_with_dsub_4_in_DPR_8Superclasses[] = {
  &ARM::QQQQPRRegClass,
  &ARM::QQQQPR_with_ssub_0RegClass,
  &ARM::QQQQPR_with_dsub_2_then_ssub_0RegClass,
  &ARM::QQQQPR_with_dsub_5_then_ssub_0RegClass,
  &ARM::QQQQPR_with_dsub_7_then_ssub_0RegClass,
  &ARM::QQQQPR_with_dsub_0_in_DPR_8RegClass,
  &ARM::QQQQPR_with_dsub_2_in_DPR_8RegClass,
  NULL
};

static const TargetRegisterClass *const GPRspSuperclasses[] = {
  &ARM::GPRRegClass,
  &ARM::GPRnopcRegClass,
  &ARM::hGPRRegClass,
  &ARM::GPRnopc_and_hGPRRegClass,
  NULL
};

static const TargetRegisterClass *const QQQQPR_with_dsub_6_in_DPR_8Superclasses[] = {
  &ARM::QQQQPRRegClass,
  &ARM::QQQQPR_with_ssub_0RegClass,
  &ARM::QQQQPR_with_dsub_2_then_ssub_0RegClass,
  &ARM::QQQQPR_with_dsub_5_then_ssub_0RegClass,
  &ARM::QQQQPR_with_dsub_7_then_ssub_0RegClass,
  &ARM::QQQQPR_with_dsub_0_in_DPR_8RegClass,
  &ARM::QQQQPR_with_dsub_2_in_DPR_8RegClass,
  &ARM::QQQQPR_with_dsub_4_in_DPR_8RegClass,
  NULL
};


static inline unsigned DPRAltOrderSelect(const MachineFunction &MF) { return 1; }

static ArrayRef<uint16_t> DPRGetRawAllocationOrder(const MachineFunction &MF) {
  static const uint16_t AltOrder1[] = { ARM::D16, ARM::D17, ARM::D18, ARM::D19, ARM::D20, ARM::D21, ARM::D22, ARM::D23, ARM::D24, ARM::D25, ARM::D26, ARM::D27, ARM::D28, ARM::D29, ARM::D30, ARM::D31, ARM::D0, ARM::D1, ARM::D2, ARM::D3, ARM::D4, ARM::D5, ARM::D6, ARM::D7, ARM::D8, ARM::D9, ARM::D10, ARM::D11, ARM::D12, ARM::D13, ARM::D14, ARM::D15 };
  const MCRegisterClass &MCR = ARMMCRegisterClasses[ARM::DPRRegClassID];
  const ArrayRef<uint16_t> Order[] = {
    makeArrayRef(MCR.begin(), MCR.getNumRegs()),
    makeArrayRef(AltOrder1)
  };
  const unsigned Select = DPRAltOrderSelect(MF);
  assert(Select < 2);
  return Order[Select];
}

static inline unsigned DPairAltOrderSelect(const MachineFunction &MF) { return 1; }

static ArrayRef<uint16_t> DPairGetRawAllocationOrder(const MachineFunction &MF) {
  static const uint16_t AltOrder1[] = { ARM::Q8, ARM::Q9, ARM::Q10, ARM::Q11, ARM::Q12, ARM::Q13, ARM::Q14, ARM::Q15, ARM::Q0, ARM::Q1, ARM::Q2, ARM::Q3, ARM::Q4, ARM::Q5, ARM::Q6, ARM::Q7, ARM::D17_D18, ARM::D19_D20, ARM::D21_D22, ARM::D23_D24, ARM::D25_D26, ARM::D27_D28, ARM::D29_D30, ARM::D1_D2, ARM::D3_D4, ARM::D5_D6, ARM::D7_D8, ARM::D9_D10, ARM::D11_D12, ARM::D13_D14, ARM::D15_D16 };
  const MCRegisterClass &MCR = ARMMCRegisterClasses[ARM::DPairRegClassID];
  const ArrayRef<uint16_t> Order[] = {
    makeArrayRef(MCR.begin(), MCR.getNumRegs()),
    makeArrayRef(AltOrder1)
  };
  const unsigned Select = DPairAltOrderSelect(MF);
  assert(Select < 2);
  return Order[Select];
}

static inline unsigned GPRAltOrderSelect(const MachineFunction &MF) {
      return 1 + MF.getTarget().getSubtarget<ARMSubtarget>().isThumb1Only();
  }

static ArrayRef<uint16_t> GPRGetRawAllocationOrder(const MachineFunction &MF) {
  static const uint16_t AltOrder1[] = { ARM::LR, ARM::R0, ARM::R1, ARM::R2, ARM::R3, ARM::R4, ARM::R5, ARM::R6, ARM::R7, ARM::R8, ARM::R9, ARM::R10, ARM::R11, ARM::R12, ARM::SP, ARM::PC };
  static const uint16_t AltOrder2[] = { ARM::R0, ARM::R1, ARM::R2, ARM::R3, ARM::R4, ARM::R5, ARM::R6, ARM::R7 };
  const MCRegisterClass &MCR = ARMMCRegisterClasses[ARM::GPRRegClassID];
  const ArrayRef<uint16_t> Order[] = {
    makeArrayRef(MCR.begin(), MCR.getNumRegs()),
    makeArrayRef(AltOrder1),
    makeArrayRef(AltOrder2)
  };
  const unsigned Select = GPRAltOrderSelect(MF);
  assert(Select < 3);
  return Order[Select];
}

static inline unsigned DPair_with_ssub_0AltOrderSelect(const MachineFunction &MF) { return 1; }

static ArrayRef<uint16_t> DPair_with_ssub_0GetRawAllocationOrder(const MachineFunction &MF) {
  static const uint16_t AltOrder1[] = { ARM::Q0, ARM::Q1, ARM::Q2, ARM::Q3, ARM::Q4, ARM::Q5, ARM::Q6, ARM::Q7, ARM::D1_D2, ARM::D3_D4, ARM::D5_D6, ARM::D7_D8, ARM::D9_D10, ARM::D11_D12, ARM::D13_D14, ARM::D15_D16 };
  const MCRegisterClass &MCR = ARMMCRegisterClasses[ARM::DPair_with_ssub_0RegClassID];
  const ArrayRef<uint16_t> Order[] = {
    makeArrayRef(MCR.begin(), MCR.getNumRegs()),
    makeArrayRef(AltOrder1)
  };
  const unsigned Select = DPair_with_ssub_0AltOrderSelect(MF);
  assert(Select < 2);
  return Order[Select];
}

static inline unsigned QPRAltOrderSelect(const MachineFunction &MF) { return 1; }

static ArrayRef<uint16_t> QPRGetRawAllocationOrder(const MachineFunction &MF) {
  static const uint16_t AltOrder1[] = { ARM::Q8, ARM::Q9, ARM::Q10, ARM::Q11, ARM::Q12, ARM::Q13, ARM::Q14, ARM::Q15, ARM::Q0, ARM::Q1, ARM::Q2, ARM::Q3, ARM::Q4, ARM::Q5, ARM::Q6, ARM::Q7 };
  const MCRegisterClass &MCR = ARMMCRegisterClasses[ARM::QPRRegClassID];
  const ArrayRef<uint16_t> Order[] = {
    makeArrayRef(MCR.begin(), MCR.getNumRegs()),
    makeArrayRef(AltOrder1)
  };
  const unsigned Select = QPRAltOrderSelect(MF);
  assert(Select < 2);
  return Order[Select];
}

static inline unsigned GPRnopcAltOrderSelect(const MachineFunction &MF) {
      return 1 + MF.getTarget().getSubtarget<ARMSubtarget>().isThumb1Only();
  }

static ArrayRef<uint16_t> GPRnopcGetRawAllocationOrder(const MachineFunction &MF) {
  static const uint16_t AltOrder1[] = { ARM::LR, ARM::R0, ARM::R1, ARM::R2, ARM::R3, ARM::R4, ARM::R5, ARM::R6, ARM::R7, ARM::R8, ARM::R9, ARM::R10, ARM::R11, ARM::R12, ARM::SP };
  static const uint16_t AltOrder2[] = { ARM::R0, ARM::R1, ARM::R2, ARM::R3, ARM::R4, ARM::R5, ARM::R6, ARM::R7 };
  const MCRegisterClass &MCR = ARMMCRegisterClasses[ARM::GPRnopcRegClassID];
  const ArrayRef<uint16_t> Order[] = {
    makeArrayRef(MCR.begin(), MCR.getNumRegs()),
    makeArrayRef(AltOrder1),
    makeArrayRef(AltOrder2)
  };
  const unsigned Select = GPRnopcAltOrderSelect(MF);
  assert(Select < 3);
  return Order[Select];
}

static inline unsigned DPair_with_ssub_2AltOrderSelect(const MachineFunction &MF) { return 1; }

static ArrayRef<uint16_t> DPair_with_ssub_2GetRawAllocationOrder(const MachineFunction &MF) {
  static const uint16_t AltOrder1[] = { ARM::Q0, ARM::Q1, ARM::Q2, ARM::Q3, ARM::Q4, ARM::Q5, ARM::Q6, ARM::Q7, ARM::D1_D2, ARM::D3_D4, ARM::D5_D6, ARM::D7_D8, ARM::D9_D10, ARM::D11_D12, ARM::D13_D14 };
  const MCRegisterClass &MCR = ARMMCRegisterClasses[ARM::DPair_with_ssub_2RegClassID];
  const ArrayRef<uint16_t> Order[] = {
    makeArrayRef(MCR.begin(), MCR.getNumRegs()),
    makeArrayRef(AltOrder1)
  };
  const unsigned Select = DPair_with_ssub_2AltOrderSelect(MF);
  assert(Select < 2);
  return Order[Select];
}

static inline unsigned QQPRAltOrderSelect(const MachineFunction &MF) { return 1; }

static ArrayRef<uint16_t> QQPRGetRawAllocationOrder(const MachineFunction &MF) {
  static const uint16_t AltOrder1[] = { ARM::Q8_Q9, ARM::Q9_Q10, ARM::Q10_Q11, ARM::Q11_Q12, ARM::Q12_Q13, ARM::Q13_Q14, ARM::Q14_Q15, ARM::Q0_Q1, ARM::Q1_Q2, ARM::Q2_Q3, ARM::Q3_Q4, ARM::Q4_Q5, ARM::Q5_Q6, ARM::Q6_Q7, ARM::Q7_Q8 };
  const MCRegisterClass &MCR = ARMMCRegisterClasses[ARM::QQPRRegClassID];
  const ArrayRef<uint16_t> Order[] = {
    makeArrayRef(MCR.begin(), MCR.getNumRegs()),
    makeArrayRef(AltOrder1)
  };
  const unsigned Select = QQPRAltOrderSelect(MF);
  assert(Select < 2);
  return Order[Select];
}

static inline unsigned rGPRAltOrderSelect(const MachineFunction &MF) {
      return 1 + MF.getTarget().getSubtarget<ARMSubtarget>().isThumb1Only();
  }

static ArrayRef<uint16_t> rGPRGetRawAllocationOrder(const MachineFunction &MF) {
  static const uint16_t AltOrder1[] = { ARM::LR, ARM::R0, ARM::R1, ARM::R2, ARM::R3, ARM::R4, ARM::R5, ARM::R6, ARM::R7, ARM::R8, ARM::R9, ARM::R10, ARM::R11, ARM::R12 };
  static const uint16_t AltOrder2[] = { ARM::R0, ARM::R1, ARM::R2, ARM::R3, ARM::R4, ARM::R5, ARM::R6, ARM::R7 };
  const MCRegisterClass &MCR = ARMMCRegisterClasses[ARM::rGPRRegClassID];
  const ArrayRef<uint16_t> Order[] = {
    makeArrayRef(MCR.begin(), MCR.getNumRegs()),
    makeArrayRef(AltOrder1),
    makeArrayRef(AltOrder2)
  };
  const unsigned Select = rGPRAltOrderSelect(MF);
  assert(Select < 3);
  return Order[Select];
}

static inline unsigned QQQQPRAltOrderSelect(const MachineFunction &MF) { return 1; }

static ArrayRef<uint16_t> QQQQPRGetRawAllocationOrder(const MachineFunction &MF) {
  static const uint16_t AltOrder1[] = { ARM::Q8_Q9_Q10_Q11, ARM::Q9_Q10_Q11_Q12, ARM::Q10_Q11_Q12_Q13, ARM::Q11_Q12_Q13_Q14, ARM::Q12_Q13_Q14_Q15, ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10 };
  const MCRegisterClass &MCR = ARMMCRegisterClasses[ARM::QQQQPRRegClassID];
  const ArrayRef<uint16_t> Order[] = {
    makeArrayRef(MCR.begin(), MCR.getNumRegs()),
    makeArrayRef(AltOrder1)
  };
  const unsigned Select = QQQQPRAltOrderSelect(MF);
  assert(Select < 2);
  return Order[Select];
}

static inline unsigned DPair_with_dsub_0_in_DPR_8AltOrderSelect(const MachineFunction &MF) { return 1; }

static ArrayRef<uint16_t> DPair_with_dsub_0_in_DPR_8GetRawAllocationOrder(const MachineFunction &MF) {
  static const uint16_t AltOrder1[] = { ARM::Q0, ARM::Q1, ARM::Q2, ARM::Q3, ARM::D1_D2, ARM::D3_D4, ARM::D5_D6, ARM::D7_D8 };
  const MCRegisterClass &MCR = ARMMCRegisterClasses[ARM::DPair_with_dsub_0_in_DPR_8RegClassID];
  const ArrayRef<uint16_t> Order[] = {
    makeArrayRef(MCR.begin(), MCR.getNumRegs()),
    makeArrayRef(AltOrder1)
  };
  const unsigned Select = DPair_with_dsub_0_in_DPR_8AltOrderSelect(MF);
  assert(Select < 2);
  return Order[Select];
}

static inline unsigned QQPR_with_ssub_0AltOrderSelect(const MachineFunction &MF) { return 1; }

static ArrayRef<uint16_t> QQPR_with_ssub_0GetRawAllocationOrder(const MachineFunction &MF) {
  static const uint16_t AltOrder1[] = { ARM::Q0_Q1, ARM::Q1_Q2, ARM::Q2_Q3, ARM::Q3_Q4, ARM::Q4_Q5, ARM::Q5_Q6, ARM::Q6_Q7, ARM::Q7_Q8 };
  const MCRegisterClass &MCR = ARMMCRegisterClasses[ARM::QQPR_with_ssub_0RegClassID];
  const ArrayRef<uint16_t> Order[] = {
    makeArrayRef(MCR.begin(), MCR.getNumRegs()),
    makeArrayRef(AltOrder1)
  };
  const unsigned Select = QQPR_with_ssub_0AltOrderSelect(MF);
  assert(Select < 2);
  return Order[Select];
}

static inline unsigned QQQQPR_with_ssub_0AltOrderSelect(const MachineFunction &MF) { return 1; }

static ArrayRef<uint16_t> QQQQPR_with_ssub_0GetRawAllocationOrder(const MachineFunction &MF) {
  static const uint16_t AltOrder1[] = { ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9, ARM::Q7_Q8_Q9_Q10 };
  const MCRegisterClass &MCR = ARMMCRegisterClasses[ARM::QQQQPR_with_ssub_0RegClassID];
  const ArrayRef<uint16_t> Order[] = {
    makeArrayRef(MCR.begin(), MCR.getNumRegs()),
    makeArrayRef(AltOrder1)
  };
  const unsigned Select = QQQQPR_with_ssub_0AltOrderSelect(MF);
  assert(Select < 2);
  return Order[Select];
}

static inline unsigned DPair_with_dsub_1_in_DPR_8AltOrderSelect(const MachineFunction &MF) { return 1; }

static ArrayRef<uint16_t> DPair_with_dsub_1_in_DPR_8GetRawAllocationOrder(const MachineFunction &MF) {
  static const uint16_t AltOrder1[] = { ARM::Q0, ARM::Q1, ARM::Q2, ARM::Q3, ARM::D1_D2, ARM::D3_D4, ARM::D5_D6 };
  const MCRegisterClass &MCR = ARMMCRegisterClasses[ARM::DPair_with_dsub_1_in_DPR_8RegClassID];
  const ArrayRef<uint16_t> Order[] = {
    makeArrayRef(MCR.begin(), MCR.getNumRegs()),
    makeArrayRef(AltOrder1)
  };
  const unsigned Select = DPair_with_dsub_1_in_DPR_8AltOrderSelect(MF);
  assert(Select < 2);
  return Order[Select];
}

static inline unsigned QQPR_with_dsub_2_then_ssub_0AltOrderSelect(const MachineFunction &MF) { return 1; }

static ArrayRef<uint16_t> QQPR_with_dsub_2_then_ssub_0GetRawAllocationOrder(const MachineFunction &MF) {
  static const uint16_t AltOrder1[] = { ARM::Q0_Q1, ARM::Q1_Q2, ARM::Q2_Q3, ARM::Q3_Q4, ARM::Q4_Q5, ARM::Q5_Q6, ARM::Q6_Q7 };
  const MCRegisterClass &MCR = ARMMCRegisterClasses[ARM::QQPR_with_dsub_2_then_ssub_0RegClassID];
  const ArrayRef<uint16_t> Order[] = {
    makeArrayRef(MCR.begin(), MCR.getNumRegs()),
    makeArrayRef(AltOrder1)
  };
  const unsigned Select = QQPR_with_dsub_2_then_ssub_0AltOrderSelect(MF);
  assert(Select < 2);
  return Order[Select];
}

static inline unsigned QQQQPR_with_dsub_2_then_ssub_0AltOrderSelect(const MachineFunction &MF) { return 1; }

static ArrayRef<uint16_t> QQQQPR_with_dsub_2_then_ssub_0GetRawAllocationOrder(const MachineFunction &MF) {
  static const uint16_t AltOrder1[] = { ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8, ARM::Q6_Q7_Q8_Q9 };
  const MCRegisterClass &MCR = ARMMCRegisterClasses[ARM::QQQQPR_with_dsub_2_then_ssub_0RegClassID];
  const ArrayRef<uint16_t> Order[] = {
    makeArrayRef(MCR.begin(), MCR.getNumRegs()),
    makeArrayRef(AltOrder1)
  };
  const unsigned Select = QQQQPR_with_dsub_2_then_ssub_0AltOrderSelect(MF);
  assert(Select < 2);
  return Order[Select];
}

static inline unsigned tcGPRAltOrderSelect(const MachineFunction &MF) {
      return MF.getTarget().getSubtarget<ARMSubtarget>().isThumb1Only();
  }

static ArrayRef<uint16_t> tcGPRGetRawAllocationOrder(const MachineFunction &MF) {
  static const uint16_t AltOrder1[] = { ARM::R0, ARM::R1, ARM::R2, ARM::R3 };
  const MCRegisterClass &MCR = ARMMCRegisterClasses[ARM::tcGPRRegClassID];
  const ArrayRef<uint16_t> Order[] = {
    makeArrayRef(MCR.begin(), MCR.getNumRegs()),
    makeArrayRef(AltOrder1)
  };
  const unsigned Select = tcGPRAltOrderSelect(MF);
  assert(Select < 2);
  return Order[Select];
}

static inline unsigned QQQQPR_with_dsub_5_then_ssub_0AltOrderSelect(const MachineFunction &MF) { return 1; }

static ArrayRef<uint16_t> QQQQPR_with_dsub_5_then_ssub_0GetRawAllocationOrder(const MachineFunction &MF) {
  static const uint16_t AltOrder1[] = { ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7, ARM::Q5_Q6_Q7_Q8 };
  const MCRegisterClass &MCR = ARMMCRegisterClasses[ARM::QQQQPR_with_dsub_5_then_ssub_0RegClassID];
  const ArrayRef<uint16_t> Order[] = {
    makeArrayRef(MCR.begin(), MCR.getNumRegs()),
    makeArrayRef(AltOrder1)
  };
  const unsigned Select = QQQQPR_with_dsub_5_then_ssub_0AltOrderSelect(MF);
  assert(Select < 2);
  return Order[Select];
}

static inline unsigned QQQQPR_with_dsub_7_then_ssub_0AltOrderSelect(const MachineFunction &MF) { return 1; }

static ArrayRef<uint16_t> QQQQPR_with_dsub_7_then_ssub_0GetRawAllocationOrder(const MachineFunction &MF) {
  static const uint16_t AltOrder1[] = { ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6, ARM::Q4_Q5_Q6_Q7 };
  const MCRegisterClass &MCR = ARMMCRegisterClasses[ARM::QQQQPR_with_dsub_7_then_ssub_0RegClassID];
  const ArrayRef<uint16_t> Order[] = {
    makeArrayRef(MCR.begin(), MCR.getNumRegs()),
    makeArrayRef(AltOrder1)
  };
  const unsigned Select = QQQQPR_with_dsub_7_then_ssub_0AltOrderSelect(MF);
  assert(Select < 2);
  return Order[Select];
}

static inline unsigned tGPR_and_tcGPRAltOrderSelect(const MachineFunction &MF) {
      return MF.getTarget().getSubtarget<ARMSubtarget>().isThumb1Only();
  }

static ArrayRef<uint16_t> tGPR_and_tcGPRGetRawAllocationOrder(const MachineFunction &MF) {
  static const uint16_t AltOrder1[] = { ARM::R0, ARM::R1, ARM::R2, ARM::R3 };
  const MCRegisterClass &MCR = ARMMCRegisterClasses[ARM::tGPR_and_tcGPRRegClassID];
  const ArrayRef<uint16_t> Order[] = {
    makeArrayRef(MCR.begin(), MCR.getNumRegs()),
    makeArrayRef(AltOrder1)
  };
  const unsigned Select = tGPR_and_tcGPRAltOrderSelect(MF);
  assert(Select < 2);
  return Order[Select];
}

static inline unsigned QQPR_and_DQuad_with_dsub_0_in_DPR_8AltOrderSelect(const MachineFunction &MF) { return 1; }

static ArrayRef<uint16_t> QQPR_and_DQuad_with_dsub_0_in_DPR_8GetRawAllocationOrder(const MachineFunction &MF) {
  static const uint16_t AltOrder1[] = { ARM::Q0_Q1, ARM::Q1_Q2, ARM::Q2_Q3, ARM::Q3_Q4 };
  const MCRegisterClass &MCR = ARMMCRegisterClasses[ARM::QQPR_and_DQuad_with_dsub_0_in_DPR_8RegClassID];
  const ArrayRef<uint16_t> Order[] = {
    makeArrayRef(MCR.begin(), MCR.getNumRegs()),
    makeArrayRef(AltOrder1)
  };
  const unsigned Select = QQPR_and_DQuad_with_dsub_0_in_DPR_8AltOrderSelect(MF);
  assert(Select < 2);
  return Order[Select];
}

static inline unsigned QQQQPR_with_dsub_0_in_DPR_8AltOrderSelect(const MachineFunction &MF) { return 1; }

static ArrayRef<uint16_t> QQQQPR_with_dsub_0_in_DPR_8GetRawAllocationOrder(const MachineFunction &MF) {
  static const uint16_t AltOrder1[] = { ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5, ARM::Q3_Q4_Q5_Q6 };
  const MCRegisterClass &MCR = ARMMCRegisterClasses[ARM::QQQQPR_with_dsub_0_in_DPR_8RegClassID];
  const ArrayRef<uint16_t> Order[] = {
    makeArrayRef(MCR.begin(), MCR.getNumRegs()),
    makeArrayRef(AltOrder1)
  };
  const unsigned Select = QQQQPR_with_dsub_0_in_DPR_8AltOrderSelect(MF);
  assert(Select < 2);
  return Order[Select];
}

static inline unsigned QQPR_and_DQuad_with_dsub_2_in_DPR_8AltOrderSelect(const MachineFunction &MF) { return 1; }

static ArrayRef<uint16_t> QQPR_and_DQuad_with_dsub_2_in_DPR_8GetRawAllocationOrder(const MachineFunction &MF) {
  static const uint16_t AltOrder1[] = { ARM::Q0_Q1, ARM::Q1_Q2, ARM::Q2_Q3 };
  const MCRegisterClass &MCR = ARMMCRegisterClasses[ARM::QQPR_and_DQuad_with_dsub_2_in_DPR_8RegClassID];
  const ArrayRef<uint16_t> Order[] = {
    makeArrayRef(MCR.begin(), MCR.getNumRegs()),
    makeArrayRef(AltOrder1)
  };
  const unsigned Select = QQPR_and_DQuad_with_dsub_2_in_DPR_8AltOrderSelect(MF);
  assert(Select < 2);
  return Order[Select];
}

static inline unsigned QQQQPR_with_dsub_2_in_DPR_8AltOrderSelect(const MachineFunction &MF) { return 1; }

static ArrayRef<uint16_t> QQQQPR_with_dsub_2_in_DPR_8GetRawAllocationOrder(const MachineFunction &MF) {
  static const uint16_t AltOrder1[] = { ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4, ARM::Q2_Q3_Q4_Q5 };
  const MCRegisterClass &MCR = ARMMCRegisterClasses[ARM::QQQQPR_with_dsub_2_in_DPR_8RegClassID];
  const ArrayRef<uint16_t> Order[] = {
    makeArrayRef(MCR.begin(), MCR.getNumRegs()),
    makeArrayRef(AltOrder1)
  };
  const unsigned Select = QQQQPR_with_dsub_2_in_DPR_8AltOrderSelect(MF);
  assert(Select < 2);
  return Order[Select];
}

static inline unsigned hGPR_and_tcGPRAltOrderSelect(const MachineFunction &MF) {
      return MF.getTarget().getSubtarget<ARMSubtarget>().isThumb1Only();
  }

static ArrayRef<uint16_t> hGPR_and_tcGPRGetRawAllocationOrder(const MachineFunction &MF) {
  const MCRegisterClass &MCR = ARMMCRegisterClasses[ARM::hGPR_and_tcGPRRegClassID];
  const ArrayRef<uint16_t> Order[] = {
    makeArrayRef(MCR.begin(), MCR.getNumRegs()),
    ArrayRef<uint16_t>()
  };
  const unsigned Select = hGPR_and_tcGPRAltOrderSelect(MF);
  assert(Select < 2);
  return Order[Select];
}

static inline unsigned QQQQPR_with_dsub_4_in_DPR_8AltOrderSelect(const MachineFunction &MF) { return 1; }

static ArrayRef<uint16_t> QQQQPR_with_dsub_4_in_DPR_8GetRawAllocationOrder(const MachineFunction &MF) {
  static const uint16_t AltOrder1[] = { ARM::Q0_Q1_Q2_Q3, ARM::Q1_Q2_Q3_Q4 };
  const MCRegisterClass &MCR = ARMMCRegisterClasses[ARM::QQQQPR_with_dsub_4_in_DPR_8RegClassID];
  const ArrayRef<uint16_t> Order[] = {
    makeArrayRef(MCR.begin(), MCR.getNumRegs()),
    makeArrayRef(AltOrder1)
  };
  const unsigned Select = QQQQPR_with_dsub_4_in_DPR_8AltOrderSelect(MF);
  assert(Select < 2);
  return Order[Select];
}

static inline unsigned QQQQPR_with_dsub_6_in_DPR_8AltOrderSelect(const MachineFunction &MF) { return 1; }

static ArrayRef<uint16_t> QQQQPR_with_dsub_6_in_DPR_8GetRawAllocationOrder(const MachineFunction &MF) {
  static const uint16_t AltOrder1[] = { ARM::Q0_Q1_Q2_Q3 };
  const MCRegisterClass &MCR = ARMMCRegisterClasses[ARM::QQQQPR_with_dsub_6_in_DPR_8RegClassID];
  const ArrayRef<uint16_t> Order[] = {
    makeArrayRef(MCR.begin(), MCR.getNumRegs()),
    makeArrayRef(AltOrder1)
  };
  const unsigned Select = QQQQPR_with_dsub_6_in_DPR_8AltOrderSelect(MF);
  assert(Select < 2);
  return Order[Select];
}
namespace ARM {   // Register class instances
  extern const TargetRegisterClass SPRRegClass = {
    &ARMMCRegisterClasses[SPRRegClassID],
    VTLists + 2,
    SPRSubclassMask,
    NullRegClasses,
    SPRSuperRegClasses,
    0
  };

  extern const TargetRegisterClass DPRRegClass = {
    &ARMMCRegisterClasses[DPRRegClassID],
    VTLists + 10,
    DPRSubclassMask,
    NullRegClasses,
    DPRSuperRegClasses,
    DPRGetRawAllocationOrder
  };

  extern const TargetRegisterClass DPairRegClass = {
    &ARMMCRegisterClasses[DPairRegClassID],
    VTLists + 17,
    DPairSubclassMask,
    NullRegClasses,
    DPairSuperRegClasses,
    DPairGetRawAllocationOrder
  };

  extern const TargetRegisterClass DPairSpcRegClass = {
    &ARMMCRegisterClasses[DPairSpcRegClassID],
    VTLists + 4,
    DPairSpcSubclassMask,
    NullRegClasses,
    DPairSpcSuperRegClasses,
    0
  };

  extern const TargetRegisterClass DTripleRegClass = {
    &ARMMCRegisterClasses[DTripleRegClassID],
    VTLists + 24,
    DTripleSubclassMask,
    NullRegClasses,
    DTripleSuperRegClasses,
    0
  };

  extern const TargetRegisterClass DQuadRegClass = {
    &ARMMCRegisterClasses[DQuadRegClassID],
    VTLists + 6,
    DQuadSubclassMask,
    NullRegClasses,
    DQuadSuperRegClasses,
    0
  };

  extern const TargetRegisterClass DTripleSpcRegClass = {
    &ARMMCRegisterClasses[DTripleSpcRegClassID],
    VTLists + 24,
    DTripleSpcSubclassMask,
    NullRegClasses,
    DTripleSpcSuperRegClasses,
    0
  };

  extern const TargetRegisterClass DQuadSpcRegClass = {
    &ARMMCRegisterClasses[DQuadSpcRegClassID],
    VTLists + 6,
    DQuadSpcSubclassMask,
    DQuadSpcSuperclasses,
    DQuadSpcSuperRegClasses,
    0
  };

  extern const TargetRegisterClass GPRRegClass = {
    &ARMMCRegisterClasses[GPRRegClassID],
    VTLists + 0,
    GPRSubclassMask,
    NullRegClasses,
    GPRSuperRegClasses,
    GPRGetRawAllocationOrder
  };

  extern const TargetRegisterClass SPR_8RegClass = {
    &ARMMCRegisterClasses[SPR_8RegClassID],
    VTLists + 2,
    SPR_8SubclassMask,
    SPR_8Superclasses,
    SPR_8SuperRegClasses,
    0
  };

  extern const TargetRegisterClass DPR_VFP2RegClass = {
    &ARMMCRegisterClasses[DPR_VFP2RegClassID],
    VTLists + 10,
    DPR_VFP2SubclassMask,
    DPR_VFP2Superclasses,
    DPR_VFP2SuperRegClasses,
    0
  };

  extern const TargetRegisterClass DPairSpc_with_ssub_0RegClass = {
    &ARMMCRegisterClasses[DPairSpc_with_ssub_0RegClassID],
    VTLists + 4,
    DPairSpc_with_ssub_0SubclassMask,
    DPairSpc_with_ssub_0Superclasses,
    DPairSpc_with_ssub_0SuperRegClasses,
    0
  };

  extern const TargetRegisterClass DPair_with_ssub_0RegClass = {
    &ARMMCRegisterClasses[DPair_with_ssub_0RegClassID],
    VTLists + 17,
    DPair_with_ssub_0SubclassMask,
    DPair_with_ssub_0Superclasses,
    DPair_with_ssub_0SuperRegClasses,
    DPair_with_ssub_0GetRawAllocationOrder
  };

  extern const TargetRegisterClass QPRRegClass = {
    &ARMMCRegisterClasses[QPRRegClassID],
    VTLists + 17,
    QPRSubclassMask,
    QPRSuperclasses,
    QPRSuperRegClasses,
    QPRGetRawAllocationOrder
  };

  extern const TargetRegisterClass DTripleSpc_with_ssub_0RegClass = {
    &ARMMCRegisterClasses[DTripleSpc_with_ssub_0RegClassID],
    VTLists + 24,
    DTripleSpc_with_ssub_0SubclassMask,
    DTripleSpc_with_ssub_0Superclasses,
    DTripleSpc_with_ssub_0SuperRegClasses,
    0
  };

  extern const TargetRegisterClass DTriple_with_ssub_0RegClass = {
    &ARMMCRegisterClasses[DTriple_with_ssub_0RegClassID],
    VTLists + 24,
    DTriple_with_ssub_0SubclassMask,
    DTriple_with_ssub_0Superclasses,
    DTriple_with_ssub_0SuperRegClasses,
    0
  };

  extern const TargetRegisterClass DQuadSpc_with_ssub_0RegClass = {
    &ARMMCRegisterClasses[DQuadSpc_with_ssub_0RegClassID],
    VTLists + 24,
    DQuadSpc_with_ssub_0SubclassMask,
    DQuadSpc_with_ssub_0Superclasses,
    DQuadSpc_with_ssub_0SuperRegClasses,
    0
  };

  extern const TargetRegisterClass DQuad_with_ssub_0RegClass = {
    &ARMMCRegisterClasses[DQuad_with_ssub_0RegClassID],
    VTLists + 6,
    DQuad_with_ssub_0SubclassMask,
    DQuad_with_ssub_0Superclasses,
    DQuad_with_ssub_0SuperRegClasses,
    0
  };

  extern const TargetRegisterClass GPRnopcRegClass = {
    &ARMMCRegisterClasses[GPRnopcRegClassID],
    VTLists + 0,
    GPRnopcSubclassMask,
    GPRnopcSuperclasses,
    GPRnopcSuperRegClasses,
    GPRnopcGetRawAllocationOrder
  };

  extern const TargetRegisterClass DPair_with_ssub_2RegClass = {
    &ARMMCRegisterClasses[DPair_with_ssub_2RegClassID],
    VTLists + 17,
    DPair_with_ssub_2SubclassMask,
    DPair_with_ssub_2Superclasses,
    DPair_with_ssub_2SuperRegClasses,
    DPair_with_ssub_2GetRawAllocationOrder
  };

  extern const TargetRegisterClass DTriple_with_ssub_2RegClass = {
    &ARMMCRegisterClasses[DTriple_with_ssub_2RegClassID],
    VTLists + 24,
    DTriple_with_ssub_2SubclassMask,
    DTriple_with_ssub_2Superclasses,
    DTriple_with_ssub_2SuperRegClasses,
    0
  };

  extern const TargetRegisterClass DQuad_with_ssub_2RegClass = {
    &ARMMCRegisterClasses[DQuad_with_ssub_2RegClassID],
    VTLists + 6,
    DQuad_with_ssub_2SubclassMask,
    DQuad_with_ssub_2Superclasses,
    DQuad_with_ssub_2SuperRegClasses,
    0
  };

  extern const TargetRegisterClass QQPRRegClass = {
    &ARMMCRegisterClasses[QQPRRegClassID],
    VTLists + 6,
    QQPRSubclassMask,
    QQPRSuperclasses,
    QQPRSuperRegClasses,
    QQPRGetRawAllocationOrder
  };

  extern const TargetRegisterClass rGPRRegClass = {
    &ARMMCRegisterClasses[rGPRRegClassID],
    VTLists + 0,
    rGPRSubclassMask,
    rGPRSuperclasses,
    rGPRSuperRegClasses,
    rGPRGetRawAllocationOrder
  };

  extern const TargetRegisterClass DPairSpc_with_dsub_2_then_ssub_0RegClass = {
    &ARMMCRegisterClasses[DPairSpc_with_dsub_2_then_ssub_0RegClassID],
    VTLists + 4,
    DPairSpc_with_dsub_2_then_ssub_0SubclassMask,
    DPairSpc_with_dsub_2_then_ssub_0Superclasses,
    DPairSpc_with_dsub_2_then_ssub_0SuperRegClasses,
    0
  };

  extern const TargetRegisterClass DTripleSpc_with_dsub_2_then_ssub_0RegClass = {
    &ARMMCRegisterClasses[DTripleSpc_with_dsub_2_then_ssub_0RegClassID],
    VTLists + 24,
    DTripleSpc_with_dsub_2_then_ssub_0SubclassMask,
    DTripleSpc_with_dsub_2_then_ssub_0Superclasses,
    DTripleSpc_with_dsub_2_then_ssub_0SuperRegClasses,
    0
  };

  extern const TargetRegisterClass DTriple_with_dsub_2_then_ssub_0RegClass = {
    &ARMMCRegisterClasses[DTriple_with_dsub_2_then_ssub_0RegClassID],
    VTLists + 24,
    DTriple_with_dsub_2_then_ssub_0SubclassMask,
    DTriple_with_dsub_2_then_ssub_0Superclasses,
    DTriple_with_dsub_2_then_ssub_0SuperRegClasses,
    0
  };

  extern const TargetRegisterClass DQuadSpc_with_dsub_2_then_ssub_0RegClass = {
    &ARMMCRegisterClasses[DQuadSpc_with_dsub_2_then_ssub_0RegClassID],
    VTLists + 24,
    DQuadSpc_with_dsub_2_then_ssub_0SubclassMask,
    DQuadSpc_with_dsub_2_then_ssub_0Superclasses,
    DQuadSpc_with_dsub_2_then_ssub_0SuperRegClasses,
    0
  };

  extern const TargetRegisterClass DQuad_with_dsub_2_then_ssub_0RegClass = {
    &ARMMCRegisterClasses[DQuad_with_dsub_2_then_ssub_0RegClassID],
    VTLists + 6,
    DQuad_with_dsub_2_then_ssub_0SubclassMask,
    DQuad_with_dsub_2_then_ssub_0Superclasses,
    DQuad_with_dsub_2_then_ssub_0SuperRegClasses,
    0
  };

  extern const TargetRegisterClass DQuad_with_dsub_3_then_ssub_0RegClass = {
    &ARMMCRegisterClasses[DQuad_with_dsub_3_then_ssub_0RegClassID],
    VTLists + 6,
    DQuad_with_dsub_3_then_ssub_0SubclassMask,
    DQuad_with_dsub_3_then_ssub_0Superclasses,
    DQuad_with_dsub_3_then_ssub_0SuperRegClasses,
    0
  };

  extern const TargetRegisterClass QQQQPRRegClass = {
    &ARMMCRegisterClasses[QQQQPRRegClassID],
    VTLists + 8,
    QQQQPRSubclassMask,
    NullRegClasses,
    QQQQPRSuperRegClasses,
    QQQQPRGetRawAllocationOrder
  };

  extern const TargetRegisterClass DTripleSpc_with_dsub_4_then_ssub_0RegClass = {
    &ARMMCRegisterClasses[DTripleSpc_with_dsub_4_then_ssub_0RegClassID],
    VTLists + 24,
    DTripleSpc_with_dsub_4_then_ssub_0SubclassMask,
    DTripleSpc_with_dsub_4_then_ssub_0Superclasses,
    DTripleSpc_with_dsub_4_then_ssub_0SuperRegClasses,
    0
  };

  extern const TargetRegisterClass DQuadSpc_with_dsub_4_then_ssub_0RegClass = {
    &ARMMCRegisterClasses[DQuadSpc_with_dsub_4_then_ssub_0RegClassID],
    VTLists + 24,
    DQuadSpc_with_dsub_4_then_ssub_0SubclassMask,
    DQuadSpc_with_dsub_4_then_ssub_0Superclasses,
    DQuadSpc_with_dsub_4_then_ssub_0SuperRegClasses,
    0
  };

  extern const TargetRegisterClass hGPRRegClass = {
    &ARMMCRegisterClasses[hGPRRegClassID],
    VTLists + 0,
    hGPRSubclassMask,
    hGPRSuperclasses,
    hGPRSuperRegClasses,
    0
  };

  extern const TargetRegisterClass tGPRRegClass = {
    &ARMMCRegisterClasses[tGPRRegClassID],
    VTLists + 0,
    tGPRSubclassMask,
    tGPRSuperclasses,
    tGPRSuperRegClasses,
    0
  };

  extern const TargetRegisterClass DPR_8RegClass = {
    &ARMMCRegisterClasses[DPR_8RegClassID],
    VTLists + 10,
    DPR_8SubclassMask,
    DPR_8Superclasses,
    DPR_8SuperRegClasses,
    0
  };

  extern const TargetRegisterClass DPairSpc_with_dsub_0_in_DPR_8RegClass = {
    &ARMMCRegisterClasses[DPairSpc_with_dsub_0_in_DPR_8RegClassID],
    VTLists + 4,
    DPairSpc_with_dsub_0_in_DPR_8SubclassMask,
    DPairSpc_with_dsub_0_in_DPR_8Superclasses,
    DPairSpc_with_dsub_0_in_DPR_8SuperRegClasses,
    0
  };

  extern const TargetRegisterClass DPair_with_dsub_0_in_DPR_8RegClass = {
    &ARMMCRegisterClasses[DPair_with_dsub_0_in_DPR_8RegClassID],
    VTLists + 17,
    DPair_with_dsub_0_in_DPR_8SubclassMask,
    DPair_with_dsub_0_in_DPR_8Superclasses,
    DPair_with_dsub_0_in_DPR_8SuperRegClasses,
    DPair_with_dsub_0_in_DPR_8GetRawAllocationOrder
  };

  extern const TargetRegisterClass QPR_VFP2RegClass = {
    &ARMMCRegisterClasses[QPR_VFP2RegClassID],
    VTLists + 17,
    QPR_VFP2SubclassMask,
    QPR_VFP2Superclasses,
    QPR_VFP2SuperRegClasses,
    0
  };

  extern const TargetRegisterClass DTripleSpc_with_dsub_0_in_DPR_8RegClass = {
    &ARMMCRegisterClasses[DTripleSpc_with_dsub_0_in_DPR_8RegClassID],
    VTLists + 24,
    DTripleSpc_with_dsub_0_in_DPR_8SubclassMask,
    DTripleSpc_with_dsub_0_in_DPR_8Superclasses,
    DTripleSpc_with_dsub_0_in_DPR_8SuperRegClasses,
    0
  };

  extern const TargetRegisterClass DTriple_with_dsub_0_in_DPR_8RegClass = {
    &ARMMCRegisterClasses[DTriple_with_dsub_0_in_DPR_8RegClassID],
    VTLists + 24,
    DTriple_with_dsub_0_in_DPR_8SubclassMask,
    DTriple_with_dsub_0_in_DPR_8Superclasses,
    DTriple_with_dsub_0_in_DPR_8SuperRegClasses,
    0
  };

  extern const TargetRegisterClass DQuadSpc_with_dsub_0_in_DPR_8RegClass = {
    &ARMMCRegisterClasses[DQuadSpc_with_dsub_0_in_DPR_8RegClassID],
    VTLists + 24,
    DQuadSpc_with_dsub_0_in_DPR_8SubclassMask,
    DQuadSpc_with_dsub_0_in_DPR_8Superclasses,
    DQuadSpc_with_dsub_0_in_DPR_8SuperRegClasses,
    0
  };

  extern const TargetRegisterClass DQuad_with_dsub_0_in_DPR_8RegClass = {
    &ARMMCRegisterClasses[DQuad_with_dsub_0_in_DPR_8RegClassID],
    VTLists + 6,
    DQuad_with_dsub_0_in_DPR_8SubclassMask,
    DQuad_with_dsub_0_in_DPR_8Superclasses,
    DQuad_with_dsub_0_in_DPR_8SuperRegClasses,
    0
  };

  extern const TargetRegisterClass QQPR_with_ssub_0RegClass = {
    &ARMMCRegisterClasses[QQPR_with_ssub_0RegClassID],
    VTLists + 6,
    QQPR_with_ssub_0SubclassMask,
    QQPR_with_ssub_0Superclasses,
    QQPR_with_ssub_0SuperRegClasses,
    QQPR_with_ssub_0GetRawAllocationOrder
  };

  extern const TargetRegisterClass QQQQPR_with_ssub_0RegClass = {
    &ARMMCRegisterClasses[QQQQPR_with_ssub_0RegClassID],
    VTLists + 8,
    QQQQPR_with_ssub_0SubclassMask,
    QQQQPR_with_ssub_0Superclasses,
    QQQQPR_with_ssub_0SuperRegClasses,
    QQQQPR_with_ssub_0GetRawAllocationOrder
  };

  extern const TargetRegisterClass GPRnopc_and_hGPRRegClass = {
    &ARMMCRegisterClasses[GPRnopc_and_hGPRRegClassID],
    VTLists + 0,
    GPRnopc_and_hGPRSubclassMask,
    GPRnopc_and_hGPRSuperclasses,
    GPRnopc_and_hGPRSuperRegClasses,
    0
  };

  extern const TargetRegisterClass DPair_with_dsub_1_in_DPR_8RegClass = {
    &ARMMCRegisterClasses[DPair_with_dsub_1_in_DPR_8RegClassID],
    VTLists + 17,
    DPair_with_dsub_1_in_DPR_8SubclassMask,
    DPair_with_dsub_1_in_DPR_8Superclasses,
    DPair_with_dsub_1_in_DPR_8SuperRegClasses,
    DPair_with_dsub_1_in_DPR_8GetRawAllocationOrder
  };

  extern const TargetRegisterClass DTriple_with_dsub_1_in_DPR_8RegClass = {
    &ARMMCRegisterClasses[DTriple_with_dsub_1_in_DPR_8RegClassID],
    VTLists + 24,
    DTriple_with_dsub_1_in_DPR_8SubclassMask,
    DTriple_with_dsub_1_in_DPR_8Superclasses,
    DTriple_with_dsub_1_in_DPR_8SuperRegClasses,
    0
  };

  extern const TargetRegisterClass DQuad_with_dsub_1_in_DPR_8RegClass = {
    &ARMMCRegisterClasses[DQuad_with_dsub_1_in_DPR_8RegClassID],
    VTLists + 6,
    DQuad_with_dsub_1_in_DPR_8SubclassMask,
    DQuad_with_dsub_1_in_DPR_8Superclasses,
    DQuad_with_dsub_1_in_DPR_8SuperRegClasses,
    0
  };

  extern const TargetRegisterClass QQPR_with_dsub_2_then_ssub_0RegClass = {
    &ARMMCRegisterClasses[QQPR_with_dsub_2_then_ssub_0RegClassID],
    VTLists + 6,
    QQPR_with_dsub_2_then_ssub_0SubclassMask,
    QQPR_with_dsub_2_then_ssub_0Superclasses,
    QQPR_with_dsub_2_then_ssub_0SuperRegClasses,
    QQPR_with_dsub_2_then_ssub_0GetRawAllocationOrder
  };

  extern const TargetRegisterClass QQQQPR_with_dsub_2_then_ssub_0RegClass = {
    &ARMMCRegisterClasses[QQQQPR_with_dsub_2_then_ssub_0RegClassID],
    VTLists + 8,
    QQQQPR_with_dsub_2_then_ssub_0SubclassMask,
    QQQQPR_with_dsub_2_then_ssub_0Superclasses,
    QQQQPR_with_dsub_2_then_ssub_0SuperRegClasses,
    QQQQPR_with_dsub_2_then_ssub_0GetRawAllocationOrder
  };

  extern const TargetRegisterClass hGPR_and_rGPRRegClass = {
    &ARMMCRegisterClasses[hGPR_and_rGPRRegClassID],
    VTLists + 0,
    hGPR_and_rGPRSubclassMask,
    hGPR_and_rGPRSuperclasses,
    hGPR_and_rGPRSuperRegClasses,
    0
  };

  extern const TargetRegisterClass tcGPRRegClass = {
    &ARMMCRegisterClasses[tcGPRRegClassID],
    VTLists + 0,
    tcGPRSubclassMask,
    tcGPRSuperclasses,
    tcGPRSuperRegClasses,
    tcGPRGetRawAllocationOrder
  };

  extern const TargetRegisterClass DPairSpc_with_dsub_2_in_DPR_8RegClass = {
    &ARMMCRegisterClasses[DPairSpc_with_dsub_2_in_DPR_8RegClassID],
    VTLists + 4,
    DPairSpc_with_dsub_2_in_DPR_8SubclassMask,
    DPairSpc_with_dsub_2_in_DPR_8Superclasses,
    DPairSpc_with_dsub_2_in_DPR_8SuperRegClasses,
    0
  };

  extern const TargetRegisterClass DTripleSpc_with_dsub_2_in_DPR_8RegClass = {
    &ARMMCRegisterClasses[DTripleSpc_with_dsub_2_in_DPR_8RegClassID],
    VTLists + 24,
    DTripleSpc_with_dsub_2_in_DPR_8SubclassMask,
    DTripleSpc_with_dsub_2_in_DPR_8Superclasses,
    DTripleSpc_with_dsub_2_in_DPR_8SuperRegClasses,
    0
  };

  extern const TargetRegisterClass DTriple_with_dsub_2_in_DPR_8RegClass = {
    &ARMMCRegisterClasses[DTriple_with_dsub_2_in_DPR_8RegClassID],
    VTLists + 24,
    DTriple_with_dsub_2_in_DPR_8SubclassMask,
    DTriple_with_dsub_2_in_DPR_8Superclasses,
    DTriple_with_dsub_2_in_DPR_8SuperRegClasses,
    0
  };

  extern const TargetRegisterClass DQuadSpc_with_dsub_2_in_DPR_8RegClass = {
    &ARMMCRegisterClasses[DQuadSpc_with_dsub_2_in_DPR_8RegClassID],
    VTLists + 24,
    DQuadSpc_with_dsub_2_in_DPR_8SubclassMask,
    DQuadSpc_with_dsub_2_in_DPR_8Superclasses,
    DQuadSpc_with_dsub_2_in_DPR_8SuperRegClasses,
    0
  };

  extern const TargetRegisterClass DQuad_with_dsub_2_in_DPR_8RegClass = {
    &ARMMCRegisterClasses[DQuad_with_dsub_2_in_DPR_8RegClassID],
    VTLists + 6,
    DQuad_with_dsub_2_in_DPR_8SubclassMask,
    DQuad_with_dsub_2_in_DPR_8Superclasses,
    DQuad_with_dsub_2_in_DPR_8SuperRegClasses,
    0
  };

  extern const TargetRegisterClass QQQQPR_with_dsub_5_then_ssub_0RegClass = {
    &ARMMCRegisterClasses[QQQQPR_with_dsub_5_then_ssub_0RegClassID],
    VTLists + 8,
    QQQQPR_with_dsub_5_then_ssub_0SubclassMask,
    QQQQPR_with_dsub_5_then_ssub_0Superclasses,
    QQQQPR_with_dsub_5_then_ssub_0SuperRegClasses,
    QQQQPR_with_dsub_5_then_ssub_0GetRawAllocationOrder
  };

  extern const TargetRegisterClass DQuad_with_dsub_3_in_DPR_8RegClass = {
    &ARMMCRegisterClasses[DQuad_with_dsub_3_in_DPR_8RegClassID],
    VTLists + 6,
    DQuad_with_dsub_3_in_DPR_8SubclassMask,
    DQuad_with_dsub_3_in_DPR_8Superclasses,
    DQuad_with_dsub_3_in_DPR_8SuperRegClasses,
    0
  };

  extern const TargetRegisterClass QQQQPR_with_dsub_7_then_ssub_0RegClass = {
    &ARMMCRegisterClasses[QQQQPR_with_dsub_7_then_ssub_0RegClassID],
    VTLists + 8,
    QQQQPR_with_dsub_7_then_ssub_0SubclassMask,
    QQQQPR_with_dsub_7_then_ssub_0Superclasses,
    QQQQPR_with_dsub_7_then_ssub_0SuperRegClasses,
    QQQQPR_with_dsub_7_then_ssub_0GetRawAllocationOrder
  };

  extern const TargetRegisterClass tGPR_and_tcGPRRegClass = {
    &ARMMCRegisterClasses[tGPR_and_tcGPRRegClassID],
    VTLists + 0,
    tGPR_and_tcGPRSubclassMask,
    tGPR_and_tcGPRSuperclasses,
    tGPR_and_tcGPRSuperRegClasses,
    tGPR_and_tcGPRGetRawAllocationOrder
  };

  extern const TargetRegisterClass QPR_8RegClass = {
    &ARMMCRegisterClasses[QPR_8RegClassID],
    VTLists + 17,
    QPR_8SubclassMask,
    QPR_8Superclasses,
    QPR_8SuperRegClasses,
    0
  };

  extern const TargetRegisterClass DTripleSpc_with_dsub_4_in_DPR_8RegClass = {
    &ARMMCRegisterClasses[DTripleSpc_with_dsub_4_in_DPR_8RegClassID],
    VTLists + 24,
    DTripleSpc_with_dsub_4_in_DPR_8SubclassMask,
    DTripleSpc_with_dsub_4_in_DPR_8Superclasses,
    DTripleSpc_with_dsub_4_in_DPR_8SuperRegClasses,
    0
  };

  extern const TargetRegisterClass DQuadSpc_with_dsub_4_in_DPR_8RegClass = {
    &ARMMCRegisterClasses[DQuadSpc_with_dsub_4_in_DPR_8RegClassID],
    VTLists + 24,
    DQuadSpc_with_dsub_4_in_DPR_8SubclassMask,
    DQuadSpc_with_dsub_4_in_DPR_8Superclasses,
    DQuadSpc_with_dsub_4_in_DPR_8SuperRegClasses,
    0
  };

  extern const TargetRegisterClass QQPR_and_DQuad_with_dsub_0_in_DPR_8RegClass = {
    &ARMMCRegisterClasses[QQPR_and_DQuad_with_dsub_0_in_DPR_8RegClassID],
    VTLists + 6,
    QQPR_and_DQuad_with_dsub_0_in_DPR_8SubclassMask,
    QQPR_and_DQuad_with_dsub_0_in_DPR_8Superclasses,
    QQPR_and_DQuad_with_dsub_0_in_DPR_8SuperRegClasses,
    QQPR_and_DQuad_with_dsub_0_in_DPR_8GetRawAllocationOrder
  };

  extern const TargetRegisterClass QQQQPR_with_dsub_0_in_DPR_8RegClass = {
    &ARMMCRegisterClasses[QQQQPR_with_dsub_0_in_DPR_8RegClassID],
    VTLists + 8,
    QQQQPR_with_dsub_0_in_DPR_8SubclassMask,
    QQQQPR_with_dsub_0_in_DPR_8Superclasses,
    QQQQPR_with_dsub_0_in_DPR_8SuperRegClasses,
    QQQQPR_with_dsub_0_in_DPR_8GetRawAllocationOrder
  };

  extern const TargetRegisterClass QQPR_and_DQuad_with_dsub_2_in_DPR_8RegClass = {
    &ARMMCRegisterClasses[QQPR_and_DQuad_with_dsub_2_in_DPR_8RegClassID],
    VTLists + 6,
    QQPR_and_DQuad_with_dsub_2_in_DPR_8SubclassMask,
    QQPR_and_DQuad_with_dsub_2_in_DPR_8Superclasses,
    QQPR_and_DQuad_with_dsub_2_in_DPR_8SuperRegClasses,
    QQPR_and_DQuad_with_dsub_2_in_DPR_8GetRawAllocationOrder
  };

  extern const TargetRegisterClass QQQQPR_with_dsub_2_in_DPR_8RegClass = {
    &ARMMCRegisterClasses[QQQQPR_with_dsub_2_in_DPR_8RegClassID],
    VTLists + 8,
    QQQQPR_with_dsub_2_in_DPR_8SubclassMask,
    QQQQPR_with_dsub_2_in_DPR_8Superclasses,
    QQQQPR_with_dsub_2_in_DPR_8SuperRegClasses,
    QQQQPR_with_dsub_2_in_DPR_8GetRawAllocationOrder
  };

  extern const TargetRegisterClass hGPR_and_tcGPRRegClass = {
    &ARMMCRegisterClasses[hGPR_and_tcGPRRegClassID],
    VTLists + 0,
    hGPR_and_tcGPRSubclassMask,
    hGPR_and_tcGPRSuperclasses,
    hGPR_and_tcGPRSuperRegClasses,
    hGPR_and_tcGPRGetRawAllocationOrder
  };

  extern const TargetRegisterClass QQQQPR_with_dsub_4_in_DPR_8RegClass = {
    &ARMMCRegisterClasses[QQQQPR_with_dsub_4_in_DPR_8RegClassID],
    VTLists + 8,
    QQQQPR_with_dsub_4_in_DPR_8SubclassMask,
    QQQQPR_with_dsub_4_in_DPR_8Superclasses,
    QQQQPR_with_dsub_4_in_DPR_8SuperRegClasses,
    QQQQPR_with_dsub_4_in_DPR_8GetRawAllocationOrder
  };

  extern const TargetRegisterClass CCRRegClass = {
    &ARMMCRegisterClasses[CCRRegClassID],
    VTLists + 0,
    CCRSubclassMask,
    NullRegClasses,
    CCRSuperRegClasses,
    0
  };

  extern const TargetRegisterClass GPRspRegClass = {
    &ARMMCRegisterClasses[GPRspRegClassID],
    VTLists + 0,
    GPRspSubclassMask,
    GPRspSuperclasses,
    GPRspSuperRegClasses,
    0
  };

  extern const TargetRegisterClass QQQQPR_with_dsub_6_in_DPR_8RegClass = {
    &ARMMCRegisterClasses[QQQQPR_with_dsub_6_in_DPR_8RegClassID],
    VTLists + 8,
    QQQQPR_with_dsub_6_in_DPR_8SubclassMask,
    QQQQPR_with_dsub_6_in_DPR_8Superclasses,
    QQQQPR_with_dsub_6_in_DPR_8SuperRegClasses,
    QQQQPR_with_dsub_6_in_DPR_8GetRawAllocationOrder
  };

}

namespace {
  const TargetRegisterClass* const RegisterClasses[] = {
    &ARM::SPRRegClass,
    &ARM::DPRRegClass,
    &ARM::DPairRegClass,
    &ARM::DPairSpcRegClass,
    &ARM::DTripleRegClass,
    &ARM::DQuadRegClass,
    &ARM::DTripleSpcRegClass,
    &ARM::DQuadSpcRegClass,
    &ARM::GPRRegClass,
    &ARM::SPR_8RegClass,
    &ARM::DPR_VFP2RegClass,
    &ARM::DPairSpc_with_ssub_0RegClass,
    &ARM::DPair_with_ssub_0RegClass,
    &ARM::QPRRegClass,
    &ARM::DTripleSpc_with_ssub_0RegClass,
    &ARM::DTriple_with_ssub_0RegClass,
    &ARM::DQuadSpc_with_ssub_0RegClass,
    &ARM::DQuad_with_ssub_0RegClass,
    &ARM::GPRnopcRegClass,
    &ARM::DPair_with_ssub_2RegClass,
    &ARM::DTriple_with_ssub_2RegClass,
    &ARM::DQuad_with_ssub_2RegClass,
    &ARM::QQPRRegClass,
    &ARM::rGPRRegClass,
    &ARM::DPairSpc_with_dsub_2_then_ssub_0RegClass,
    &ARM::DTripleSpc_with_dsub_2_then_ssub_0RegClass,
    &ARM::DTriple_with_dsub_2_then_ssub_0RegClass,
    &ARM::DQuadSpc_with_dsub_2_then_ssub_0RegClass,
    &ARM::DQuad_with_dsub_2_then_ssub_0RegClass,
    &ARM::DQuad_with_dsub_3_then_ssub_0RegClass,
    &ARM::QQQQPRRegClass,
    &ARM::DTripleSpc_with_dsub_4_then_ssub_0RegClass,
    &ARM::DQuadSpc_with_dsub_4_then_ssub_0RegClass,
    &ARM::hGPRRegClass,
    &ARM::tGPRRegClass,
    &ARM::DPR_8RegClass,
    &ARM::DPairSpc_with_dsub_0_in_DPR_8RegClass,
    &ARM::DPair_with_dsub_0_in_DPR_8RegClass,
    &ARM::QPR_VFP2RegClass,
    &ARM::DTripleSpc_with_dsub_0_in_DPR_8RegClass,
    &ARM::DTriple_with_dsub_0_in_DPR_8RegClass,
    &ARM::DQuadSpc_with_dsub_0_in_DPR_8RegClass,
    &ARM::DQuad_with_dsub_0_in_DPR_8RegClass,
    &ARM::QQPR_with_ssub_0RegClass,
    &ARM::QQQQPR_with_ssub_0RegClass,
    &ARM::GPRnopc_and_hGPRRegClass,
    &ARM::DPair_with_dsub_1_in_DPR_8RegClass,
    &ARM::DTriple_with_dsub_1_in_DPR_8RegClass,
    &ARM::DQuad_with_dsub_1_in_DPR_8RegClass,
    &ARM::QQPR_with_dsub_2_then_ssub_0RegClass,
    &ARM::QQQQPR_with_dsub_2_then_ssub_0RegClass,
    &ARM::hGPR_and_rGPRRegClass,
    &ARM::tcGPRRegClass,
    &ARM::DPairSpc_with_dsub_2_in_DPR_8RegClass,
    &ARM::DTripleSpc_with_dsub_2_in_DPR_8RegClass,
    &ARM::DTriple_with_dsub_2_in_DPR_8RegClass,
    &ARM::DQuadSpc_with_dsub_2_in_DPR_8RegClass,
    &ARM::DQuad_with_dsub_2_in_DPR_8RegClass,
    &ARM::QQQQPR_with_dsub_5_then_ssub_0RegClass,
    &ARM::DQuad_with_dsub_3_in_DPR_8RegClass,
    &ARM::QQQQPR_with_dsub_7_then_ssub_0RegClass,
    &ARM::tGPR_and_tcGPRRegClass,
    &ARM::QPR_8RegClass,
    &ARM::DTripleSpc_with_dsub_4_in_DPR_8RegClass,
    &ARM::DQuadSpc_with_dsub_4_in_DPR_8RegClass,
    &ARM::QQPR_and_DQuad_with_dsub_0_in_DPR_8RegClass,
    &ARM::QQQQPR_with_dsub_0_in_DPR_8RegClass,
    &ARM::QQPR_and_DQuad_with_dsub_2_in_DPR_8RegClass,
    &ARM::QQQQPR_with_dsub_2_in_DPR_8RegClass,
    &ARM::hGPR_and_tcGPRRegClass,
    &ARM::QQQQPR_with_dsub_4_in_DPR_8RegClass,
    &ARM::CCRRegClass,
    &ARM::GPRspRegClass,
    &ARM::QQQQPR_with_dsub_6_in_DPR_8RegClass,
  };
}

static const TargetRegisterInfoDesc ARMRegInfoDesc[] = { // Extra Descriptors
  { 0, 0 },
  { 0, 0 },
  { 0, 0 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 0 },
  { 0, 0 },
  { 0, 0 },
  { 0, 0 },
  { 0, 0 },
  { 1, 1 },
  { 0, 0 },
  { 0, 0 },
  { 1, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 1, 1 },
  { 1, 1 },
  { 1, 1 },
  { 1, 1 },
  { 1, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 1, 1 },
  { 0, 0 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 0 },
  { 0, 0 },
  { 0, 0 },
  { 0, 0 },
  { 0, 0 },
  { 0, 0 },
  { 0, 0 },
  { 0, 0 },
  { 0, 0 },
  { 0, 0 },
  { 0, 0 },
  { 0, 0 },
  { 0, 0 },
  { 0, 0 },
  { 0, 0 },
  { 0, 0 },
  { 0, 0 },
  { 0, 0 },
  { 0, 0 },
  { 0, 0 },
  { 0, 0 },
  { 0, 0 },
  { 0, 0 },
  { 0, 0 },
  { 0, 0 },
  { 0, 0 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
};

static const char *const ARMSubRegIndexTable[] = { "dsub_0", "dsub_1", "dsub_2", "dsub_3", "dsub_4", "dsub_5", "dsub_6", "dsub_7", "qqsub_0", "qqsub_1", "qsub_0", "qsub_1", "qsub_2", "qsub_3", "ssub_0", "ssub_1", "ssub_2", "ssub_3", "dsub_2_then_ssub_0", "dsub_2_then_ssub_1", "dsub_3_then_ssub_0", "dsub_3_then_ssub_1", "dsub_7_then_ssub_0", "dsub_7_then_ssub_1", "dsub_6_then_ssub_0", "dsub_6_then_ssub_1", "dsub_5_then_ssub_0", "dsub_5_then_ssub_1", "dsub_4_then_ssub_0", "dsub_4_then_ssub_1" };

  enum {
    dsub_2_then_ssub_0 = 19,
    dsub_2_then_ssub_1 = 20,
    dsub_3_then_ssub_0 = 21,
    dsub_3_then_ssub_1 = 22,
    dsub_7_then_ssub_0 = 23,
    dsub_7_then_ssub_1 = 24,
    dsub_6_then_ssub_0 = 25,
    dsub_6_then_ssub_1 = 26,
    dsub_5_then_ssub_0 = 27,
    dsub_5_then_ssub_1 = 28,
    dsub_4_then_ssub_0 = 29,
    dsub_4_then_ssub_1 = 30
  };


unsigned ARMGenRegisterInfo::composeSubRegIndices(unsigned IdxA, unsigned IdxB) const {
  switch (IdxA) {
  default:
    return IdxB;
  case ARM::dsub_1: switch(IdxB) {
    default: return IdxB;
    case ARM::ssub_0: return ARM::ssub_2;
    case ARM::ssub_1: return ARM::ssub_3;
    }
  case ARM::dsub_2: switch(IdxB) {
    default: return IdxB;
    case ARM::ssub_0: return dsub_2_then_ssub_0;
    case ARM::ssub_1: return dsub_2_then_ssub_1;
    }
  case ARM::dsub_3: switch(IdxB) {
    default: return IdxB;
    case ARM::ssub_0: return dsub_3_then_ssub_0;
    case ARM::ssub_1: return dsub_3_then_ssub_1;
    }
  case ARM::dsub_4: switch(IdxB) {
    default: return IdxB;
    case ARM::ssub_0: return dsub_4_then_ssub_0;
    case ARM::ssub_1: return dsub_4_then_ssub_1;
    }
  case ARM::dsub_5: switch(IdxB) {
    default: return IdxB;
    case ARM::ssub_0: return dsub_5_then_ssub_0;
    case ARM::ssub_1: return dsub_5_then_ssub_1;
    }
  case ARM::dsub_6: switch(IdxB) {
    default: return IdxB;
    case ARM::ssub_0: return dsub_6_then_ssub_0;
    case ARM::ssub_1: return dsub_6_then_ssub_1;
    }
  case ARM::dsub_7: switch(IdxB) {
    default: return IdxB;
    case ARM::ssub_0: return dsub_7_then_ssub_0;
    case ARM::ssub_1: return dsub_7_then_ssub_1;
    }
  case ARM::qqsub_1: switch(IdxB) {
    default: return IdxB;
    case ARM::dsub_0: return ARM::dsub_4;
    case ARM::dsub_1: return ARM::dsub_5;
    case ARM::dsub_2: return ARM::dsub_6;
    case ARM::dsub_3: return ARM::dsub_7;
    case ARM::qsub_0: return ARM::qsub_2;
    case ARM::qsub_1: return ARM::qsub_3;
    case ARM::ssub_0: return dsub_4_then_ssub_0;
    case ARM::ssub_1: return dsub_4_then_ssub_1;
    case ARM::ssub_2: return dsub_5_then_ssub_0;
    case ARM::ssub_3: return dsub_5_then_ssub_1;
    case dsub_2_then_ssub_0: return dsub_6_then_ssub_0;
    case dsub_2_then_ssub_1: return dsub_6_then_ssub_1;
    case dsub_3_then_ssub_0: return dsub_7_then_ssub_0;
    case dsub_3_then_ssub_1: return dsub_7_then_ssub_1;
    }
  case ARM::qsub_1: switch(IdxB) {
    default: return IdxB;
    case ARM::dsub_0: return ARM::dsub_2;
    case ARM::dsub_1: return ARM::dsub_3;
    case ARM::ssub_0: return dsub_2_then_ssub_0;
    case ARM::ssub_1: return dsub_2_then_ssub_1;
    case ARM::ssub_2: return dsub_3_then_ssub_0;
    case ARM::ssub_3: return dsub_3_then_ssub_1;
    }
  case ARM::qsub_2: switch(IdxB) {
    default: return IdxB;
    case ARM::dsub_0: return ARM::dsub_4;
    case ARM::dsub_1: return ARM::dsub_5;
    case ARM::ssub_0: return dsub_4_then_ssub_0;
    case ARM::ssub_1: return dsub_4_then_ssub_1;
    case ARM::ssub_2: return dsub_5_then_ssub_0;
    case ARM::ssub_3: return dsub_5_then_ssub_1;
    }
  case ARM::qsub_3: switch(IdxB) {
    default: return IdxB;
    case ARM::dsub_0: return ARM::dsub_6;
    case ARM::dsub_1: return ARM::dsub_7;
    case ARM::ssub_0: return dsub_6_then_ssub_0;
    case ARM::ssub_1: return dsub_6_then_ssub_1;
    case ARM::ssub_2: return dsub_7_then_ssub_0;
    case ARM::ssub_3: return dsub_7_then_ssub_1;
    }
  }
}

const TargetRegisterClass *ARMGenRegisterInfo::getSubClassWithSubReg(const TargetRegisterClass *RC, unsigned Idx) const {
  static const uint8_t Table[74][30] = {
    {	// SPR
      0,	// dsub_0
      0,	// dsub_1
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      0,	// ssub_0
      0,	// ssub_1
      0,	// ssub_2
      0,	// ssub_3
      0,	// dsub_2_then_ssub_0
      0,	// dsub_2_then_ssub_1
      0,	// dsub_3_then_ssub_0
      0,	// dsub_3_then_ssub_1
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      0,	// dsub_4_then_ssub_0
      0,	// dsub_4_then_ssub_1
    },
    {	// DPR
      0,	// dsub_0
      0,	// dsub_1
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      11,	// ssub_0 -> DPR_VFP2
      11,	// ssub_1 -> DPR_VFP2
      0,	// ssub_2
      0,	// ssub_3
      0,	// dsub_2_then_ssub_0
      0,	// dsub_2_then_ssub_1
      0,	// dsub_3_then_ssub_0
      0,	// dsub_3_then_ssub_1
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      0,	// dsub_4_then_ssub_0
      0,	// dsub_4_then_ssub_1
    },
    {	// DPair
      3,	// dsub_0 -> DPair
      3,	// dsub_1 -> DPair
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      13,	// ssub_0 -> DPair_with_ssub_0
      13,	// ssub_1 -> DPair_with_ssub_0
      20,	// ssub_2 -> DPair_with_ssub_2
      20,	// ssub_3 -> DPair_with_ssub_2
      0,	// dsub_2_then_ssub_0
      0,	// dsub_2_then_ssub_1
      0,	// dsub_3_then_ssub_0
      0,	// dsub_3_then_ssub_1
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      0,	// dsub_4_then_ssub_0
      0,	// dsub_4_then_ssub_1
    },
    {	// DPairSpc
      4,	// dsub_0 -> DPairSpc
      0,	// dsub_1
      4,	// dsub_2 -> DPairSpc
      0,	// dsub_3
      0,	// dsub_4
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      12,	// ssub_0 -> DPairSpc_with_ssub_0
      12,	// ssub_1 -> DPairSpc_with_ssub_0
      0,	// ssub_2
      0,	// ssub_3
      25,	// dsub_2_then_ssub_0 -> DPairSpc_with_dsub_2_then_ssub_0
      25,	// dsub_2_then_ssub_1 -> DPairSpc_with_dsub_2_then_ssub_0
      0,	// dsub_3_then_ssub_0
      0,	// dsub_3_then_ssub_1
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      0,	// dsub_4_then_ssub_0
      0,	// dsub_4_then_ssub_1
    },
    {	// DTriple
      5,	// dsub_0 -> DTriple
      5,	// dsub_1 -> DTriple
      5,	// dsub_2 -> DTriple
      0,	// dsub_3
      0,	// dsub_4
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      16,	// ssub_0 -> DTriple_with_ssub_0
      16,	// ssub_1 -> DTriple_with_ssub_0
      21,	// ssub_2 -> DTriple_with_ssub_2
      21,	// ssub_3 -> DTriple_with_ssub_2
      27,	// dsub_2_then_ssub_0 -> DTriple_with_dsub_2_then_ssub_0
      27,	// dsub_2_then_ssub_1 -> DTriple_with_dsub_2_then_ssub_0
      0,	// dsub_3_then_ssub_0
      0,	// dsub_3_then_ssub_1
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      0,	// dsub_4_then_ssub_0
      0,	// dsub_4_then_ssub_1
    },
    {	// DQuad
      6,	// dsub_0 -> DQuad
      6,	// dsub_1 -> DQuad
      6,	// dsub_2 -> DQuad
      6,	// dsub_3 -> DQuad
      0,	// dsub_4
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      23,	// qsub_0 -> QQPR
      23,	// qsub_1 -> QQPR
      0,	// qsub_2
      0,	// qsub_3
      18,	// ssub_0 -> DQuad_with_ssub_0
      18,	// ssub_1 -> DQuad_with_ssub_0
      22,	// ssub_2 -> DQuad_with_ssub_2
      22,	// ssub_3 -> DQuad_with_ssub_2
      29,	// dsub_2_then_ssub_0 -> DQuad_with_dsub_2_then_ssub_0
      29,	// dsub_2_then_ssub_1 -> DQuad_with_dsub_2_then_ssub_0
      30,	// dsub_3_then_ssub_0 -> DQuad_with_dsub_3_then_ssub_0
      30,	// dsub_3_then_ssub_1 -> DQuad_with_dsub_3_then_ssub_0
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      0,	// dsub_4_then_ssub_0
      0,	// dsub_4_then_ssub_1
    },
    {	// DTripleSpc
      7,	// dsub_0 -> DTripleSpc
      0,	// dsub_1
      7,	// dsub_2 -> DTripleSpc
      0,	// dsub_3
      7,	// dsub_4 -> DTripleSpc
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      15,	// ssub_0 -> DTripleSpc_with_ssub_0
      15,	// ssub_1 -> DTripleSpc_with_ssub_0
      0,	// ssub_2
      0,	// ssub_3
      26,	// dsub_2_then_ssub_0 -> DTripleSpc_with_dsub_2_then_ssub_0
      26,	// dsub_2_then_ssub_1 -> DTripleSpc_with_dsub_2_then_ssub_0
      0,	// dsub_3_then_ssub_0
      0,	// dsub_3_then_ssub_1
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      32,	// dsub_4_then_ssub_0 -> DTripleSpc_with_dsub_4_then_ssub_0
      32,	// dsub_4_then_ssub_1 -> DTripleSpc_with_dsub_4_then_ssub_0
    },
    {	// DQuadSpc
      8,	// dsub_0 -> DQuadSpc
      0,	// dsub_1
      8,	// dsub_2 -> DQuadSpc
      0,	// dsub_3
      8,	// dsub_4 -> DQuadSpc
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      17,	// ssub_0 -> DQuadSpc_with_ssub_0
      17,	// ssub_1 -> DQuadSpc_with_ssub_0
      0,	// ssub_2
      0,	// ssub_3
      28,	// dsub_2_then_ssub_0 -> DQuadSpc_with_dsub_2_then_ssub_0
      28,	// dsub_2_then_ssub_1 -> DQuadSpc_with_dsub_2_then_ssub_0
      0,	// dsub_3_then_ssub_0
      0,	// dsub_3_then_ssub_1
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      33,	// dsub_4_then_ssub_0 -> DQuadSpc_with_dsub_4_then_ssub_0
      33,	// dsub_4_then_ssub_1 -> DQuadSpc_with_dsub_4_then_ssub_0
    },
    {	// GPR
      0,	// dsub_0
      0,	// dsub_1
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      0,	// ssub_0
      0,	// ssub_1
      0,	// ssub_2
      0,	// ssub_3
      0,	// dsub_2_then_ssub_0
      0,	// dsub_2_then_ssub_1
      0,	// dsub_3_then_ssub_0
      0,	// dsub_3_then_ssub_1
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      0,	// dsub_4_then_ssub_0
      0,	// dsub_4_then_ssub_1
    },
    {	// SPR_8
      0,	// dsub_0
      0,	// dsub_1
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      0,	// ssub_0
      0,	// ssub_1
      0,	// ssub_2
      0,	// ssub_3
      0,	// dsub_2_then_ssub_0
      0,	// dsub_2_then_ssub_1
      0,	// dsub_3_then_ssub_0
      0,	// dsub_3_then_ssub_1
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      0,	// dsub_4_then_ssub_0
      0,	// dsub_4_then_ssub_1
    },
    {	// DPR_VFP2
      0,	// dsub_0
      0,	// dsub_1
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      11,	// ssub_0 -> DPR_VFP2
      11,	// ssub_1 -> DPR_VFP2
      0,	// ssub_2
      0,	// ssub_3
      0,	// dsub_2_then_ssub_0
      0,	// dsub_2_then_ssub_1
      0,	// dsub_3_then_ssub_0
      0,	// dsub_3_then_ssub_1
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      0,	// dsub_4_then_ssub_0
      0,	// dsub_4_then_ssub_1
    },
    {	// DPairSpc_with_ssub_0
      12,	// dsub_0 -> DPairSpc_with_ssub_0
      0,	// dsub_1
      12,	// dsub_2 -> DPairSpc_with_ssub_0
      0,	// dsub_3
      0,	// dsub_4
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      12,	// ssub_0 -> DPairSpc_with_ssub_0
      12,	// ssub_1 -> DPairSpc_with_ssub_0
      0,	// ssub_2
      0,	// ssub_3
      25,	// dsub_2_then_ssub_0 -> DPairSpc_with_dsub_2_then_ssub_0
      25,	// dsub_2_then_ssub_1 -> DPairSpc_with_dsub_2_then_ssub_0
      0,	// dsub_3_then_ssub_0
      0,	// dsub_3_then_ssub_1
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      0,	// dsub_4_then_ssub_0
      0,	// dsub_4_then_ssub_1
    },
    {	// DPair_with_ssub_0
      13,	// dsub_0 -> DPair_with_ssub_0
      13,	// dsub_1 -> DPair_with_ssub_0
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      13,	// ssub_0 -> DPair_with_ssub_0
      13,	// ssub_1 -> DPair_with_ssub_0
      20,	// ssub_2 -> DPair_with_ssub_2
      20,	// ssub_3 -> DPair_with_ssub_2
      0,	// dsub_2_then_ssub_0
      0,	// dsub_2_then_ssub_1
      0,	// dsub_3_then_ssub_0
      0,	// dsub_3_then_ssub_1
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      0,	// dsub_4_then_ssub_0
      0,	// dsub_4_then_ssub_1
    },
    {	// QPR
      14,	// dsub_0 -> QPR
      14,	// dsub_1 -> QPR
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      39,	// ssub_0 -> QPR_VFP2
      39,	// ssub_1 -> QPR_VFP2
      39,	// ssub_2 -> QPR_VFP2
      39,	// ssub_3 -> QPR_VFP2
      0,	// dsub_2_then_ssub_0
      0,	// dsub_2_then_ssub_1
      0,	// dsub_3_then_ssub_0
      0,	// dsub_3_then_ssub_1
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      0,	// dsub_4_then_ssub_0
      0,	// dsub_4_then_ssub_1
    },
    {	// DTripleSpc_with_ssub_0
      15,	// dsub_0 -> DTripleSpc_with_ssub_0
      0,	// dsub_1
      15,	// dsub_2 -> DTripleSpc_with_ssub_0
      0,	// dsub_3
      15,	// dsub_4 -> DTripleSpc_with_ssub_0
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      15,	// ssub_0 -> DTripleSpc_with_ssub_0
      15,	// ssub_1 -> DTripleSpc_with_ssub_0
      0,	// ssub_2
      0,	// ssub_3
      26,	// dsub_2_then_ssub_0 -> DTripleSpc_with_dsub_2_then_ssub_0
      26,	// dsub_2_then_ssub_1 -> DTripleSpc_with_dsub_2_then_ssub_0
      0,	// dsub_3_then_ssub_0
      0,	// dsub_3_then_ssub_1
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      32,	// dsub_4_then_ssub_0 -> DTripleSpc_with_dsub_4_then_ssub_0
      32,	// dsub_4_then_ssub_1 -> DTripleSpc_with_dsub_4_then_ssub_0
    },
    {	// DTriple_with_ssub_0
      16,	// dsub_0 -> DTriple_with_ssub_0
      16,	// dsub_1 -> DTriple_with_ssub_0
      16,	// dsub_2 -> DTriple_with_ssub_0
      0,	// dsub_3
      0,	// dsub_4
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      16,	// ssub_0 -> DTriple_with_ssub_0
      16,	// ssub_1 -> DTriple_with_ssub_0
      21,	// ssub_2 -> DTriple_with_ssub_2
      21,	// ssub_3 -> DTriple_with_ssub_2
      27,	// dsub_2_then_ssub_0 -> DTriple_with_dsub_2_then_ssub_0
      27,	// dsub_2_then_ssub_1 -> DTriple_with_dsub_2_then_ssub_0
      0,	// dsub_3_then_ssub_0
      0,	// dsub_3_then_ssub_1
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      0,	// dsub_4_then_ssub_0
      0,	// dsub_4_then_ssub_1
    },
    {	// DQuadSpc_with_ssub_0
      17,	// dsub_0 -> DQuadSpc_with_ssub_0
      0,	// dsub_1
      17,	// dsub_2 -> DQuadSpc_with_ssub_0
      0,	// dsub_3
      17,	// dsub_4 -> DQuadSpc_with_ssub_0
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      17,	// ssub_0 -> DQuadSpc_with_ssub_0
      17,	// ssub_1 -> DQuadSpc_with_ssub_0
      0,	// ssub_2
      0,	// ssub_3
      28,	// dsub_2_then_ssub_0 -> DQuadSpc_with_dsub_2_then_ssub_0
      28,	// dsub_2_then_ssub_1 -> DQuadSpc_with_dsub_2_then_ssub_0
      0,	// dsub_3_then_ssub_0
      0,	// dsub_3_then_ssub_1
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      33,	// dsub_4_then_ssub_0 -> DQuadSpc_with_dsub_4_then_ssub_0
      33,	// dsub_4_then_ssub_1 -> DQuadSpc_with_dsub_4_then_ssub_0
    },
    {	// DQuad_with_ssub_0
      18,	// dsub_0 -> DQuad_with_ssub_0
      18,	// dsub_1 -> DQuad_with_ssub_0
      18,	// dsub_2 -> DQuad_with_ssub_0
      18,	// dsub_3 -> DQuad_with_ssub_0
      0,	// dsub_4
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      44,	// qsub_0 -> QQPR_with_ssub_0
      44,	// qsub_1 -> QQPR_with_ssub_0
      0,	// qsub_2
      0,	// qsub_3
      18,	// ssub_0 -> DQuad_with_ssub_0
      18,	// ssub_1 -> DQuad_with_ssub_0
      22,	// ssub_2 -> DQuad_with_ssub_2
      22,	// ssub_3 -> DQuad_with_ssub_2
      29,	// dsub_2_then_ssub_0 -> DQuad_with_dsub_2_then_ssub_0
      29,	// dsub_2_then_ssub_1 -> DQuad_with_dsub_2_then_ssub_0
      30,	// dsub_3_then_ssub_0 -> DQuad_with_dsub_3_then_ssub_0
      30,	// dsub_3_then_ssub_1 -> DQuad_with_dsub_3_then_ssub_0
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      0,	// dsub_4_then_ssub_0
      0,	// dsub_4_then_ssub_1
    },
    {	// GPRnopc
      0,	// dsub_0
      0,	// dsub_1
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      0,	// ssub_0
      0,	// ssub_1
      0,	// ssub_2
      0,	// ssub_3
      0,	// dsub_2_then_ssub_0
      0,	// dsub_2_then_ssub_1
      0,	// dsub_3_then_ssub_0
      0,	// dsub_3_then_ssub_1
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      0,	// dsub_4_then_ssub_0
      0,	// dsub_4_then_ssub_1
    },
    {	// DPair_with_ssub_2
      20,	// dsub_0 -> DPair_with_ssub_2
      20,	// dsub_1 -> DPair_with_ssub_2
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      20,	// ssub_0 -> DPair_with_ssub_2
      20,	// ssub_1 -> DPair_with_ssub_2
      20,	// ssub_2 -> DPair_with_ssub_2
      20,	// ssub_3 -> DPair_with_ssub_2
      0,	// dsub_2_then_ssub_0
      0,	// dsub_2_then_ssub_1
      0,	// dsub_3_then_ssub_0
      0,	// dsub_3_then_ssub_1
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      0,	// dsub_4_then_ssub_0
      0,	// dsub_4_then_ssub_1
    },
    {	// DTriple_with_ssub_2
      21,	// dsub_0 -> DTriple_with_ssub_2
      21,	// dsub_1 -> DTriple_with_ssub_2
      21,	// dsub_2 -> DTriple_with_ssub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      21,	// ssub_0 -> DTriple_with_ssub_2
      21,	// ssub_1 -> DTriple_with_ssub_2
      21,	// ssub_2 -> DTriple_with_ssub_2
      21,	// ssub_3 -> DTriple_with_ssub_2
      27,	// dsub_2_then_ssub_0 -> DTriple_with_dsub_2_then_ssub_0
      27,	// dsub_2_then_ssub_1 -> DTriple_with_dsub_2_then_ssub_0
      0,	// dsub_3_then_ssub_0
      0,	// dsub_3_then_ssub_1
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      0,	// dsub_4_then_ssub_0
      0,	// dsub_4_then_ssub_1
    },
    {	// DQuad_with_ssub_2
      22,	// dsub_0 -> DQuad_with_ssub_2
      22,	// dsub_1 -> DQuad_with_ssub_2
      22,	// dsub_2 -> DQuad_with_ssub_2
      22,	// dsub_3 -> DQuad_with_ssub_2
      0,	// dsub_4
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      44,	// qsub_0 -> QQPR_with_ssub_0
      44,	// qsub_1 -> QQPR_with_ssub_0
      0,	// qsub_2
      0,	// qsub_3
      22,	// ssub_0 -> DQuad_with_ssub_2
      22,	// ssub_1 -> DQuad_with_ssub_2
      22,	// ssub_2 -> DQuad_with_ssub_2
      22,	// ssub_3 -> DQuad_with_ssub_2
      29,	// dsub_2_then_ssub_0 -> DQuad_with_dsub_2_then_ssub_0
      29,	// dsub_2_then_ssub_1 -> DQuad_with_dsub_2_then_ssub_0
      30,	// dsub_3_then_ssub_0 -> DQuad_with_dsub_3_then_ssub_0
      30,	// dsub_3_then_ssub_1 -> DQuad_with_dsub_3_then_ssub_0
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      0,	// dsub_4_then_ssub_0
      0,	// dsub_4_then_ssub_1
    },
    {	// QQPR
      23,	// dsub_0 -> QQPR
      23,	// dsub_1 -> QQPR
      23,	// dsub_2 -> QQPR
      23,	// dsub_3 -> QQPR
      0,	// dsub_4
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      23,	// qsub_0 -> QQPR
      23,	// qsub_1 -> QQPR
      0,	// qsub_2
      0,	// qsub_3
      44,	// ssub_0 -> QQPR_with_ssub_0
      44,	// ssub_1 -> QQPR_with_ssub_0
      44,	// ssub_2 -> QQPR_with_ssub_0
      44,	// ssub_3 -> QQPR_with_ssub_0
      50,	// dsub_2_then_ssub_0 -> QQPR_with_dsub_2_then_ssub_0
      50,	// dsub_2_then_ssub_1 -> QQPR_with_dsub_2_then_ssub_0
      50,	// dsub_3_then_ssub_0 -> QQPR_with_dsub_2_then_ssub_0
      50,	// dsub_3_then_ssub_1 -> QQPR_with_dsub_2_then_ssub_0
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      0,	// dsub_4_then_ssub_0
      0,	// dsub_4_then_ssub_1
    },
    {	// rGPR
      0,	// dsub_0
      0,	// dsub_1
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      0,	// ssub_0
      0,	// ssub_1
      0,	// ssub_2
      0,	// ssub_3
      0,	// dsub_2_then_ssub_0
      0,	// dsub_2_then_ssub_1
      0,	// dsub_3_then_ssub_0
      0,	// dsub_3_then_ssub_1
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      0,	// dsub_4_then_ssub_0
      0,	// dsub_4_then_ssub_1
    },
    {	// DPairSpc_with_dsub_2_then_ssub_0
      25,	// dsub_0 -> DPairSpc_with_dsub_2_then_ssub_0
      0,	// dsub_1
      25,	// dsub_2 -> DPairSpc_with_dsub_2_then_ssub_0
      0,	// dsub_3
      0,	// dsub_4
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      25,	// ssub_0 -> DPairSpc_with_dsub_2_then_ssub_0
      25,	// ssub_1 -> DPairSpc_with_dsub_2_then_ssub_0
      0,	// ssub_2
      0,	// ssub_3
      25,	// dsub_2_then_ssub_0 -> DPairSpc_with_dsub_2_then_ssub_0
      25,	// dsub_2_then_ssub_1 -> DPairSpc_with_dsub_2_then_ssub_0
      0,	// dsub_3_then_ssub_0
      0,	// dsub_3_then_ssub_1
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      0,	// dsub_4_then_ssub_0
      0,	// dsub_4_then_ssub_1
    },
    {	// DTripleSpc_with_dsub_2_then_ssub_0
      26,	// dsub_0 -> DTripleSpc_with_dsub_2_then_ssub_0
      0,	// dsub_1
      26,	// dsub_2 -> DTripleSpc_with_dsub_2_then_ssub_0
      0,	// dsub_3
      26,	// dsub_4 -> DTripleSpc_with_dsub_2_then_ssub_0
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      26,	// ssub_0 -> DTripleSpc_with_dsub_2_then_ssub_0
      26,	// ssub_1 -> DTripleSpc_with_dsub_2_then_ssub_0
      0,	// ssub_2
      0,	// ssub_3
      26,	// dsub_2_then_ssub_0 -> DTripleSpc_with_dsub_2_then_ssub_0
      26,	// dsub_2_then_ssub_1 -> DTripleSpc_with_dsub_2_then_ssub_0
      0,	// dsub_3_then_ssub_0
      0,	// dsub_3_then_ssub_1
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      32,	// dsub_4_then_ssub_0 -> DTripleSpc_with_dsub_4_then_ssub_0
      32,	// dsub_4_then_ssub_1 -> DTripleSpc_with_dsub_4_then_ssub_0
    },
    {	// DTriple_with_dsub_2_then_ssub_0
      27,	// dsub_0 -> DTriple_with_dsub_2_then_ssub_0
      27,	// dsub_1 -> DTriple_with_dsub_2_then_ssub_0
      27,	// dsub_2 -> DTriple_with_dsub_2_then_ssub_0
      0,	// dsub_3
      0,	// dsub_4
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      27,	// ssub_0 -> DTriple_with_dsub_2_then_ssub_0
      27,	// ssub_1 -> DTriple_with_dsub_2_then_ssub_0
      27,	// ssub_2 -> DTriple_with_dsub_2_then_ssub_0
      27,	// ssub_3 -> DTriple_with_dsub_2_then_ssub_0
      27,	// dsub_2_then_ssub_0 -> DTriple_with_dsub_2_then_ssub_0
      27,	// dsub_2_then_ssub_1 -> DTriple_with_dsub_2_then_ssub_0
      0,	// dsub_3_then_ssub_0
      0,	// dsub_3_then_ssub_1
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      0,	// dsub_4_then_ssub_0
      0,	// dsub_4_then_ssub_1
    },
    {	// DQuadSpc_with_dsub_2_then_ssub_0
      28,	// dsub_0 -> DQuadSpc_with_dsub_2_then_ssub_0
      0,	// dsub_1
      28,	// dsub_2 -> DQuadSpc_with_dsub_2_then_ssub_0
      0,	// dsub_3
      28,	// dsub_4 -> DQuadSpc_with_dsub_2_then_ssub_0
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      28,	// ssub_0 -> DQuadSpc_with_dsub_2_then_ssub_0
      28,	// ssub_1 -> DQuadSpc_with_dsub_2_then_ssub_0
      0,	// ssub_2
      0,	// ssub_3
      28,	// dsub_2_then_ssub_0 -> DQuadSpc_with_dsub_2_then_ssub_0
      28,	// dsub_2_then_ssub_1 -> DQuadSpc_with_dsub_2_then_ssub_0
      0,	// dsub_3_then_ssub_0
      0,	// dsub_3_then_ssub_1
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      33,	// dsub_4_then_ssub_0 -> DQuadSpc_with_dsub_4_then_ssub_0
      33,	// dsub_4_then_ssub_1 -> DQuadSpc_with_dsub_4_then_ssub_0
    },
    {	// DQuad_with_dsub_2_then_ssub_0
      29,	// dsub_0 -> DQuad_with_dsub_2_then_ssub_0
      29,	// dsub_1 -> DQuad_with_dsub_2_then_ssub_0
      29,	// dsub_2 -> DQuad_with_dsub_2_then_ssub_0
      29,	// dsub_3 -> DQuad_with_dsub_2_then_ssub_0
      0,	// dsub_4
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      50,	// qsub_0 -> QQPR_with_dsub_2_then_ssub_0
      50,	// qsub_1 -> QQPR_with_dsub_2_then_ssub_0
      0,	// qsub_2
      0,	// qsub_3
      29,	// ssub_0 -> DQuad_with_dsub_2_then_ssub_0
      29,	// ssub_1 -> DQuad_with_dsub_2_then_ssub_0
      29,	// ssub_2 -> DQuad_with_dsub_2_then_ssub_0
      29,	// ssub_3 -> DQuad_with_dsub_2_then_ssub_0
      29,	// dsub_2_then_ssub_0 -> DQuad_with_dsub_2_then_ssub_0
      29,	// dsub_2_then_ssub_1 -> DQuad_with_dsub_2_then_ssub_0
      30,	// dsub_3_then_ssub_0 -> DQuad_with_dsub_3_then_ssub_0
      30,	// dsub_3_then_ssub_1 -> DQuad_with_dsub_3_then_ssub_0
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      0,	// dsub_4_then_ssub_0
      0,	// dsub_4_then_ssub_1
    },
    {	// DQuad_with_dsub_3_then_ssub_0
      30,	// dsub_0 -> DQuad_with_dsub_3_then_ssub_0
      30,	// dsub_1 -> DQuad_with_dsub_3_then_ssub_0
      30,	// dsub_2 -> DQuad_with_dsub_3_then_ssub_0
      30,	// dsub_3 -> DQuad_with_dsub_3_then_ssub_0
      0,	// dsub_4
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      50,	// qsub_0 -> QQPR_with_dsub_2_then_ssub_0
      50,	// qsub_1 -> QQPR_with_dsub_2_then_ssub_0
      0,	// qsub_2
      0,	// qsub_3
      30,	// ssub_0 -> DQuad_with_dsub_3_then_ssub_0
      30,	// ssub_1 -> DQuad_with_dsub_3_then_ssub_0
      30,	// ssub_2 -> DQuad_with_dsub_3_then_ssub_0
      30,	// ssub_3 -> DQuad_with_dsub_3_then_ssub_0
      30,	// dsub_2_then_ssub_0 -> DQuad_with_dsub_3_then_ssub_0
      30,	// dsub_2_then_ssub_1 -> DQuad_with_dsub_3_then_ssub_0
      30,	// dsub_3_then_ssub_0 -> DQuad_with_dsub_3_then_ssub_0
      30,	// dsub_3_then_ssub_1 -> DQuad_with_dsub_3_then_ssub_0
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      0,	// dsub_4_then_ssub_0
      0,	// dsub_4_then_ssub_1
    },
    {	// QQQQPR
      31,	// dsub_0 -> QQQQPR
      31,	// dsub_1 -> QQQQPR
      31,	// dsub_2 -> QQQQPR
      31,	// dsub_3 -> QQQQPR
      31,	// dsub_4 -> QQQQPR
      31,	// dsub_5 -> QQQQPR
      31,	// dsub_6 -> QQQQPR
      31,	// dsub_7 -> QQQQPR
      31,	// qqsub_0 -> QQQQPR
      31,	// qqsub_1 -> QQQQPR
      31,	// qsub_0 -> QQQQPR
      31,	// qsub_1 -> QQQQPR
      31,	// qsub_2 -> QQQQPR
      31,	// qsub_3 -> QQQQPR
      45,	// ssub_0 -> QQQQPR_with_ssub_0
      45,	// ssub_1 -> QQQQPR_with_ssub_0
      45,	// ssub_2 -> QQQQPR_with_ssub_0
      45,	// ssub_3 -> QQQQPR_with_ssub_0
      51,	// dsub_2_then_ssub_0 -> QQQQPR_with_dsub_2_then_ssub_0
      51,	// dsub_2_then_ssub_1 -> QQQQPR_with_dsub_2_then_ssub_0
      51,	// dsub_3_then_ssub_0 -> QQQQPR_with_dsub_2_then_ssub_0
      51,	// dsub_3_then_ssub_1 -> QQQQPR_with_dsub_2_then_ssub_0
      61,	// dsub_7_then_ssub_0 -> QQQQPR_with_dsub_7_then_ssub_0
      61,	// dsub_7_then_ssub_1 -> QQQQPR_with_dsub_7_then_ssub_0
      61,	// dsub_6_then_ssub_0 -> QQQQPR_with_dsub_7_then_ssub_0
      61,	// dsub_6_then_ssub_1 -> QQQQPR_with_dsub_7_then_ssub_0
      59,	// dsub_5_then_ssub_0 -> QQQQPR_with_dsub_5_then_ssub_0
      59,	// dsub_5_then_ssub_1 -> QQQQPR_with_dsub_5_then_ssub_0
      59,	// dsub_4_then_ssub_0 -> QQQQPR_with_dsub_5_then_ssub_0
      59,	// dsub_4_then_ssub_1 -> QQQQPR_with_dsub_5_then_ssub_0
    },
    {	// DTripleSpc_with_dsub_4_then_ssub_0
      32,	// dsub_0 -> DTripleSpc_with_dsub_4_then_ssub_0
      0,	// dsub_1
      32,	// dsub_2 -> DTripleSpc_with_dsub_4_then_ssub_0
      0,	// dsub_3
      32,	// dsub_4 -> DTripleSpc_with_dsub_4_then_ssub_0
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      32,	// ssub_0 -> DTripleSpc_with_dsub_4_then_ssub_0
      32,	// ssub_1 -> DTripleSpc_with_dsub_4_then_ssub_0
      0,	// ssub_2
      0,	// ssub_3
      32,	// dsub_2_then_ssub_0 -> DTripleSpc_with_dsub_4_then_ssub_0
      32,	// dsub_2_then_ssub_1 -> DTripleSpc_with_dsub_4_then_ssub_0
      0,	// dsub_3_then_ssub_0
      0,	// dsub_3_then_ssub_1
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      32,	// dsub_4_then_ssub_0 -> DTripleSpc_with_dsub_4_then_ssub_0
      32,	// dsub_4_then_ssub_1 -> DTripleSpc_with_dsub_4_then_ssub_0
    },
    {	// DQuadSpc_with_dsub_4_then_ssub_0
      33,	// dsub_0 -> DQuadSpc_with_dsub_4_then_ssub_0
      0,	// dsub_1
      33,	// dsub_2 -> DQuadSpc_with_dsub_4_then_ssub_0
      0,	// dsub_3
      33,	// dsub_4 -> DQuadSpc_with_dsub_4_then_ssub_0
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      33,	// ssub_0 -> DQuadSpc_with_dsub_4_then_ssub_0
      33,	// ssub_1 -> DQuadSpc_with_dsub_4_then_ssub_0
      0,	// ssub_2
      0,	// ssub_3
      33,	// dsub_2_then_ssub_0 -> DQuadSpc_with_dsub_4_then_ssub_0
      33,	// dsub_2_then_ssub_1 -> DQuadSpc_with_dsub_4_then_ssub_0
      0,	// dsub_3_then_ssub_0
      0,	// dsub_3_then_ssub_1
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      33,	// dsub_4_then_ssub_0 -> DQuadSpc_with_dsub_4_then_ssub_0
      33,	// dsub_4_then_ssub_1 -> DQuadSpc_with_dsub_4_then_ssub_0
    },
    {	// hGPR
      0,	// dsub_0
      0,	// dsub_1
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      0,	// ssub_0
      0,	// ssub_1
      0,	// ssub_2
      0,	// ssub_3
      0,	// dsub_2_then_ssub_0
      0,	// dsub_2_then_ssub_1
      0,	// dsub_3_then_ssub_0
      0,	// dsub_3_then_ssub_1
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      0,	// dsub_4_then_ssub_0
      0,	// dsub_4_then_ssub_1
    },
    {	// tGPR
      0,	// dsub_0
      0,	// dsub_1
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      0,	// ssub_0
      0,	// ssub_1
      0,	// ssub_2
      0,	// ssub_3
      0,	// dsub_2_then_ssub_0
      0,	// dsub_2_then_ssub_1
      0,	// dsub_3_then_ssub_0
      0,	// dsub_3_then_ssub_1
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      0,	// dsub_4_then_ssub_0
      0,	// dsub_4_then_ssub_1
    },
    {	// DPR_8
      0,	// dsub_0
      0,	// dsub_1
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      36,	// ssub_0 -> DPR_8
      36,	// ssub_1 -> DPR_8
      0,	// ssub_2
      0,	// ssub_3
      0,	// dsub_2_then_ssub_0
      0,	// dsub_2_then_ssub_1
      0,	// dsub_3_then_ssub_0
      0,	// dsub_3_then_ssub_1
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      0,	// dsub_4_then_ssub_0
      0,	// dsub_4_then_ssub_1
    },
    {	// DPairSpc_with_dsub_0_in_DPR_8
      37,	// dsub_0 -> DPairSpc_with_dsub_0_in_DPR_8
      0,	// dsub_1
      37,	// dsub_2 -> DPairSpc_with_dsub_0_in_DPR_8
      0,	// dsub_3
      0,	// dsub_4
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      37,	// ssub_0 -> DPairSpc_with_dsub_0_in_DPR_8
      37,	// ssub_1 -> DPairSpc_with_dsub_0_in_DPR_8
      0,	// ssub_2
      0,	// ssub_3
      37,	// dsub_2_then_ssub_0 -> DPairSpc_with_dsub_0_in_DPR_8
      37,	// dsub_2_then_ssub_1 -> DPairSpc_with_dsub_0_in_DPR_8
      0,	// dsub_3_then_ssub_0
      0,	// dsub_3_then_ssub_1
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      0,	// dsub_4_then_ssub_0
      0,	// dsub_4_then_ssub_1
    },
    {	// DPair_with_dsub_0_in_DPR_8
      38,	// dsub_0 -> DPair_with_dsub_0_in_DPR_8
      38,	// dsub_1 -> DPair_with_dsub_0_in_DPR_8
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      38,	// ssub_0 -> DPair_with_dsub_0_in_DPR_8
      38,	// ssub_1 -> DPair_with_dsub_0_in_DPR_8
      38,	// ssub_2 -> DPair_with_dsub_0_in_DPR_8
      38,	// ssub_3 -> DPair_with_dsub_0_in_DPR_8
      0,	// dsub_2_then_ssub_0
      0,	// dsub_2_then_ssub_1
      0,	// dsub_3_then_ssub_0
      0,	// dsub_3_then_ssub_1
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      0,	// dsub_4_then_ssub_0
      0,	// dsub_4_then_ssub_1
    },
    {	// QPR_VFP2
      39,	// dsub_0 -> QPR_VFP2
      39,	// dsub_1 -> QPR_VFP2
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      39,	// ssub_0 -> QPR_VFP2
      39,	// ssub_1 -> QPR_VFP2
      39,	// ssub_2 -> QPR_VFP2
      39,	// ssub_3 -> QPR_VFP2
      0,	// dsub_2_then_ssub_0
      0,	// dsub_2_then_ssub_1
      0,	// dsub_3_then_ssub_0
      0,	// dsub_3_then_ssub_1
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      0,	// dsub_4_then_ssub_0
      0,	// dsub_4_then_ssub_1
    },
    {	// DTripleSpc_with_dsub_0_in_DPR_8
      40,	// dsub_0 -> DTripleSpc_with_dsub_0_in_DPR_8
      0,	// dsub_1
      40,	// dsub_2 -> DTripleSpc_with_dsub_0_in_DPR_8
      0,	// dsub_3
      40,	// dsub_4 -> DTripleSpc_with_dsub_0_in_DPR_8
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      40,	// ssub_0 -> DTripleSpc_with_dsub_0_in_DPR_8
      40,	// ssub_1 -> DTripleSpc_with_dsub_0_in_DPR_8
      0,	// ssub_2
      0,	// ssub_3
      40,	// dsub_2_then_ssub_0 -> DTripleSpc_with_dsub_0_in_DPR_8
      40,	// dsub_2_then_ssub_1 -> DTripleSpc_with_dsub_0_in_DPR_8
      0,	// dsub_3_then_ssub_0
      0,	// dsub_3_then_ssub_1
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      40,	// dsub_4_then_ssub_0 -> DTripleSpc_with_dsub_0_in_DPR_8
      40,	// dsub_4_then_ssub_1 -> DTripleSpc_with_dsub_0_in_DPR_8
    },
    {	// DTriple_with_dsub_0_in_DPR_8
      41,	// dsub_0 -> DTriple_with_dsub_0_in_DPR_8
      41,	// dsub_1 -> DTriple_with_dsub_0_in_DPR_8
      41,	// dsub_2 -> DTriple_with_dsub_0_in_DPR_8
      0,	// dsub_3
      0,	// dsub_4
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      41,	// ssub_0 -> DTriple_with_dsub_0_in_DPR_8
      41,	// ssub_1 -> DTriple_with_dsub_0_in_DPR_8
      41,	// ssub_2 -> DTriple_with_dsub_0_in_DPR_8
      41,	// ssub_3 -> DTriple_with_dsub_0_in_DPR_8
      41,	// dsub_2_then_ssub_0 -> DTriple_with_dsub_0_in_DPR_8
      41,	// dsub_2_then_ssub_1 -> DTriple_with_dsub_0_in_DPR_8
      0,	// dsub_3_then_ssub_0
      0,	// dsub_3_then_ssub_1
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      0,	// dsub_4_then_ssub_0
      0,	// dsub_4_then_ssub_1
    },
    {	// DQuadSpc_with_dsub_0_in_DPR_8
      42,	// dsub_0 -> DQuadSpc_with_dsub_0_in_DPR_8
      0,	// dsub_1
      42,	// dsub_2 -> DQuadSpc_with_dsub_0_in_DPR_8
      0,	// dsub_3
      42,	// dsub_4 -> DQuadSpc_with_dsub_0_in_DPR_8
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      42,	// ssub_0 -> DQuadSpc_with_dsub_0_in_DPR_8
      42,	// ssub_1 -> DQuadSpc_with_dsub_0_in_DPR_8
      0,	// ssub_2
      0,	// ssub_3
      42,	// dsub_2_then_ssub_0 -> DQuadSpc_with_dsub_0_in_DPR_8
      42,	// dsub_2_then_ssub_1 -> DQuadSpc_with_dsub_0_in_DPR_8
      0,	// dsub_3_then_ssub_0
      0,	// dsub_3_then_ssub_1
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      42,	// dsub_4_then_ssub_0 -> DQuadSpc_with_dsub_0_in_DPR_8
      42,	// dsub_4_then_ssub_1 -> DQuadSpc_with_dsub_0_in_DPR_8
    },
    {	// DQuad_with_dsub_0_in_DPR_8
      43,	// dsub_0 -> DQuad_with_dsub_0_in_DPR_8
      43,	// dsub_1 -> DQuad_with_dsub_0_in_DPR_8
      43,	// dsub_2 -> DQuad_with_dsub_0_in_DPR_8
      43,	// dsub_3 -> DQuad_with_dsub_0_in_DPR_8
      0,	// dsub_4
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      66,	// qsub_0 -> QQPR_and_DQuad_with_dsub_0_in_DPR_8
      66,	// qsub_1 -> QQPR_and_DQuad_with_dsub_0_in_DPR_8
      0,	// qsub_2
      0,	// qsub_3
      43,	// ssub_0 -> DQuad_with_dsub_0_in_DPR_8
      43,	// ssub_1 -> DQuad_with_dsub_0_in_DPR_8
      43,	// ssub_2 -> DQuad_with_dsub_0_in_DPR_8
      43,	// ssub_3 -> DQuad_with_dsub_0_in_DPR_8
      43,	// dsub_2_then_ssub_0 -> DQuad_with_dsub_0_in_DPR_8
      43,	// dsub_2_then_ssub_1 -> DQuad_with_dsub_0_in_DPR_8
      43,	// dsub_3_then_ssub_0 -> DQuad_with_dsub_0_in_DPR_8
      43,	// dsub_3_then_ssub_1 -> DQuad_with_dsub_0_in_DPR_8
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      0,	// dsub_4_then_ssub_0
      0,	// dsub_4_then_ssub_1
    },
    {	// QQPR_with_ssub_0
      44,	// dsub_0 -> QQPR_with_ssub_0
      44,	// dsub_1 -> QQPR_with_ssub_0
      44,	// dsub_2 -> QQPR_with_ssub_0
      44,	// dsub_3 -> QQPR_with_ssub_0
      0,	// dsub_4
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      44,	// qsub_0 -> QQPR_with_ssub_0
      44,	// qsub_1 -> QQPR_with_ssub_0
      0,	// qsub_2
      0,	// qsub_3
      44,	// ssub_0 -> QQPR_with_ssub_0
      44,	// ssub_1 -> QQPR_with_ssub_0
      44,	// ssub_2 -> QQPR_with_ssub_0
      44,	// ssub_3 -> QQPR_with_ssub_0
      50,	// dsub_2_then_ssub_0 -> QQPR_with_dsub_2_then_ssub_0
      50,	// dsub_2_then_ssub_1 -> QQPR_with_dsub_2_then_ssub_0
      50,	// dsub_3_then_ssub_0 -> QQPR_with_dsub_2_then_ssub_0
      50,	// dsub_3_then_ssub_1 -> QQPR_with_dsub_2_then_ssub_0
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      0,	// dsub_4_then_ssub_0
      0,	// dsub_4_then_ssub_1
    },
    {	// QQQQPR_with_ssub_0
      45,	// dsub_0 -> QQQQPR_with_ssub_0
      45,	// dsub_1 -> QQQQPR_with_ssub_0
      45,	// dsub_2 -> QQQQPR_with_ssub_0
      45,	// dsub_3 -> QQQQPR_with_ssub_0
      45,	// dsub_4 -> QQQQPR_with_ssub_0
      45,	// dsub_5 -> QQQQPR_with_ssub_0
      45,	// dsub_6 -> QQQQPR_with_ssub_0
      45,	// dsub_7 -> QQQQPR_with_ssub_0
      45,	// qqsub_0 -> QQQQPR_with_ssub_0
      45,	// qqsub_1 -> QQQQPR_with_ssub_0
      45,	// qsub_0 -> QQQQPR_with_ssub_0
      45,	// qsub_1 -> QQQQPR_with_ssub_0
      45,	// qsub_2 -> QQQQPR_with_ssub_0
      45,	// qsub_3 -> QQQQPR_with_ssub_0
      45,	// ssub_0 -> QQQQPR_with_ssub_0
      45,	// ssub_1 -> QQQQPR_with_ssub_0
      45,	// ssub_2 -> QQQQPR_with_ssub_0
      45,	// ssub_3 -> QQQQPR_with_ssub_0
      51,	// dsub_2_then_ssub_0 -> QQQQPR_with_dsub_2_then_ssub_0
      51,	// dsub_2_then_ssub_1 -> QQQQPR_with_dsub_2_then_ssub_0
      51,	// dsub_3_then_ssub_0 -> QQQQPR_with_dsub_2_then_ssub_0
      51,	// dsub_3_then_ssub_1 -> QQQQPR_with_dsub_2_then_ssub_0
      61,	// dsub_7_then_ssub_0 -> QQQQPR_with_dsub_7_then_ssub_0
      61,	// dsub_7_then_ssub_1 -> QQQQPR_with_dsub_7_then_ssub_0
      61,	// dsub_6_then_ssub_0 -> QQQQPR_with_dsub_7_then_ssub_0
      61,	// dsub_6_then_ssub_1 -> QQQQPR_with_dsub_7_then_ssub_0
      59,	// dsub_5_then_ssub_0 -> QQQQPR_with_dsub_5_then_ssub_0
      59,	// dsub_5_then_ssub_1 -> QQQQPR_with_dsub_5_then_ssub_0
      59,	// dsub_4_then_ssub_0 -> QQQQPR_with_dsub_5_then_ssub_0
      59,	// dsub_4_then_ssub_1 -> QQQQPR_with_dsub_5_then_ssub_0
    },
    {	// GPRnopc_and_hGPR
      0,	// dsub_0
      0,	// dsub_1
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      0,	// ssub_0
      0,	// ssub_1
      0,	// ssub_2
      0,	// ssub_3
      0,	// dsub_2_then_ssub_0
      0,	// dsub_2_then_ssub_1
      0,	// dsub_3_then_ssub_0
      0,	// dsub_3_then_ssub_1
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      0,	// dsub_4_then_ssub_0
      0,	// dsub_4_then_ssub_1
    },
    {	// DPair_with_dsub_1_in_DPR_8
      47,	// dsub_0 -> DPair_with_dsub_1_in_DPR_8
      47,	// dsub_1 -> DPair_with_dsub_1_in_DPR_8
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      47,	// ssub_0 -> DPair_with_dsub_1_in_DPR_8
      47,	// ssub_1 -> DPair_with_dsub_1_in_DPR_8
      47,	// ssub_2 -> DPair_with_dsub_1_in_DPR_8
      47,	// ssub_3 -> DPair_with_dsub_1_in_DPR_8
      0,	// dsub_2_then_ssub_0
      0,	// dsub_2_then_ssub_1
      0,	// dsub_3_then_ssub_0
      0,	// dsub_3_then_ssub_1
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      0,	// dsub_4_then_ssub_0
      0,	// dsub_4_then_ssub_1
    },
    {	// DTriple_with_dsub_1_in_DPR_8
      48,	// dsub_0 -> DTriple_with_dsub_1_in_DPR_8
      48,	// dsub_1 -> DTriple_with_dsub_1_in_DPR_8
      48,	// dsub_2 -> DTriple_with_dsub_1_in_DPR_8
      0,	// dsub_3
      0,	// dsub_4
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      48,	// ssub_0 -> DTriple_with_dsub_1_in_DPR_8
      48,	// ssub_1 -> DTriple_with_dsub_1_in_DPR_8
      48,	// ssub_2 -> DTriple_with_dsub_1_in_DPR_8
      48,	// ssub_3 -> DTriple_with_dsub_1_in_DPR_8
      48,	// dsub_2_then_ssub_0 -> DTriple_with_dsub_1_in_DPR_8
      48,	// dsub_2_then_ssub_1 -> DTriple_with_dsub_1_in_DPR_8
      0,	// dsub_3_then_ssub_0
      0,	// dsub_3_then_ssub_1
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      0,	// dsub_4_then_ssub_0
      0,	// dsub_4_then_ssub_1
    },
    {	// DQuad_with_dsub_1_in_DPR_8
      49,	// dsub_0 -> DQuad_with_dsub_1_in_DPR_8
      49,	// dsub_1 -> DQuad_with_dsub_1_in_DPR_8
      49,	// dsub_2 -> DQuad_with_dsub_1_in_DPR_8
      49,	// dsub_3 -> DQuad_with_dsub_1_in_DPR_8
      0,	// dsub_4
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      66,	// qsub_0 -> QQPR_and_DQuad_with_dsub_0_in_DPR_8
      66,	// qsub_1 -> QQPR_and_DQuad_with_dsub_0_in_DPR_8
      0,	// qsub_2
      0,	// qsub_3
      49,	// ssub_0 -> DQuad_with_dsub_1_in_DPR_8
      49,	// ssub_1 -> DQuad_with_dsub_1_in_DPR_8
      49,	// ssub_2 -> DQuad_with_dsub_1_in_DPR_8
      49,	// ssub_3 -> DQuad_with_dsub_1_in_DPR_8
      49,	// dsub_2_then_ssub_0 -> DQuad_with_dsub_1_in_DPR_8
      49,	// dsub_2_then_ssub_1 -> DQuad_with_dsub_1_in_DPR_8
      49,	// dsub_3_then_ssub_0 -> DQuad_with_dsub_1_in_DPR_8
      49,	// dsub_3_then_ssub_1 -> DQuad_with_dsub_1_in_DPR_8
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      0,	// dsub_4_then_ssub_0
      0,	// dsub_4_then_ssub_1
    },
    {	// QQPR_with_dsub_2_then_ssub_0
      50,	// dsub_0 -> QQPR_with_dsub_2_then_ssub_0
      50,	// dsub_1 -> QQPR_with_dsub_2_then_ssub_0
      50,	// dsub_2 -> QQPR_with_dsub_2_then_ssub_0
      50,	// dsub_3 -> QQPR_with_dsub_2_then_ssub_0
      0,	// dsub_4
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      50,	// qsub_0 -> QQPR_with_dsub_2_then_ssub_0
      50,	// qsub_1 -> QQPR_with_dsub_2_then_ssub_0
      0,	// qsub_2
      0,	// qsub_3
      50,	// ssub_0 -> QQPR_with_dsub_2_then_ssub_0
      50,	// ssub_1 -> QQPR_with_dsub_2_then_ssub_0
      50,	// ssub_2 -> QQPR_with_dsub_2_then_ssub_0
      50,	// ssub_3 -> QQPR_with_dsub_2_then_ssub_0
      50,	// dsub_2_then_ssub_0 -> QQPR_with_dsub_2_then_ssub_0
      50,	// dsub_2_then_ssub_1 -> QQPR_with_dsub_2_then_ssub_0
      50,	// dsub_3_then_ssub_0 -> QQPR_with_dsub_2_then_ssub_0
      50,	// dsub_3_then_ssub_1 -> QQPR_with_dsub_2_then_ssub_0
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      0,	// dsub_4_then_ssub_0
      0,	// dsub_4_then_ssub_1
    },
    {	// QQQQPR_with_dsub_2_then_ssub_0
      51,	// dsub_0 -> QQQQPR_with_dsub_2_then_ssub_0
      51,	// dsub_1 -> QQQQPR_with_dsub_2_then_ssub_0
      51,	// dsub_2 -> QQQQPR_with_dsub_2_then_ssub_0
      51,	// dsub_3 -> QQQQPR_with_dsub_2_then_ssub_0
      51,	// dsub_4 -> QQQQPR_with_dsub_2_then_ssub_0
      51,	// dsub_5 -> QQQQPR_with_dsub_2_then_ssub_0
      51,	// dsub_6 -> QQQQPR_with_dsub_2_then_ssub_0
      51,	// dsub_7 -> QQQQPR_with_dsub_2_then_ssub_0
      51,	// qqsub_0 -> QQQQPR_with_dsub_2_then_ssub_0
      51,	// qqsub_1 -> QQQQPR_with_dsub_2_then_ssub_0
      51,	// qsub_0 -> QQQQPR_with_dsub_2_then_ssub_0
      51,	// qsub_1 -> QQQQPR_with_dsub_2_then_ssub_0
      51,	// qsub_2 -> QQQQPR_with_dsub_2_then_ssub_0
      51,	// qsub_3 -> QQQQPR_with_dsub_2_then_ssub_0
      51,	// ssub_0 -> QQQQPR_with_dsub_2_then_ssub_0
      51,	// ssub_1 -> QQQQPR_with_dsub_2_then_ssub_0
      51,	// ssub_2 -> QQQQPR_with_dsub_2_then_ssub_0
      51,	// ssub_3 -> QQQQPR_with_dsub_2_then_ssub_0
      51,	// dsub_2_then_ssub_0 -> QQQQPR_with_dsub_2_then_ssub_0
      51,	// dsub_2_then_ssub_1 -> QQQQPR_with_dsub_2_then_ssub_0
      51,	// dsub_3_then_ssub_0 -> QQQQPR_with_dsub_2_then_ssub_0
      51,	// dsub_3_then_ssub_1 -> QQQQPR_with_dsub_2_then_ssub_0
      61,	// dsub_7_then_ssub_0 -> QQQQPR_with_dsub_7_then_ssub_0
      61,	// dsub_7_then_ssub_1 -> QQQQPR_with_dsub_7_then_ssub_0
      61,	// dsub_6_then_ssub_0 -> QQQQPR_with_dsub_7_then_ssub_0
      61,	// dsub_6_then_ssub_1 -> QQQQPR_with_dsub_7_then_ssub_0
      59,	// dsub_5_then_ssub_0 -> QQQQPR_with_dsub_5_then_ssub_0
      59,	// dsub_5_then_ssub_1 -> QQQQPR_with_dsub_5_then_ssub_0
      59,	// dsub_4_then_ssub_0 -> QQQQPR_with_dsub_5_then_ssub_0
      59,	// dsub_4_then_ssub_1 -> QQQQPR_with_dsub_5_then_ssub_0
    },
    {	// hGPR_and_rGPR
      0,	// dsub_0
      0,	// dsub_1
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      0,	// ssub_0
      0,	// ssub_1
      0,	// ssub_2
      0,	// ssub_3
      0,	// dsub_2_then_ssub_0
      0,	// dsub_2_then_ssub_1
      0,	// dsub_3_then_ssub_0
      0,	// dsub_3_then_ssub_1
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      0,	// dsub_4_then_ssub_0
      0,	// dsub_4_then_ssub_1
    },
    {	// tcGPR
      0,	// dsub_0
      0,	// dsub_1
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      0,	// ssub_0
      0,	// ssub_1
      0,	// ssub_2
      0,	// ssub_3
      0,	// dsub_2_then_ssub_0
      0,	// dsub_2_then_ssub_1
      0,	// dsub_3_then_ssub_0
      0,	// dsub_3_then_ssub_1
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      0,	// dsub_4_then_ssub_0
      0,	// dsub_4_then_ssub_1
    },
    {	// DPairSpc_with_dsub_2_in_DPR_8
      54,	// dsub_0 -> DPairSpc_with_dsub_2_in_DPR_8
      0,	// dsub_1
      54,	// dsub_2 -> DPairSpc_with_dsub_2_in_DPR_8
      0,	// dsub_3
      0,	// dsub_4
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      54,	// ssub_0 -> DPairSpc_with_dsub_2_in_DPR_8
      54,	// ssub_1 -> DPairSpc_with_dsub_2_in_DPR_8
      0,	// ssub_2
      0,	// ssub_3
      54,	// dsub_2_then_ssub_0 -> DPairSpc_with_dsub_2_in_DPR_8
      54,	// dsub_2_then_ssub_1 -> DPairSpc_with_dsub_2_in_DPR_8
      0,	// dsub_3_then_ssub_0
      0,	// dsub_3_then_ssub_1
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      0,	// dsub_4_then_ssub_0
      0,	// dsub_4_then_ssub_1
    },
    {	// DTripleSpc_with_dsub_2_in_DPR_8
      55,	// dsub_0 -> DTripleSpc_with_dsub_2_in_DPR_8
      0,	// dsub_1
      55,	// dsub_2 -> DTripleSpc_with_dsub_2_in_DPR_8
      0,	// dsub_3
      55,	// dsub_4 -> DTripleSpc_with_dsub_2_in_DPR_8
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      55,	// ssub_0 -> DTripleSpc_with_dsub_2_in_DPR_8
      55,	// ssub_1 -> DTripleSpc_with_dsub_2_in_DPR_8
      0,	// ssub_2
      0,	// ssub_3
      55,	// dsub_2_then_ssub_0 -> DTripleSpc_with_dsub_2_in_DPR_8
      55,	// dsub_2_then_ssub_1 -> DTripleSpc_with_dsub_2_in_DPR_8
      0,	// dsub_3_then_ssub_0
      0,	// dsub_3_then_ssub_1
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      55,	// dsub_4_then_ssub_0 -> DTripleSpc_with_dsub_2_in_DPR_8
      55,	// dsub_4_then_ssub_1 -> DTripleSpc_with_dsub_2_in_DPR_8
    },
    {	// DTriple_with_dsub_2_in_DPR_8
      56,	// dsub_0 -> DTriple_with_dsub_2_in_DPR_8
      56,	// dsub_1 -> DTriple_with_dsub_2_in_DPR_8
      56,	// dsub_2 -> DTriple_with_dsub_2_in_DPR_8
      0,	// dsub_3
      0,	// dsub_4
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      56,	// ssub_0 -> DTriple_with_dsub_2_in_DPR_8
      56,	// ssub_1 -> DTriple_with_dsub_2_in_DPR_8
      56,	// ssub_2 -> DTriple_with_dsub_2_in_DPR_8
      56,	// ssub_3 -> DTriple_with_dsub_2_in_DPR_8
      56,	// dsub_2_then_ssub_0 -> DTriple_with_dsub_2_in_DPR_8
      56,	// dsub_2_then_ssub_1 -> DTriple_with_dsub_2_in_DPR_8
      0,	// dsub_3_then_ssub_0
      0,	// dsub_3_then_ssub_1
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      0,	// dsub_4_then_ssub_0
      0,	// dsub_4_then_ssub_1
    },
    {	// DQuadSpc_with_dsub_2_in_DPR_8
      57,	// dsub_0 -> DQuadSpc_with_dsub_2_in_DPR_8
      0,	// dsub_1
      57,	// dsub_2 -> DQuadSpc_with_dsub_2_in_DPR_8
      0,	// dsub_3
      57,	// dsub_4 -> DQuadSpc_with_dsub_2_in_DPR_8
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      57,	// ssub_0 -> DQuadSpc_with_dsub_2_in_DPR_8
      57,	// ssub_1 -> DQuadSpc_with_dsub_2_in_DPR_8
      0,	// ssub_2
      0,	// ssub_3
      57,	// dsub_2_then_ssub_0 -> DQuadSpc_with_dsub_2_in_DPR_8
      57,	// dsub_2_then_ssub_1 -> DQuadSpc_with_dsub_2_in_DPR_8
      0,	// dsub_3_then_ssub_0
      0,	// dsub_3_then_ssub_1
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      57,	// dsub_4_then_ssub_0 -> DQuadSpc_with_dsub_2_in_DPR_8
      57,	// dsub_4_then_ssub_1 -> DQuadSpc_with_dsub_2_in_DPR_8
    },
    {	// DQuad_with_dsub_2_in_DPR_8
      58,	// dsub_0 -> DQuad_with_dsub_2_in_DPR_8
      58,	// dsub_1 -> DQuad_with_dsub_2_in_DPR_8
      58,	// dsub_2 -> DQuad_with_dsub_2_in_DPR_8
      58,	// dsub_3 -> DQuad_with_dsub_2_in_DPR_8
      0,	// dsub_4
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      68,	// qsub_0 -> QQPR_and_DQuad_with_dsub_2_in_DPR_8
      68,	// qsub_1 -> QQPR_and_DQuad_with_dsub_2_in_DPR_8
      0,	// qsub_2
      0,	// qsub_3
      58,	// ssub_0 -> DQuad_with_dsub_2_in_DPR_8
      58,	// ssub_1 -> DQuad_with_dsub_2_in_DPR_8
      58,	// ssub_2 -> DQuad_with_dsub_2_in_DPR_8
      58,	// ssub_3 -> DQuad_with_dsub_2_in_DPR_8
      58,	// dsub_2_then_ssub_0 -> DQuad_with_dsub_2_in_DPR_8
      58,	// dsub_2_then_ssub_1 -> DQuad_with_dsub_2_in_DPR_8
      58,	// dsub_3_then_ssub_0 -> DQuad_with_dsub_2_in_DPR_8
      58,	// dsub_3_then_ssub_1 -> DQuad_with_dsub_2_in_DPR_8
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      0,	// dsub_4_then_ssub_0
      0,	// dsub_4_then_ssub_1
    },
    {	// QQQQPR_with_dsub_5_then_ssub_0
      59,	// dsub_0 -> QQQQPR_with_dsub_5_then_ssub_0
      59,	// dsub_1 -> QQQQPR_with_dsub_5_then_ssub_0
      59,	// dsub_2 -> QQQQPR_with_dsub_5_then_ssub_0
      59,	// dsub_3 -> QQQQPR_with_dsub_5_then_ssub_0
      59,	// dsub_4 -> QQQQPR_with_dsub_5_then_ssub_0
      59,	// dsub_5 -> QQQQPR_with_dsub_5_then_ssub_0
      59,	// dsub_6 -> QQQQPR_with_dsub_5_then_ssub_0
      59,	// dsub_7 -> QQQQPR_with_dsub_5_then_ssub_0
      59,	// qqsub_0 -> QQQQPR_with_dsub_5_then_ssub_0
      59,	// qqsub_1 -> QQQQPR_with_dsub_5_then_ssub_0
      59,	// qsub_0 -> QQQQPR_with_dsub_5_then_ssub_0
      59,	// qsub_1 -> QQQQPR_with_dsub_5_then_ssub_0
      59,	// qsub_2 -> QQQQPR_with_dsub_5_then_ssub_0
      59,	// qsub_3 -> QQQQPR_with_dsub_5_then_ssub_0
      59,	// ssub_0 -> QQQQPR_with_dsub_5_then_ssub_0
      59,	// ssub_1 -> QQQQPR_with_dsub_5_then_ssub_0
      59,	// ssub_2 -> QQQQPR_with_dsub_5_then_ssub_0
      59,	// ssub_3 -> QQQQPR_with_dsub_5_then_ssub_0
      59,	// dsub_2_then_ssub_0 -> QQQQPR_with_dsub_5_then_ssub_0
      59,	// dsub_2_then_ssub_1 -> QQQQPR_with_dsub_5_then_ssub_0
      59,	// dsub_3_then_ssub_0 -> QQQQPR_with_dsub_5_then_ssub_0
      59,	// dsub_3_then_ssub_1 -> QQQQPR_with_dsub_5_then_ssub_0
      61,	// dsub_7_then_ssub_0 -> QQQQPR_with_dsub_7_then_ssub_0
      61,	// dsub_7_then_ssub_1 -> QQQQPR_with_dsub_7_then_ssub_0
      61,	// dsub_6_then_ssub_0 -> QQQQPR_with_dsub_7_then_ssub_0
      61,	// dsub_6_then_ssub_1 -> QQQQPR_with_dsub_7_then_ssub_0
      59,	// dsub_5_then_ssub_0 -> QQQQPR_with_dsub_5_then_ssub_0
      59,	// dsub_5_then_ssub_1 -> QQQQPR_with_dsub_5_then_ssub_0
      59,	// dsub_4_then_ssub_0 -> QQQQPR_with_dsub_5_then_ssub_0
      59,	// dsub_4_then_ssub_1 -> QQQQPR_with_dsub_5_then_ssub_0
    },
    {	// DQuad_with_dsub_3_in_DPR_8
      60,	// dsub_0 -> DQuad_with_dsub_3_in_DPR_8
      60,	// dsub_1 -> DQuad_with_dsub_3_in_DPR_8
      60,	// dsub_2 -> DQuad_with_dsub_3_in_DPR_8
      60,	// dsub_3 -> DQuad_with_dsub_3_in_DPR_8
      0,	// dsub_4
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      68,	// qsub_0 -> QQPR_and_DQuad_with_dsub_2_in_DPR_8
      68,	// qsub_1 -> QQPR_and_DQuad_with_dsub_2_in_DPR_8
      0,	// qsub_2
      0,	// qsub_3
      60,	// ssub_0 -> DQuad_with_dsub_3_in_DPR_8
      60,	// ssub_1 -> DQuad_with_dsub_3_in_DPR_8
      60,	// ssub_2 -> DQuad_with_dsub_3_in_DPR_8
      60,	// ssub_3 -> DQuad_with_dsub_3_in_DPR_8
      60,	// dsub_2_then_ssub_0 -> DQuad_with_dsub_3_in_DPR_8
      60,	// dsub_2_then_ssub_1 -> DQuad_with_dsub_3_in_DPR_8
      60,	// dsub_3_then_ssub_0 -> DQuad_with_dsub_3_in_DPR_8
      60,	// dsub_3_then_ssub_1 -> DQuad_with_dsub_3_in_DPR_8
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      0,	// dsub_4_then_ssub_0
      0,	// dsub_4_then_ssub_1
    },
    {	// QQQQPR_with_dsub_7_then_ssub_0
      61,	// dsub_0 -> QQQQPR_with_dsub_7_then_ssub_0
      61,	// dsub_1 -> QQQQPR_with_dsub_7_then_ssub_0
      61,	// dsub_2 -> QQQQPR_with_dsub_7_then_ssub_0
      61,	// dsub_3 -> QQQQPR_with_dsub_7_then_ssub_0
      61,	// dsub_4 -> QQQQPR_with_dsub_7_then_ssub_0
      61,	// dsub_5 -> QQQQPR_with_dsub_7_then_ssub_0
      61,	// dsub_6 -> QQQQPR_with_dsub_7_then_ssub_0
      61,	// dsub_7 -> QQQQPR_with_dsub_7_then_ssub_0
      61,	// qqsub_0 -> QQQQPR_with_dsub_7_then_ssub_0
      61,	// qqsub_1 -> QQQQPR_with_dsub_7_then_ssub_0
      61,	// qsub_0 -> QQQQPR_with_dsub_7_then_ssub_0
      61,	// qsub_1 -> QQQQPR_with_dsub_7_then_ssub_0
      61,	// qsub_2 -> QQQQPR_with_dsub_7_then_ssub_0
      61,	// qsub_3 -> QQQQPR_with_dsub_7_then_ssub_0
      61,	// ssub_0 -> QQQQPR_with_dsub_7_then_ssub_0
      61,	// ssub_1 -> QQQQPR_with_dsub_7_then_ssub_0
      61,	// ssub_2 -> QQQQPR_with_dsub_7_then_ssub_0
      61,	// ssub_3 -> QQQQPR_with_dsub_7_then_ssub_0
      61,	// dsub_2_then_ssub_0 -> QQQQPR_with_dsub_7_then_ssub_0
      61,	// dsub_2_then_ssub_1 -> QQQQPR_with_dsub_7_then_ssub_0
      61,	// dsub_3_then_ssub_0 -> QQQQPR_with_dsub_7_then_ssub_0
      61,	// dsub_3_then_ssub_1 -> QQQQPR_with_dsub_7_then_ssub_0
      61,	// dsub_7_then_ssub_0 -> QQQQPR_with_dsub_7_then_ssub_0
      61,	// dsub_7_then_ssub_1 -> QQQQPR_with_dsub_7_then_ssub_0
      61,	// dsub_6_then_ssub_0 -> QQQQPR_with_dsub_7_then_ssub_0
      61,	// dsub_6_then_ssub_1 -> QQQQPR_with_dsub_7_then_ssub_0
      61,	// dsub_5_then_ssub_0 -> QQQQPR_with_dsub_7_then_ssub_0
      61,	// dsub_5_then_ssub_1 -> QQQQPR_with_dsub_7_then_ssub_0
      61,	// dsub_4_then_ssub_0 -> QQQQPR_with_dsub_7_then_ssub_0
      61,	// dsub_4_then_ssub_1 -> QQQQPR_with_dsub_7_then_ssub_0
    },
    {	// tGPR_and_tcGPR
      0,	// dsub_0
      0,	// dsub_1
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      0,	// ssub_0
      0,	// ssub_1
      0,	// ssub_2
      0,	// ssub_3
      0,	// dsub_2_then_ssub_0
      0,	// dsub_2_then_ssub_1
      0,	// dsub_3_then_ssub_0
      0,	// dsub_3_then_ssub_1
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      0,	// dsub_4_then_ssub_0
      0,	// dsub_4_then_ssub_1
    },
    {	// QPR_8
      63,	// dsub_0 -> QPR_8
      63,	// dsub_1 -> QPR_8
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      63,	// ssub_0 -> QPR_8
      63,	// ssub_1 -> QPR_8
      63,	// ssub_2 -> QPR_8
      63,	// ssub_3 -> QPR_8
      0,	// dsub_2_then_ssub_0
      0,	// dsub_2_then_ssub_1
      0,	// dsub_3_then_ssub_0
      0,	// dsub_3_then_ssub_1
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      0,	// dsub_4_then_ssub_0
      0,	// dsub_4_then_ssub_1
    },
    {	// DTripleSpc_with_dsub_4_in_DPR_8
      64,	// dsub_0 -> DTripleSpc_with_dsub_4_in_DPR_8
      0,	// dsub_1
      64,	// dsub_2 -> DTripleSpc_with_dsub_4_in_DPR_8
      0,	// dsub_3
      64,	// dsub_4 -> DTripleSpc_with_dsub_4_in_DPR_8
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      64,	// ssub_0 -> DTripleSpc_with_dsub_4_in_DPR_8
      64,	// ssub_1 -> DTripleSpc_with_dsub_4_in_DPR_8
      0,	// ssub_2
      0,	// ssub_3
      64,	// dsub_2_then_ssub_0 -> DTripleSpc_with_dsub_4_in_DPR_8
      64,	// dsub_2_then_ssub_1 -> DTripleSpc_with_dsub_4_in_DPR_8
      0,	// dsub_3_then_ssub_0
      0,	// dsub_3_then_ssub_1
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      64,	// dsub_4_then_ssub_0 -> DTripleSpc_with_dsub_4_in_DPR_8
      64,	// dsub_4_then_ssub_1 -> DTripleSpc_with_dsub_4_in_DPR_8
    },
    {	// DQuadSpc_with_dsub_4_in_DPR_8
      65,	// dsub_0 -> DQuadSpc_with_dsub_4_in_DPR_8
      0,	// dsub_1
      65,	// dsub_2 -> DQuadSpc_with_dsub_4_in_DPR_8
      0,	// dsub_3
      65,	// dsub_4 -> DQuadSpc_with_dsub_4_in_DPR_8
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      65,	// ssub_0 -> DQuadSpc_with_dsub_4_in_DPR_8
      65,	// ssub_1 -> DQuadSpc_with_dsub_4_in_DPR_8
      0,	// ssub_2
      0,	// ssub_3
      65,	// dsub_2_then_ssub_0 -> DQuadSpc_with_dsub_4_in_DPR_8
      65,	// dsub_2_then_ssub_1 -> DQuadSpc_with_dsub_4_in_DPR_8
      0,	// dsub_3_then_ssub_0
      0,	// dsub_3_then_ssub_1
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      65,	// dsub_4_then_ssub_0 -> DQuadSpc_with_dsub_4_in_DPR_8
      65,	// dsub_4_then_ssub_1 -> DQuadSpc_with_dsub_4_in_DPR_8
    },
    {	// QQPR_and_DQuad_with_dsub_0_in_DPR_8
      66,	// dsub_0 -> QQPR_and_DQuad_with_dsub_0_in_DPR_8
      66,	// dsub_1 -> QQPR_and_DQuad_with_dsub_0_in_DPR_8
      66,	// dsub_2 -> QQPR_and_DQuad_with_dsub_0_in_DPR_8
      66,	// dsub_3 -> QQPR_and_DQuad_with_dsub_0_in_DPR_8
      0,	// dsub_4
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      66,	// qsub_0 -> QQPR_and_DQuad_with_dsub_0_in_DPR_8
      66,	// qsub_1 -> QQPR_and_DQuad_with_dsub_0_in_DPR_8
      0,	// qsub_2
      0,	// qsub_3
      66,	// ssub_0 -> QQPR_and_DQuad_with_dsub_0_in_DPR_8
      66,	// ssub_1 -> QQPR_and_DQuad_with_dsub_0_in_DPR_8
      66,	// ssub_2 -> QQPR_and_DQuad_with_dsub_0_in_DPR_8
      66,	// ssub_3 -> QQPR_and_DQuad_with_dsub_0_in_DPR_8
      66,	// dsub_2_then_ssub_0 -> QQPR_and_DQuad_with_dsub_0_in_DPR_8
      66,	// dsub_2_then_ssub_1 -> QQPR_and_DQuad_with_dsub_0_in_DPR_8
      66,	// dsub_3_then_ssub_0 -> QQPR_and_DQuad_with_dsub_0_in_DPR_8
      66,	// dsub_3_then_ssub_1 -> QQPR_and_DQuad_with_dsub_0_in_DPR_8
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      0,	// dsub_4_then_ssub_0
      0,	// dsub_4_then_ssub_1
    },
    {	// QQQQPR_with_dsub_0_in_DPR_8
      67,	// dsub_0 -> QQQQPR_with_dsub_0_in_DPR_8
      67,	// dsub_1 -> QQQQPR_with_dsub_0_in_DPR_8
      67,	// dsub_2 -> QQQQPR_with_dsub_0_in_DPR_8
      67,	// dsub_3 -> QQQQPR_with_dsub_0_in_DPR_8
      67,	// dsub_4 -> QQQQPR_with_dsub_0_in_DPR_8
      67,	// dsub_5 -> QQQQPR_with_dsub_0_in_DPR_8
      67,	// dsub_6 -> QQQQPR_with_dsub_0_in_DPR_8
      67,	// dsub_7 -> QQQQPR_with_dsub_0_in_DPR_8
      67,	// qqsub_0 -> QQQQPR_with_dsub_0_in_DPR_8
      67,	// qqsub_1 -> QQQQPR_with_dsub_0_in_DPR_8
      67,	// qsub_0 -> QQQQPR_with_dsub_0_in_DPR_8
      67,	// qsub_1 -> QQQQPR_with_dsub_0_in_DPR_8
      67,	// qsub_2 -> QQQQPR_with_dsub_0_in_DPR_8
      67,	// qsub_3 -> QQQQPR_with_dsub_0_in_DPR_8
      67,	// ssub_0 -> QQQQPR_with_dsub_0_in_DPR_8
      67,	// ssub_1 -> QQQQPR_with_dsub_0_in_DPR_8
      67,	// ssub_2 -> QQQQPR_with_dsub_0_in_DPR_8
      67,	// ssub_3 -> QQQQPR_with_dsub_0_in_DPR_8
      67,	// dsub_2_then_ssub_0 -> QQQQPR_with_dsub_0_in_DPR_8
      67,	// dsub_2_then_ssub_1 -> QQQQPR_with_dsub_0_in_DPR_8
      67,	// dsub_3_then_ssub_0 -> QQQQPR_with_dsub_0_in_DPR_8
      67,	// dsub_3_then_ssub_1 -> QQQQPR_with_dsub_0_in_DPR_8
      67,	// dsub_7_then_ssub_0 -> QQQQPR_with_dsub_0_in_DPR_8
      67,	// dsub_7_then_ssub_1 -> QQQQPR_with_dsub_0_in_DPR_8
      67,	// dsub_6_then_ssub_0 -> QQQQPR_with_dsub_0_in_DPR_8
      67,	// dsub_6_then_ssub_1 -> QQQQPR_with_dsub_0_in_DPR_8
      67,	// dsub_5_then_ssub_0 -> QQQQPR_with_dsub_0_in_DPR_8
      67,	// dsub_5_then_ssub_1 -> QQQQPR_with_dsub_0_in_DPR_8
      67,	// dsub_4_then_ssub_0 -> QQQQPR_with_dsub_0_in_DPR_8
      67,	// dsub_4_then_ssub_1 -> QQQQPR_with_dsub_0_in_DPR_8
    },
    {	// QQPR_and_DQuad_with_dsub_2_in_DPR_8
      68,	// dsub_0 -> QQPR_and_DQuad_with_dsub_2_in_DPR_8
      68,	// dsub_1 -> QQPR_and_DQuad_with_dsub_2_in_DPR_8
      68,	// dsub_2 -> QQPR_and_DQuad_with_dsub_2_in_DPR_8
      68,	// dsub_3 -> QQPR_and_DQuad_with_dsub_2_in_DPR_8
      0,	// dsub_4
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      68,	// qsub_0 -> QQPR_and_DQuad_with_dsub_2_in_DPR_8
      68,	// qsub_1 -> QQPR_and_DQuad_with_dsub_2_in_DPR_8
      0,	// qsub_2
      0,	// qsub_3
      68,	// ssub_0 -> QQPR_and_DQuad_with_dsub_2_in_DPR_8
      68,	// ssub_1 -> QQPR_and_DQuad_with_dsub_2_in_DPR_8
      68,	// ssub_2 -> QQPR_and_DQuad_with_dsub_2_in_DPR_8
      68,	// ssub_3 -> QQPR_and_DQuad_with_dsub_2_in_DPR_8
      68,	// dsub_2_then_ssub_0 -> QQPR_and_DQuad_with_dsub_2_in_DPR_8
      68,	// dsub_2_then_ssub_1 -> QQPR_and_DQuad_with_dsub_2_in_DPR_8
      68,	// dsub_3_then_ssub_0 -> QQPR_and_DQuad_with_dsub_2_in_DPR_8
      68,	// dsub_3_then_ssub_1 -> QQPR_and_DQuad_with_dsub_2_in_DPR_8
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      0,	// dsub_4_then_ssub_0
      0,	// dsub_4_then_ssub_1
    },
    {	// QQQQPR_with_dsub_2_in_DPR_8
      69,	// dsub_0 -> QQQQPR_with_dsub_2_in_DPR_8
      69,	// dsub_1 -> QQQQPR_with_dsub_2_in_DPR_8
      69,	// dsub_2 -> QQQQPR_with_dsub_2_in_DPR_8
      69,	// dsub_3 -> QQQQPR_with_dsub_2_in_DPR_8
      69,	// dsub_4 -> QQQQPR_with_dsub_2_in_DPR_8
      69,	// dsub_5 -> QQQQPR_with_dsub_2_in_DPR_8
      69,	// dsub_6 -> QQQQPR_with_dsub_2_in_DPR_8
      69,	// dsub_7 -> QQQQPR_with_dsub_2_in_DPR_8
      69,	// qqsub_0 -> QQQQPR_with_dsub_2_in_DPR_8
      69,	// qqsub_1 -> QQQQPR_with_dsub_2_in_DPR_8
      69,	// qsub_0 -> QQQQPR_with_dsub_2_in_DPR_8
      69,	// qsub_1 -> QQQQPR_with_dsub_2_in_DPR_8
      69,	// qsub_2 -> QQQQPR_with_dsub_2_in_DPR_8
      69,	// qsub_3 -> QQQQPR_with_dsub_2_in_DPR_8
      69,	// ssub_0 -> QQQQPR_with_dsub_2_in_DPR_8
      69,	// ssub_1 -> QQQQPR_with_dsub_2_in_DPR_8
      69,	// ssub_2 -> QQQQPR_with_dsub_2_in_DPR_8
      69,	// ssub_3 -> QQQQPR_with_dsub_2_in_DPR_8
      69,	// dsub_2_then_ssub_0 -> QQQQPR_with_dsub_2_in_DPR_8
      69,	// dsub_2_then_ssub_1 -> QQQQPR_with_dsub_2_in_DPR_8
      69,	// dsub_3_then_ssub_0 -> QQQQPR_with_dsub_2_in_DPR_8
      69,	// dsub_3_then_ssub_1 -> QQQQPR_with_dsub_2_in_DPR_8
      69,	// dsub_7_then_ssub_0 -> QQQQPR_with_dsub_2_in_DPR_8
      69,	// dsub_7_then_ssub_1 -> QQQQPR_with_dsub_2_in_DPR_8
      69,	// dsub_6_then_ssub_0 -> QQQQPR_with_dsub_2_in_DPR_8
      69,	// dsub_6_then_ssub_1 -> QQQQPR_with_dsub_2_in_DPR_8
      69,	// dsub_5_then_ssub_0 -> QQQQPR_with_dsub_2_in_DPR_8
      69,	// dsub_5_then_ssub_1 -> QQQQPR_with_dsub_2_in_DPR_8
      69,	// dsub_4_then_ssub_0 -> QQQQPR_with_dsub_2_in_DPR_8
      69,	// dsub_4_then_ssub_1 -> QQQQPR_with_dsub_2_in_DPR_8
    },
    {	// hGPR_and_tcGPR
      0,	// dsub_0
      0,	// dsub_1
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      0,	// ssub_0
      0,	// ssub_1
      0,	// ssub_2
      0,	// ssub_3
      0,	// dsub_2_then_ssub_0
      0,	// dsub_2_then_ssub_1
      0,	// dsub_3_then_ssub_0
      0,	// dsub_3_then_ssub_1
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      0,	// dsub_4_then_ssub_0
      0,	// dsub_4_then_ssub_1
    },
    {	// QQQQPR_with_dsub_4_in_DPR_8
      71,	// dsub_0 -> QQQQPR_with_dsub_4_in_DPR_8
      71,	// dsub_1 -> QQQQPR_with_dsub_4_in_DPR_8
      71,	// dsub_2 -> QQQQPR_with_dsub_4_in_DPR_8
      71,	// dsub_3 -> QQQQPR_with_dsub_4_in_DPR_8
      71,	// dsub_4 -> QQQQPR_with_dsub_4_in_DPR_8
      71,	// dsub_5 -> QQQQPR_with_dsub_4_in_DPR_8
      71,	// dsub_6 -> QQQQPR_with_dsub_4_in_DPR_8
      71,	// dsub_7 -> QQQQPR_with_dsub_4_in_DPR_8
      71,	// qqsub_0 -> QQQQPR_with_dsub_4_in_DPR_8
      71,	// qqsub_1 -> QQQQPR_with_dsub_4_in_DPR_8
      71,	// qsub_0 -> QQQQPR_with_dsub_4_in_DPR_8
      71,	// qsub_1 -> QQQQPR_with_dsub_4_in_DPR_8
      71,	// qsub_2 -> QQQQPR_with_dsub_4_in_DPR_8
      71,	// qsub_3 -> QQQQPR_with_dsub_4_in_DPR_8
      71,	// ssub_0 -> QQQQPR_with_dsub_4_in_DPR_8
      71,	// ssub_1 -> QQQQPR_with_dsub_4_in_DPR_8
      71,	// ssub_2 -> QQQQPR_with_dsub_4_in_DPR_8
      71,	// ssub_3 -> QQQQPR_with_dsub_4_in_DPR_8
      71,	// dsub_2_then_ssub_0 -> QQQQPR_with_dsub_4_in_DPR_8
      71,	// dsub_2_then_ssub_1 -> QQQQPR_with_dsub_4_in_DPR_8
      71,	// dsub_3_then_ssub_0 -> QQQQPR_with_dsub_4_in_DPR_8
      71,	// dsub_3_then_ssub_1 -> QQQQPR_with_dsub_4_in_DPR_8
      71,	// dsub_7_then_ssub_0 -> QQQQPR_with_dsub_4_in_DPR_8
      71,	// dsub_7_then_ssub_1 -> QQQQPR_with_dsub_4_in_DPR_8
      71,	// dsub_6_then_ssub_0 -> QQQQPR_with_dsub_4_in_DPR_8
      71,	// dsub_6_then_ssub_1 -> QQQQPR_with_dsub_4_in_DPR_8
      71,	// dsub_5_then_ssub_0 -> QQQQPR_with_dsub_4_in_DPR_8
      71,	// dsub_5_then_ssub_1 -> QQQQPR_with_dsub_4_in_DPR_8
      71,	// dsub_4_then_ssub_0 -> QQQQPR_with_dsub_4_in_DPR_8
      71,	// dsub_4_then_ssub_1 -> QQQQPR_with_dsub_4_in_DPR_8
    },
    {	// CCR
      0,	// dsub_0
      0,	// dsub_1
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      0,	// ssub_0
      0,	// ssub_1
      0,	// ssub_2
      0,	// ssub_3
      0,	// dsub_2_then_ssub_0
      0,	// dsub_2_then_ssub_1
      0,	// dsub_3_then_ssub_0
      0,	// dsub_3_then_ssub_1
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      0,	// dsub_4_then_ssub_0
      0,	// dsub_4_then_ssub_1
    },
    {	// GPRsp
      0,	// dsub_0
      0,	// dsub_1
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// dsub_5
      0,	// dsub_6
      0,	// dsub_7
      0,	// qqsub_0
      0,	// qqsub_1
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      0,	// ssub_0
      0,	// ssub_1
      0,	// ssub_2
      0,	// ssub_3
      0,	// dsub_2_then_ssub_0
      0,	// dsub_2_then_ssub_1
      0,	// dsub_3_then_ssub_0
      0,	// dsub_3_then_ssub_1
      0,	// dsub_7_then_ssub_0
      0,	// dsub_7_then_ssub_1
      0,	// dsub_6_then_ssub_0
      0,	// dsub_6_then_ssub_1
      0,	// dsub_5_then_ssub_0
      0,	// dsub_5_then_ssub_1
      0,	// dsub_4_then_ssub_0
      0,	// dsub_4_then_ssub_1
    },
    {	// QQQQPR_with_dsub_6_in_DPR_8
      74,	// dsub_0 -> QQQQPR_with_dsub_6_in_DPR_8
      74,	// dsub_1 -> QQQQPR_with_dsub_6_in_DPR_8
      74,	// dsub_2 -> QQQQPR_with_dsub_6_in_DPR_8
      74,	// dsub_3 -> QQQQPR_with_dsub_6_in_DPR_8
      74,	// dsub_4 -> QQQQPR_with_dsub_6_in_DPR_8
      74,	// dsub_5 -> QQQQPR_with_dsub_6_in_DPR_8
      74,	// dsub_6 -> QQQQPR_with_dsub_6_in_DPR_8
      74,	// dsub_7 -> QQQQPR_with_dsub_6_in_DPR_8
      74,	// qqsub_0 -> QQQQPR_with_dsub_6_in_DPR_8
      74,	// qqsub_1 -> QQQQPR_with_dsub_6_in_DPR_8
      74,	// qsub_0 -> QQQQPR_with_dsub_6_in_DPR_8
      74,	// qsub_1 -> QQQQPR_with_dsub_6_in_DPR_8
      74,	// qsub_2 -> QQQQPR_with_dsub_6_in_DPR_8
      74,	// qsub_3 -> QQQQPR_with_dsub_6_in_DPR_8
      74,	// ssub_0 -> QQQQPR_with_dsub_6_in_DPR_8
      74,	// ssub_1 -> QQQQPR_with_dsub_6_in_DPR_8
      74,	// ssub_2 -> QQQQPR_with_dsub_6_in_DPR_8
      74,	// ssub_3 -> QQQQPR_with_dsub_6_in_DPR_8
      74,	// dsub_2_then_ssub_0 -> QQQQPR_with_dsub_6_in_DPR_8
      74,	// dsub_2_then_ssub_1 -> QQQQPR_with_dsub_6_in_DPR_8
      74,	// dsub_3_then_ssub_0 -> QQQQPR_with_dsub_6_in_DPR_8
      74,	// dsub_3_then_ssub_1 -> QQQQPR_with_dsub_6_in_DPR_8
      74,	// dsub_7_then_ssub_0 -> QQQQPR_with_dsub_6_in_DPR_8
      74,	// dsub_7_then_ssub_1 -> QQQQPR_with_dsub_6_in_DPR_8
      74,	// dsub_6_then_ssub_0 -> QQQQPR_with_dsub_6_in_DPR_8
      74,	// dsub_6_then_ssub_1 -> QQQQPR_with_dsub_6_in_DPR_8
      74,	// dsub_5_then_ssub_0 -> QQQQPR_with_dsub_6_in_DPR_8
      74,	// dsub_5_then_ssub_1 -> QQQQPR_with_dsub_6_in_DPR_8
      74,	// dsub_4_then_ssub_0 -> QQQQPR_with_dsub_6_in_DPR_8
      74,	// dsub_4_then_ssub_1 -> QQQQPR_with_dsub_6_in_DPR_8
    },
  };
  assert(RC && "Missing regclass");
  if (!Idx) return RC;
  --Idx;
  assert(Idx < 30 && "Bad subreg");
  unsigned TV = Table[RC->getID()][Idx];
  return TV ? getRegClass(TV - 1) : 0;
}

const TargetRegisterClass *ARMGenRegisterInfo::getMatchingSuperRegClass(const TargetRegisterClass *A, const TargetRegisterClass *B, unsigned Idx) const {
  static const uint32_t Table[74][30][3] = {
    {	// SPR
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0xbf3bdc00, 0xdfe7dff9, 0x0000025f, },	// ssub_0
      { 0xbf3bdc00, 0xdfe7dff9, 0x0000025f, },	// ssub_1
      { 0x34380000, 0x5e87dd60, 0x0000025e, },	// ssub_2
      { 0x34380000, 0x5e87dd60, 0x0000025e, },	// ssub_3
      { 0xbf000000, 0x9fe78791, 0x0000025f, },	// dsub_2_then_ssub_0
      { 0xbf000000, 0x9fe78791, 0x0000025f, },	// dsub_2_then_ssub_1
      { 0x20000000, 0x1e070400, 0x0000025e, },	// dsub_3_then_ssub_0
      { 0x20000000, 0x1e070400, 0x0000025e, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x10000000, 0x00000254, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x10000000, 0x00000254, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x10000000, 0x00000254, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x10000000, 0x00000254, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x14000000, 0x00000254, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x14000000, 0x00000254, },	// dsub_5_then_ssub_1
      { 0x80000000, 0x95400281, 0x00000255, },	// dsub_4_then_ssub_0
      { 0x80000000, 0x95400281, 0x00000255, },	// dsub_4_then_ssub_1
    },
    {	// DPR
      { 0xff7bf8fc, 0xdfe7dff1, 0x0000025f, },	// dsub_0
      { 0x747ab034, 0x5e87dd60, 0x0000025e, },	// dsub_1
      { 0xff73c8f8, 0x9fe79f91, 0x0000025f, },	// dsub_2
      { 0x70620020, 0x1e071c00, 0x0000025e, },	// dsub_3
      { 0xca0140c0, 0x95441281, 0x00000255, },	// dsub_4
      { 0x40000000, 0x14041000, 0x00000254, },	// dsub_5
      { 0x40000000, 0x14041000, 0x00000254, },	// dsub_6
      { 0x40000000, 0x14041000, 0x00000254, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// DPair
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x40400000, 0x14061800, 0x0000025e, },	// qsub_0
      { 0x40400000, 0x14061800, 0x0000025e, },	// qsub_1
      { 0x40000000, 0x14041000, 0x00000254, },	// qsub_2
      { 0x40000000, 0x14041000, 0x00000254, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// DPairSpc
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// DTriple
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// DQuad
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x40000000, 0x14041000, 0x00000254, },	// qqsub_0
      { 0x40000000, 0x14041000, 0x00000254, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// DTripleSpc
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// DQuadSpc
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// GPR
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// SPR_8
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0xcbe1c7b8, 0x0000025f, },	// ssub_0
      { 0x00000000, 0xcbe1c7b8, 0x0000025f, },	// ssub_1
      { 0x00000000, 0x4a81c000, 0x0000025e, },	// ssub_2
      { 0x00000000, 0x4a81c000, 0x0000025e, },	// ssub_3
      { 0x00000000, 0x8be00000, 0x00000259, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x8be00000, 0x00000259, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x08000000, 0x00000258, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x08000000, 0x00000258, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000200, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000200, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000200, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000200, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000240, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000240, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x80000000, 0x00000241, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x80000000, 0x00000241, },	// dsub_4_then_ssub_1
    },
    {	// DPR_VFP2
      { 0xbf3bd800, 0xdfe7dff1, 0x0000025f, },	// dsub_0
      { 0x34380000, 0x5e87dd60, 0x0000025e, },	// dsub_1
      { 0xbf000000, 0x9fe78791, 0x0000025f, },	// dsub_2
      { 0x20000000, 0x1e070400, 0x0000025e, },	// dsub_3
      { 0x80000000, 0x95400281, 0x00000255, },	// dsub_4
      { 0x00000000, 0x14000000, 0x00000254, },	// dsub_5
      { 0x00000000, 0x10000000, 0x00000254, },	// dsub_6
      { 0x00000000, 0x10000000, 0x00000254, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// DPairSpc_with_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// DPair_with_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x00000000, 0x14061800, 0x0000025e, },	// qsub_0
      { 0x00000000, 0x14060000, 0x0000025e, },	// qsub_1
      { 0x00000000, 0x14000000, 0x00000254, },	// qsub_2
      { 0x00000000, 0x10000000, 0x00000254, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// QPR
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x40400000, 0x14061800, 0x0000025e, },	// qsub_0
      { 0x40400000, 0x14061800, 0x0000025e, },	// qsub_1
      { 0x40000000, 0x14041000, 0x00000254, },	// qsub_2
      { 0x40000000, 0x14041000, 0x00000254, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// DTripleSpc_with_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// DTriple_with_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// DQuadSpc_with_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// DQuad_with_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x14041000, 0x00000254, },	// qqsub_0
      { 0x00000000, 0x14000000, 0x00000254, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// GPRnopc
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// DPair_with_ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x00000000, 0x14061800, 0x0000025e, },	// qsub_0
      { 0x00000000, 0x14060000, 0x0000025e, },	// qsub_1
      { 0x00000000, 0x14000000, 0x00000254, },	// qsub_2
      { 0x00000000, 0x10000000, 0x00000254, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// DTriple_with_ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// DQuad_with_ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x14041000, 0x00000254, },	// qqsub_0
      { 0x00000000, 0x14000000, 0x00000254, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// QQPR
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x40000000, 0x14041000, 0x00000254, },	// qqsub_0
      { 0x40000000, 0x14041000, 0x00000254, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// rGPR
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// DPairSpc_with_dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// DTripleSpc_with_dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// DTriple_with_dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// DQuadSpc_with_dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// DQuad_with_dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x14040000, 0x00000254, },	// qqsub_0
      { 0x00000000, 0x10000000, 0x00000254, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// DQuad_with_dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x14040000, 0x00000254, },	// qqsub_0
      { 0x00000000, 0x10000000, 0x00000254, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// QQQQPR
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// DTripleSpc_with_dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// DQuadSpc_with_dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// hGPR
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// tGPR
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// DPR_8
      { 0x00000000, 0xcbe1c7b0, 0x0000025f, },	// dsub_0
      { 0x00000000, 0x4a81c000, 0x0000025e, },	// dsub_1
      { 0x00000000, 0x8be00000, 0x00000259, },	// dsub_2
      { 0x00000000, 0x08000000, 0x00000258, },	// dsub_3
      { 0x00000000, 0x80000000, 0x00000241, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000240, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000200, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000200, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// DPairSpc_with_dsub_0_in_DPR_8
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// DPair_with_dsub_0_in_DPR_8
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x0000025e, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000258, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000240, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000200, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// QPR_VFP2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x00000000, 0x14061800, 0x0000025e, },	// qsub_0
      { 0x00000000, 0x14060000, 0x0000025e, },	// qsub_1
      { 0x00000000, 0x14000000, 0x00000254, },	// qsub_2
      { 0x00000000, 0x10000000, 0x00000254, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// DTripleSpc_with_dsub_0_in_DPR_8
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// DTriple_with_dsub_0_in_DPR_8
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// DQuadSpc_with_dsub_0_in_DPR_8
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// DQuad_with_dsub_0_in_DPR_8
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000254, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000240, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// QQPR_with_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x14041000, 0x00000254, },	// qqsub_0
      { 0x00000000, 0x14000000, 0x00000254, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// QQQQPR_with_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// GPRnopc_and_hGPR
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// DPair_with_dsub_1_in_DPR_8
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x0000025e, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000258, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000240, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000200, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// DTriple_with_dsub_1_in_DPR_8
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// DQuad_with_dsub_1_in_DPR_8
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000254, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000240, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// QQPR_with_dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x14040000, 0x00000254, },	// qqsub_0
      { 0x00000000, 0x10000000, 0x00000254, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// QQQQPR_with_dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// hGPR_and_rGPR
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// tcGPR
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// DPairSpc_with_dsub_2_in_DPR_8
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// DTripleSpc_with_dsub_2_in_DPR_8
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// DTriple_with_dsub_2_in_DPR_8
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// DQuadSpc_with_dsub_2_in_DPR_8
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// DQuad_with_dsub_2_in_DPR_8
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000250, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000200, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// QQQQPR_with_dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// DQuad_with_dsub_3_in_DPR_8
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000250, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000200, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// QQQQPR_with_dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// tGPR_and_tcGPR
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// QPR_8
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x0000025e, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000258, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000240, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000200, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// DTripleSpc_with_dsub_4_in_DPR_8
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// DQuadSpc_with_dsub_4_in_DPR_8
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// QQPR_and_DQuad_with_dsub_0_in_DPR_8
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000254, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000240, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// QQQQPR_with_dsub_0_in_DPR_8
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// QQPR_and_DQuad_with_dsub_2_in_DPR_8
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000250, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000200, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// QQQQPR_with_dsub_2_in_DPR_8
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// hGPR_and_tcGPR
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// QQQQPR_with_dsub_4_in_DPR_8
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// CCR
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// GPRsp
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
    {	// QQQQPR_with_dsub_6_in_DPR_8
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qqsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// qsub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_2
      { 0x00000000, 0x00000000, 0x00000000, },	// ssub_3
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_2_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_3_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_7_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_6_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_5_then_ssub_1
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_0
      { 0x00000000, 0x00000000, 0x00000000, },	// dsub_4_then_ssub_1
    },
  };
  assert(A && B && "Missing regclass");
  --Idx;
  assert(Idx < 30 && "Bad subreg");
  const uint32_t *TV = Table[B->getID()][Idx];
  const uint32_t *SC = A->getSubClassMask();
  for (unsigned i = 0; i != 3; ++i)
    if (unsigned Common = TV[i] & SC[i])
      return getRegClass(32*i + CountTrailingZeros_32(Common));
  return 0;
}

/// Get the weight in units of pressure for this register class.
const RegClassWeight &ARMGenRegisterInfo::
getRegClassWeight(const TargetRegisterClass *RC) const {
  static const RegClassWeight RCWeightTable[] = {
    {1, 32},  	// SPR
    {2, 64},  	// DPR
    {4, 64},  	// DPair
    {4, 64},  	// DPairSpc
    {6, 64},  	// DTriple
    {8, 64},  	// DQuad
    {6, 64},  	// DTripleSpc
    {6, 64},  	// DQuadSpc
    {1, 16},  	// GPR
    {1, 16},  	// SPR_8
    {2, 32},  	// DPR_VFP2
    {4, 36},  	// DPairSpc_with_ssub_0
    {4, 34},  	// DPair_with_ssub_0
    {4, 64},  	// QPR
    {6, 40},  	// DTripleSpc_with_ssub_0
    {6, 36},  	// DTriple_with_ssub_0
    {6, 40},  	// DQuadSpc_with_ssub_0
    {8, 38},  	// DQuad_with_ssub_0
    {1, 15},  	// GPRnopc
    {4, 32},  	// DPair_with_ssub_2
    {6, 34},  	// DTriple_with_ssub_2
    {8, 36},  	// DQuad_with_ssub_2
    {8, 64},  	// QQPR
    {1, 14},  	// rGPR
    {4, 32},  	// DPairSpc_with_dsub_2_then_ssub_0
    {6, 36},  	// DTripleSpc_with_dsub_2_then_ssub_0
    {6, 32},  	// DTriple_with_dsub_2_then_ssub_0
    {6, 36},  	// DQuadSpc_with_dsub_2_then_ssub_0
    {8, 34},  	// DQuad_with_dsub_2_then_ssub_0
    {8, 32},  	// DQuad_with_dsub_3_then_ssub_0
    {16, 64},  	// QQQQPR
    {6, 32},  	// DTripleSpc_with_dsub_4_then_ssub_0
    {6, 32},  	// DQuadSpc_with_dsub_4_then_ssub_0
    {1, 8},  	// hGPR
    {1, 8},  	// tGPR
    {2, 16},  	// DPR_8
    {4, 20},  	// DPairSpc_with_dsub_0_in_DPR_8
    {4, 18},  	// DPair_with_dsub_0_in_DPR_8
    {4, 32},  	// QPR_VFP2
    {6, 24},  	// DTripleSpc_with_dsub_0_in_DPR_8
    {6, 20},  	// DTriple_with_dsub_0_in_DPR_8
    {6, 24},  	// DQuadSpc_with_dsub_0_in_DPR_8
    {8, 22},  	// DQuad_with_dsub_0_in_DPR_8
    {8, 36},  	// QQPR_with_ssub_0
    {16, 44},  	// QQQQPR_with_ssub_0
    {1, 7},  	// GPRnopc_and_hGPR
    {4, 16},  	// DPair_with_dsub_1_in_DPR_8
    {6, 18},  	// DTriple_with_dsub_1_in_DPR_8
    {8, 20},  	// DQuad_with_dsub_1_in_DPR_8
    {8, 32},  	// QQPR_with_dsub_2_then_ssub_0
    {16, 40},  	// QQQQPR_with_dsub_2_then_ssub_0
    {1, 6},  	// hGPR_and_rGPR
    {1, 6},  	// tcGPR
    {4, 16},  	// DPairSpc_with_dsub_2_in_DPR_8
    {6, 20},  	// DTripleSpc_with_dsub_2_in_DPR_8
    {6, 16},  	// DTriple_with_dsub_2_in_DPR_8
    {6, 20},  	// DQuadSpc_with_dsub_2_in_DPR_8
    {8, 18},  	// DQuad_with_dsub_2_in_DPR_8
    {16, 36},  	// QQQQPR_with_dsub_5_then_ssub_0
    {8, 16},  	// DQuad_with_dsub_3_in_DPR_8
    {16, 32},  	// QQQQPR_with_dsub_7_then_ssub_0
    {1, 4},  	// tGPR_and_tcGPR
    {4, 16},  	// QPR_8
    {6, 16},  	// DTripleSpc_with_dsub_4_in_DPR_8
    {6, 16},  	// DQuadSpc_with_dsub_4_in_DPR_8
    {8, 20},  	// QQPR_and_DQuad_with_dsub_0_in_DPR_8
    {16, 28},  	// QQQQPR_with_dsub_0_in_DPR_8
    {8, 16},  	// QQPR_and_DQuad_with_dsub_2_in_DPR_8
    {16, 24},  	// QQQQPR_with_dsub_2_in_DPR_8
    {1, 2},  	// hGPR_and_tcGPR
    {16, 20},  	// QQQQPR_with_dsub_4_in_DPR_8
    {0, 0},  	// CCR
    {1, 1},  	// GPRsp
    {16, 16},  	// QQQQPR_with_dsub_6_in_DPR_8
    {0, 0} };
  return RCWeightTable[RC->getID()];
}


// Get the number of dimensions of register pressure.
unsigned ARMGenRegisterInfo::getNumRegPressureSets() const {
  return 11;
}

// Get the register unit pressure limit for this dimension.
// This limit must be adjusted dynamically for reserved registers.
unsigned ARMGenRegisterInfo::
getRegPressureSetLimit(unsigned Idx) const {
  static const unsigned PressureLimitTable[] = {
    64,  	// 0: DPR
    16,  	// 1: GPR
    8,  	// 2: hGPR
    24,  	// 3: DTripleSpc_with_dsub_0_in_DPR_8
    44,  	// 4: QQQQPR_with_ssub_0
    6,  	// 5: tcGPR
    28,  	// 6: QQQQPR_with_dsub_0_in_DPR_8
    2,  	// 7: hGPR_and_tcGPR
    1,  	// 8: GPRsp
    12,  	// 9: hGPR+tcGPR
    10,  	// 10: tGPR+tcGPR
    0 };
  return PressureLimitTable[Idx];
}

/// Get the dimensions of register pressure impacted by this register class.
/// Returns a -1 terminated array of pressure set IDs
const int* ARMGenRegisterInfo::
getRegClassPressureSets(const TargetRegisterClass *RC) const {
  static const int RCSetsTable[] = {
    0,  4,  -1,  	// SPR
    0,  -1,  	// DPR
    0,  -1,  	// DPair
    0,  -1,  	// DPairSpc
    0,  -1,  	// DTriple
    0,  -1,  	// DQuad
    0,  -1,  	// DTripleSpc
    0,  -1,  	// DQuadSpc
    1,  -1,  	// GPR
    0,  3,  4,  6,  -1,  	// SPR_8
    0,  4,  -1,  	// DPR_VFP2
    0,  4,  -1,  	// DPairSpc_with_ssub_0
    0,  4,  -1,  	// DPair_with_ssub_0
    0,  -1,  	// QPR
    0,  4,  -1,  	// DTripleSpc_with_ssub_0
    0,  4,  -1,  	// DTriple_with_ssub_0
    0,  4,  -1,  	// DQuadSpc_with_ssub_0
    0,  4,  -1,  	// DQuad_with_ssub_0
    1,  -1,  	// GPRnopc
    0,  4,  -1,  	// DPair_with_ssub_2
    0,  4,  -1,  	// DTriple_with_ssub_2
    0,  4,  -1,  	// DQuad_with_ssub_2
    0,  -1,  	// QQPR
    1,  -1,  	// rGPR
    0,  4,  -1,  	// DPairSpc_with_dsub_2_then_ssub_0
    0,  4,  -1,  	// DTripleSpc_with_dsub_2_then_ssub_0
    0,  4,  -1,  	// DTriple_with_dsub_2_then_ssub_0
    0,  4,  -1,  	// DQuadSpc_with_dsub_2_then_ssub_0
    0,  4,  -1,  	// DQuad_with_dsub_2_then_ssub_0
    0,  4,  -1,  	// DQuad_with_dsub_3_then_ssub_0
    0,  -1,  	// QQQQPR
    0,  4,  -1,  	// DTripleSpc_with_dsub_4_then_ssub_0
    0,  4,  -1,  	// DQuadSpc_with_dsub_4_then_ssub_0
    1,  2,  9,  -1,  	// hGPR
    1,  10,  -1,  	// tGPR
    0,  3,  4,  6,  -1,  	// DPR_8
    0,  3,  4,  6,  -1,  	// DPairSpc_with_dsub_0_in_DPR_8
    0,  3,  4,  6,  -1,  	// DPair_with_dsub_0_in_DPR_8
    0,  4,  -1,  	// QPR_VFP2
    0,  3,  4,  6,  -1,  	// DTripleSpc_with_dsub_0_in_DPR_8
    0,  3,  4,  6,  -1,  	// DTriple_with_dsub_0_in_DPR_8
    0,  3,  4,  6,  -1,  	// DQuadSpc_with_dsub_0_in_DPR_8
    0,  3,  4,  6,  -1,  	// DQuad_with_dsub_0_in_DPR_8
    0,  4,  -1,  	// QQPR_with_ssub_0
    0,  4,  -1,  	// QQQQPR_with_ssub_0
    1,  2,  9,  -1,  	// GPRnopc_and_hGPR
    0,  3,  4,  6,  -1,  	// DPair_with_dsub_1_in_DPR_8
    0,  3,  4,  6,  -1,  	// DTriple_with_dsub_1_in_DPR_8
    0,  3,  4,  6,  -1,  	// DQuad_with_dsub_1_in_DPR_8
    0,  4,  -1,  	// QQPR_with_dsub_2_then_ssub_0
    0,  4,  -1,  	// QQQQPR_with_dsub_2_then_ssub_0
    1,  2,  9,  -1,  	// hGPR_and_rGPR
    1,  5,  9,  10,  -1,  	// tcGPR
    0,  3,  4,  6,  -1,  	// DPairSpc_with_dsub_2_in_DPR_8
    0,  3,  4,  6,  -1,  	// DTripleSpc_with_dsub_2_in_DPR_8
    0,  3,  4,  6,  -1,  	// DTriple_with_dsub_2_in_DPR_8
    0,  3,  4,  6,  -1,  	// DQuadSpc_with_dsub_2_in_DPR_8
    0,  3,  4,  6,  -1,  	// DQuad_with_dsub_2_in_DPR_8
    0,  4,  -1,  	// QQQQPR_with_dsub_5_then_ssub_0
    0,  3,  4,  6,  -1,  	// DQuad_with_dsub_3_in_DPR_8
    0,  4,  -1,  	// QQQQPR_with_dsub_7_then_ssub_0
    1,  5,  9,  10,  -1,  	// tGPR_and_tcGPR
    0,  3,  4,  6,  -1,  	// QPR_8
    0,  3,  4,  6,  -1,  	// DTripleSpc_with_dsub_4_in_DPR_8
    0,  3,  4,  6,  -1,  	// DQuadSpc_with_dsub_4_in_DPR_8
    0,  3,  4,  6,  -1,  	// QQPR_and_DQuad_with_dsub_0_in_DPR_8
    0,  4,  6,  -1,  	// QQQQPR_with_dsub_0_in_DPR_8
    0,  3,  4,  6,  -1,  	// QQPR_and_DQuad_with_dsub_2_in_DPR_8
    0,  3,  4,  6,  -1,  	// QQQQPR_with_dsub_2_in_DPR_8
    1,  2,  5,  7,  9,  10,  -1,  	// hGPR_and_tcGPR
    0,  3,  4,  6,  -1,  	// QQQQPR_with_dsub_4_in_DPR_8
    -1,  	// CCR
    1,  2,  8,  9,  -1,  	// GPRsp
    0,  3,  4,  6,  -1,  	// QQQQPR_with_dsub_6_in_DPR_8
    -1 };
  static const unsigned RCSetStartTable[] = {
    0,3,5,7,9,11,13,15,17,19,24,27,30,33,35,38,41,44,47,49,52,55,58,60,62,65,68,71,74,77,80,82,85,88,92,95,100,105,110,113,118,123,128,133,136,139,143,148,153,158,161,164,168,173,178,183,188,193,198,201,206,209,214,219,224,229,234,238,243,248,255,260,261,266,0 };
  unsigned SetListStart = RCSetStartTable[RC->getID()];
  return &RCSetsTable[SetListStart];
}

extern const MCRegisterDesc ARMRegDesc[];
extern const uint16_t ARMRegLists[];
extern const uint16_t *getARMSubRegTable();
// ARM Dwarf<->LLVM register mappings.
extern const MCRegisterInfo::DwarfLLVMRegPair ARMDwarfFlavour0Dwarf2L[];
extern const unsigned ARMDwarfFlavour0Dwarf2LSize;

extern const MCRegisterInfo::DwarfLLVMRegPair ARMEHFlavour0Dwarf2L[];
extern const unsigned ARMEHFlavour0Dwarf2LSize;

extern const MCRegisterInfo::DwarfLLVMRegPair ARMDwarfFlavour0L2Dwarf[];
extern const unsigned ARMDwarfFlavour0L2DwarfSize;

extern const MCRegisterInfo::DwarfLLVMRegPair ARMEHFlavour0L2Dwarf[];
extern const unsigned ARMEHFlavour0L2DwarfSize;

ARMGenRegisterInfo::
ARMGenRegisterInfo(unsigned RA, unsigned DwarfFlavour, unsigned EHFlavour)
  : TargetRegisterInfo(ARMRegInfoDesc, RegisterClasses, RegisterClasses+74,
             ARMSubRegIndexTable) {
  InitMCRegisterInfo(ARMRegDesc, 278, RA,
                     ARMMCRegisterClasses, 74,
                     ARMRegLists,
                     getARMSubRegTable(), 30);

  switch (DwarfFlavour) {
  default:
    llvm_unreachable("Unknown DWARF flavour");
  case 0:
    mapDwarfRegsToLLVMRegs(ARMDwarfFlavour0Dwarf2L, ARMDwarfFlavour0Dwarf2LSize, false);
    break;
  }
  switch (EHFlavour) {
  default:
    llvm_unreachable("Unknown DWARF flavour");
  case 0:
    mapDwarfRegsToLLVMRegs(ARMEHFlavour0Dwarf2L, ARMEHFlavour0Dwarf2LSize, true);
    break;
  }
  switch (DwarfFlavour) {
  default:
    llvm_unreachable("Unknown DWARF flavour");
  case 0:
    mapLLVMRegsToDwarfRegs(ARMDwarfFlavour0L2Dwarf, ARMDwarfFlavour0L2DwarfSize, false);
    break;
  }
  switch (EHFlavour) {
  default:
    llvm_unreachable("Unknown DWARF flavour");
  case 0:
    mapLLVMRegsToDwarfRegs(ARMEHFlavour0L2Dwarf, ARMEHFlavour0L2DwarfSize, true);
    break;
  }
}

static const uint16_t CSR_AAPCS_SaveList[] = { ARM::LR, ARM::R11, ARM::R10, ARM::R9, ARM::R8, ARM::R7, ARM::R6, ARM::R5, ARM::R4, ARM::D15, ARM::D14, ARM::D13, ARM::D12, ARM::D11, ARM::D10, ARM::D9, ARM::D8, 0 };
static const uint32_t CSR_AAPCS_RegMask[] = { 0x0007f800, 0x000f0100, 0xfe0000ff, 0x01f801ff, 0x1000e000, 0x0007e000, 0x00007800, 0xe0000180, 0x00003000, };
static const uint16_t CSR_iOS_SaveList[] = { ARM::LR, ARM::R7, ARM::R6, ARM::R5, ARM::R4, ARM::R11, ARM::R10, ARM::R8, ARM::D15, ARM::D14, ARM::D13, ARM::D12, ARM::D11, ARM::D10, ARM::D9, ARM::D8, 0 };
static const uint32_t CSR_iOS_RegMask[] = { 0x0007f800, 0x000f0100, 0xfe0000df, 0x01f801ff, 0x1000e000, 0x0007e000, 0x00007800, 0xe0000180, 0x00003000, };


} // End llvm namespace 
#endif // GET_REGINFO_TARGET_DESC

