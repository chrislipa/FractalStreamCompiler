//===- TableGen'erated file -------------------------------------*- C++ -*-===//
//
// Target Instruction Enum Values
//
// Automatically generated file, do not edit!
//
//===----------------------------------------------------------------------===//


#ifdef GET_INSTRINFO_ENUM
#undef GET_INSTRINFO_ENUM
namespace llvm {

namespace X86 {
  enum {
    PHI	= 0,
    INLINEASM	= 1,
    PROLOG_LABEL	= 2,
    EH_LABEL	= 3,
    GC_LABEL	= 4,
    KILL	= 5,
    EXTRACT_SUBREG	= 6,
    INSERT_SUBREG	= 7,
    IMPLICIT_DEF	= 8,
    SUBREG_TO_REG	= 9,
    COPY_TO_REGCLASS	= 10,
    DBG_VALUE	= 11,
    REG_SEQUENCE	= 12,
    COPY	= 13,
    BUNDLE	= 14,
    AAA	= 15,
    AAD8i8	= 16,
    AAM8i8	= 17,
    AAS	= 18,
    ABS_F	= 19,
    ABS_Fp32	= 20,
    ABS_Fp64	= 21,
    ABS_Fp80	= 22,
    ACQUIRE_MOV16rm	= 23,
    ACQUIRE_MOV32rm	= 24,
    ACQUIRE_MOV64rm	= 25,
    ACQUIRE_MOV8rm	= 26,
    ADC16i16	= 27,
    ADC16mi	= 28,
    ADC16mi8	= 29,
    ADC16mr	= 30,
    ADC16ri	= 31,
    ADC16ri8	= 32,
    ADC16rm	= 33,
    ADC16rr	= 34,
    ADC16rr_REV	= 35,
    ADC32i32	= 36,
    ADC32mi	= 37,
    ADC32mi8	= 38,
    ADC32mr	= 39,
    ADC32ri	= 40,
    ADC32ri8	= 41,
    ADC32rm	= 42,
    ADC32rr	= 43,
    ADC32rr_REV	= 44,
    ADC64i32	= 45,
    ADC64mi32	= 46,
    ADC64mi8	= 47,
    ADC64mr	= 48,
    ADC64ri32	= 49,
    ADC64ri8	= 50,
    ADC64rm	= 51,
    ADC64rr	= 52,
    ADC64rr_REV	= 53,
    ADC8i8	= 54,
    ADC8mi	= 55,
    ADC8mr	= 56,
    ADC8ri	= 57,
    ADC8rm	= 58,
    ADC8rr	= 59,
    ADC8rr_REV	= 60,
    ADD16i16	= 61,
    ADD16mi	= 62,
    ADD16mi8	= 63,
    ADD16mr	= 64,
    ADD16ri	= 65,
    ADD16ri8	= 66,
    ADD16ri8_DB	= 67,
    ADD16ri_DB	= 68,
    ADD16rm	= 69,
    ADD16rr	= 70,
    ADD16rr_DB	= 71,
    ADD16rr_REV	= 72,
    ADD32i32	= 73,
    ADD32mi	= 74,
    ADD32mi8	= 75,
    ADD32mr	= 76,
    ADD32ri	= 77,
    ADD32ri8	= 78,
    ADD32ri8_DB	= 79,
    ADD32ri_DB	= 80,
    ADD32rm	= 81,
    ADD32rr	= 82,
    ADD32rr_DB	= 83,
    ADD32rr_REV	= 84,
    ADD64i32	= 85,
    ADD64mi32	= 86,
    ADD64mi8	= 87,
    ADD64mr	= 88,
    ADD64ri32	= 89,
    ADD64ri32_DB	= 90,
    ADD64ri8	= 91,
    ADD64ri8_DB	= 92,
    ADD64rm	= 93,
    ADD64rr	= 94,
    ADD64rr_DB	= 95,
    ADD64rr_REV	= 96,
    ADD8i8	= 97,
    ADD8mi	= 98,
    ADD8mr	= 99,
    ADD8ri	= 100,
    ADD8rm	= 101,
    ADD8rr	= 102,
    ADD8rr_REV	= 103,
    ADDPDrm	= 104,
    ADDPDrr	= 105,
    ADDPSrm	= 106,
    ADDPSrr	= 107,
    ADDSDrm	= 108,
    ADDSDrm_Int	= 109,
    ADDSDrr	= 110,
    ADDSDrr_Int	= 111,
    ADDSSrm	= 112,
    ADDSSrm_Int	= 113,
    ADDSSrr	= 114,
    ADDSSrr_Int	= 115,
    ADDSUBPDrm	= 116,
    ADDSUBPDrr	= 117,
    ADDSUBPSrm	= 118,
    ADDSUBPSrr	= 119,
    ADD_F32m	= 120,
    ADD_F64m	= 121,
    ADD_FI16m	= 122,
    ADD_FI32m	= 123,
    ADD_FPrST0	= 124,
    ADD_FST0r	= 125,
    ADD_Fp32	= 126,
    ADD_Fp32m	= 127,
    ADD_Fp64	= 128,
    ADD_Fp64m	= 129,
    ADD_Fp64m32	= 130,
    ADD_Fp80	= 131,
    ADD_Fp80m32	= 132,
    ADD_Fp80m64	= 133,
    ADD_FpI16m32	= 134,
    ADD_FpI16m64	= 135,
    ADD_FpI16m80	= 136,
    ADD_FpI32m32	= 137,
    ADD_FpI32m64	= 138,
    ADD_FpI32m80	= 139,
    ADD_FrST0	= 140,
    ADJCALLSTACKDOWN32	= 141,
    ADJCALLSTACKDOWN64	= 142,
    ADJCALLSTACKUP32	= 143,
    ADJCALLSTACKUP64	= 144,
    AESDECLASTrm	= 145,
    AESDECLASTrr	= 146,
    AESDECrm	= 147,
    AESDECrr	= 148,
    AESENCLASTrm	= 149,
    AESENCLASTrr	= 150,
    AESENCrm	= 151,
    AESENCrr	= 152,
    AESIMCrm	= 153,
    AESIMCrr	= 154,
    AESKEYGENASSIST128rm	= 155,
    AESKEYGENASSIST128rr	= 156,
    AND16i16	= 157,
    AND16mi	= 158,
    AND16mi8	= 159,
    AND16mr	= 160,
    AND16ri	= 161,
    AND16ri8	= 162,
    AND16rm	= 163,
    AND16rr	= 164,
    AND16rr_REV	= 165,
    AND32i32	= 166,
    AND32mi	= 167,
    AND32mi8	= 168,
    AND32mr	= 169,
    AND32ri	= 170,
    AND32ri8	= 171,
    AND32rm	= 172,
    AND32rr	= 173,
    AND32rr_REV	= 174,
    AND64i32	= 175,
    AND64mi32	= 176,
    AND64mi8	= 177,
    AND64mr	= 178,
    AND64ri32	= 179,
    AND64ri8	= 180,
    AND64rm	= 181,
    AND64rr	= 182,
    AND64rr_REV	= 183,
    AND8i8	= 184,
    AND8mi	= 185,
    AND8mr	= 186,
    AND8ri	= 187,
    AND8rm	= 188,
    AND8rr	= 189,
    AND8rr_REV	= 190,
    ANDN32rm	= 191,
    ANDN32rr	= 192,
    ANDN64rm	= 193,
    ANDN64rr	= 194,
    ANDNPDrm	= 195,
    ANDNPDrr	= 196,
    ANDNPSrm	= 197,
    ANDNPSrr	= 198,
    ANDPDrm	= 199,
    ANDPDrr	= 200,
    ANDPSrm	= 201,
    ANDPSrr	= 202,
    ARPL16mr	= 203,
    ARPL16rr	= 204,
    ATOMADD6432	= 205,
    ATOMAND16	= 206,
    ATOMAND32	= 207,
    ATOMAND64	= 208,
    ATOMAND6432	= 209,
    ATOMAND8	= 210,
    ATOMMAX16	= 211,
    ATOMMAX32	= 212,
    ATOMMAX64	= 213,
    ATOMMIN16	= 214,
    ATOMMIN32	= 215,
    ATOMMIN64	= 216,
    ATOMNAND16	= 217,
    ATOMNAND32	= 218,
    ATOMNAND64	= 219,
    ATOMNAND6432	= 220,
    ATOMNAND8	= 221,
    ATOMOR16	= 222,
    ATOMOR32	= 223,
    ATOMOR64	= 224,
    ATOMOR6432	= 225,
    ATOMOR8	= 226,
    ATOMSUB6432	= 227,
    ATOMSWAP6432	= 228,
    ATOMUMAX16	= 229,
    ATOMUMAX32	= 230,
    ATOMUMAX64	= 231,
    ATOMUMIN16	= 232,
    ATOMUMIN32	= 233,
    ATOMUMIN64	= 234,
    ATOMXOR16	= 235,
    ATOMXOR32	= 236,
    ATOMXOR64	= 237,
    ATOMXOR6432	= 238,
    ATOMXOR8	= 239,
    AVX2_SET0	= 240,
    AVX2_SETALLONES	= 241,
    AVX_SET0PDY	= 242,
    AVX_SET0PSY	= 243,
    AVX_SETALLONES	= 244,
    BEXTR32rm	= 245,
    BEXTR32rr	= 246,
    BEXTR64rm	= 247,
    BEXTR64rr	= 248,
    BLENDPDrmi	= 249,
    BLENDPDrri	= 250,
    BLENDPSrmi	= 251,
    BLENDPSrri	= 252,
    BLENDVPDrm0	= 253,
    BLENDVPDrr0	= 254,
    BLENDVPSrm0	= 255,
    BLENDVPSrr0	= 256,
    BLSI32rm	= 257,
    BLSI32rr	= 258,
    BLSI64rm	= 259,
    BLSI64rr	= 260,
    BLSMSK32rm	= 261,
    BLSMSK32rr	= 262,
    BLSMSK64rm	= 263,
    BLSMSK64rr	= 264,
    BLSR32rm	= 265,
    BLSR32rr	= 266,
    BLSR64rm	= 267,
    BLSR64rr	= 268,
    BOUNDS16rm	= 269,
    BOUNDS32rm	= 270,
    BSF16rm	= 271,
    BSF16rr	= 272,
    BSF32rm	= 273,
    BSF32rr	= 274,
    BSF64rm	= 275,
    BSF64rr	= 276,
    BSR16rm	= 277,
    BSR16rr	= 278,
    BSR32rm	= 279,
    BSR32rr	= 280,
    BSR64rm	= 281,
    BSR64rr	= 282,
    BSWAP32r	= 283,
    BSWAP64r	= 284,
    BT16mi8	= 285,
    BT16mr	= 286,
    BT16ri8	= 287,
    BT16rr	= 288,
    BT32mi8	= 289,
    BT32mr	= 290,
    BT32ri8	= 291,
    BT32rr	= 292,
    BT64mi8	= 293,
    BT64mr	= 294,
    BT64ri8	= 295,
    BT64rr	= 296,
    BTC16mi8	= 297,
    BTC16mr	= 298,
    BTC16ri8	= 299,
    BTC16rr	= 300,
    BTC32mi8	= 301,
    BTC32mr	= 302,
    BTC32ri8	= 303,
    BTC32rr	= 304,
    BTC64mi8	= 305,
    BTC64mr	= 306,
    BTC64ri8	= 307,
    BTC64rr	= 308,
    BTR16mi8	= 309,
    BTR16mr	= 310,
    BTR16ri8	= 311,
    BTR16rr	= 312,
    BTR32mi8	= 313,
    BTR32mr	= 314,
    BTR32ri8	= 315,
    BTR32rr	= 316,
    BTR64mi8	= 317,
    BTR64mr	= 318,
    BTR64ri8	= 319,
    BTR64rr	= 320,
    BTS16mi8	= 321,
    BTS16mr	= 322,
    BTS16ri8	= 323,
    BTS16rr	= 324,
    BTS32mi8	= 325,
    BTS32mr	= 326,
    BTS32ri8	= 327,
    BTS32rr	= 328,
    BTS64mi8	= 329,
    BTS64mr	= 330,
    BTS64ri8	= 331,
    BTS64rr	= 332,
    BZHI32rm	= 333,
    BZHI32rr	= 334,
    BZHI64rm	= 335,
    BZHI64rr	= 336,
    CALL32m	= 337,
    CALL32r	= 338,
    CALL64m	= 339,
    CALL64pcrel32	= 340,
    CALL64r	= 341,
    CALLpcrel16	= 342,
    CALLpcrel32	= 343,
    CBW	= 344,
    CDQ	= 345,
    CDQE	= 346,
    CHS_F	= 347,
    CHS_Fp32	= 348,
    CHS_Fp64	= 349,
    CHS_Fp80	= 350,
    CLC	= 351,
    CLD	= 352,
    CLFLUSH	= 353,
    CLGI	= 354,
    CLI	= 355,
    CLTS	= 356,
    CMC	= 357,
    CMOVA16rm	= 358,
    CMOVA16rr	= 359,
    CMOVA32rm	= 360,
    CMOVA32rr	= 361,
    CMOVA64rm	= 362,
    CMOVA64rr	= 363,
    CMOVAE16rm	= 364,
    CMOVAE16rr	= 365,
    CMOVAE32rm	= 366,
    CMOVAE32rr	= 367,
    CMOVAE64rm	= 368,
    CMOVAE64rr	= 369,
    CMOVB16rm	= 370,
    CMOVB16rr	= 371,
    CMOVB32rm	= 372,
    CMOVB32rr	= 373,
    CMOVB64rm	= 374,
    CMOVB64rr	= 375,
    CMOVBE16rm	= 376,
    CMOVBE16rr	= 377,
    CMOVBE32rm	= 378,
    CMOVBE32rr	= 379,
    CMOVBE64rm	= 380,
    CMOVBE64rr	= 381,
    CMOVBE_F	= 382,
    CMOVBE_Fp32	= 383,
    CMOVBE_Fp64	= 384,
    CMOVBE_Fp80	= 385,
    CMOVB_F	= 386,
    CMOVB_Fp32	= 387,
    CMOVB_Fp64	= 388,
    CMOVB_Fp80	= 389,
    CMOVE16rm	= 390,
    CMOVE16rr	= 391,
    CMOVE32rm	= 392,
    CMOVE32rr	= 393,
    CMOVE64rm	= 394,
    CMOVE64rr	= 395,
    CMOVE_F	= 396,
    CMOVE_Fp32	= 397,
    CMOVE_Fp64	= 398,
    CMOVE_Fp80	= 399,
    CMOVG16rm	= 400,
    CMOVG16rr	= 401,
    CMOVG32rm	= 402,
    CMOVG32rr	= 403,
    CMOVG64rm	= 404,
    CMOVG64rr	= 405,
    CMOVGE16rm	= 406,
    CMOVGE16rr	= 407,
    CMOVGE32rm	= 408,
    CMOVGE32rr	= 409,
    CMOVGE64rm	= 410,
    CMOVGE64rr	= 411,
    CMOVL16rm	= 412,
    CMOVL16rr	= 413,
    CMOVL32rm	= 414,
    CMOVL32rr	= 415,
    CMOVL64rm	= 416,
    CMOVL64rr	= 417,
    CMOVLE16rm	= 418,
    CMOVLE16rr	= 419,
    CMOVLE32rm	= 420,
    CMOVLE32rr	= 421,
    CMOVLE64rm	= 422,
    CMOVLE64rr	= 423,
    CMOVNBE_F	= 424,
    CMOVNBE_Fp32	= 425,
    CMOVNBE_Fp64	= 426,
    CMOVNBE_Fp80	= 427,
    CMOVNB_F	= 428,
    CMOVNB_Fp32	= 429,
    CMOVNB_Fp64	= 430,
    CMOVNB_Fp80	= 431,
    CMOVNE16rm	= 432,
    CMOVNE16rr	= 433,
    CMOVNE32rm	= 434,
    CMOVNE32rr	= 435,
    CMOVNE64rm	= 436,
    CMOVNE64rr	= 437,
    CMOVNE_F	= 438,
    CMOVNE_Fp32	= 439,
    CMOVNE_Fp64	= 440,
    CMOVNE_Fp80	= 441,
    CMOVNO16rm	= 442,
    CMOVNO16rr	= 443,
    CMOVNO32rm	= 444,
    CMOVNO32rr	= 445,
    CMOVNO64rm	= 446,
    CMOVNO64rr	= 447,
    CMOVNP16rm	= 448,
    CMOVNP16rr	= 449,
    CMOVNP32rm	= 450,
    CMOVNP32rr	= 451,
    CMOVNP64rm	= 452,
    CMOVNP64rr	= 453,
    CMOVNP_F	= 454,
    CMOVNP_Fp32	= 455,
    CMOVNP_Fp64	= 456,
    CMOVNP_Fp80	= 457,
    CMOVNS16rm	= 458,
    CMOVNS16rr	= 459,
    CMOVNS32rm	= 460,
    CMOVNS32rr	= 461,
    CMOVNS64rm	= 462,
    CMOVNS64rr	= 463,
    CMOVO16rm	= 464,
    CMOVO16rr	= 465,
    CMOVO32rm	= 466,
    CMOVO32rr	= 467,
    CMOVO64rm	= 468,
    CMOVO64rr	= 469,
    CMOVP16rm	= 470,
    CMOVP16rr	= 471,
    CMOVP32rm	= 472,
    CMOVP32rr	= 473,
    CMOVP64rm	= 474,
    CMOVP64rr	= 475,
    CMOVP_F	= 476,
    CMOVP_Fp32	= 477,
    CMOVP_Fp64	= 478,
    CMOVP_Fp80	= 479,
    CMOVS16rm	= 480,
    CMOVS16rr	= 481,
    CMOVS32rm	= 482,
    CMOVS32rr	= 483,
    CMOVS64rm	= 484,
    CMOVS64rr	= 485,
    CMOV_FR32	= 486,
    CMOV_FR64	= 487,
    CMOV_GR16	= 488,
    CMOV_GR32	= 489,
    CMOV_GR8	= 490,
    CMOV_RFP32	= 491,
    CMOV_RFP64	= 492,
    CMOV_RFP80	= 493,
    CMOV_V2F64	= 494,
    CMOV_V2I64	= 495,
    CMOV_V4F32	= 496,
    CMOV_V4F64	= 497,
    CMOV_V4I64	= 498,
    CMOV_V8F32	= 499,
    CMP16i16	= 500,
    CMP16mi	= 501,
    CMP16mi8	= 502,
    CMP16mr	= 503,
    CMP16ri	= 504,
    CMP16ri8	= 505,
    CMP16rm	= 506,
    CMP16rr	= 507,
    CMP16rr_REV	= 508,
    CMP32i32	= 509,
    CMP32mi	= 510,
    CMP32mi8	= 511,
    CMP32mr	= 512,
    CMP32ri	= 513,
    CMP32ri8	= 514,
    CMP32rm	= 515,
    CMP32rr	= 516,
    CMP32rr_REV	= 517,
    CMP64i32	= 518,
    CMP64mi32	= 519,
    CMP64mi8	= 520,
    CMP64mr	= 521,
    CMP64ri32	= 522,
    CMP64ri8	= 523,
    CMP64rm	= 524,
    CMP64rr	= 525,
    CMP64rr_REV	= 526,
    CMP8i8	= 527,
    CMP8mi	= 528,
    CMP8mr	= 529,
    CMP8ri	= 530,
    CMP8rm	= 531,
    CMP8rr	= 532,
    CMP8rr_REV	= 533,
    CMPPDrmi	= 534,
    CMPPDrmi_alt	= 535,
    CMPPDrri	= 536,
    CMPPDrri_alt	= 537,
    CMPPSrmi	= 538,
    CMPPSrmi_alt	= 539,
    CMPPSrri	= 540,
    CMPPSrri_alt	= 541,
    CMPS16	= 542,
    CMPS32	= 543,
    CMPS64	= 544,
    CMPS8	= 545,
    CMPSDrm	= 546,
    CMPSDrm_alt	= 547,
    CMPSDrr	= 548,
    CMPSDrr_alt	= 549,
    CMPSSrm	= 550,
    CMPSSrm_alt	= 551,
    CMPSSrr	= 552,
    CMPSSrr_alt	= 553,
    CMPXCHG16B	= 554,
    CMPXCHG16rm	= 555,
    CMPXCHG16rr	= 556,
    CMPXCHG32rm	= 557,
    CMPXCHG32rr	= 558,
    CMPXCHG64rm	= 559,
    CMPXCHG64rr	= 560,
    CMPXCHG8B	= 561,
    CMPXCHG8rm	= 562,
    CMPXCHG8rr	= 563,
    COMISDrm	= 564,
    COMISDrr	= 565,
    COMISSrm	= 566,
    COMISSrr	= 567,
    COMP_FST0r	= 568,
    COM_FIPr	= 569,
    COM_FIr	= 570,
    COM_FST0r	= 571,
    COS_F	= 572,
    COS_Fp32	= 573,
    COS_Fp64	= 574,
    COS_Fp80	= 575,
    CPUID	= 576,
    CQO	= 577,
    CRC32r32m16	= 578,
    CRC32r32m32	= 579,
    CRC32r32m8	= 580,
    CRC32r32r16	= 581,
    CRC32r32r32	= 582,
    CRC32r32r8	= 583,
    CRC32r64m64	= 584,
    CRC32r64m8	= 585,
    CRC32r64r64	= 586,
    CRC32r64r8	= 587,
    CS_PREFIX	= 588,
    CVTDQ2PDrm	= 589,
    CVTDQ2PDrr	= 590,
    CVTDQ2PSrm	= 591,
    CVTDQ2PSrr	= 592,
    CVTPD2DQrm	= 593,
    CVTPD2DQrr	= 594,
    CVTPD2PSrm	= 595,
    CVTPD2PSrr	= 596,
    CVTPS2DQrm	= 597,
    CVTPS2DQrr	= 598,
    CVTPS2PDrm	= 599,
    CVTPS2PDrr	= 600,
    CVTSD2SI64rm	= 601,
    CVTSD2SI64rr	= 602,
    CVTSD2SIrm	= 603,
    CVTSD2SIrr	= 604,
    CVTSD2SSrm	= 605,
    CVTSD2SSrr	= 606,
    CVTSI2SD64rm	= 607,
    CVTSI2SD64rr	= 608,
    CVTSI2SDrm	= 609,
    CVTSI2SDrr	= 610,
    CVTSI2SS64rm	= 611,
    CVTSI2SS64rr	= 612,
    CVTSI2SSrm	= 613,
    CVTSI2SSrr	= 614,
    CVTSS2SDrm	= 615,
    CVTSS2SDrr	= 616,
    CVTSS2SI64rm	= 617,
    CVTSS2SI64rr	= 618,
    CVTSS2SIrm	= 619,
    CVTSS2SIrr	= 620,
    CVTTPD2DQrm	= 621,
    CVTTPD2DQrr	= 622,
    CVTTPS2DQrm	= 623,
    CVTTPS2DQrr	= 624,
    CVTTSD2SI64rm	= 625,
    CVTTSD2SI64rr	= 626,
    CVTTSD2SIrm	= 627,
    CVTTSD2SIrr	= 628,
    CVTTSS2SI64rm	= 629,
    CVTTSS2SI64rr	= 630,
    CVTTSS2SIrm	= 631,
    CVTTSS2SIrr	= 632,
    CWD	= 633,
    CWDE	= 634,
    DAA	= 635,
    DAS	= 636,
    DATA16_PREFIX	= 637,
    DEC16m	= 638,
    DEC16r	= 639,
    DEC32m	= 640,
    DEC32r	= 641,
    DEC64_16m	= 642,
    DEC64_16r	= 643,
    DEC64_32m	= 644,
    DEC64_32r	= 645,
    DEC64m	= 646,
    DEC64r	= 647,
    DEC8m	= 648,
    DEC8r	= 649,
    DIV16m	= 650,
    DIV16r	= 651,
    DIV32m	= 652,
    DIV32r	= 653,
    DIV64m	= 654,
    DIV64r	= 655,
    DIV8m	= 656,
    DIV8r	= 657,
    DIVPDrm	= 658,
    DIVPDrr	= 659,
    DIVPSrm	= 660,
    DIVPSrr	= 661,
    DIVR_F32m	= 662,
    DIVR_F64m	= 663,
    DIVR_FI16m	= 664,
    DIVR_FI32m	= 665,
    DIVR_FPrST0	= 666,
    DIVR_FST0r	= 667,
    DIVR_Fp32m	= 668,
    DIVR_Fp64m	= 669,
    DIVR_Fp64m32	= 670,
    DIVR_Fp80m32	= 671,
    DIVR_Fp80m64	= 672,
    DIVR_FpI16m32	= 673,
    DIVR_FpI16m64	= 674,
    DIVR_FpI16m80	= 675,
    DIVR_FpI32m32	= 676,
    DIVR_FpI32m64	= 677,
    DIVR_FpI32m80	= 678,
    DIVR_FrST0	= 679,
    DIVSDrm	= 680,
    DIVSDrm_Int	= 681,
    DIVSDrr	= 682,
    DIVSDrr_Int	= 683,
    DIVSSrm	= 684,
    DIVSSrm_Int	= 685,
    DIVSSrr	= 686,
    DIVSSrr_Int	= 687,
    DIV_F32m	= 688,
    DIV_F64m	= 689,
    DIV_FI16m	= 690,
    DIV_FI32m	= 691,
    DIV_FPrST0	= 692,
    DIV_FST0r	= 693,
    DIV_Fp32	= 694,
    DIV_Fp32m	= 695,
    DIV_Fp64	= 696,
    DIV_Fp64m	= 697,
    DIV_Fp64m32	= 698,
    DIV_Fp80	= 699,
    DIV_Fp80m32	= 700,
    DIV_Fp80m64	= 701,
    DIV_FpI16m32	= 702,
    DIV_FpI16m64	= 703,
    DIV_FpI16m80	= 704,
    DIV_FpI32m32	= 705,
    DIV_FpI32m64	= 706,
    DIV_FpI32m80	= 707,
    DIV_FrST0	= 708,
    DPPDrmi	= 709,
    DPPDrri	= 710,
    DPPSrmi	= 711,
    DPPSrri	= 712,
    DS_PREFIX	= 713,
    EH_RETURN	= 714,
    EH_RETURN64	= 715,
    ENTER	= 716,
    ES_PREFIX	= 717,
    EXTRACTPSmr	= 718,
    EXTRACTPSrr	= 719,
    F2XM1	= 720,
    FARCALL16i	= 721,
    FARCALL16m	= 722,
    FARCALL32i	= 723,
    FARCALL32m	= 724,
    FARCALL64	= 725,
    FARJMP16i	= 726,
    FARJMP16m	= 727,
    FARJMP32i	= 728,
    FARJMP32m	= 729,
    FARJMP64	= 730,
    FBLDm	= 731,
    FBSTPm	= 732,
    FCOM32m	= 733,
    FCOM64m	= 734,
    FCOMP32m	= 735,
    FCOMP64m	= 736,
    FCOMPP	= 737,
    FDECSTP	= 738,
    FEMMS	= 739,
    FFREE	= 740,
    FICOM16m	= 741,
    FICOM32m	= 742,
    FICOMP16m	= 743,
    FICOMP32m	= 744,
    FINCSTP	= 745,
    FLDCW16m	= 746,
    FLDENVm	= 747,
    FLDL2E	= 748,
    FLDL2T	= 749,
    FLDLG2	= 750,
    FLDLN2	= 751,
    FLDPI	= 752,
    FNCLEX	= 753,
    FNINIT	= 754,
    FNOP	= 755,
    FNSTCW16m	= 756,
    FNSTSW8r	= 757,
    FNSTSWm	= 758,
    FP32_TO_INT16_IN_MEM	= 759,
    FP32_TO_INT32_IN_MEM	= 760,
    FP32_TO_INT64_IN_MEM	= 761,
    FP64_TO_INT16_IN_MEM	= 762,
    FP64_TO_INT32_IN_MEM	= 763,
    FP64_TO_INT64_IN_MEM	= 764,
    FP80_TO_INT16_IN_MEM	= 765,
    FP80_TO_INT32_IN_MEM	= 766,
    FP80_TO_INT64_IN_MEM	= 767,
    FPATAN	= 768,
    FPREM	= 769,
    FPREM1	= 770,
    FPTAN	= 771,
    FRNDINT	= 772,
    FRSTORm	= 773,
    FSAVEm	= 774,
    FSCALE	= 775,
    FSINCOS	= 776,
    FSTENVm	= 777,
    FS_PREFIX	= 778,
    FXAM	= 779,
    FXRSTOR	= 780,
    FXRSTOR64	= 781,
    FXSAVE	= 782,
    FXSAVE64	= 783,
    FXTRACT	= 784,
    FYL2X	= 785,
    FYL2XP1	= 786,
    FpPOP_RETVAL	= 787,
    FsANDNPDrm	= 788,
    FsANDNPDrr	= 789,
    FsANDNPSrm	= 790,
    FsANDNPSrr	= 791,
    FsANDPDrm	= 792,
    FsANDPDrr	= 793,
    FsANDPSrm	= 794,
    FsANDPSrr	= 795,
    FsFLD0SD	= 796,
    FsFLD0SS	= 797,
    FsMOVAPDrm	= 798,
    FsMOVAPDrr	= 799,
    FsMOVAPSrm	= 800,
    FsMOVAPSrr	= 801,
    FsORPDrm	= 802,
    FsORPDrr	= 803,
    FsORPSrm	= 804,
    FsORPSrr	= 805,
    FsVMOVAPDrm	= 806,
    FsVMOVAPDrr	= 807,
    FsVMOVAPSrm	= 808,
    FsVMOVAPSrr	= 809,
    FsXORPDrm	= 810,
    FsXORPDrr	= 811,
    FsXORPSrm	= 812,
    FsXORPSrr	= 813,
    GS_PREFIX	= 814,
    HADDPDrm	= 815,
    HADDPDrr	= 816,
    HADDPSrm	= 817,
    HADDPSrr	= 818,
    HLT	= 819,
    HSUBPDrm	= 820,
    HSUBPDrr	= 821,
    HSUBPSrm	= 822,
    HSUBPSrr	= 823,
    IDIV16m	= 824,
    IDIV16r	= 825,
    IDIV32m	= 826,
    IDIV32r	= 827,
    IDIV64m	= 828,
    IDIV64r	= 829,
    IDIV8m	= 830,
    IDIV8r	= 831,
    ILD_F16m	= 832,
    ILD_F32m	= 833,
    ILD_F64m	= 834,
    ILD_Fp16m32	= 835,
    ILD_Fp16m64	= 836,
    ILD_Fp16m80	= 837,
    ILD_Fp32m32	= 838,
    ILD_Fp32m64	= 839,
    ILD_Fp32m80	= 840,
    ILD_Fp64m32	= 841,
    ILD_Fp64m64	= 842,
    ILD_Fp64m80	= 843,
    IMUL16m	= 844,
    IMUL16r	= 845,
    IMUL16rm	= 846,
    IMUL16rmi	= 847,
    IMUL16rmi8	= 848,
    IMUL16rr	= 849,
    IMUL16rri	= 850,
    IMUL16rri8	= 851,
    IMUL32m	= 852,
    IMUL32r	= 853,
    IMUL32rm	= 854,
    IMUL32rmi	= 855,
    IMUL32rmi8	= 856,
    IMUL32rr	= 857,
    IMUL32rri	= 858,
    IMUL32rri8	= 859,
    IMUL64m	= 860,
    IMUL64r	= 861,
    IMUL64rm	= 862,
    IMUL64rmi32	= 863,
    IMUL64rmi8	= 864,
    IMUL64rr	= 865,
    IMUL64rri32	= 866,
    IMUL64rri8	= 867,
    IMUL8m	= 868,
    IMUL8r	= 869,
    IN16	= 870,
    IN16ri	= 871,
    IN16rr	= 872,
    IN32	= 873,
    IN32ri	= 874,
    IN32rr	= 875,
    IN8	= 876,
    IN8ri	= 877,
    IN8rr	= 878,
    INC16m	= 879,
    INC16r	= 880,
    INC32m	= 881,
    INC32r	= 882,
    INC64_16m	= 883,
    INC64_16r	= 884,
    INC64_32m	= 885,
    INC64_32r	= 886,
    INC64m	= 887,
    INC64r	= 888,
    INC8m	= 889,
    INC8r	= 890,
    INSERTPSrm	= 891,
    INSERTPSrr	= 892,
    INT	= 893,
    INT3	= 894,
    INTO	= 895,
    INVD	= 896,
    INVEPT32	= 897,
    INVEPT64	= 898,
    INVLPG	= 899,
    INVLPGA32	= 900,
    INVLPGA64	= 901,
    INVPCID32	= 902,
    INVPCID64	= 903,
    INVVPID32	= 904,
    INVVPID64	= 905,
    IRET16	= 906,
    IRET32	= 907,
    IRET64	= 908,
    ISTT_FP16m	= 909,
    ISTT_FP32m	= 910,
    ISTT_FP64m	= 911,
    ISTT_Fp16m32	= 912,
    ISTT_Fp16m64	= 913,
    ISTT_Fp16m80	= 914,
    ISTT_Fp32m32	= 915,
    ISTT_Fp32m64	= 916,
    ISTT_Fp32m80	= 917,
    ISTT_Fp64m32	= 918,
    ISTT_Fp64m64	= 919,
    ISTT_Fp64m80	= 920,
    IST_F16m	= 921,
    IST_F32m	= 922,
    IST_FP16m	= 923,
    IST_FP32m	= 924,
    IST_FP64m	= 925,
    IST_Fp16m32	= 926,
    IST_Fp16m64	= 927,
    IST_Fp16m80	= 928,
    IST_Fp32m32	= 929,
    IST_Fp32m64	= 930,
    IST_Fp32m80	= 931,
    IST_Fp64m32	= 932,
    IST_Fp64m64	= 933,
    IST_Fp64m80	= 934,
    Int_CMPSDrm	= 935,
    Int_CMPSDrr	= 936,
    Int_CMPSSrm	= 937,
    Int_CMPSSrr	= 938,
    Int_COMISDrm	= 939,
    Int_COMISDrr	= 940,
    Int_COMISSrm	= 941,
    Int_COMISSrr	= 942,
    Int_CVTDQ2PDrm	= 943,
    Int_CVTDQ2PDrr	= 944,
    Int_CVTDQ2PSrm	= 945,
    Int_CVTDQ2PSrr	= 946,
    Int_CVTPD2DQrm	= 947,
    Int_CVTPD2DQrr	= 948,
    Int_CVTPD2PSrm	= 949,
    Int_CVTPD2PSrr	= 950,
    Int_CVTPS2DQrm	= 951,
    Int_CVTPS2DQrr	= 952,
    Int_CVTPS2PDrm	= 953,
    Int_CVTPS2PDrr	= 954,
    Int_CVTSD2SSrm	= 955,
    Int_CVTSD2SSrr	= 956,
    Int_CVTSI2SD64rm	= 957,
    Int_CVTSI2SD64rr	= 958,
    Int_CVTSI2SDrm	= 959,
    Int_CVTSI2SDrr	= 960,
    Int_CVTSI2SS64rm	= 961,
    Int_CVTSI2SS64rr	= 962,
    Int_CVTSI2SSrm	= 963,
    Int_CVTSI2SSrr	= 964,
    Int_CVTSS2SDrm	= 965,
    Int_CVTSS2SDrr	= 966,
    Int_CVTTSD2SI64rm	= 967,
    Int_CVTTSD2SI64rr	= 968,
    Int_CVTTSD2SIrm	= 969,
    Int_CVTTSD2SIrr	= 970,
    Int_CVTTSS2SI64rm	= 971,
    Int_CVTTSS2SI64rr	= 972,
    Int_CVTTSS2SIrm	= 973,
    Int_CVTTSS2SIrr	= 974,
    Int_MemBarrier	= 975,
    Int_UCOMISDrm	= 976,
    Int_UCOMISDrr	= 977,
    Int_UCOMISSrm	= 978,
    Int_UCOMISSrr	= 979,
    Int_VCMPSDrm	= 980,
    Int_VCMPSDrr	= 981,
    Int_VCMPSSrm	= 982,
    Int_VCMPSSrr	= 983,
    Int_VCOMISDrm	= 984,
    Int_VCOMISDrr	= 985,
    Int_VCOMISSrm	= 986,
    Int_VCOMISSrr	= 987,
    Int_VCVTDQ2PDrm	= 988,
    Int_VCVTDQ2PDrr	= 989,
    Int_VCVTDQ2PSrm	= 990,
    Int_VCVTDQ2PSrr	= 991,
    Int_VCVTPD2DQrm	= 992,
    Int_VCVTPD2DQrr	= 993,
    Int_VCVTPD2PSrm	= 994,
    Int_VCVTPD2PSrr	= 995,
    Int_VCVTPS2DQrm	= 996,
    Int_VCVTPS2DQrr	= 997,
    Int_VCVTPS2PDrm	= 998,
    Int_VCVTPS2PDrr	= 999,
    Int_VCVTSD2SSrm	= 1000,
    Int_VCVTSD2SSrr	= 1001,
    Int_VCVTSI2SD64rm	= 1002,
    Int_VCVTSI2SD64rr	= 1003,
    Int_VCVTSI2SDrm	= 1004,
    Int_VCVTSI2SDrr	= 1005,
    Int_VCVTSI2SS64rm	= 1006,
    Int_VCVTSI2SS64rr	= 1007,
    Int_VCVTSI2SSrm	= 1008,
    Int_VCVTSI2SSrr	= 1009,
    Int_VCVTSS2SDrm	= 1010,
    Int_VCVTSS2SDrr	= 1011,
    Int_VCVTTSD2SI64rm	= 1012,
    Int_VCVTTSD2SI64rr	= 1013,
    Int_VCVTTSD2SIrm	= 1014,
    Int_VCVTTSD2SIrr	= 1015,
    Int_VCVTTSS2SI64rm	= 1016,
    Int_VCVTTSS2SI64rr	= 1017,
    Int_VCVTTSS2SIrm	= 1018,
    Int_VCVTTSS2SIrr	= 1019,
    Int_VUCOMISDrm	= 1020,
    Int_VUCOMISDrr	= 1021,
    Int_VUCOMISSrm	= 1022,
    Int_VUCOMISSrr	= 1023,
    JAE_1	= 1024,
    JAE_4	= 1025,
    JA_1	= 1026,
    JA_4	= 1027,
    JBE_1	= 1028,
    JBE_4	= 1029,
    JB_1	= 1030,
    JB_4	= 1031,
    JCXZ	= 1032,
    JECXZ_32	= 1033,
    JECXZ_64	= 1034,
    JE_1	= 1035,
    JE_4	= 1036,
    JGE_1	= 1037,
    JGE_4	= 1038,
    JG_1	= 1039,
    JG_4	= 1040,
    JLE_1	= 1041,
    JLE_4	= 1042,
    JL_1	= 1043,
    JL_4	= 1044,
    JMP32m	= 1045,
    JMP32r	= 1046,
    JMP64m	= 1047,
    JMP64pcrel32	= 1048,
    JMP64r	= 1049,
    JMP_1	= 1050,
    JMP_4	= 1051,
    JNE_1	= 1052,
    JNE_4	= 1053,
    JNO_1	= 1054,
    JNO_4	= 1055,
    JNP_1	= 1056,
    JNP_4	= 1057,
    JNS_1	= 1058,
    JNS_4	= 1059,
    JO_1	= 1060,
    JO_4	= 1061,
    JP_1	= 1062,
    JP_4	= 1063,
    JRCXZ	= 1064,
    JS_1	= 1065,
    JS_4	= 1066,
    LAHF	= 1067,
    LAR16rm	= 1068,
    LAR16rr	= 1069,
    LAR32rm	= 1070,
    LAR32rr	= 1071,
    LAR64rm	= 1072,
    LAR64rr	= 1073,
    LCMPXCHG16	= 1074,
    LCMPXCHG16B	= 1075,
    LCMPXCHG32	= 1076,
    LCMPXCHG64	= 1077,
    LCMPXCHG8	= 1078,
    LCMPXCHG8B	= 1079,
    LDDQUrm	= 1080,
    LDMXCSR	= 1081,
    LDS16rm	= 1082,
    LDS32rm	= 1083,
    LD_F0	= 1084,
    LD_F1	= 1085,
    LD_F32m	= 1086,
    LD_F64m	= 1087,
    LD_F80m	= 1088,
    LD_Fp032	= 1089,
    LD_Fp064	= 1090,
    LD_Fp080	= 1091,
    LD_Fp132	= 1092,
    LD_Fp164	= 1093,
    LD_Fp180	= 1094,
    LD_Fp32m	= 1095,
    LD_Fp32m64	= 1096,
    LD_Fp32m80	= 1097,
    LD_Fp64m	= 1098,
    LD_Fp64m80	= 1099,
    LD_Fp80m	= 1100,
    LD_Frr	= 1101,
    LEA16r	= 1102,
    LEA32r	= 1103,
    LEA64_32r	= 1104,
    LEA64r	= 1105,
    LEAVE	= 1106,
    LEAVE64	= 1107,
    LES16rm	= 1108,
    LES32rm	= 1109,
    LFENCE	= 1110,
    LFS16rm	= 1111,
    LFS32rm	= 1112,
    LFS64rm	= 1113,
    LGDT16m	= 1114,
    LGDTm	= 1115,
    LGS16rm	= 1116,
    LGS32rm	= 1117,
    LGS64rm	= 1118,
    LIDT16m	= 1119,
    LIDTm	= 1120,
    LLDT16m	= 1121,
    LLDT16r	= 1122,
    LMSW16m	= 1123,
    LMSW16r	= 1124,
    LOCK_ADD16mi	= 1125,
    LOCK_ADD16mi8	= 1126,
    LOCK_ADD16mr	= 1127,
    LOCK_ADD32mi	= 1128,
    LOCK_ADD32mi8	= 1129,
    LOCK_ADD32mr	= 1130,
    LOCK_ADD64mi32	= 1131,
    LOCK_ADD64mi8	= 1132,
    LOCK_ADD64mr	= 1133,
    LOCK_ADD8mi	= 1134,
    LOCK_ADD8mr	= 1135,
    LOCK_AND16mi	= 1136,
    LOCK_AND16mi8	= 1137,
    LOCK_AND16mr	= 1138,
    LOCK_AND32mi	= 1139,
    LOCK_AND32mi8	= 1140,
    LOCK_AND32mr	= 1141,
    LOCK_AND64mi32	= 1142,
    LOCK_AND64mi8	= 1143,
    LOCK_AND64mr	= 1144,
    LOCK_AND8mi	= 1145,
    LOCK_AND8mr	= 1146,
    LOCK_DEC16m	= 1147,
    LOCK_DEC32m	= 1148,
    LOCK_DEC64m	= 1149,
    LOCK_DEC8m	= 1150,
    LOCK_INC16m	= 1151,
    LOCK_INC32m	= 1152,
    LOCK_INC64m	= 1153,
    LOCK_INC8m	= 1154,
    LOCK_OR16mi	= 1155,
    LOCK_OR16mi8	= 1156,
    LOCK_OR16mr	= 1157,
    LOCK_OR32mi	= 1158,
    LOCK_OR32mi8	= 1159,
    LOCK_OR32mr	= 1160,
    LOCK_OR64mi32	= 1161,
    LOCK_OR64mi8	= 1162,
    LOCK_OR64mr	= 1163,
    LOCK_OR8mi	= 1164,
    LOCK_OR8mr	= 1165,
    LOCK_PREFIX	= 1166,
    LOCK_SUB16mi	= 1167,
    LOCK_SUB16mi8	= 1168,
    LOCK_SUB16mr	= 1169,
    LOCK_SUB32mi	= 1170,
    LOCK_SUB32mi8	= 1171,
    LOCK_SUB32mr	= 1172,
    LOCK_SUB64mi32	= 1173,
    LOCK_SUB64mi8	= 1174,
    LOCK_SUB64mr	= 1175,
    LOCK_SUB8mi	= 1176,
    LOCK_SUB8mr	= 1177,
    LOCK_XOR16mi	= 1178,
    LOCK_XOR16mi8	= 1179,
    LOCK_XOR16mr	= 1180,
    LOCK_XOR32mi	= 1181,
    LOCK_XOR32mi8	= 1182,
    LOCK_XOR32mr	= 1183,
    LOCK_XOR64mi32	= 1184,
    LOCK_XOR64mi8	= 1185,
    LOCK_XOR64mr	= 1186,
    LOCK_XOR8mi	= 1187,
    LOCK_XOR8mr	= 1188,
    LODSB	= 1189,
    LODSD	= 1190,
    LODSQ	= 1191,
    LODSW	= 1192,
    LOOP	= 1193,
    LOOPE	= 1194,
    LOOPNE	= 1195,
    LRETI	= 1196,
    LRETIW	= 1197,
    LRETL	= 1198,
    LRETQ	= 1199,
    LRETW	= 1200,
    LSL16rm	= 1201,
    LSL16rr	= 1202,
    LSL32rm	= 1203,
    LSL32rr	= 1204,
    LSL64rm	= 1205,
    LSL64rr	= 1206,
    LSS16rm	= 1207,
    LSS32rm	= 1208,
    LSS64rm	= 1209,
    LTRm	= 1210,
    LTRr	= 1211,
    LXADD16	= 1212,
    LXADD32	= 1213,
    LXADD64	= 1214,
    LXADD8	= 1215,
    LZCNT16rm	= 1216,
    LZCNT16rr	= 1217,
    LZCNT32rm	= 1218,
    LZCNT32rr	= 1219,
    LZCNT64rm	= 1220,
    LZCNT64rr	= 1221,
    MASKMOVDQU	= 1222,
    MASKMOVDQU64	= 1223,
    MAXPDrm	= 1224,
    MAXPDrm_Int	= 1225,
    MAXPDrr	= 1226,
    MAXPDrr_Int	= 1227,
    MAXPSrm	= 1228,
    MAXPSrm_Int	= 1229,
    MAXPSrr	= 1230,
    MAXPSrr_Int	= 1231,
    MAXSDrm	= 1232,
    MAXSDrm_Int	= 1233,
    MAXSDrr	= 1234,
    MAXSDrr_Int	= 1235,
    MAXSSrm	= 1236,
    MAXSSrm_Int	= 1237,
    MAXSSrr	= 1238,
    MAXSSrr_Int	= 1239,
    MFENCE	= 1240,
    MINPDrm	= 1241,
    MINPDrm_Int	= 1242,
    MINPDrr	= 1243,
    MINPDrr_Int	= 1244,
    MINPSrm	= 1245,
    MINPSrm_Int	= 1246,
    MINPSrr	= 1247,
    MINPSrr_Int	= 1248,
    MINSDrm	= 1249,
    MINSDrm_Int	= 1250,
    MINSDrr	= 1251,
    MINSDrr_Int	= 1252,
    MINSSrm	= 1253,
    MINSSrm_Int	= 1254,
    MINSSrr	= 1255,
    MINSSrr_Int	= 1256,
    MMX_CVTPD2PIirm	= 1257,
    MMX_CVTPD2PIirr	= 1258,
    MMX_CVTPI2PDirm	= 1259,
    MMX_CVTPI2PDirr	= 1260,
    MMX_CVTPI2PSirm	= 1261,
    MMX_CVTPI2PSirr	= 1262,
    MMX_CVTPS2PIirm	= 1263,
    MMX_CVTPS2PIirr	= 1264,
    MMX_CVTTPD2PIirm	= 1265,
    MMX_CVTTPD2PIirr	= 1266,
    MMX_CVTTPS2PIirm	= 1267,
    MMX_CVTTPS2PIirr	= 1268,
    MMX_EMMS	= 1269,
    MMX_MASKMOVQ	= 1270,
    MMX_MASKMOVQ64	= 1271,
    MMX_MOVD64from64rr	= 1272,
    MMX_MOVD64grr	= 1273,
    MMX_MOVD64mr	= 1274,
    MMX_MOVD64rm	= 1275,
    MMX_MOVD64rr	= 1276,
    MMX_MOVD64rrv164	= 1277,
    MMX_MOVD64to64rr	= 1278,
    MMX_MOVDQ2Qrr	= 1279,
    MMX_MOVFR642Qrr	= 1280,
    MMX_MOVNTQmr	= 1281,
    MMX_MOVQ2DQrr	= 1282,
    MMX_MOVQ2FR64rr	= 1283,
    MMX_MOVQ64mr	= 1284,
    MMX_MOVQ64rm	= 1285,
    MMX_MOVQ64rr	= 1286,
    MMX_MOVZDI2PDIrm	= 1287,
    MMX_MOVZDI2PDIrr	= 1288,
    MMX_PABSBrm64	= 1289,
    MMX_PABSBrr64	= 1290,
    MMX_PABSDrm64	= 1291,
    MMX_PABSDrr64	= 1292,
    MMX_PABSWrm64	= 1293,
    MMX_PABSWrr64	= 1294,
    MMX_PACKSSDWirm	= 1295,
    MMX_PACKSSDWirr	= 1296,
    MMX_PACKSSWBirm	= 1297,
    MMX_PACKSSWBirr	= 1298,
    MMX_PACKUSWBirm	= 1299,
    MMX_PACKUSWBirr	= 1300,
    MMX_PADDBirm	= 1301,
    MMX_PADDBirr	= 1302,
    MMX_PADDDirm	= 1303,
    MMX_PADDDirr	= 1304,
    MMX_PADDQirm	= 1305,
    MMX_PADDQirr	= 1306,
    MMX_PADDSBirm	= 1307,
    MMX_PADDSBirr	= 1308,
    MMX_PADDSWirm	= 1309,
    MMX_PADDSWirr	= 1310,
    MMX_PADDUSBirm	= 1311,
    MMX_PADDUSBirr	= 1312,
    MMX_PADDUSWirm	= 1313,
    MMX_PADDUSWirr	= 1314,
    MMX_PADDWirm	= 1315,
    MMX_PADDWirr	= 1316,
    MMX_PALIGNR64irm	= 1317,
    MMX_PALIGNR64irr	= 1318,
    MMX_PANDNirm	= 1319,
    MMX_PANDNirr	= 1320,
    MMX_PANDirm	= 1321,
    MMX_PANDirr	= 1322,
    MMX_PAVGBirm	= 1323,
    MMX_PAVGBirr	= 1324,
    MMX_PAVGWirm	= 1325,
    MMX_PAVGWirr	= 1326,
    MMX_PCMPEQBirm	= 1327,
    MMX_PCMPEQBirr	= 1328,
    MMX_PCMPEQDirm	= 1329,
    MMX_PCMPEQDirr	= 1330,
    MMX_PCMPEQWirm	= 1331,
    MMX_PCMPEQWirr	= 1332,
    MMX_PCMPGTBirm	= 1333,
    MMX_PCMPGTBirr	= 1334,
    MMX_PCMPGTDirm	= 1335,
    MMX_PCMPGTDirr	= 1336,
    MMX_PCMPGTWirm	= 1337,
    MMX_PCMPGTWirr	= 1338,
    MMX_PEXTRWirri	= 1339,
    MMX_PHADDSWrm64	= 1340,
    MMX_PHADDSWrr64	= 1341,
    MMX_PHADDWrm64	= 1342,
    MMX_PHADDWrr64	= 1343,
    MMX_PHADDrm64	= 1344,
    MMX_PHADDrr64	= 1345,
    MMX_PHSUBDrm64	= 1346,
    MMX_PHSUBDrr64	= 1347,
    MMX_PHSUBSWrm64	= 1348,
    MMX_PHSUBSWrr64	= 1349,
    MMX_PHSUBWrm64	= 1350,
    MMX_PHSUBWrr64	= 1351,
    MMX_PINSRWirmi	= 1352,
    MMX_PINSRWirri	= 1353,
    MMX_PMADDUBSWrm64	= 1354,
    MMX_PMADDUBSWrr64	= 1355,
    MMX_PMADDWDirm	= 1356,
    MMX_PMADDWDirr	= 1357,
    MMX_PMAXSWirm	= 1358,
    MMX_PMAXSWirr	= 1359,
    MMX_PMAXUBirm	= 1360,
    MMX_PMAXUBirr	= 1361,
    MMX_PMINSWirm	= 1362,
    MMX_PMINSWirr	= 1363,
    MMX_PMINUBirm	= 1364,
    MMX_PMINUBirr	= 1365,
    MMX_PMOVMSKBrr	= 1366,
    MMX_PMULHRSWrm64	= 1367,
    MMX_PMULHRSWrr64	= 1368,
    MMX_PMULHUWirm	= 1369,
    MMX_PMULHUWirr	= 1370,
    MMX_PMULHWirm	= 1371,
    MMX_PMULHWirr	= 1372,
    MMX_PMULLWirm	= 1373,
    MMX_PMULLWirr	= 1374,
    MMX_PMULUDQirm	= 1375,
    MMX_PMULUDQirr	= 1376,
    MMX_PORirm	= 1377,
    MMX_PORirr	= 1378,
    MMX_PSADBWirm	= 1379,
    MMX_PSADBWirr	= 1380,
    MMX_PSHUFBrm64	= 1381,
    MMX_PSHUFBrr64	= 1382,
    MMX_PSHUFWmi	= 1383,
    MMX_PSHUFWri	= 1384,
    MMX_PSIGNBrm64	= 1385,
    MMX_PSIGNBrr64	= 1386,
    MMX_PSIGNDrm64	= 1387,
    MMX_PSIGNDrr64	= 1388,
    MMX_PSIGNWrm64	= 1389,
    MMX_PSIGNWrr64	= 1390,
    MMX_PSLLDri	= 1391,
    MMX_PSLLDrm	= 1392,
    MMX_PSLLDrr	= 1393,
    MMX_PSLLQri	= 1394,
    MMX_PSLLQrm	= 1395,
    MMX_PSLLQrr	= 1396,
    MMX_PSLLWri	= 1397,
    MMX_PSLLWrm	= 1398,
    MMX_PSLLWrr	= 1399,
    MMX_PSRADri	= 1400,
    MMX_PSRADrm	= 1401,
    MMX_PSRADrr	= 1402,
    MMX_PSRAWri	= 1403,
    MMX_PSRAWrm	= 1404,
    MMX_PSRAWrr	= 1405,
    MMX_PSRLDri	= 1406,
    MMX_PSRLDrm	= 1407,
    MMX_PSRLDrr	= 1408,
    MMX_PSRLQri	= 1409,
    MMX_PSRLQrm	= 1410,
    MMX_PSRLQrr	= 1411,
    MMX_PSRLWri	= 1412,
    MMX_PSRLWrm	= 1413,
    MMX_PSRLWrr	= 1414,
    MMX_PSUBBirm	= 1415,
    MMX_PSUBBirr	= 1416,
    MMX_PSUBDirm	= 1417,
    MMX_PSUBDirr	= 1418,
    MMX_PSUBQirm	= 1419,
    MMX_PSUBQirr	= 1420,
    MMX_PSUBSBirm	= 1421,
    MMX_PSUBSBirr	= 1422,
    MMX_PSUBSWirm	= 1423,
    MMX_PSUBSWirr	= 1424,
    MMX_PSUBUSBirm	= 1425,
    MMX_PSUBUSBirr	= 1426,
    MMX_PSUBUSWirm	= 1427,
    MMX_PSUBUSWirr	= 1428,
    MMX_PSUBWirm	= 1429,
    MMX_PSUBWirr	= 1430,
    MMX_PUNPCKHBWirm	= 1431,
    MMX_PUNPCKHBWirr	= 1432,
    MMX_PUNPCKHDQirm	= 1433,
    MMX_PUNPCKHDQirr	= 1434,
    MMX_PUNPCKHWDirm	= 1435,
    MMX_PUNPCKHWDirr	= 1436,
    MMX_PUNPCKLBWirm	= 1437,
    MMX_PUNPCKLBWirr	= 1438,
    MMX_PUNPCKLDQirm	= 1439,
    MMX_PUNPCKLDQirr	= 1440,
    MMX_PUNPCKLWDirm	= 1441,
    MMX_PUNPCKLWDirr	= 1442,
    MMX_PXORirm	= 1443,
    MMX_PXORirr	= 1444,
    MONITOR	= 1445,
    MONITORrrr	= 1446,
    MONTMUL	= 1447,
    MORESTACK_RET	= 1448,
    MORESTACK_RET_RESTORE_R10	= 1449,
    MOV16ao16	= 1450,
    MOV16mi	= 1451,
    MOV16mr	= 1452,
    MOV16ms	= 1453,
    MOV16o16a	= 1454,
    MOV16r0	= 1455,
    MOV16ri	= 1456,
    MOV16rm	= 1457,
    MOV16rr	= 1458,
    MOV16rr_REV	= 1459,
    MOV16rs	= 1460,
    MOV16sm	= 1461,
    MOV16sr	= 1462,
    MOV32ao32	= 1463,
    MOV32cr	= 1464,
    MOV32dr	= 1465,
    MOV32mi	= 1466,
    MOV32mr	= 1467,
    MOV32ms	= 1468,
    MOV32o32a	= 1469,
    MOV32r0	= 1470,
    MOV32rc	= 1471,
    MOV32rd	= 1472,
    MOV32ri	= 1473,
    MOV32rm	= 1474,
    MOV32rr	= 1475,
    MOV32rr_REV	= 1476,
    MOV32rs	= 1477,
    MOV32sm	= 1478,
    MOV32sr	= 1479,
    MOV64cr	= 1480,
    MOV64dr	= 1481,
    MOV64mi32	= 1482,
    MOV64mr	= 1483,
    MOV64ms	= 1484,
    MOV64r0	= 1485,
    MOV64rc	= 1486,
    MOV64rd	= 1487,
    MOV64ri	= 1488,
    MOV64ri32	= 1489,
    MOV64ri64i32	= 1490,
    MOV64rm	= 1491,
    MOV64rr	= 1492,
    MOV64rr_REV	= 1493,
    MOV64rs	= 1494,
    MOV64sm	= 1495,
    MOV64sr	= 1496,
    MOV64toPQIrr	= 1497,
    MOV64toSDrm	= 1498,
    MOV64toSDrr	= 1499,
    MOV8ao8	= 1500,
    MOV8mi	= 1501,
    MOV8mr	= 1502,
    MOV8mr_NOREX	= 1503,
    MOV8o8a	= 1504,
    MOV8r0	= 1505,
    MOV8ri	= 1506,
    MOV8rm	= 1507,
    MOV8rm_NOREX	= 1508,
    MOV8rr	= 1509,
    MOV8rr_NOREX	= 1510,
    MOV8rr_REV	= 1511,
    MOVAPDmr	= 1512,
    MOVAPDrm	= 1513,
    MOVAPDrr	= 1514,
    MOVAPDrr_REV	= 1515,
    MOVAPSmr	= 1516,
    MOVAPSrm	= 1517,
    MOVAPSrr	= 1518,
    MOVAPSrr_REV	= 1519,
    MOVBE16mr	= 1520,
    MOVBE16rm	= 1521,
    MOVBE32mr	= 1522,
    MOVBE32rm	= 1523,
    MOVBE64mr	= 1524,
    MOVBE64rm	= 1525,
    MOVDDUPrm	= 1526,
    MOVDDUPrr	= 1527,
    MOVDI2PDIrm	= 1528,
    MOVDI2PDIrr	= 1529,
    MOVDI2SSrm	= 1530,
    MOVDI2SSrr	= 1531,
    MOVDQAmr	= 1532,
    MOVDQArm	= 1533,
    MOVDQArr	= 1534,
    MOVDQArr_REV	= 1535,
    MOVDQUmr	= 1536,
    MOVDQUmr_Int	= 1537,
    MOVDQUrm	= 1538,
    MOVDQUrr	= 1539,
    MOVDQUrr_REV	= 1540,
    MOVHLPSrr	= 1541,
    MOVHPDmr	= 1542,
    MOVHPDrm	= 1543,
    MOVHPSmr	= 1544,
    MOVHPSrm	= 1545,
    MOVLHPSrr	= 1546,
    MOVLPDmr	= 1547,
    MOVLPDrm	= 1548,
    MOVLPSmr	= 1549,
    MOVLPSrm	= 1550,
    MOVLQ128mr	= 1551,
    MOVMSKPDrr32	= 1552,
    MOVMSKPDrr64	= 1553,
    MOVMSKPSrr32	= 1554,
    MOVMSKPSrr64	= 1555,
    MOVNTDQArm	= 1556,
    MOVNTDQmr	= 1557,
    MOVNTI_64mr	= 1558,
    MOVNTImr	= 1559,
    MOVNTPDmr	= 1560,
    MOVNTPSmr	= 1561,
    MOVPC32r	= 1562,
    MOVPDI2DImr	= 1563,
    MOVPDI2DIrr	= 1564,
    MOVPQI2QImr	= 1565,
    MOVPQIto64rr	= 1566,
    MOVQI2PQIrm	= 1567,
    MOVQxrxr	= 1568,
    MOVSB	= 1569,
    MOVSD	= 1570,
    MOVSDmr	= 1571,
    MOVSDrm	= 1572,
    MOVSDrr	= 1573,
    MOVSDrr_REV	= 1574,
    MOVSDto64mr	= 1575,
    MOVSDto64rr	= 1576,
    MOVSHDUPrm	= 1577,
    MOVSHDUPrr	= 1578,
    MOVSLDUPrm	= 1579,
    MOVSLDUPrr	= 1580,
    MOVSQ	= 1581,
    MOVSS2DImr	= 1582,
    MOVSS2DIrr	= 1583,
    MOVSSmr	= 1584,
    MOVSSrm	= 1585,
    MOVSSrr	= 1586,
    MOVSSrr_REV	= 1587,
    MOVSW	= 1588,
    MOVSX16rm8	= 1589,
    MOVSX16rr8	= 1590,
    MOVSX32rm16	= 1591,
    MOVSX32rm8	= 1592,
    MOVSX32rr16	= 1593,
    MOVSX32rr8	= 1594,
    MOVSX64rm16	= 1595,
    MOVSX64rm32	= 1596,
    MOVSX64rm8	= 1597,
    MOVSX64rr16	= 1598,
    MOVSX64rr32	= 1599,
    MOVSX64rr8	= 1600,
    MOVUPDmr	= 1601,
    MOVUPDrm	= 1602,
    MOVUPDrr	= 1603,
    MOVUPDrr_REV	= 1604,
    MOVUPSmr	= 1605,
    MOVUPSrm	= 1606,
    MOVUPSrr	= 1607,
    MOVUPSrr_REV	= 1608,
    MOVZDI2PDIrm	= 1609,
    MOVZDI2PDIrr	= 1610,
    MOVZPQILo2PQIrm	= 1611,
    MOVZPQILo2PQIrr	= 1612,
    MOVZQI2PQIrm	= 1613,
    MOVZQI2PQIrr	= 1614,
    MOVZX16rm8	= 1615,
    MOVZX16rr8	= 1616,
    MOVZX32_NOREXrm8	= 1617,
    MOVZX32_NOREXrr8	= 1618,
    MOVZX32rm16	= 1619,
    MOVZX32rm8	= 1620,
    MOVZX32rr16	= 1621,
    MOVZX32rr8	= 1622,
    MOVZX64rm16	= 1623,
    MOVZX64rm16_Q	= 1624,
    MOVZX64rm32	= 1625,
    MOVZX64rm8	= 1626,
    MOVZX64rm8_Q	= 1627,
    MOVZX64rr16	= 1628,
    MOVZX64rr16_Q	= 1629,
    MOVZX64rr32	= 1630,
    MOVZX64rr8	= 1631,
    MOVZX64rr8_Q	= 1632,
    MPSADBWrmi	= 1633,
    MPSADBWrri	= 1634,
    MUL16m	= 1635,
    MUL16r	= 1636,
    MUL32m	= 1637,
    MUL32r	= 1638,
    MUL64m	= 1639,
    MUL64r	= 1640,
    MUL8m	= 1641,
    MUL8r	= 1642,
    MULPDrm	= 1643,
    MULPDrr	= 1644,
    MULPSrm	= 1645,
    MULPSrr	= 1646,
    MULSDrm	= 1647,
    MULSDrm_Int	= 1648,
    MULSDrr	= 1649,
    MULSDrr_Int	= 1650,
    MULSSrm	= 1651,
    MULSSrm_Int	= 1652,
    MULSSrr	= 1653,
    MULSSrr_Int	= 1654,
    MULX32rm	= 1655,
    MULX32rr	= 1656,
    MULX64rm	= 1657,
    MULX64rr	= 1658,
    MUL_F32m	= 1659,
    MUL_F64m	= 1660,
    MUL_FI16m	= 1661,
    MUL_FI32m	= 1662,
    MUL_FPrST0	= 1663,
    MUL_FST0r	= 1664,
    MUL_Fp32	= 1665,
    MUL_Fp32m	= 1666,
    MUL_Fp64	= 1667,
    MUL_Fp64m	= 1668,
    MUL_Fp64m32	= 1669,
    MUL_Fp80	= 1670,
    MUL_Fp80m32	= 1671,
    MUL_Fp80m64	= 1672,
    MUL_FpI16m32	= 1673,
    MUL_FpI16m64	= 1674,
    MUL_FpI16m80	= 1675,
    MUL_FpI32m32	= 1676,
    MUL_FpI32m64	= 1677,
    MUL_FpI32m80	= 1678,
    MUL_FrST0	= 1679,
    MWAIT	= 1680,
    MWAITrr	= 1681,
    NEG16m	= 1682,
    NEG16r	= 1683,
    NEG32m	= 1684,
    NEG32r	= 1685,
    NEG64m	= 1686,
    NEG64r	= 1687,
    NEG8m	= 1688,
    NEG8r	= 1689,
    NOOP	= 1690,
    NOOPL	= 1691,
    NOOPW	= 1692,
    NOT16m	= 1693,
    NOT16r	= 1694,
    NOT32m	= 1695,
    NOT32r	= 1696,
    NOT64m	= 1697,
    NOT64r	= 1698,
    NOT8m	= 1699,
    NOT8r	= 1700,
    OR16i16	= 1701,
    OR16mi	= 1702,
    OR16mi8	= 1703,
    OR16mr	= 1704,
    OR16ri	= 1705,
    OR16ri8	= 1706,
    OR16rm	= 1707,
    OR16rr	= 1708,
    OR16rr_REV	= 1709,
    OR32i32	= 1710,
    OR32mi	= 1711,
    OR32mi8	= 1712,
    OR32mr	= 1713,
    OR32mrLocked	= 1714,
    OR32ri	= 1715,
    OR32ri8	= 1716,
    OR32rm	= 1717,
    OR32rr	= 1718,
    OR32rr_REV	= 1719,
    OR64i32	= 1720,
    OR64mi32	= 1721,
    OR64mi8	= 1722,
    OR64mr	= 1723,
    OR64ri32	= 1724,
    OR64ri8	= 1725,
    OR64rm	= 1726,
    OR64rr	= 1727,
    OR64rr_REV	= 1728,
    OR8i8	= 1729,
    OR8mi	= 1730,
    OR8mr	= 1731,
    OR8ri	= 1732,
    OR8rm	= 1733,
    OR8rr	= 1734,
    OR8rr_REV	= 1735,
    ORPDrm	= 1736,
    ORPDrr	= 1737,
    ORPSrm	= 1738,
    ORPSrr	= 1739,
    OUT16ir	= 1740,
    OUT16rr	= 1741,
    OUT32ir	= 1742,
    OUT32rr	= 1743,
    OUT8ir	= 1744,
    OUT8rr	= 1745,
    OUTSB	= 1746,
    OUTSD	= 1747,
    OUTSW	= 1748,
    PABSBrm128	= 1749,
    PABSBrr128	= 1750,
    PABSDrm128	= 1751,
    PABSDrr128	= 1752,
    PABSWrm128	= 1753,
    PABSWrr128	= 1754,
    PACKSSDWrm	= 1755,
    PACKSSDWrr	= 1756,
    PACKSSWBrm	= 1757,
    PACKSSWBrr	= 1758,
    PACKUSDWrm	= 1759,
    PACKUSDWrr	= 1760,
    PACKUSWBrm	= 1761,
    PACKUSWBrr	= 1762,
    PADDBrm	= 1763,
    PADDBrr	= 1764,
    PADDDrm	= 1765,
    PADDDrr	= 1766,
    PADDQrm	= 1767,
    PADDQrr	= 1768,
    PADDSBrm	= 1769,
    PADDSBrr	= 1770,
    PADDSWrm	= 1771,
    PADDSWrr	= 1772,
    PADDUSBrm	= 1773,
    PADDUSBrr	= 1774,
    PADDUSWrm	= 1775,
    PADDUSWrr	= 1776,
    PADDWrm	= 1777,
    PADDWrr	= 1778,
    PALIGNR128rm	= 1779,
    PALIGNR128rr	= 1780,
    PANDNrm	= 1781,
    PANDNrr	= 1782,
    PANDrm	= 1783,
    PANDrr	= 1784,
    PAUSE	= 1785,
    PAVGBrm	= 1786,
    PAVGBrr	= 1787,
    PAVGUSBrm	= 1788,
    PAVGUSBrr	= 1789,
    PAVGWrm	= 1790,
    PAVGWrr	= 1791,
    PBLENDVBrm0	= 1792,
    PBLENDVBrr0	= 1793,
    PBLENDWrmi	= 1794,
    PBLENDWrri	= 1795,
    PCLMULQDQrm	= 1796,
    PCLMULQDQrr	= 1797,
    PCMPEQBrm	= 1798,
    PCMPEQBrr	= 1799,
    PCMPEQDrm	= 1800,
    PCMPEQDrr	= 1801,
    PCMPEQQrm	= 1802,
    PCMPEQQrr	= 1803,
    PCMPEQWrm	= 1804,
    PCMPEQWrr	= 1805,
    PCMPESTRIArm	= 1806,
    PCMPESTRIArr	= 1807,
    PCMPESTRICrm	= 1808,
    PCMPESTRICrr	= 1809,
    PCMPESTRIOrm	= 1810,
    PCMPESTRIOrr	= 1811,
    PCMPESTRISrm	= 1812,
    PCMPESTRISrr	= 1813,
    PCMPESTRIZrm	= 1814,
    PCMPESTRIZrr	= 1815,
    PCMPESTRIrm	= 1816,
    PCMPESTRIrr	= 1817,
    PCMPESTRM128MEM	= 1818,
    PCMPESTRM128REG	= 1819,
    PCMPESTRM128rm	= 1820,
    PCMPESTRM128rr	= 1821,
    PCMPGTBrm	= 1822,
    PCMPGTBrr	= 1823,
    PCMPGTDrm	= 1824,
    PCMPGTDrr	= 1825,
    PCMPGTQrm	= 1826,
    PCMPGTQrr	= 1827,
    PCMPGTWrm	= 1828,
    PCMPGTWrr	= 1829,
    PCMPISTRIArm	= 1830,
    PCMPISTRIArr	= 1831,
    PCMPISTRICrm	= 1832,
    PCMPISTRICrr	= 1833,
    PCMPISTRIOrm	= 1834,
    PCMPISTRIOrr	= 1835,
    PCMPISTRISrm	= 1836,
    PCMPISTRISrr	= 1837,
    PCMPISTRIZrm	= 1838,
    PCMPISTRIZrr	= 1839,
    PCMPISTRIrm	= 1840,
    PCMPISTRIrr	= 1841,
    PCMPISTRM128MEM	= 1842,
    PCMPISTRM128REG	= 1843,
    PCMPISTRM128rm	= 1844,
    PCMPISTRM128rr	= 1845,
    PDEP32rm	= 1846,
    PDEP32rr	= 1847,
    PDEP64rm	= 1848,
    PDEP64rr	= 1849,
    PEXT32rm	= 1850,
    PEXT32rr	= 1851,
    PEXT64rm	= 1852,
    PEXT64rr	= 1853,
    PEXTRBmr	= 1854,
    PEXTRBrr	= 1855,
    PEXTRDmr	= 1856,
    PEXTRDrr	= 1857,
    PEXTRQmr	= 1858,
    PEXTRQrr	= 1859,
    PEXTRWmr	= 1860,
    PEXTRWri	= 1861,
    PF2IDrm	= 1862,
    PF2IDrr	= 1863,
    PF2IWrm	= 1864,
    PF2IWrr	= 1865,
    PFACCrm	= 1866,
    PFACCrr	= 1867,
    PFADDrm	= 1868,
    PFADDrr	= 1869,
    PFCMPEQrm	= 1870,
    PFCMPEQrr	= 1871,
    PFCMPGErm	= 1872,
    PFCMPGErr	= 1873,
    PFCMPGTrm	= 1874,
    PFCMPGTrr	= 1875,
    PFMAXrm	= 1876,
    PFMAXrr	= 1877,
    PFMINrm	= 1878,
    PFMINrr	= 1879,
    PFMULrm	= 1880,
    PFMULrr	= 1881,
    PFNACCrm	= 1882,
    PFNACCrr	= 1883,
    PFPNACCrm	= 1884,
    PFPNACCrr	= 1885,
    PFRCPIT1rm	= 1886,
    PFRCPIT1rr	= 1887,
    PFRCPIT2rm	= 1888,
    PFRCPIT2rr	= 1889,
    PFRCPrm	= 1890,
    PFRCPrr	= 1891,
    PFRSQIT1rm	= 1892,
    PFRSQIT1rr	= 1893,
    PFRSQRTrm	= 1894,
    PFRSQRTrr	= 1895,
    PFSUBRrm	= 1896,
    PFSUBRrr	= 1897,
    PFSUBrm	= 1898,
    PFSUBrr	= 1899,
    PHADDDrm	= 1900,
    PHADDDrr	= 1901,
    PHADDSWrm128	= 1902,
    PHADDSWrr128	= 1903,
    PHADDWrm	= 1904,
    PHADDWrr	= 1905,
    PHMINPOSUWrm128	= 1906,
    PHMINPOSUWrr128	= 1907,
    PHSUBDrm	= 1908,
    PHSUBDrr	= 1909,
    PHSUBSWrm128	= 1910,
    PHSUBSWrr128	= 1911,
    PHSUBWrm	= 1912,
    PHSUBWrr	= 1913,
    PI2FDrm	= 1914,
    PI2FDrr	= 1915,
    PI2FWrm	= 1916,
    PI2FWrr	= 1917,
    PINSRBrm	= 1918,
    PINSRBrr	= 1919,
    PINSRDrm	= 1920,
    PINSRDrr	= 1921,
    PINSRQrm	= 1922,
    PINSRQrr	= 1923,
    PINSRWrmi	= 1924,
    PINSRWrri	= 1925,
    PMADDUBSWrm128	= 1926,
    PMADDUBSWrr128	= 1927,
    PMADDWDrm	= 1928,
    PMADDWDrr	= 1929,
    PMAXSBrm	= 1930,
    PMAXSBrr	= 1931,
    PMAXSDrm	= 1932,
    PMAXSDrr	= 1933,
    PMAXSWrm	= 1934,
    PMAXSWrr	= 1935,
    PMAXUBrm	= 1936,
    PMAXUBrr	= 1937,
    PMAXUDrm	= 1938,
    PMAXUDrr	= 1939,
    PMAXUWrm	= 1940,
    PMAXUWrr	= 1941,
    PMINSBrm	= 1942,
    PMINSBrr	= 1943,
    PMINSDrm	= 1944,
    PMINSDrr	= 1945,
    PMINSWrm	= 1946,
    PMINSWrr	= 1947,
    PMINUBrm	= 1948,
    PMINUBrr	= 1949,
    PMINUDrm	= 1950,
    PMINUDrr	= 1951,
    PMINUWrm	= 1952,
    PMINUWrr	= 1953,
    PMOVMSKBrr	= 1954,
    PMOVSXBDrm	= 1955,
    PMOVSXBDrr	= 1956,
    PMOVSXBQrm	= 1957,
    PMOVSXBQrr	= 1958,
    PMOVSXBWrm	= 1959,
    PMOVSXBWrr	= 1960,
    PMOVSXDQrm	= 1961,
    PMOVSXDQrr	= 1962,
    PMOVSXWDrm	= 1963,
    PMOVSXWDrr	= 1964,
    PMOVSXWQrm	= 1965,
    PMOVSXWQrr	= 1966,
    PMOVZXBDrm	= 1967,
    PMOVZXBDrr	= 1968,
    PMOVZXBQrm	= 1969,
    PMOVZXBQrr	= 1970,
    PMOVZXBWrm	= 1971,
    PMOVZXBWrr	= 1972,
    PMOVZXDQrm	= 1973,
    PMOVZXDQrr	= 1974,
    PMOVZXWDrm	= 1975,
    PMOVZXWDrr	= 1976,
    PMOVZXWQrm	= 1977,
    PMOVZXWQrr	= 1978,
    PMULDQrm	= 1979,
    PMULDQrr	= 1980,
    PMULHRSWrm128	= 1981,
    PMULHRSWrr128	= 1982,
    PMULHRWrm	= 1983,
    PMULHRWrr	= 1984,
    PMULHUWrm	= 1985,
    PMULHUWrr	= 1986,
    PMULHWrm	= 1987,
    PMULHWrr	= 1988,
    PMULLDrm	= 1989,
    PMULLDrr	= 1990,
    PMULLWrm	= 1991,
    PMULLWrr	= 1992,
    PMULUDQrm	= 1993,
    PMULUDQrr	= 1994,
    POP16r	= 1995,
    POP16rmm	= 1996,
    POP16rmr	= 1997,
    POP32r	= 1998,
    POP32rmm	= 1999,
    POP32rmr	= 2000,
    POP64r	= 2001,
    POP64rmm	= 2002,
    POP64rmr	= 2003,
    POPA32	= 2004,
    POPCNT16rm	= 2005,
    POPCNT16rr	= 2006,
    POPCNT32rm	= 2007,
    POPCNT32rr	= 2008,
    POPCNT64rm	= 2009,
    POPCNT64rr	= 2010,
    POPDS16	= 2011,
    POPDS32	= 2012,
    POPES16	= 2013,
    POPES32	= 2014,
    POPF16	= 2015,
    POPF32	= 2016,
    POPF64	= 2017,
    POPFS16	= 2018,
    POPFS32	= 2019,
    POPFS64	= 2020,
    POPGS16	= 2021,
    POPGS32	= 2022,
    POPGS64	= 2023,
    POPSS16	= 2024,
    POPSS32	= 2025,
    PORrm	= 2026,
    PORrr	= 2027,
    PREFETCH	= 2028,
    PREFETCHNTA	= 2029,
    PREFETCHT0	= 2030,
    PREFETCHT1	= 2031,
    PREFETCHT2	= 2032,
    PREFETCHW	= 2033,
    PSADBWrm	= 2034,
    PSADBWrr	= 2035,
    PSHUFBrm	= 2036,
    PSHUFBrr	= 2037,
    PSHUFDmi	= 2038,
    PSHUFDri	= 2039,
    PSHUFHWmi	= 2040,
    PSHUFHWri	= 2041,
    PSHUFLWmi	= 2042,
    PSHUFLWri	= 2043,
    PSIGNBrm	= 2044,
    PSIGNBrr	= 2045,
    PSIGNDrm	= 2046,
    PSIGNDrr	= 2047,
    PSIGNWrm	= 2048,
    PSIGNWrr	= 2049,
    PSLLDQri	= 2050,
    PSLLDri	= 2051,
    PSLLDrm	= 2052,
    PSLLDrr	= 2053,
    PSLLQri	= 2054,
    PSLLQrm	= 2055,
    PSLLQrr	= 2056,
    PSLLWri	= 2057,
    PSLLWrm	= 2058,
    PSLLWrr	= 2059,
    PSRADri	= 2060,
    PSRADrm	= 2061,
    PSRADrr	= 2062,
    PSRAWri	= 2063,
    PSRAWrm	= 2064,
    PSRAWrr	= 2065,
    PSRLDQri	= 2066,
    PSRLDri	= 2067,
    PSRLDrm	= 2068,
    PSRLDrr	= 2069,
    PSRLQri	= 2070,
    PSRLQrm	= 2071,
    PSRLQrr	= 2072,
    PSRLWri	= 2073,
    PSRLWrm	= 2074,
    PSRLWrr	= 2075,
    PSUBBrm	= 2076,
    PSUBBrr	= 2077,
    PSUBDrm	= 2078,
    PSUBDrr	= 2079,
    PSUBQrm	= 2080,
    PSUBQrr	= 2081,
    PSUBSBrm	= 2082,
    PSUBSBrr	= 2083,
    PSUBSWrm	= 2084,
    PSUBSWrr	= 2085,
    PSUBUSBrm	= 2086,
    PSUBUSBrr	= 2087,
    PSUBUSWrm	= 2088,
    PSUBUSWrr	= 2089,
    PSUBWrm	= 2090,
    PSUBWrr	= 2091,
    PSWAPDrm	= 2092,
    PSWAPDrr	= 2093,
    PTESTrm	= 2094,
    PTESTrr	= 2095,
    PUNPCKHBWrm	= 2096,
    PUNPCKHBWrr	= 2097,
    PUNPCKHDQrm	= 2098,
    PUNPCKHDQrr	= 2099,
    PUNPCKHQDQrm	= 2100,
    PUNPCKHQDQrr	= 2101,
    PUNPCKHWDrm	= 2102,
    PUNPCKHWDrr	= 2103,
    PUNPCKLBWrm	= 2104,
    PUNPCKLBWrr	= 2105,
    PUNPCKLDQrm	= 2106,
    PUNPCKLDQrr	= 2107,
    PUNPCKLQDQrm	= 2108,
    PUNPCKLQDQrr	= 2109,
    PUNPCKLWDrm	= 2110,
    PUNPCKLWDrr	= 2111,
    PUSH16r	= 2112,
    PUSH16rmm	= 2113,
    PUSH16rmr	= 2114,
    PUSH32r	= 2115,
    PUSH32rmm	= 2116,
    PUSH32rmr	= 2117,
    PUSH64i16	= 2118,
    PUSH64i32	= 2119,
    PUSH64i8	= 2120,
    PUSH64r	= 2121,
    PUSH64rmm	= 2122,
    PUSH64rmr	= 2123,
    PUSHA32	= 2124,
    PUSHCS16	= 2125,
    PUSHCS32	= 2126,
    PUSHDS16	= 2127,
    PUSHDS32	= 2128,
    PUSHES16	= 2129,
    PUSHES32	= 2130,
    PUSHF16	= 2131,
    PUSHF32	= 2132,
    PUSHF64	= 2133,
    PUSHFS16	= 2134,
    PUSHFS32	= 2135,
    PUSHFS64	= 2136,
    PUSHGS16	= 2137,
    PUSHGS32	= 2138,
    PUSHGS64	= 2139,
    PUSHSS16	= 2140,
    PUSHSS32	= 2141,
    PUSHi16	= 2142,
    PUSHi32	= 2143,
    PUSHi8	= 2144,
    PXORrm	= 2145,
    PXORrr	= 2146,
    RCL16m1	= 2147,
    RCL16mCL	= 2148,
    RCL16mi	= 2149,
    RCL16r1	= 2150,
    RCL16rCL	= 2151,
    RCL16ri	= 2152,
    RCL32m1	= 2153,
    RCL32mCL	= 2154,
    RCL32mi	= 2155,
    RCL32r1	= 2156,
    RCL32rCL	= 2157,
    RCL32ri	= 2158,
    RCL64m1	= 2159,
    RCL64mCL	= 2160,
    RCL64mi	= 2161,
    RCL64r1	= 2162,
    RCL64rCL	= 2163,
    RCL64ri	= 2164,
    RCL8m1	= 2165,
    RCL8mCL	= 2166,
    RCL8mi	= 2167,
    RCL8r1	= 2168,
    RCL8rCL	= 2169,
    RCL8ri	= 2170,
    RCPPSm	= 2171,
    RCPPSm_Int	= 2172,
    RCPPSr	= 2173,
    RCPPSr_Int	= 2174,
    RCPSSm	= 2175,
    RCPSSm_Int	= 2176,
    RCPSSr	= 2177,
    RCPSSr_Int	= 2178,
    RCR16m1	= 2179,
    RCR16mCL	= 2180,
    RCR16mi	= 2181,
    RCR16r1	= 2182,
    RCR16rCL	= 2183,
    RCR16ri	= 2184,
    RCR32m1	= 2185,
    RCR32mCL	= 2186,
    RCR32mi	= 2187,
    RCR32r1	= 2188,
    RCR32rCL	= 2189,
    RCR32ri	= 2190,
    RCR64m1	= 2191,
    RCR64mCL	= 2192,
    RCR64mi	= 2193,
    RCR64r1	= 2194,
    RCR64rCL	= 2195,
    RCR64ri	= 2196,
    RCR8m1	= 2197,
    RCR8mCL	= 2198,
    RCR8mi	= 2199,
    RCR8r1	= 2200,
    RCR8rCL	= 2201,
    RCR8ri	= 2202,
    RDFSBASE	= 2203,
    RDFSBASE64	= 2204,
    RDGSBASE	= 2205,
    RDGSBASE64	= 2206,
    RDMSR	= 2207,
    RDPMC	= 2208,
    RDRAND16r	= 2209,
    RDRAND32r	= 2210,
    RDRAND64r	= 2211,
    RDTSC	= 2212,
    RDTSCP	= 2213,
    RELEASE_MOV16mr	= 2214,
    RELEASE_MOV32mr	= 2215,
    RELEASE_MOV64mr	= 2216,
    RELEASE_MOV8mr	= 2217,
    REPNE_PREFIX	= 2218,
    REP_MOVSB_32	= 2219,
    REP_MOVSB_64	= 2220,
    REP_MOVSD_32	= 2221,
    REP_MOVSD_64	= 2222,
    REP_MOVSQ_64	= 2223,
    REP_MOVSW_32	= 2224,
    REP_MOVSW_64	= 2225,
    REP_PREFIX	= 2226,
    REP_STOSB_32	= 2227,
    REP_STOSB_64	= 2228,
    REP_STOSD_32	= 2229,
    REP_STOSD_64	= 2230,
    REP_STOSQ_64	= 2231,
    REP_STOSW_32	= 2232,
    REP_STOSW_64	= 2233,
    RET	= 2234,
    RETI	= 2235,
    RETIW	= 2236,
    RETW	= 2237,
    REX64_PREFIX	= 2238,
    ROL16m1	= 2239,
    ROL16mCL	= 2240,
    ROL16mi	= 2241,
    ROL16r1	= 2242,
    ROL16rCL	= 2243,
    ROL16ri	= 2244,
    ROL32m1	= 2245,
    ROL32mCL	= 2246,
    ROL32mi	= 2247,
    ROL32r1	= 2248,
    ROL32rCL	= 2249,
    ROL32ri	= 2250,
    ROL64m1	= 2251,
    ROL64mCL	= 2252,
    ROL64mi	= 2253,
    ROL64r1	= 2254,
    ROL64rCL	= 2255,
    ROL64ri	= 2256,
    ROL8m1	= 2257,
    ROL8mCL	= 2258,
    ROL8mi	= 2259,
    ROL8r1	= 2260,
    ROL8rCL	= 2261,
    ROL8ri	= 2262,
    ROR16m1	= 2263,
    ROR16mCL	= 2264,
    ROR16mi	= 2265,
    ROR16r1	= 2266,
    ROR16rCL	= 2267,
    ROR16ri	= 2268,
    ROR32m1	= 2269,
    ROR32mCL	= 2270,
    ROR32mi	= 2271,
    ROR32r1	= 2272,
    ROR32rCL	= 2273,
    ROR32ri	= 2274,
    ROR64m1	= 2275,
    ROR64mCL	= 2276,
    ROR64mi	= 2277,
    ROR64r1	= 2278,
    ROR64rCL	= 2279,
    ROR64ri	= 2280,
    ROR8m1	= 2281,
    ROR8mCL	= 2282,
    ROR8mi	= 2283,
    ROR8r1	= 2284,
    ROR8rCL	= 2285,
    ROR8ri	= 2286,
    RORX32mi	= 2287,
    RORX32ri	= 2288,
    RORX64mi	= 2289,
    RORX64ri	= 2290,
    ROUNDPDm	= 2291,
    ROUNDPDr	= 2292,
    ROUNDPSm	= 2293,
    ROUNDPSr	= 2294,
    ROUNDSDm	= 2295,
    ROUNDSDr	= 2296,
    ROUNDSDr_Int	= 2297,
    ROUNDSSm	= 2298,
    ROUNDSSr	= 2299,
    ROUNDSSr_Int	= 2300,
    RSM	= 2301,
    RSQRTPSm	= 2302,
    RSQRTPSm_Int	= 2303,
    RSQRTPSr	= 2304,
    RSQRTPSr_Int	= 2305,
    RSQRTSSm	= 2306,
    RSQRTSSm_Int	= 2307,
    RSQRTSSr	= 2308,
    RSQRTSSr_Int	= 2309,
    SAHF	= 2310,
    SAR16m1	= 2311,
    SAR16mCL	= 2312,
    SAR16mi	= 2313,
    SAR16r1	= 2314,
    SAR16rCL	= 2315,
    SAR16ri	= 2316,
    SAR32m1	= 2317,
    SAR32mCL	= 2318,
    SAR32mi	= 2319,
    SAR32r1	= 2320,
    SAR32rCL	= 2321,
    SAR32ri	= 2322,
    SAR64m1	= 2323,
    SAR64mCL	= 2324,
    SAR64mi	= 2325,
    SAR64r1	= 2326,
    SAR64rCL	= 2327,
    SAR64ri	= 2328,
    SAR8m1	= 2329,
    SAR8mCL	= 2330,
    SAR8mi	= 2331,
    SAR8r1	= 2332,
    SAR8rCL	= 2333,
    SAR8ri	= 2334,
    SARX32rm	= 2335,
    SARX32rr	= 2336,
    SARX64rm	= 2337,
    SARX64rr	= 2338,
    SBB16i16	= 2339,
    SBB16mi	= 2340,
    SBB16mi8	= 2341,
    SBB16mr	= 2342,
    SBB16ri	= 2343,
    SBB16ri8	= 2344,
    SBB16rm	= 2345,
    SBB16rr	= 2346,
    SBB16rr_REV	= 2347,
    SBB32i32	= 2348,
    SBB32mi	= 2349,
    SBB32mi8	= 2350,
    SBB32mr	= 2351,
    SBB32ri	= 2352,
    SBB32ri8	= 2353,
    SBB32rm	= 2354,
    SBB32rr	= 2355,
    SBB32rr_REV	= 2356,
    SBB64i32	= 2357,
    SBB64mi32	= 2358,
    SBB64mi8	= 2359,
    SBB64mr	= 2360,
    SBB64ri32	= 2361,
    SBB64ri8	= 2362,
    SBB64rm	= 2363,
    SBB64rr	= 2364,
    SBB64rr_REV	= 2365,
    SBB8i8	= 2366,
    SBB8mi	= 2367,
    SBB8mr	= 2368,
    SBB8ri	= 2369,
    SBB8rm	= 2370,
    SBB8rr	= 2371,
    SBB8rr_REV	= 2372,
    SCAS16	= 2373,
    SCAS32	= 2374,
    SCAS64	= 2375,
    SCAS8	= 2376,
    SEG_ALLOCA_32	= 2377,
    SEG_ALLOCA_64	= 2378,
    SETAEm	= 2379,
    SETAEr	= 2380,
    SETAm	= 2381,
    SETAr	= 2382,
    SETBEm	= 2383,
    SETBEr	= 2384,
    SETB_C16r	= 2385,
    SETB_C32r	= 2386,
    SETB_C64r	= 2387,
    SETB_C8r	= 2388,
    SETBm	= 2389,
    SETBr	= 2390,
    SETEm	= 2391,
    SETEr	= 2392,
    SETGEm	= 2393,
    SETGEr	= 2394,
    SETGm	= 2395,
    SETGr	= 2396,
    SETLEm	= 2397,
    SETLEr	= 2398,
    SETLm	= 2399,
    SETLr	= 2400,
    SETNEm	= 2401,
    SETNEr	= 2402,
    SETNOm	= 2403,
    SETNOr	= 2404,
    SETNPm	= 2405,
    SETNPr	= 2406,
    SETNSm	= 2407,
    SETNSr	= 2408,
    SETOm	= 2409,
    SETOr	= 2410,
    SETPm	= 2411,
    SETPr	= 2412,
    SETSm	= 2413,
    SETSr	= 2414,
    SFENCE	= 2415,
    SGDT16m	= 2416,
    SGDTm	= 2417,
    SHL16m1	= 2418,
    SHL16mCL	= 2419,
    SHL16mi	= 2420,
    SHL16r1	= 2421,
    SHL16rCL	= 2422,
    SHL16ri	= 2423,
    SHL32m1	= 2424,
    SHL32mCL	= 2425,
    SHL32mi	= 2426,
    SHL32r1	= 2427,
    SHL32rCL	= 2428,
    SHL32ri	= 2429,
    SHL64m1	= 2430,
    SHL64mCL	= 2431,
    SHL64mi	= 2432,
    SHL64r1	= 2433,
    SHL64rCL	= 2434,
    SHL64ri	= 2435,
    SHL8m1	= 2436,
    SHL8mCL	= 2437,
    SHL8mi	= 2438,
    SHL8r1	= 2439,
    SHL8rCL	= 2440,
    SHL8ri	= 2441,
    SHLD16mrCL	= 2442,
    SHLD16mri8	= 2443,
    SHLD16rrCL	= 2444,
    SHLD16rri8	= 2445,
    SHLD32mrCL	= 2446,
    SHLD32mri8	= 2447,
    SHLD32rrCL	= 2448,
    SHLD32rri8	= 2449,
    SHLD64mrCL	= 2450,
    SHLD64mri8	= 2451,
    SHLD64rrCL	= 2452,
    SHLD64rri8	= 2453,
    SHLX32rm	= 2454,
    SHLX32rr	= 2455,
    SHLX64rm	= 2456,
    SHLX64rr	= 2457,
    SHR16m1	= 2458,
    SHR16mCL	= 2459,
    SHR16mi	= 2460,
    SHR16r1	= 2461,
    SHR16rCL	= 2462,
    SHR16ri	= 2463,
    SHR32m1	= 2464,
    SHR32mCL	= 2465,
    SHR32mi	= 2466,
    SHR32r1	= 2467,
    SHR32rCL	= 2468,
    SHR32ri	= 2469,
    SHR64m1	= 2470,
    SHR64mCL	= 2471,
    SHR64mi	= 2472,
    SHR64r1	= 2473,
    SHR64rCL	= 2474,
    SHR64ri	= 2475,
    SHR8m1	= 2476,
    SHR8mCL	= 2477,
    SHR8mi	= 2478,
    SHR8r1	= 2479,
    SHR8rCL	= 2480,
    SHR8ri	= 2481,
    SHRD16mrCL	= 2482,
    SHRD16mri8	= 2483,
    SHRD16rrCL	= 2484,
    SHRD16rri8	= 2485,
    SHRD32mrCL	= 2486,
    SHRD32mri8	= 2487,
    SHRD32rrCL	= 2488,
    SHRD32rri8	= 2489,
    SHRD64mrCL	= 2490,
    SHRD64mri8	= 2491,
    SHRD64rrCL	= 2492,
    SHRD64rri8	= 2493,
    SHRX32rm	= 2494,
    SHRX32rr	= 2495,
    SHRX64rm	= 2496,
    SHRX64rr	= 2497,
    SHUFPDrmi	= 2498,
    SHUFPDrri	= 2499,
    SHUFPSrmi	= 2500,
    SHUFPSrri	= 2501,
    SIDT16m	= 2502,
    SIDTm	= 2503,
    SIN_F	= 2504,
    SIN_Fp32	= 2505,
    SIN_Fp64	= 2506,
    SIN_Fp80	= 2507,
    SKINIT	= 2508,
    SLDT16m	= 2509,
    SLDT16r	= 2510,
    SLDT32r	= 2511,
    SLDT64m	= 2512,
    SLDT64r	= 2513,
    SMSW16m	= 2514,
    SMSW16r	= 2515,
    SMSW32r	= 2516,
    SMSW64r	= 2517,
    SQRTPDm	= 2518,
    SQRTPDm_Int	= 2519,
    SQRTPDr	= 2520,
    SQRTPDr_Int	= 2521,
    SQRTPSm	= 2522,
    SQRTPSm_Int	= 2523,
    SQRTPSr	= 2524,
    SQRTPSr_Int	= 2525,
    SQRTSDm	= 2526,
    SQRTSDm_Int	= 2527,
    SQRTSDr	= 2528,
    SQRTSDr_Int	= 2529,
    SQRTSSm	= 2530,
    SQRTSSm_Int	= 2531,
    SQRTSSr	= 2532,
    SQRTSSr_Int	= 2533,
    SQRT_F	= 2534,
    SQRT_Fp32	= 2535,
    SQRT_Fp64	= 2536,
    SQRT_Fp80	= 2537,
    SS_PREFIX	= 2538,
    STC	= 2539,
    STD	= 2540,
    STGI	= 2541,
    STI	= 2542,
    STMXCSR	= 2543,
    STOSB	= 2544,
    STOSD	= 2545,
    STOSQ	= 2546,
    STOSW	= 2547,
    STR16r	= 2548,
    STR32r	= 2549,
    STR64r	= 2550,
    STRm	= 2551,
    ST_F32m	= 2552,
    ST_F64m	= 2553,
    ST_FP32m	= 2554,
    ST_FP64m	= 2555,
    ST_FP80m	= 2556,
    ST_FPrr	= 2557,
    ST_Fp32m	= 2558,
    ST_Fp64m	= 2559,
    ST_Fp64m32	= 2560,
    ST_Fp80m32	= 2561,
    ST_Fp80m64	= 2562,
    ST_FpP32m	= 2563,
    ST_FpP64m	= 2564,
    ST_FpP64m32	= 2565,
    ST_FpP80m	= 2566,
    ST_FpP80m32	= 2567,
    ST_FpP80m64	= 2568,
    ST_Frr	= 2569,
    SUB16i16	= 2570,
    SUB16mi	= 2571,
    SUB16mi8	= 2572,
    SUB16mr	= 2573,
    SUB16ri	= 2574,
    SUB16ri8	= 2575,
    SUB16rm	= 2576,
    SUB16rr	= 2577,
    SUB16rr_REV	= 2578,
    SUB32i32	= 2579,
    SUB32mi	= 2580,
    SUB32mi8	= 2581,
    SUB32mr	= 2582,
    SUB32ri	= 2583,
    SUB32ri8	= 2584,
    SUB32rm	= 2585,
    SUB32rr	= 2586,
    SUB32rr_REV	= 2587,
    SUB64i32	= 2588,
    SUB64mi32	= 2589,
    SUB64mi8	= 2590,
    SUB64mr	= 2591,
    SUB64ri32	= 2592,
    SUB64ri8	= 2593,
    SUB64rm	= 2594,
    SUB64rr	= 2595,
    SUB64rr_REV	= 2596,
    SUB8i8	= 2597,
    SUB8mi	= 2598,
    SUB8mr	= 2599,
    SUB8ri	= 2600,
    SUB8rm	= 2601,
    SUB8rr	= 2602,
    SUB8rr_REV	= 2603,
    SUBPDrm	= 2604,
    SUBPDrr	= 2605,
    SUBPSrm	= 2606,
    SUBPSrr	= 2607,
    SUBR_F32m	= 2608,
    SUBR_F64m	= 2609,
    SUBR_FI16m	= 2610,
    SUBR_FI32m	= 2611,
    SUBR_FPrST0	= 2612,
    SUBR_FST0r	= 2613,
    SUBR_Fp32m	= 2614,
    SUBR_Fp64m	= 2615,
    SUBR_Fp64m32	= 2616,
    SUBR_Fp80m32	= 2617,
    SUBR_Fp80m64	= 2618,
    SUBR_FpI16m32	= 2619,
    SUBR_FpI16m64	= 2620,
    SUBR_FpI16m80	= 2621,
    SUBR_FpI32m32	= 2622,
    SUBR_FpI32m64	= 2623,
    SUBR_FpI32m80	= 2624,
    SUBR_FrST0	= 2625,
    SUBSDrm	= 2626,
    SUBSDrm_Int	= 2627,
    SUBSDrr	= 2628,
    SUBSDrr_Int	= 2629,
    SUBSSrm	= 2630,
    SUBSSrm_Int	= 2631,
    SUBSSrr	= 2632,
    SUBSSrr_Int	= 2633,
    SUB_F32m	= 2634,
    SUB_F64m	= 2635,
    SUB_FI16m	= 2636,
    SUB_FI32m	= 2637,
    SUB_FPrST0	= 2638,
    SUB_FST0r	= 2639,
    SUB_Fp32	= 2640,
    SUB_Fp32m	= 2641,
    SUB_Fp64	= 2642,
    SUB_Fp64m	= 2643,
    SUB_Fp64m32	= 2644,
    SUB_Fp80	= 2645,
    SUB_Fp80m32	= 2646,
    SUB_Fp80m64	= 2647,
    SUB_FpI16m32	= 2648,
    SUB_FpI16m64	= 2649,
    SUB_FpI16m80	= 2650,
    SUB_FpI32m32	= 2651,
    SUB_FpI32m64	= 2652,
    SUB_FpI32m80	= 2653,
    SUB_FrST0	= 2654,
    SWAPGS	= 2655,
    SYSCALL	= 2656,
    SYSENTER	= 2657,
    SYSEXIT	= 2658,
    SYSEXIT64	= 2659,
    SYSRET	= 2660,
    SYSRET64	= 2661,
    TAILJMPd	= 2662,
    TAILJMPd64	= 2663,
    TAILJMPm	= 2664,
    TAILJMPm64	= 2665,
    TAILJMPr	= 2666,
    TAILJMPr64	= 2667,
    TCRETURNdi	= 2668,
    TCRETURNdi64	= 2669,
    TCRETURNmi	= 2670,
    TCRETURNmi64	= 2671,
    TCRETURNri	= 2672,
    TCRETURNri64	= 2673,
    TEST16i16	= 2674,
    TEST16mi	= 2675,
    TEST16ri	= 2676,
    TEST16rm	= 2677,
    TEST16rr	= 2678,
    TEST32i32	= 2679,
    TEST32mi	= 2680,
    TEST32ri	= 2681,
    TEST32rm	= 2682,
    TEST32rr	= 2683,
    TEST64i32	= 2684,
    TEST64mi32	= 2685,
    TEST64ri32	= 2686,
    TEST64rm	= 2687,
    TEST64rr	= 2688,
    TEST8i8	= 2689,
    TEST8mi	= 2690,
    TEST8ri	= 2691,
    TEST8ri_NOREX	= 2692,
    TEST8rm	= 2693,
    TEST8rr	= 2694,
    TLSCall_32	= 2695,
    TLSCall_64	= 2696,
    TLS_addr32	= 2697,
    TLS_addr64	= 2698,
    TRAP	= 2699,
    TST_F	= 2700,
    TST_Fp32	= 2701,
    TST_Fp64	= 2702,
    TST_Fp80	= 2703,
    TZCNT16rm	= 2704,
    TZCNT16rr	= 2705,
    TZCNT32rm	= 2706,
    TZCNT32rr	= 2707,
    TZCNT64rm	= 2708,
    TZCNT64rr	= 2709,
    UCOMISDrm	= 2710,
    UCOMISDrr	= 2711,
    UCOMISSrm	= 2712,
    UCOMISSrr	= 2713,
    UCOM_FIPr	= 2714,
    UCOM_FIr	= 2715,
    UCOM_FPPr	= 2716,
    UCOM_FPr	= 2717,
    UCOM_FpIr32	= 2718,
    UCOM_FpIr64	= 2719,
    UCOM_FpIr80	= 2720,
    UCOM_Fpr32	= 2721,
    UCOM_Fpr64	= 2722,
    UCOM_Fpr80	= 2723,
    UCOM_Fr	= 2724,
    UD2B	= 2725,
    UNPCKHPDrm	= 2726,
    UNPCKHPDrr	= 2727,
    UNPCKHPSrm	= 2728,
    UNPCKHPSrr	= 2729,
    UNPCKLPDrm	= 2730,
    UNPCKLPDrr	= 2731,
    UNPCKLPSrm	= 2732,
    UNPCKLPSrr	= 2733,
    VAARG_64	= 2734,
    VADDPDYrm	= 2735,
    VADDPDYrr	= 2736,
    VADDPDrm	= 2737,
    VADDPDrr	= 2738,
    VADDPSYrm	= 2739,
    VADDPSYrr	= 2740,
    VADDPSrm	= 2741,
    VADDPSrr	= 2742,
    VADDSDrm	= 2743,
    VADDSDrm_Int	= 2744,
    VADDSDrr	= 2745,
    VADDSDrr_Int	= 2746,
    VADDSSrm	= 2747,
    VADDSSrm_Int	= 2748,
    VADDSSrr	= 2749,
    VADDSSrr_Int	= 2750,
    VADDSUBPDYrm	= 2751,
    VADDSUBPDYrr	= 2752,
    VADDSUBPDrm	= 2753,
    VADDSUBPDrr	= 2754,
    VADDSUBPSYrm	= 2755,
    VADDSUBPSYrr	= 2756,
    VADDSUBPSrm	= 2757,
    VADDSUBPSrr	= 2758,
    VAESDECLASTrm	= 2759,
    VAESDECLASTrr	= 2760,
    VAESDECrm	= 2761,
    VAESDECrr	= 2762,
    VAESENCLASTrm	= 2763,
    VAESENCLASTrr	= 2764,
    VAESENCrm	= 2765,
    VAESENCrr	= 2766,
    VAESIMCrm	= 2767,
    VAESIMCrr	= 2768,
    VAESKEYGENASSIST128rm	= 2769,
    VAESKEYGENASSIST128rr	= 2770,
    VANDNPDYrm	= 2771,
    VANDNPDYrr	= 2772,
    VANDNPDrm	= 2773,
    VANDNPDrr	= 2774,
    VANDNPSYrm	= 2775,
    VANDNPSYrr	= 2776,
    VANDNPSrm	= 2777,
    VANDNPSrr	= 2778,
    VANDPDYrm	= 2779,
    VANDPDYrr	= 2780,
    VANDPDrm	= 2781,
    VANDPDrr	= 2782,
    VANDPSYrm	= 2783,
    VANDPSYrr	= 2784,
    VANDPSrm	= 2785,
    VANDPSrr	= 2786,
    VASTART_SAVE_XMM_REGS	= 2787,
    VBLENDPDYrmi	= 2788,
    VBLENDPDYrri	= 2789,
    VBLENDPDrmi	= 2790,
    VBLENDPDrri	= 2791,
    VBLENDPSYrmi	= 2792,
    VBLENDPSYrri	= 2793,
    VBLENDPSrmi	= 2794,
    VBLENDPSrri	= 2795,
    VBLENDVPDYrm	= 2796,
    VBLENDVPDYrr	= 2797,
    VBLENDVPDrm	= 2798,
    VBLENDVPDrr	= 2799,
    VBLENDVPSYrm	= 2800,
    VBLENDVPSYrr	= 2801,
    VBLENDVPSrm	= 2802,
    VBLENDVPSrr	= 2803,
    VBROADCASTF128	= 2804,
    VBROADCASTI128	= 2805,
    VBROADCASTSDrm	= 2806,
    VBROADCASTSDrr	= 2807,
    VBROADCASTSSYrm	= 2808,
    VBROADCASTSSYrr	= 2809,
    VBROADCASTSSrm	= 2810,
    VBROADCASTSSrr	= 2811,
    VCMPPDYrmi	= 2812,
    VCMPPDYrmi_alt	= 2813,
    VCMPPDYrri	= 2814,
    VCMPPDYrri_alt	= 2815,
    VCMPPDrmi	= 2816,
    VCMPPDrmi_alt	= 2817,
    VCMPPDrri	= 2818,
    VCMPPDrri_alt	= 2819,
    VCMPPSYrmi	= 2820,
    VCMPPSYrmi_alt	= 2821,
    VCMPPSYrri	= 2822,
    VCMPPSYrri_alt	= 2823,
    VCMPPSrmi	= 2824,
    VCMPPSrmi_alt	= 2825,
    VCMPPSrri	= 2826,
    VCMPPSrri_alt	= 2827,
    VCMPSDrm	= 2828,
    VCMPSDrm_alt	= 2829,
    VCMPSDrr	= 2830,
    VCMPSDrr_alt	= 2831,
    VCMPSSrm	= 2832,
    VCMPSSrm_alt	= 2833,
    VCMPSSrr	= 2834,
    VCMPSSrr_alt	= 2835,
    VCOMISDrm	= 2836,
    VCOMISDrr	= 2837,
    VCOMISSrm	= 2838,
    VCOMISSrr	= 2839,
    VCVTDQ2PDYrm	= 2840,
    VCVTDQ2PDYrr	= 2841,
    VCVTDQ2PDrm	= 2842,
    VCVTDQ2PDrr	= 2843,
    VCVTDQ2PSYrm	= 2844,
    VCVTDQ2PSYrr	= 2845,
    VCVTDQ2PSrm	= 2846,
    VCVTDQ2PSrr	= 2847,
    VCVTPD2DQXrYr	= 2848,
    VCVTPD2DQXrm	= 2849,
    VCVTPD2DQXrr	= 2850,
    VCVTPD2DQYrm	= 2851,
    VCVTPD2DQYrr	= 2852,
    VCVTPD2DQrr	= 2853,
    VCVTPD2PSXrYr	= 2854,
    VCVTPD2PSXrm	= 2855,
    VCVTPD2PSXrr	= 2856,
    VCVTPD2PSYrm	= 2857,
    VCVTPD2PSYrr	= 2858,
    VCVTPD2PSrr	= 2859,
    VCVTPH2PSYrm	= 2860,
    VCVTPH2PSYrr	= 2861,
    VCVTPH2PSrm	= 2862,
    VCVTPH2PSrr	= 2863,
    VCVTPS2DQYrm	= 2864,
    VCVTPS2DQYrr	= 2865,
    VCVTPS2DQrm	= 2866,
    VCVTPS2DQrr	= 2867,
    VCVTPS2PDYrm	= 2868,
    VCVTPS2PDYrr	= 2869,
    VCVTPS2PDrm	= 2870,
    VCVTPS2PDrr	= 2871,
    VCVTPS2PHYmr	= 2872,
    VCVTPS2PHYrr	= 2873,
    VCVTPS2PHmr	= 2874,
    VCVTPS2PHrr	= 2875,
    VCVTSD2SI64rm	= 2876,
    VCVTSD2SI64rr	= 2877,
    VCVTSD2SIrm	= 2878,
    VCVTSD2SIrr	= 2879,
    VCVTSD2SSrm	= 2880,
    VCVTSD2SSrr	= 2881,
    VCVTSI2SD64rm	= 2882,
    VCVTSI2SD64rr	= 2883,
    VCVTSI2SDLrm	= 2884,
    VCVTSI2SDLrr	= 2885,
    VCVTSI2SDrm	= 2886,
    VCVTSI2SDrr	= 2887,
    VCVTSI2SS64rm	= 2888,
    VCVTSI2SS64rr	= 2889,
    VCVTSI2SSrm	= 2890,
    VCVTSI2SSrr	= 2891,
    VCVTSS2SDrm	= 2892,
    VCVTSS2SDrr	= 2893,
    VCVTSS2SI64rm	= 2894,
    VCVTSS2SI64rr	= 2895,
    VCVTSS2SIrm	= 2896,
    VCVTSS2SIrr	= 2897,
    VCVTTPD2DQXrYr	= 2898,
    VCVTTPD2DQXrm	= 2899,
    VCVTTPD2DQXrr	= 2900,
    VCVTTPD2DQYrm	= 2901,
    VCVTTPD2DQYrr	= 2902,
    VCVTTPD2DQrm	= 2903,
    VCVTTPD2DQrr	= 2904,
    VCVTTPS2DQYrm	= 2905,
    VCVTTPS2DQYrr	= 2906,
    VCVTTPS2DQrm	= 2907,
    VCVTTPS2DQrr	= 2908,
    VCVTTSD2SI64rm	= 2909,
    VCVTTSD2SI64rr	= 2910,
    VCVTTSD2SIrm	= 2911,
    VCVTTSD2SIrr	= 2912,
    VCVTTSS2SI64rm	= 2913,
    VCVTTSS2SI64rr	= 2914,
    VCVTTSS2SIrm	= 2915,
    VCVTTSS2SIrr	= 2916,
    VDIVPDYrm	= 2917,
    VDIVPDYrr	= 2918,
    VDIVPDrm	= 2919,
    VDIVPDrr	= 2920,
    VDIVPSYrm	= 2921,
    VDIVPSYrr	= 2922,
    VDIVPSrm	= 2923,
    VDIVPSrr	= 2924,
    VDIVSDrm	= 2925,
    VDIVSDrm_Int	= 2926,
    VDIVSDrr	= 2927,
    VDIVSDrr_Int	= 2928,
    VDIVSSrm	= 2929,
    VDIVSSrm_Int	= 2930,
    VDIVSSrr	= 2931,
    VDIVSSrr_Int	= 2932,
    VDPPDrmi	= 2933,
    VDPPDrri	= 2934,
    VDPPSYrmi	= 2935,
    VDPPSYrri	= 2936,
    VDPPSrmi	= 2937,
    VDPPSrri	= 2938,
    VERRm	= 2939,
    VERRr	= 2940,
    VERWm	= 2941,
    VERWr	= 2942,
    VEXTRACTF128mr	= 2943,
    VEXTRACTF128rr	= 2944,
    VEXTRACTI128mr	= 2945,
    VEXTRACTI128rr	= 2946,
    VEXTRACTPSmr	= 2947,
    VEXTRACTPSrr	= 2948,
    VEXTRACTPSrr64	= 2949,
    VFMADDPD4mr	= 2950,
    VFMADDPD4mrY	= 2951,
    VFMADDPD4rm	= 2952,
    VFMADDPD4rmY	= 2953,
    VFMADDPD4rr	= 2954,
    VFMADDPD4rrY	= 2955,
    VFMADDPD4rrY_REV	= 2956,
    VFMADDPD4rr_REV	= 2957,
    VFMADDPDr132m	= 2958,
    VFMADDPDr132mY	= 2959,
    VFMADDPDr132r	= 2960,
    VFMADDPDr132rY	= 2961,
    VFMADDPDr213m	= 2962,
    VFMADDPDr213mY	= 2963,
    VFMADDPDr213r	= 2964,
    VFMADDPDr213rY	= 2965,
    VFMADDPDr231m	= 2966,
    VFMADDPDr231mY	= 2967,
    VFMADDPDr231r	= 2968,
    VFMADDPDr231rY	= 2969,
    VFMADDPS4mr	= 2970,
    VFMADDPS4mrY	= 2971,
    VFMADDPS4rm	= 2972,
    VFMADDPS4rmY	= 2973,
    VFMADDPS4rr	= 2974,
    VFMADDPS4rrY	= 2975,
    VFMADDPS4rrY_REV	= 2976,
    VFMADDPS4rr_REV	= 2977,
    VFMADDPSr132m	= 2978,
    VFMADDPSr132mY	= 2979,
    VFMADDPSr132r	= 2980,
    VFMADDPSr132rY	= 2981,
    VFMADDPSr213m	= 2982,
    VFMADDPSr213mY	= 2983,
    VFMADDPSr213r	= 2984,
    VFMADDPSr213rY	= 2985,
    VFMADDPSr231m	= 2986,
    VFMADDPSr231mY	= 2987,
    VFMADDPSr231r	= 2988,
    VFMADDPSr231rY	= 2989,
    VFMADDSD4mr	= 2990,
    VFMADDSD4rm	= 2991,
    VFMADDSD4rr	= 2992,
    VFMADDSD4rr_REV	= 2993,
    VFMADDSDr132m	= 2994,
    VFMADDSDr132r	= 2995,
    VFMADDSDr213m	= 2996,
    VFMADDSDr213r	= 2997,
    VFMADDSDr231m	= 2998,
    VFMADDSDr231r	= 2999,
    VFMADDSS4mr	= 3000,
    VFMADDSS4rm	= 3001,
    VFMADDSS4rr	= 3002,
    VFMADDSS4rr_REV	= 3003,
    VFMADDSSr132m	= 3004,
    VFMADDSSr132r	= 3005,
    VFMADDSSr213m	= 3006,
    VFMADDSSr213r	= 3007,
    VFMADDSSr231m	= 3008,
    VFMADDSSr231r	= 3009,
    VFMADDSUBPD4mr	= 3010,
    VFMADDSUBPD4mrY	= 3011,
    VFMADDSUBPD4rm	= 3012,
    VFMADDSUBPD4rmY	= 3013,
    VFMADDSUBPD4rr	= 3014,
    VFMADDSUBPD4rrY	= 3015,
    VFMADDSUBPD4rrY_REV	= 3016,
    VFMADDSUBPD4rr_REV	= 3017,
    VFMADDSUBPDr132m	= 3018,
    VFMADDSUBPDr132mY	= 3019,
    VFMADDSUBPDr132r	= 3020,
    VFMADDSUBPDr132rY	= 3021,
    VFMADDSUBPDr213m	= 3022,
    VFMADDSUBPDr213mY	= 3023,
    VFMADDSUBPDr213r	= 3024,
    VFMADDSUBPDr213rY	= 3025,
    VFMADDSUBPDr231m	= 3026,
    VFMADDSUBPDr231mY	= 3027,
    VFMADDSUBPDr231r	= 3028,
    VFMADDSUBPDr231rY	= 3029,
    VFMADDSUBPS4mr	= 3030,
    VFMADDSUBPS4mrY	= 3031,
    VFMADDSUBPS4rm	= 3032,
    VFMADDSUBPS4rmY	= 3033,
    VFMADDSUBPS4rr	= 3034,
    VFMADDSUBPS4rrY	= 3035,
    VFMADDSUBPS4rrY_REV	= 3036,
    VFMADDSUBPS4rr_REV	= 3037,
    VFMADDSUBPSr132m	= 3038,
    VFMADDSUBPSr132mY	= 3039,
    VFMADDSUBPSr132r	= 3040,
    VFMADDSUBPSr132rY	= 3041,
    VFMADDSUBPSr213m	= 3042,
    VFMADDSUBPSr213mY	= 3043,
    VFMADDSUBPSr213r	= 3044,
    VFMADDSUBPSr213rY	= 3045,
    VFMADDSUBPSr231m	= 3046,
    VFMADDSUBPSr231mY	= 3047,
    VFMADDSUBPSr231r	= 3048,
    VFMADDSUBPSr231rY	= 3049,
    VFMSUBADDPD4mr	= 3050,
    VFMSUBADDPD4mrY	= 3051,
    VFMSUBADDPD4rm	= 3052,
    VFMSUBADDPD4rmY	= 3053,
    VFMSUBADDPD4rr	= 3054,
    VFMSUBADDPD4rrY	= 3055,
    VFMSUBADDPD4rrY_REV	= 3056,
    VFMSUBADDPD4rr_REV	= 3057,
    VFMSUBADDPDr132m	= 3058,
    VFMSUBADDPDr132mY	= 3059,
    VFMSUBADDPDr132r	= 3060,
    VFMSUBADDPDr132rY	= 3061,
    VFMSUBADDPDr213m	= 3062,
    VFMSUBADDPDr213mY	= 3063,
    VFMSUBADDPDr213r	= 3064,
    VFMSUBADDPDr213rY	= 3065,
    VFMSUBADDPDr231m	= 3066,
    VFMSUBADDPDr231mY	= 3067,
    VFMSUBADDPDr231r	= 3068,
    VFMSUBADDPDr231rY	= 3069,
    VFMSUBADDPS4mr	= 3070,
    VFMSUBADDPS4mrY	= 3071,
    VFMSUBADDPS4rm	= 3072,
    VFMSUBADDPS4rmY	= 3073,
    VFMSUBADDPS4rr	= 3074,
    VFMSUBADDPS4rrY	= 3075,
    VFMSUBADDPS4rrY_REV	= 3076,
    VFMSUBADDPS4rr_REV	= 3077,
    VFMSUBADDPSr132m	= 3078,
    VFMSUBADDPSr132mY	= 3079,
    VFMSUBADDPSr132r	= 3080,
    VFMSUBADDPSr132rY	= 3081,
    VFMSUBADDPSr213m	= 3082,
    VFMSUBADDPSr213mY	= 3083,
    VFMSUBADDPSr213r	= 3084,
    VFMSUBADDPSr213rY	= 3085,
    VFMSUBADDPSr231m	= 3086,
    VFMSUBADDPSr231mY	= 3087,
    VFMSUBADDPSr231r	= 3088,
    VFMSUBADDPSr231rY	= 3089,
    VFMSUBPD4mr	= 3090,
    VFMSUBPD4mrY	= 3091,
    VFMSUBPD4rm	= 3092,
    VFMSUBPD4rmY	= 3093,
    VFMSUBPD4rr	= 3094,
    VFMSUBPD4rrY	= 3095,
    VFMSUBPD4rrY_REV	= 3096,
    VFMSUBPD4rr_REV	= 3097,
    VFMSUBPDr132m	= 3098,
    VFMSUBPDr132mY	= 3099,
    VFMSUBPDr132r	= 3100,
    VFMSUBPDr132rY	= 3101,
    VFMSUBPDr213m	= 3102,
    VFMSUBPDr213mY	= 3103,
    VFMSUBPDr213r	= 3104,
    VFMSUBPDr213rY	= 3105,
    VFMSUBPDr231m	= 3106,
    VFMSUBPDr231mY	= 3107,
    VFMSUBPDr231r	= 3108,
    VFMSUBPDr231rY	= 3109,
    VFMSUBPS4mr	= 3110,
    VFMSUBPS4mrY	= 3111,
    VFMSUBPS4rm	= 3112,
    VFMSUBPS4rmY	= 3113,
    VFMSUBPS4rr	= 3114,
    VFMSUBPS4rrY	= 3115,
    VFMSUBPS4rrY_REV	= 3116,
    VFMSUBPS4rr_REV	= 3117,
    VFMSUBPSr132m	= 3118,
    VFMSUBPSr132mY	= 3119,
    VFMSUBPSr132r	= 3120,
    VFMSUBPSr132rY	= 3121,
    VFMSUBPSr213m	= 3122,
    VFMSUBPSr213mY	= 3123,
    VFMSUBPSr213r	= 3124,
    VFMSUBPSr213rY	= 3125,
    VFMSUBPSr231m	= 3126,
    VFMSUBPSr231mY	= 3127,
    VFMSUBPSr231r	= 3128,
    VFMSUBPSr231rY	= 3129,
    VFMSUBSD4mr	= 3130,
    VFMSUBSD4rm	= 3131,
    VFMSUBSD4rr	= 3132,
    VFMSUBSD4rr_REV	= 3133,
    VFMSUBSDr132m	= 3134,
    VFMSUBSDr132r	= 3135,
    VFMSUBSDr213m	= 3136,
    VFMSUBSDr213r	= 3137,
    VFMSUBSDr231m	= 3138,
    VFMSUBSDr231r	= 3139,
    VFMSUBSS4mr	= 3140,
    VFMSUBSS4rm	= 3141,
    VFMSUBSS4rr	= 3142,
    VFMSUBSS4rr_REV	= 3143,
    VFMSUBSSr132m	= 3144,
    VFMSUBSSr132r	= 3145,
    VFMSUBSSr213m	= 3146,
    VFMSUBSSr213r	= 3147,
    VFMSUBSSr231m	= 3148,
    VFMSUBSSr231r	= 3149,
    VFNMADDPD4mr	= 3150,
    VFNMADDPD4mrY	= 3151,
    VFNMADDPD4rm	= 3152,
    VFNMADDPD4rmY	= 3153,
    VFNMADDPD4rr	= 3154,
    VFNMADDPD4rrY	= 3155,
    VFNMADDPD4rrY_REV	= 3156,
    VFNMADDPD4rr_REV	= 3157,
    VFNMADDPDr132m	= 3158,
    VFNMADDPDr132mY	= 3159,
    VFNMADDPDr132r	= 3160,
    VFNMADDPDr132rY	= 3161,
    VFNMADDPDr213m	= 3162,
    VFNMADDPDr213mY	= 3163,
    VFNMADDPDr213r	= 3164,
    VFNMADDPDr213rY	= 3165,
    VFNMADDPDr231m	= 3166,
    VFNMADDPDr231mY	= 3167,
    VFNMADDPDr231r	= 3168,
    VFNMADDPDr231rY	= 3169,
    VFNMADDPS4mr	= 3170,
    VFNMADDPS4mrY	= 3171,
    VFNMADDPS4rm	= 3172,
    VFNMADDPS4rmY	= 3173,
    VFNMADDPS4rr	= 3174,
    VFNMADDPS4rrY	= 3175,
    VFNMADDPS4rrY_REV	= 3176,
    VFNMADDPS4rr_REV	= 3177,
    VFNMADDPSr132m	= 3178,
    VFNMADDPSr132mY	= 3179,
    VFNMADDPSr132r	= 3180,
    VFNMADDPSr132rY	= 3181,
    VFNMADDPSr213m	= 3182,
    VFNMADDPSr213mY	= 3183,
    VFNMADDPSr213r	= 3184,
    VFNMADDPSr213rY	= 3185,
    VFNMADDPSr231m	= 3186,
    VFNMADDPSr231mY	= 3187,
    VFNMADDPSr231r	= 3188,
    VFNMADDPSr231rY	= 3189,
    VFNMADDSD4mr	= 3190,
    VFNMADDSD4rm	= 3191,
    VFNMADDSD4rr	= 3192,
    VFNMADDSD4rr_REV	= 3193,
    VFNMADDSDr132m	= 3194,
    VFNMADDSDr132r	= 3195,
    VFNMADDSDr213m	= 3196,
    VFNMADDSDr213r	= 3197,
    VFNMADDSDr231m	= 3198,
    VFNMADDSDr231r	= 3199,
    VFNMADDSS4mr	= 3200,
    VFNMADDSS4rm	= 3201,
    VFNMADDSS4rr	= 3202,
    VFNMADDSS4rr_REV	= 3203,
    VFNMADDSSr132m	= 3204,
    VFNMADDSSr132r	= 3205,
    VFNMADDSSr213m	= 3206,
    VFNMADDSSr213r	= 3207,
    VFNMADDSSr231m	= 3208,
    VFNMADDSSr231r	= 3209,
    VFNMSUBPD4mr	= 3210,
    VFNMSUBPD4mrY	= 3211,
    VFNMSUBPD4rm	= 3212,
    VFNMSUBPD4rmY	= 3213,
    VFNMSUBPD4rr	= 3214,
    VFNMSUBPD4rrY	= 3215,
    VFNMSUBPD4rrY_REV	= 3216,
    VFNMSUBPD4rr_REV	= 3217,
    VFNMSUBPDr132m	= 3218,
    VFNMSUBPDr132mY	= 3219,
    VFNMSUBPDr132r	= 3220,
    VFNMSUBPDr132rY	= 3221,
    VFNMSUBPDr213m	= 3222,
    VFNMSUBPDr213mY	= 3223,
    VFNMSUBPDr213r	= 3224,
    VFNMSUBPDr213rY	= 3225,
    VFNMSUBPDr231m	= 3226,
    VFNMSUBPDr231mY	= 3227,
    VFNMSUBPDr231r	= 3228,
    VFNMSUBPDr231rY	= 3229,
    VFNMSUBPS4mr	= 3230,
    VFNMSUBPS4mrY	= 3231,
    VFNMSUBPS4rm	= 3232,
    VFNMSUBPS4rmY	= 3233,
    VFNMSUBPS4rr	= 3234,
    VFNMSUBPS4rrY	= 3235,
    VFNMSUBPS4rrY_REV	= 3236,
    VFNMSUBPS4rr_REV	= 3237,
    VFNMSUBPSr132m	= 3238,
    VFNMSUBPSr132mY	= 3239,
    VFNMSUBPSr132r	= 3240,
    VFNMSUBPSr132rY	= 3241,
    VFNMSUBPSr213m	= 3242,
    VFNMSUBPSr213mY	= 3243,
    VFNMSUBPSr213r	= 3244,
    VFNMSUBPSr213rY	= 3245,
    VFNMSUBPSr231m	= 3246,
    VFNMSUBPSr231mY	= 3247,
    VFNMSUBPSr231r	= 3248,
    VFNMSUBPSr231rY	= 3249,
    VFNMSUBSD4mr	= 3250,
    VFNMSUBSD4rm	= 3251,
    VFNMSUBSD4rr	= 3252,
    VFNMSUBSD4rr_REV	= 3253,
    VFNMSUBSDr132m	= 3254,
    VFNMSUBSDr132r	= 3255,
    VFNMSUBSDr213m	= 3256,
    VFNMSUBSDr213r	= 3257,
    VFNMSUBSDr231m	= 3258,
    VFNMSUBSDr231r	= 3259,
    VFNMSUBSS4mr	= 3260,
    VFNMSUBSS4rm	= 3261,
    VFNMSUBSS4rr	= 3262,
    VFNMSUBSS4rr_REV	= 3263,
    VFNMSUBSSr132m	= 3264,
    VFNMSUBSSr132r	= 3265,
    VFNMSUBSSr213m	= 3266,
    VFNMSUBSSr213r	= 3267,
    VFNMSUBSSr231m	= 3268,
    VFNMSUBSSr231r	= 3269,
    VFRCZPDrm	= 3270,
    VFRCZPDrmY	= 3271,
    VFRCZPDrr	= 3272,
    VFRCZPDrrY	= 3273,
    VFRCZPSrm	= 3274,
    VFRCZPSrmY	= 3275,
    VFRCZPSrr	= 3276,
    VFRCZPSrrY	= 3277,
    VFRCZSDrm	= 3278,
    VFRCZSDrr	= 3279,
    VFRCZSSrm	= 3280,
    VFRCZSSrr	= 3281,
    VFsANDNPDrm	= 3282,
    VFsANDNPDrr	= 3283,
    VFsANDNPSrm	= 3284,
    VFsANDNPSrr	= 3285,
    VFsANDPDrm	= 3286,
    VFsANDPDrr	= 3287,
    VFsANDPSrm	= 3288,
    VFsANDPSrr	= 3289,
    VFsORPDrm	= 3290,
    VFsORPDrr	= 3291,
    VFsORPSrm	= 3292,
    VFsORPSrr	= 3293,
    VFsXORPDrm	= 3294,
    VFsXORPDrr	= 3295,
    VFsXORPSrm	= 3296,
    VFsXORPSrr	= 3297,
    VHADDPDYrm	= 3298,
    VHADDPDYrr	= 3299,
    VHADDPDrm	= 3300,
    VHADDPDrr	= 3301,
    VHADDPSYrm	= 3302,
    VHADDPSYrr	= 3303,
    VHADDPSrm	= 3304,
    VHADDPSrr	= 3305,
    VHSUBPDYrm	= 3306,
    VHSUBPDYrr	= 3307,
    VHSUBPDrm	= 3308,
    VHSUBPDrr	= 3309,
    VHSUBPSYrm	= 3310,
    VHSUBPSYrr	= 3311,
    VHSUBPSrm	= 3312,
    VHSUBPSrr	= 3313,
    VINSERTF128rm	= 3314,
    VINSERTF128rr	= 3315,
    VINSERTI128rm	= 3316,
    VINSERTI128rr	= 3317,
    VINSERTPSrm	= 3318,
    VINSERTPSrr	= 3319,
    VLDDQUYrm	= 3320,
    VLDDQUrm	= 3321,
    VLDMXCSR	= 3322,
    VMASKMOVDQU	= 3323,
    VMASKMOVDQU64	= 3324,
    VMASKMOVPDYmr	= 3325,
    VMASKMOVPDYrm	= 3326,
    VMASKMOVPDmr	= 3327,
    VMASKMOVPDrm	= 3328,
    VMASKMOVPSYmr	= 3329,
    VMASKMOVPSYrm	= 3330,
    VMASKMOVPSmr	= 3331,
    VMASKMOVPSrm	= 3332,
    VMAXPDYrm	= 3333,
    VMAXPDYrm_Int	= 3334,
    VMAXPDYrr	= 3335,
    VMAXPDYrr_Int	= 3336,
    VMAXPDrm	= 3337,
    VMAXPDrm_Int	= 3338,
    VMAXPDrr	= 3339,
    VMAXPDrr_Int	= 3340,
    VMAXPSYrm	= 3341,
    VMAXPSYrm_Int	= 3342,
    VMAXPSYrr	= 3343,
    VMAXPSYrr_Int	= 3344,
    VMAXPSrm	= 3345,
    VMAXPSrm_Int	= 3346,
    VMAXPSrr	= 3347,
    VMAXPSrr_Int	= 3348,
    VMAXSDrm	= 3349,
    VMAXSDrm_Int	= 3350,
    VMAXSDrr	= 3351,
    VMAXSDrr_Int	= 3352,
    VMAXSSrm	= 3353,
    VMAXSSrm_Int	= 3354,
    VMAXSSrr	= 3355,
    VMAXSSrr_Int	= 3356,
    VMCALL	= 3357,
    VMCLEARm	= 3358,
    VMFUNC	= 3359,
    VMINPDYrm	= 3360,
    VMINPDYrm_Int	= 3361,
    VMINPDYrr	= 3362,
    VMINPDYrr_Int	= 3363,
    VMINPDrm	= 3364,
    VMINPDrm_Int	= 3365,
    VMINPDrr	= 3366,
    VMINPDrr_Int	= 3367,
    VMINPSYrm	= 3368,
    VMINPSYrm_Int	= 3369,
    VMINPSYrr	= 3370,
    VMINPSYrr_Int	= 3371,
    VMINPSrm	= 3372,
    VMINPSrm_Int	= 3373,
    VMINPSrr	= 3374,
    VMINPSrr_Int	= 3375,
    VMINSDrm	= 3376,
    VMINSDrm_Int	= 3377,
    VMINSDrr	= 3378,
    VMINSDrr_Int	= 3379,
    VMINSSrm	= 3380,
    VMINSSrm_Int	= 3381,
    VMINSSrr	= 3382,
    VMINSSrr_Int	= 3383,
    VMLAUNCH	= 3384,
    VMLOAD32	= 3385,
    VMLOAD64	= 3386,
    VMMCALL	= 3387,
    VMOV64toPQIrr	= 3388,
    VMOV64toSDrm	= 3389,
    VMOV64toSDrr	= 3390,
    VMOVAPDYmr	= 3391,
    VMOVAPDYrm	= 3392,
    VMOVAPDYrr	= 3393,
    VMOVAPDYrr_REV	= 3394,
    VMOVAPDmr	= 3395,
    VMOVAPDrm	= 3396,
    VMOVAPDrr	= 3397,
    VMOVAPDrr_REV	= 3398,
    VMOVAPSYmr	= 3399,
    VMOVAPSYrm	= 3400,
    VMOVAPSYrr	= 3401,
    VMOVAPSYrr_REV	= 3402,
    VMOVAPSmr	= 3403,
    VMOVAPSrm	= 3404,
    VMOVAPSrr	= 3405,
    VMOVAPSrr_REV	= 3406,
    VMOVDDUPYrm	= 3407,
    VMOVDDUPYrr	= 3408,
    VMOVDDUPrm	= 3409,
    VMOVDDUPrr	= 3410,
    VMOVDI2PDIrm	= 3411,
    VMOVDI2PDIrr	= 3412,
    VMOVDI2SSrm	= 3413,
    VMOVDI2SSrr	= 3414,
    VMOVDQAYmr	= 3415,
    VMOVDQAYrm	= 3416,
    VMOVDQAYrr	= 3417,
    VMOVDQAYrr_REV	= 3418,
    VMOVDQAmr	= 3419,
    VMOVDQArm	= 3420,
    VMOVDQArr	= 3421,
    VMOVDQArr_REV	= 3422,
    VMOVDQUYmr	= 3423,
    VMOVDQUYrm	= 3424,
    VMOVDQUYrr	= 3425,
    VMOVDQUYrr_REV	= 3426,
    VMOVDQUmr	= 3427,
    VMOVDQUmr_Int	= 3428,
    VMOVDQUrm	= 3429,
    VMOVDQUrr	= 3430,
    VMOVDQUrr_REV	= 3431,
    VMOVHLPSrr	= 3432,
    VMOVHPDmr	= 3433,
    VMOVHPDrm	= 3434,
    VMOVHPSmr	= 3435,
    VMOVHPSrm	= 3436,
    VMOVLHPSrr	= 3437,
    VMOVLPDmr	= 3438,
    VMOVLPDrm	= 3439,
    VMOVLPSmr	= 3440,
    VMOVLPSrm	= 3441,
    VMOVLQ128mr	= 3442,
    VMOVMSKPDYr64r	= 3443,
    VMOVMSKPDYrr32	= 3444,
    VMOVMSKPDYrr64	= 3445,
    VMOVMSKPDr64r	= 3446,
    VMOVMSKPDrr32	= 3447,
    VMOVMSKPDrr64	= 3448,
    VMOVMSKPSYr64r	= 3449,
    VMOVMSKPSYrr32	= 3450,
    VMOVMSKPSYrr64	= 3451,
    VMOVMSKPSr64r	= 3452,
    VMOVMSKPSrr32	= 3453,
    VMOVMSKPSrr64	= 3454,
    VMOVNTDQAYrm	= 3455,
    VMOVNTDQArm	= 3456,
    VMOVNTDQYmr	= 3457,
    VMOVNTDQmr	= 3458,
    VMOVNTPDYmr	= 3459,
    VMOVNTPDmr	= 3460,
    VMOVNTPSYmr	= 3461,
    VMOVNTPSmr	= 3462,
    VMOVPDI2DImr	= 3463,
    VMOVPDI2DIrr	= 3464,
    VMOVPQI2QImr	= 3465,
    VMOVPQIto64rr	= 3466,
    VMOVQI2PQIrm	= 3467,
    VMOVQd64rr	= 3468,
    VMOVQd64rr_alt	= 3469,
    VMOVQs64rr	= 3470,
    VMOVQxrxr	= 3471,
    VMOVSDmr	= 3472,
    VMOVSDrm	= 3473,
    VMOVSDrr	= 3474,
    VMOVSDrr_REV	= 3475,
    VMOVSDto64mr	= 3476,
    VMOVSDto64rr	= 3477,
    VMOVSHDUPYrm	= 3478,
    VMOVSHDUPYrr	= 3479,
    VMOVSHDUPrm	= 3480,
    VMOVSHDUPrr	= 3481,
    VMOVSLDUPYrm	= 3482,
    VMOVSLDUPYrr	= 3483,
    VMOVSLDUPrm	= 3484,
    VMOVSLDUPrr	= 3485,
    VMOVSS2DImr	= 3486,
    VMOVSS2DIrr	= 3487,
    VMOVSSmr	= 3488,
    VMOVSSrm	= 3489,
    VMOVSSrr	= 3490,
    VMOVSSrr_REV	= 3491,
    VMOVUPDYmr	= 3492,
    VMOVUPDYrm	= 3493,
    VMOVUPDYrr	= 3494,
    VMOVUPDYrr_REV	= 3495,
    VMOVUPDmr	= 3496,
    VMOVUPDrm	= 3497,
    VMOVUPDrr	= 3498,
    VMOVUPDrr_REV	= 3499,
    VMOVUPSYmr	= 3500,
    VMOVUPSYrm	= 3501,
    VMOVUPSYrr	= 3502,
    VMOVUPSYrr_REV	= 3503,
    VMOVUPSmr	= 3504,
    VMOVUPSrm	= 3505,
    VMOVUPSrr	= 3506,
    VMOVUPSrr_REV	= 3507,
    VMOVZDI2PDIrm	= 3508,
    VMOVZDI2PDIrr	= 3509,
    VMOVZPQILo2PQIrm	= 3510,
    VMOVZPQILo2PQIrr	= 3511,
    VMOVZQI2PQIrm	= 3512,
    VMOVZQI2PQIrr	= 3513,
    VMPSADBWYrmi	= 3514,
    VMPSADBWYrri	= 3515,
    VMPSADBWrmi	= 3516,
    VMPSADBWrri	= 3517,
    VMPTRLDm	= 3518,
    VMPTRSTm	= 3519,
    VMREAD32rm	= 3520,
    VMREAD32rr	= 3521,
    VMREAD64rm	= 3522,
    VMREAD64rr	= 3523,
    VMRESUME	= 3524,
    VMRUN32	= 3525,
    VMRUN64	= 3526,
    VMSAVE32	= 3527,
    VMSAVE64	= 3528,
    VMULPDYrm	= 3529,
    VMULPDYrr	= 3530,
    VMULPDrm	= 3531,
    VMULPDrr	= 3532,
    VMULPSYrm	= 3533,
    VMULPSYrr	= 3534,
    VMULPSrm	= 3535,
    VMULPSrr	= 3536,
    VMULSDrm	= 3537,
    VMULSDrm_Int	= 3538,
    VMULSDrr	= 3539,
    VMULSDrr_Int	= 3540,
    VMULSSrm	= 3541,
    VMULSSrm_Int	= 3542,
    VMULSSrr	= 3543,
    VMULSSrr_Int	= 3544,
    VMWRITE32rm	= 3545,
    VMWRITE32rr	= 3546,
    VMWRITE64rm	= 3547,
    VMWRITE64rr	= 3548,
    VMXOFF	= 3549,
    VMXON	= 3550,
    VORPDYrm	= 3551,
    VORPDYrr	= 3552,
    VORPDrm	= 3553,
    VORPDrr	= 3554,
    VORPSYrm	= 3555,
    VORPSYrr	= 3556,
    VORPSrm	= 3557,
    VORPSrr	= 3558,
    VPABSBrm128	= 3559,
    VPABSBrm256	= 3560,
    VPABSBrr128	= 3561,
    VPABSBrr256	= 3562,
    VPABSDrm128	= 3563,
    VPABSDrm256	= 3564,
    VPABSDrr128	= 3565,
    VPABSDrr256	= 3566,
    VPABSWrm128	= 3567,
    VPABSWrm256	= 3568,
    VPABSWrr128	= 3569,
    VPABSWrr256	= 3570,
    VPACKSSDWYrm	= 3571,
    VPACKSSDWYrr	= 3572,
    VPACKSSDWrm	= 3573,
    VPACKSSDWrr	= 3574,
    VPACKSSWBYrm	= 3575,
    VPACKSSWBYrr	= 3576,
    VPACKSSWBrm	= 3577,
    VPACKSSWBrr	= 3578,
    VPACKUSDWYrm	= 3579,
    VPACKUSDWYrr	= 3580,
    VPACKUSDWrm	= 3581,
    VPACKUSDWrr	= 3582,
    VPACKUSWBYrm	= 3583,
    VPACKUSWBYrr	= 3584,
    VPACKUSWBrm	= 3585,
    VPACKUSWBrr	= 3586,
    VPADDBYrm	= 3587,
    VPADDBYrr	= 3588,
    VPADDBrm	= 3589,
    VPADDBrr	= 3590,
    VPADDDYrm	= 3591,
    VPADDDYrr	= 3592,
    VPADDDrm	= 3593,
    VPADDDrr	= 3594,
    VPADDQYrm	= 3595,
    VPADDQYrr	= 3596,
    VPADDQrm	= 3597,
    VPADDQrr	= 3598,
    VPADDSBYrm	= 3599,
    VPADDSBYrr	= 3600,
    VPADDSBrm	= 3601,
    VPADDSBrr	= 3602,
    VPADDSWYrm	= 3603,
    VPADDSWYrr	= 3604,
    VPADDSWrm	= 3605,
    VPADDSWrr	= 3606,
    VPADDUSBYrm	= 3607,
    VPADDUSBYrr	= 3608,
    VPADDUSBrm	= 3609,
    VPADDUSBrr	= 3610,
    VPADDUSWYrm	= 3611,
    VPADDUSWYrr	= 3612,
    VPADDUSWrm	= 3613,
    VPADDUSWrr	= 3614,
    VPADDWYrm	= 3615,
    VPADDWYrr	= 3616,
    VPADDWrm	= 3617,
    VPADDWrr	= 3618,
    VPALIGNR128rm	= 3619,
    VPALIGNR128rr	= 3620,
    VPALIGNR256rm	= 3621,
    VPALIGNR256rr	= 3622,
    VPANDNYrm	= 3623,
    VPANDNYrr	= 3624,
    VPANDNrm	= 3625,
    VPANDNrr	= 3626,
    VPANDYrm	= 3627,
    VPANDYrr	= 3628,
    VPANDrm	= 3629,
    VPANDrr	= 3630,
    VPAVGBYrm	= 3631,
    VPAVGBYrr	= 3632,
    VPAVGBrm	= 3633,
    VPAVGBrr	= 3634,
    VPAVGWYrm	= 3635,
    VPAVGWYrr	= 3636,
    VPAVGWrm	= 3637,
    VPAVGWrr	= 3638,
    VPBLENDDYrmi	= 3639,
    VPBLENDDYrri	= 3640,
    VPBLENDDrmi	= 3641,
    VPBLENDDrri	= 3642,
    VPBLENDVBYrm	= 3643,
    VPBLENDVBYrr	= 3644,
    VPBLENDVBrm	= 3645,
    VPBLENDVBrr	= 3646,
    VPBLENDWYrmi	= 3647,
    VPBLENDWYrri	= 3648,
    VPBLENDWrmi	= 3649,
    VPBLENDWrri	= 3650,
    VPBROADCASTBYrm	= 3651,
    VPBROADCASTBYrr	= 3652,
    VPBROADCASTBrm	= 3653,
    VPBROADCASTBrr	= 3654,
    VPBROADCASTDYrm	= 3655,
    VPBROADCASTDYrr	= 3656,
    VPBROADCASTDrm	= 3657,
    VPBROADCASTDrr	= 3658,
    VPBROADCASTQYrm	= 3659,
    VPBROADCASTQYrr	= 3660,
    VPBROADCASTQrm	= 3661,
    VPBROADCASTQrr	= 3662,
    VPBROADCASTWYrm	= 3663,
    VPBROADCASTWYrr	= 3664,
    VPBROADCASTWrm	= 3665,
    VPBROADCASTWrr	= 3666,
    VPCLMULQDQrm	= 3667,
    VPCLMULQDQrr	= 3668,
    VPCMOVmr	= 3669,
    VPCMOVmrY	= 3670,
    VPCMOVrm	= 3671,
    VPCMOVrmY	= 3672,
    VPCMOVrr	= 3673,
    VPCMOVrrY	= 3674,
    VPCMPEQBYrm	= 3675,
    VPCMPEQBYrr	= 3676,
    VPCMPEQBrm	= 3677,
    VPCMPEQBrr	= 3678,
    VPCMPEQDYrm	= 3679,
    VPCMPEQDYrr	= 3680,
    VPCMPEQDrm	= 3681,
    VPCMPEQDrr	= 3682,
    VPCMPEQQYrm	= 3683,
    VPCMPEQQYrr	= 3684,
    VPCMPEQQrm	= 3685,
    VPCMPEQQrr	= 3686,
    VPCMPEQWYrm	= 3687,
    VPCMPEQWYrr	= 3688,
    VPCMPEQWrm	= 3689,
    VPCMPEQWrr	= 3690,
    VPCMPESTRIArm	= 3691,
    VPCMPESTRIArr	= 3692,
    VPCMPESTRICrm	= 3693,
    VPCMPESTRICrr	= 3694,
    VPCMPESTRIOrm	= 3695,
    VPCMPESTRIOrr	= 3696,
    VPCMPESTRISrm	= 3697,
    VPCMPESTRISrr	= 3698,
    VPCMPESTRIZrm	= 3699,
    VPCMPESTRIZrr	= 3700,
    VPCMPESTRIrm	= 3701,
    VPCMPESTRIrr	= 3702,
    VPCMPESTRM128MEM	= 3703,
    VPCMPESTRM128REG	= 3704,
    VPCMPESTRM128rm	= 3705,
    VPCMPESTRM128rr	= 3706,
    VPCMPGTBYrm	= 3707,
    VPCMPGTBYrr	= 3708,
    VPCMPGTBrm	= 3709,
    VPCMPGTBrr	= 3710,
    VPCMPGTDYrm	= 3711,
    VPCMPGTDYrr	= 3712,
    VPCMPGTDrm	= 3713,
    VPCMPGTDrr	= 3714,
    VPCMPGTQYrm	= 3715,
    VPCMPGTQYrr	= 3716,
    VPCMPGTQrm	= 3717,
    VPCMPGTQrr	= 3718,
    VPCMPGTWYrm	= 3719,
    VPCMPGTWYrr	= 3720,
    VPCMPGTWrm	= 3721,
    VPCMPGTWrr	= 3722,
    VPCMPISTRIArm	= 3723,
    VPCMPISTRIArr	= 3724,
    VPCMPISTRICrm	= 3725,
    VPCMPISTRICrr	= 3726,
    VPCMPISTRIOrm	= 3727,
    VPCMPISTRIOrr	= 3728,
    VPCMPISTRISrm	= 3729,
    VPCMPISTRISrr	= 3730,
    VPCMPISTRIZrm	= 3731,
    VPCMPISTRIZrr	= 3732,
    VPCMPISTRIrm	= 3733,
    VPCMPISTRIrr	= 3734,
    VPCMPISTRM128MEM	= 3735,
    VPCMPISTRM128REG	= 3736,
    VPCMPISTRM128rm	= 3737,
    VPCMPISTRM128rr	= 3738,
    VPCOMBmi	= 3739,
    VPCOMBri	= 3740,
    VPCOMDmi	= 3741,
    VPCOMDri	= 3742,
    VPCOMQmi	= 3743,
    VPCOMQri	= 3744,
    VPCOMUBmi	= 3745,
    VPCOMUBri	= 3746,
    VPCOMUDmi	= 3747,
    VPCOMUDri	= 3748,
    VPCOMUQmi	= 3749,
    VPCOMUQri	= 3750,
    VPCOMUWmi	= 3751,
    VPCOMUWri	= 3752,
    VPCOMWmi	= 3753,
    VPCOMWri	= 3754,
    VPERM2F128rm	= 3755,
    VPERM2F128rr	= 3756,
    VPERM2I128rm	= 3757,
    VPERM2I128rr	= 3758,
    VPERMDYrm	= 3759,
    VPERMDYrr	= 3760,
    VPERMIL2PDmr	= 3761,
    VPERMIL2PDmrY	= 3762,
    VPERMIL2PDrm	= 3763,
    VPERMIL2PDrmY	= 3764,
    VPERMIL2PDrr	= 3765,
    VPERMIL2PDrrY	= 3766,
    VPERMIL2PSmr	= 3767,
    VPERMIL2PSmrY	= 3768,
    VPERMIL2PSrm	= 3769,
    VPERMIL2PSrmY	= 3770,
    VPERMIL2PSrr	= 3771,
    VPERMIL2PSrrY	= 3772,
    VPERMILPDYmi	= 3773,
    VPERMILPDYri	= 3774,
    VPERMILPDYrm	= 3775,
    VPERMILPDYrr	= 3776,
    VPERMILPDmi	= 3777,
    VPERMILPDri	= 3778,
    VPERMILPDrm	= 3779,
    VPERMILPDrr	= 3780,
    VPERMILPSYmi	= 3781,
    VPERMILPSYri	= 3782,
    VPERMILPSYrm	= 3783,
    VPERMILPSYrr	= 3784,
    VPERMILPSmi	= 3785,
    VPERMILPSri	= 3786,
    VPERMILPSrm	= 3787,
    VPERMILPSrr	= 3788,
    VPERMPDYmi	= 3789,
    VPERMPDYri	= 3790,
    VPERMPSYrm	= 3791,
    VPERMPSYrr	= 3792,
    VPERMQYmi	= 3793,
    VPERMQYri	= 3794,
    VPEXTRBmr	= 3795,
    VPEXTRBrr	= 3796,
    VPEXTRBrr64	= 3797,
    VPEXTRDmr	= 3798,
    VPEXTRDrr	= 3799,
    VPEXTRQmr	= 3800,
    VPEXTRQrr	= 3801,
    VPEXTRWmr	= 3802,
    VPEXTRWri	= 3803,
    VPHADDBDrm	= 3804,
    VPHADDBDrr	= 3805,
    VPHADDBQrm	= 3806,
    VPHADDBQrr	= 3807,
    VPHADDBWrm	= 3808,
    VPHADDBWrr	= 3809,
    VPHADDDQrm	= 3810,
    VPHADDDQrr	= 3811,
    VPHADDDYrm	= 3812,
    VPHADDDYrr	= 3813,
    VPHADDDrm	= 3814,
    VPHADDDrr	= 3815,
    VPHADDSWrm128	= 3816,
    VPHADDSWrm256	= 3817,
    VPHADDSWrr128	= 3818,
    VPHADDSWrr256	= 3819,
    VPHADDUBDrm	= 3820,
    VPHADDUBDrr	= 3821,
    VPHADDUBQrm	= 3822,
    VPHADDUBQrr	= 3823,
    VPHADDUBWrm	= 3824,
    VPHADDUBWrr	= 3825,
    VPHADDUDQrm	= 3826,
    VPHADDUDQrr	= 3827,
    VPHADDUWDrm	= 3828,
    VPHADDUWDrr	= 3829,
    VPHADDUWQrm	= 3830,
    VPHADDUWQrr	= 3831,
    VPHADDWDrm	= 3832,
    VPHADDWDrr	= 3833,
    VPHADDWQrm	= 3834,
    VPHADDWQrr	= 3835,
    VPHADDWYrm	= 3836,
    VPHADDWYrr	= 3837,
    VPHADDWrm	= 3838,
    VPHADDWrr	= 3839,
    VPHMINPOSUWrm128	= 3840,
    VPHMINPOSUWrr128	= 3841,
    VPHSUBBWrm	= 3842,
    VPHSUBBWrr	= 3843,
    VPHSUBDQrm	= 3844,
    VPHSUBDQrr	= 3845,
    VPHSUBDYrm	= 3846,
    VPHSUBDYrr	= 3847,
    VPHSUBDrm	= 3848,
    VPHSUBDrr	= 3849,
    VPHSUBSWrm128	= 3850,
    VPHSUBSWrm256	= 3851,
    VPHSUBSWrr128	= 3852,
    VPHSUBSWrr256	= 3853,
    VPHSUBWDrm	= 3854,
    VPHSUBWDrr	= 3855,
    VPHSUBWYrm	= 3856,
    VPHSUBWYrr	= 3857,
    VPHSUBWrm	= 3858,
    VPHSUBWrr	= 3859,
    VPINSRBrm	= 3860,
    VPINSRBrr	= 3861,
    VPINSRDrm	= 3862,
    VPINSRDrr	= 3863,
    VPINSRQrm	= 3864,
    VPINSRQrr	= 3865,
    VPINSRWrmi	= 3866,
    VPINSRWrr64i	= 3867,
    VPINSRWrri	= 3868,
    VPMACSDDrm	= 3869,
    VPMACSDDrr	= 3870,
    VPMACSDQHrm	= 3871,
    VPMACSDQHrr	= 3872,
    VPMACSDQLrm	= 3873,
    VPMACSDQLrr	= 3874,
    VPMACSSDDrm	= 3875,
    VPMACSSDDrr	= 3876,
    VPMACSSDQHrm	= 3877,
    VPMACSSDQHrr	= 3878,
    VPMACSSDQLrm	= 3879,
    VPMACSSDQLrr	= 3880,
    VPMACSSWDrm	= 3881,
    VPMACSSWDrr	= 3882,
    VPMACSSWWrm	= 3883,
    VPMACSSWWrr	= 3884,
    VPMACSWDrm	= 3885,
    VPMACSWDrr	= 3886,
    VPMACSWWrm	= 3887,
    VPMACSWWrr	= 3888,
    VPMADCSSWDrm	= 3889,
    VPMADCSSWDrr	= 3890,
    VPMADCSWDrm	= 3891,
    VPMADCSWDrr	= 3892,
    VPMADDUBSWrm128	= 3893,
    VPMADDUBSWrm256	= 3894,
    VPMADDUBSWrr128	= 3895,
    VPMADDUBSWrr256	= 3896,
    VPMADDWDYrm	= 3897,
    VPMADDWDYrr	= 3898,
    VPMADDWDrm	= 3899,
    VPMADDWDrr	= 3900,
    VPMASKMOVDYmr	= 3901,
    VPMASKMOVDYrm	= 3902,
    VPMASKMOVDmr	= 3903,
    VPMASKMOVDrm	= 3904,
    VPMASKMOVQYmr	= 3905,
    VPMASKMOVQYrm	= 3906,
    VPMASKMOVQmr	= 3907,
    VPMASKMOVQrm	= 3908,
    VPMAXSBYrm	= 3909,
    VPMAXSBYrr	= 3910,
    VPMAXSBrm	= 3911,
    VPMAXSBrr	= 3912,
    VPMAXSDYrm	= 3913,
    VPMAXSDYrr	= 3914,
    VPMAXSDrm	= 3915,
    VPMAXSDrr	= 3916,
    VPMAXSWYrm	= 3917,
    VPMAXSWYrr	= 3918,
    VPMAXSWrm	= 3919,
    VPMAXSWrr	= 3920,
    VPMAXUBYrm	= 3921,
    VPMAXUBYrr	= 3922,
    VPMAXUBrm	= 3923,
    VPMAXUBrr	= 3924,
    VPMAXUDYrm	= 3925,
    VPMAXUDYrr	= 3926,
    VPMAXUDrm	= 3927,
    VPMAXUDrr	= 3928,
    VPMAXUWYrm	= 3929,
    VPMAXUWYrr	= 3930,
    VPMAXUWrm	= 3931,
    VPMAXUWrr	= 3932,
    VPMINSBYrm	= 3933,
    VPMINSBYrr	= 3934,
    VPMINSBrm	= 3935,
    VPMINSBrr	= 3936,
    VPMINSDYrm	= 3937,
    VPMINSDYrr	= 3938,
    VPMINSDrm	= 3939,
    VPMINSDrr	= 3940,
    VPMINSWYrm	= 3941,
    VPMINSWYrr	= 3942,
    VPMINSWrm	= 3943,
    VPMINSWrr	= 3944,
    VPMINUBYrm	= 3945,
    VPMINUBYrr	= 3946,
    VPMINUBrm	= 3947,
    VPMINUBrr	= 3948,
    VPMINUDYrm	= 3949,
    VPMINUDYrr	= 3950,
    VPMINUDrm	= 3951,
    VPMINUDrr	= 3952,
    VPMINUWYrm	= 3953,
    VPMINUWYrr	= 3954,
    VPMINUWrm	= 3955,
    VPMINUWrr	= 3956,
    VPMOVMSKBYr64r	= 3957,
    VPMOVMSKBYrr	= 3958,
    VPMOVMSKBr64r	= 3959,
    VPMOVMSKBrr	= 3960,
    VPMOVSXBDYrm	= 3961,
    VPMOVSXBDYrr	= 3962,
    VPMOVSXBDrm	= 3963,
    VPMOVSXBDrr	= 3964,
    VPMOVSXBQYrm	= 3965,
    VPMOVSXBQYrr	= 3966,
    VPMOVSXBQrm	= 3967,
    VPMOVSXBQrr	= 3968,
    VPMOVSXBWYrm	= 3969,
    VPMOVSXBWYrr	= 3970,
    VPMOVSXBWrm	= 3971,
    VPMOVSXBWrr	= 3972,
    VPMOVSXDQYrm	= 3973,
    VPMOVSXDQYrr	= 3974,
    VPMOVSXDQrm	= 3975,
    VPMOVSXDQrr	= 3976,
    VPMOVSXWDYrm	= 3977,
    VPMOVSXWDYrr	= 3978,
    VPMOVSXWDrm	= 3979,
    VPMOVSXWDrr	= 3980,
    VPMOVSXWQYrm	= 3981,
    VPMOVSXWQYrr	= 3982,
    VPMOVSXWQrm	= 3983,
    VPMOVSXWQrr	= 3984,
    VPMOVZXBDYrm	= 3985,
    VPMOVZXBDYrr	= 3986,
    VPMOVZXBDrm	= 3987,
    VPMOVZXBDrr	= 3988,
    VPMOVZXBQYrm	= 3989,
    VPMOVZXBQYrr	= 3990,
    VPMOVZXBQrm	= 3991,
    VPMOVZXBQrr	= 3992,
    VPMOVZXBWYrm	= 3993,
    VPMOVZXBWYrr	= 3994,
    VPMOVZXBWrm	= 3995,
    VPMOVZXBWrr	= 3996,
    VPMOVZXDQYrm	= 3997,
    VPMOVZXDQYrr	= 3998,
    VPMOVZXDQrm	= 3999,
    VPMOVZXDQrr	= 4000,
    VPMOVZXWDYrm	= 4001,
    VPMOVZXWDYrr	= 4002,
    VPMOVZXWDrm	= 4003,
    VPMOVZXWDrr	= 4004,
    VPMOVZXWQYrm	= 4005,
    VPMOVZXWQYrr	= 4006,
    VPMOVZXWQrm	= 4007,
    VPMOVZXWQrr	= 4008,
    VPMULDQYrm	= 4009,
    VPMULDQYrr	= 4010,
    VPMULDQrm	= 4011,
    VPMULDQrr	= 4012,
    VPMULHRSWrm128	= 4013,
    VPMULHRSWrm256	= 4014,
    VPMULHRSWrr128	= 4015,
    VPMULHRSWrr256	= 4016,
    VPMULHUWYrm	= 4017,
    VPMULHUWYrr	= 4018,
    VPMULHUWrm	= 4019,
    VPMULHUWrr	= 4020,
    VPMULHWYrm	= 4021,
    VPMULHWYrr	= 4022,
    VPMULHWrm	= 4023,
    VPMULHWrr	= 4024,
    VPMULLDYrm	= 4025,
    VPMULLDYrr	= 4026,
    VPMULLDrm	= 4027,
    VPMULLDrr	= 4028,
    VPMULLWYrm	= 4029,
    VPMULLWYrr	= 4030,
    VPMULLWrm	= 4031,
    VPMULLWrr	= 4032,
    VPMULUDQYrm	= 4033,
    VPMULUDQYrr	= 4034,
    VPMULUDQrm	= 4035,
    VPMULUDQrr	= 4036,
    VPORYrm	= 4037,
    VPORYrr	= 4038,
    VPORrm	= 4039,
    VPORrr	= 4040,
    VPPERMmr	= 4041,
    VPPERMrm	= 4042,
    VPPERMrr	= 4043,
    VPROTBmi	= 4044,
    VPROTBmr	= 4045,
    VPROTBri	= 4046,
    VPROTBrm	= 4047,
    VPROTBrr	= 4048,
    VPROTDmi	= 4049,
    VPROTDmr	= 4050,
    VPROTDri	= 4051,
    VPROTDrm	= 4052,
    VPROTDrr	= 4053,
    VPROTQmi	= 4054,
    VPROTQmr	= 4055,
    VPROTQri	= 4056,
    VPROTQrm	= 4057,
    VPROTQrr	= 4058,
    VPROTWmi	= 4059,
    VPROTWmr	= 4060,
    VPROTWri	= 4061,
    VPROTWrm	= 4062,
    VPROTWrr	= 4063,
    VPSADBWYrm	= 4064,
    VPSADBWYrr	= 4065,
    VPSADBWrm	= 4066,
    VPSADBWrr	= 4067,
    VPSHABmr	= 4068,
    VPSHABrm	= 4069,
    VPSHABrr	= 4070,
    VPSHADmr	= 4071,
    VPSHADrm	= 4072,
    VPSHADrr	= 4073,
    VPSHAQmr	= 4074,
    VPSHAQrm	= 4075,
    VPSHAQrr	= 4076,
    VPSHAWmr	= 4077,
    VPSHAWrm	= 4078,
    VPSHAWrr	= 4079,
    VPSHLBmr	= 4080,
    VPSHLBrm	= 4081,
    VPSHLBrr	= 4082,
    VPSHLDmr	= 4083,
    VPSHLDrm	= 4084,
    VPSHLDrr	= 4085,
    VPSHLQmr	= 4086,
    VPSHLQrm	= 4087,
    VPSHLQrr	= 4088,
    VPSHLWmr	= 4089,
    VPSHLWrm	= 4090,
    VPSHLWrr	= 4091,
    VPSHUFBYrm	= 4092,
    VPSHUFBYrr	= 4093,
    VPSHUFBrm	= 4094,
    VPSHUFBrr	= 4095,
    VPSHUFDYmi	= 4096,
    VPSHUFDYri	= 4097,
    VPSHUFDmi	= 4098,
    VPSHUFDri	= 4099,
    VPSHUFHWYmi	= 4100,
    VPSHUFHWYri	= 4101,
    VPSHUFHWmi	= 4102,
    VPSHUFHWri	= 4103,
    VPSHUFLWYmi	= 4104,
    VPSHUFLWYri	= 4105,
    VPSHUFLWmi	= 4106,
    VPSHUFLWri	= 4107,
    VPSIGNBYrm	= 4108,
    VPSIGNBYrr	= 4109,
    VPSIGNBrm	= 4110,
    VPSIGNBrr	= 4111,
    VPSIGNDYrm	= 4112,
    VPSIGNDYrr	= 4113,
    VPSIGNDrm	= 4114,
    VPSIGNDrr	= 4115,
    VPSIGNWYrm	= 4116,
    VPSIGNWYrr	= 4117,
    VPSIGNWrm	= 4118,
    VPSIGNWrr	= 4119,
    VPSLLDQYri	= 4120,
    VPSLLDQri	= 4121,
    VPSLLDYri	= 4122,
    VPSLLDYrm	= 4123,
    VPSLLDYrr	= 4124,
    VPSLLDri	= 4125,
    VPSLLDrm	= 4126,
    VPSLLDrr	= 4127,
    VPSLLQYri	= 4128,
    VPSLLQYrm	= 4129,
    VPSLLQYrr	= 4130,
    VPSLLQri	= 4131,
    VPSLLQrm	= 4132,
    VPSLLQrr	= 4133,
    VPSLLVDYrm	= 4134,
    VPSLLVDYrr	= 4135,
    VPSLLVDrm	= 4136,
    VPSLLVDrr	= 4137,
    VPSLLVQYrm	= 4138,
    VPSLLVQYrr	= 4139,
    VPSLLVQrm	= 4140,
    VPSLLVQrr	= 4141,
    VPSLLWYri	= 4142,
    VPSLLWYrm	= 4143,
    VPSLLWYrr	= 4144,
    VPSLLWri	= 4145,
    VPSLLWrm	= 4146,
    VPSLLWrr	= 4147,
    VPSRADYri	= 4148,
    VPSRADYrm	= 4149,
    VPSRADYrr	= 4150,
    VPSRADri	= 4151,
    VPSRADrm	= 4152,
    VPSRADrr	= 4153,
    VPSRAVDYrm	= 4154,
    VPSRAVDYrr	= 4155,
    VPSRAVDrm	= 4156,
    VPSRAVDrr	= 4157,
    VPSRAWYri	= 4158,
    VPSRAWYrm	= 4159,
    VPSRAWYrr	= 4160,
    VPSRAWri	= 4161,
    VPSRAWrm	= 4162,
    VPSRAWrr	= 4163,
    VPSRLDQYri	= 4164,
    VPSRLDQri	= 4165,
    VPSRLDYri	= 4166,
    VPSRLDYrm	= 4167,
    VPSRLDYrr	= 4168,
    VPSRLDri	= 4169,
    VPSRLDrm	= 4170,
    VPSRLDrr	= 4171,
    VPSRLQYri	= 4172,
    VPSRLQYrm	= 4173,
    VPSRLQYrr	= 4174,
    VPSRLQri	= 4175,
    VPSRLQrm	= 4176,
    VPSRLQrr	= 4177,
    VPSRLVDYrm	= 4178,
    VPSRLVDYrr	= 4179,
    VPSRLVDrm	= 4180,
    VPSRLVDrr	= 4181,
    VPSRLVQYrm	= 4182,
    VPSRLVQYrr	= 4183,
    VPSRLVQrm	= 4184,
    VPSRLVQrr	= 4185,
    VPSRLWYri	= 4186,
    VPSRLWYrm	= 4187,
    VPSRLWYrr	= 4188,
    VPSRLWri	= 4189,
    VPSRLWrm	= 4190,
    VPSRLWrr	= 4191,
    VPSUBBYrm	= 4192,
    VPSUBBYrr	= 4193,
    VPSUBBrm	= 4194,
    VPSUBBrr	= 4195,
    VPSUBDYrm	= 4196,
    VPSUBDYrr	= 4197,
    VPSUBDrm	= 4198,
    VPSUBDrr	= 4199,
    VPSUBQYrm	= 4200,
    VPSUBQYrr	= 4201,
    VPSUBQrm	= 4202,
    VPSUBQrr	= 4203,
    VPSUBSBYrm	= 4204,
    VPSUBSBYrr	= 4205,
    VPSUBSBrm	= 4206,
    VPSUBSBrr	= 4207,
    VPSUBSWYrm	= 4208,
    VPSUBSWYrr	= 4209,
    VPSUBSWrm	= 4210,
    VPSUBSWrr	= 4211,
    VPSUBUSBYrm	= 4212,
    VPSUBUSBYrr	= 4213,
    VPSUBUSBrm	= 4214,
    VPSUBUSBrr	= 4215,
    VPSUBUSWYrm	= 4216,
    VPSUBUSWYrr	= 4217,
    VPSUBUSWrm	= 4218,
    VPSUBUSWrr	= 4219,
    VPSUBWYrm	= 4220,
    VPSUBWYrr	= 4221,
    VPSUBWrm	= 4222,
    VPSUBWrr	= 4223,
    VPTESTYrm	= 4224,
    VPTESTYrr	= 4225,
    VPTESTrm	= 4226,
    VPTESTrr	= 4227,
    VPUNPCKHBWYrm	= 4228,
    VPUNPCKHBWYrr	= 4229,
    VPUNPCKHBWrm	= 4230,
    VPUNPCKHBWrr	= 4231,
    VPUNPCKHDQYrm	= 4232,
    VPUNPCKHDQYrr	= 4233,
    VPUNPCKHDQrm	= 4234,
    VPUNPCKHDQrr	= 4235,
    VPUNPCKHQDQYrm	= 4236,
    VPUNPCKHQDQYrr	= 4237,
    VPUNPCKHQDQrm	= 4238,
    VPUNPCKHQDQrr	= 4239,
    VPUNPCKHWDYrm	= 4240,
    VPUNPCKHWDYrr	= 4241,
    VPUNPCKHWDrm	= 4242,
    VPUNPCKHWDrr	= 4243,
    VPUNPCKLBWYrm	= 4244,
    VPUNPCKLBWYrr	= 4245,
    VPUNPCKLBWrm	= 4246,
    VPUNPCKLBWrr	= 4247,
    VPUNPCKLDQYrm	= 4248,
    VPUNPCKLDQYrr	= 4249,
    VPUNPCKLDQrm	= 4250,
    VPUNPCKLDQrr	= 4251,
    VPUNPCKLQDQYrm	= 4252,
    VPUNPCKLQDQYrr	= 4253,
    VPUNPCKLQDQrm	= 4254,
    VPUNPCKLQDQrr	= 4255,
    VPUNPCKLWDYrm	= 4256,
    VPUNPCKLWDYrr	= 4257,
    VPUNPCKLWDrm	= 4258,
    VPUNPCKLWDrr	= 4259,
    VPXORYrm	= 4260,
    VPXORYrr	= 4261,
    VPXORrm	= 4262,
    VPXORrr	= 4263,
    VRCPPSYm	= 4264,
    VRCPPSYm_Int	= 4265,
    VRCPPSYr	= 4266,
    VRCPPSYr_Int	= 4267,
    VRCPPSm	= 4268,
    VRCPPSm_Int	= 4269,
    VRCPPSr	= 4270,
    VRCPPSr_Int	= 4271,
    VRCPSSm	= 4272,
    VRCPSSm_Int	= 4273,
    VRCPSSr	= 4274,
    VROUNDPDm	= 4275,
    VROUNDPDr	= 4276,
    VROUNDPSm	= 4277,
    VROUNDPSr	= 4278,
    VROUNDSDm	= 4279,
    VROUNDSDr	= 4280,
    VROUNDSDr_Int	= 4281,
    VROUNDSSm	= 4282,
    VROUNDSSr	= 4283,
    VROUNDSSr_Int	= 4284,
    VROUNDYPDm	= 4285,
    VROUNDYPDr	= 4286,
    VROUNDYPSm	= 4287,
    VROUNDYPSr	= 4288,
    VRSQRTPSYm	= 4289,
    VRSQRTPSYm_Int	= 4290,
    VRSQRTPSYr	= 4291,
    VRSQRTPSYr_Int	= 4292,
    VRSQRTPSm	= 4293,
    VRSQRTPSm_Int	= 4294,
    VRSQRTPSr	= 4295,
    VRSQRTPSr_Int	= 4296,
    VRSQRTSSm	= 4297,
    VRSQRTSSm_Int	= 4298,
    VRSQRTSSr	= 4299,
    VSHUFPDYrmi	= 4300,
    VSHUFPDYrri	= 4301,
    VSHUFPDrmi	= 4302,
    VSHUFPDrri	= 4303,
    VSHUFPSYrmi	= 4304,
    VSHUFPSYrri	= 4305,
    VSHUFPSrmi	= 4306,
    VSHUFPSrri	= 4307,
    VSQRTPDYm	= 4308,
    VSQRTPDYm_Int	= 4309,
    VSQRTPDYr	= 4310,
    VSQRTPDYr_Int	= 4311,
    VSQRTPDm	= 4312,
    VSQRTPDm_Int	= 4313,
    VSQRTPDr	= 4314,
    VSQRTPDr_Int	= 4315,
    VSQRTPSYm	= 4316,
    VSQRTPSYm_Int	= 4317,
    VSQRTPSYr	= 4318,
    VSQRTPSYr_Int	= 4319,
    VSQRTPSm	= 4320,
    VSQRTPSm_Int	= 4321,
    VSQRTPSr	= 4322,
    VSQRTPSr_Int	= 4323,
    VSQRTSDm	= 4324,
    VSQRTSDm_Int	= 4325,
    VSQRTSDr	= 4326,
    VSQRTSSm	= 4327,
    VSQRTSSm_Int	= 4328,
    VSQRTSSr	= 4329,
    VSTMXCSR	= 4330,
    VSUBPDYrm	= 4331,
    VSUBPDYrr	= 4332,
    VSUBPDrm	= 4333,
    VSUBPDrr	= 4334,
    VSUBPSYrm	= 4335,
    VSUBPSYrr	= 4336,
    VSUBPSrm	= 4337,
    VSUBPSrr	= 4338,
    VSUBSDrm	= 4339,
    VSUBSDrm_Int	= 4340,
    VSUBSDrr	= 4341,
    VSUBSDrr_Int	= 4342,
    VSUBSSrm	= 4343,
    VSUBSSrm_Int	= 4344,
    VSUBSSrr	= 4345,
    VSUBSSrr_Int	= 4346,
    VTESTPDYrm	= 4347,
    VTESTPDYrr	= 4348,
    VTESTPDrm	= 4349,
    VTESTPDrr	= 4350,
    VTESTPSYrm	= 4351,
    VTESTPSYrr	= 4352,
    VTESTPSrm	= 4353,
    VTESTPSrr	= 4354,
    VUCOMISDrm	= 4355,
    VUCOMISDrr	= 4356,
    VUCOMISSrm	= 4357,
    VUCOMISSrr	= 4358,
    VUNPCKHPDYrm	= 4359,
    VUNPCKHPDYrr	= 4360,
    VUNPCKHPDrm	= 4361,
    VUNPCKHPDrr	= 4362,
    VUNPCKHPSYrm	= 4363,
    VUNPCKHPSYrr	= 4364,
    VUNPCKHPSrm	= 4365,
    VUNPCKHPSrr	= 4366,
    VUNPCKLPDYrm	= 4367,
    VUNPCKLPDYrr	= 4368,
    VUNPCKLPDrm	= 4369,
    VUNPCKLPDrr	= 4370,
    VUNPCKLPSYrm	= 4371,
    VUNPCKLPSYrr	= 4372,
    VUNPCKLPSrm	= 4373,
    VUNPCKLPSrr	= 4374,
    VXORPDYrm	= 4375,
    VXORPDYrr	= 4376,
    VXORPDrm	= 4377,
    VXORPDrr	= 4378,
    VXORPSYrm	= 4379,
    VXORPSYrr	= 4380,
    VXORPSrm	= 4381,
    VXORPSrr	= 4382,
    VZEROALL	= 4383,
    VZEROUPPER	= 4384,
    V_SET0	= 4385,
    V_SETALLONES	= 4386,
    W64ALLOCA	= 4387,
    WAIT	= 4388,
    WBINVD	= 4389,
    WIN_ALLOCA	= 4390,
    WIN_FTOL_32	= 4391,
    WIN_FTOL_64	= 4392,
    WRFSBASE	= 4393,
    WRFSBASE64	= 4394,
    WRGSBASE	= 4395,
    WRGSBASE64	= 4396,
    WRMSR	= 4397,
    XADD16rm	= 4398,
    XADD16rr	= 4399,
    XADD32rm	= 4400,
    XADD32rr	= 4401,
    XADD64rm	= 4402,
    XADD64rr	= 4403,
    XADD8rm	= 4404,
    XADD8rr	= 4405,
    XCHG16ar	= 4406,
    XCHG16rm	= 4407,
    XCHG16rr	= 4408,
    XCHG32ar	= 4409,
    XCHG32ar64	= 4410,
    XCHG32rm	= 4411,
    XCHG32rr	= 4412,
    XCHG64ar	= 4413,
    XCHG64rm	= 4414,
    XCHG64rr	= 4415,
    XCHG8rm	= 4416,
    XCHG8rr	= 4417,
    XCH_F	= 4418,
    XCRYPTCBC	= 4419,
    XCRYPTCFB	= 4420,
    XCRYPTCTR	= 4421,
    XCRYPTECB	= 4422,
    XCRYPTOFB	= 4423,
    XGETBV	= 4424,
    XLAT	= 4425,
    XOR16i16	= 4426,
    XOR16mi	= 4427,
    XOR16mi8	= 4428,
    XOR16mr	= 4429,
    XOR16ri	= 4430,
    XOR16ri8	= 4431,
    XOR16rm	= 4432,
    XOR16rr	= 4433,
    XOR16rr_REV	= 4434,
    XOR32i32	= 4435,
    XOR32mi	= 4436,
    XOR32mi8	= 4437,
    XOR32mr	= 4438,
    XOR32ri	= 4439,
    XOR32ri8	= 4440,
    XOR32rm	= 4441,
    XOR32rr	= 4442,
    XOR32rr_REV	= 4443,
    XOR64i32	= 4444,
    XOR64mi32	= 4445,
    XOR64mi8	= 4446,
    XOR64mr	= 4447,
    XOR64ri32	= 4448,
    XOR64ri8	= 4449,
    XOR64rm	= 4450,
    XOR64rr	= 4451,
    XOR64rr_REV	= 4452,
    XOR8i8	= 4453,
    XOR8mi	= 4454,
    XOR8mr	= 4455,
    XOR8ri	= 4456,
    XOR8rm	= 4457,
    XOR8rr	= 4458,
    XOR8rr_REV	= 4459,
    XORPDrm	= 4460,
    XORPDrr	= 4461,
    XORPSrm	= 4462,
    XORPSrr	= 4463,
    XRSTOR	= 4464,
    XRSTOR64	= 4465,
    XSAVE	= 4466,
    XSAVE64	= 4467,
    XSAVEOPT	= 4468,
    XSAVEOPT64	= 4469,
    XSETBV	= 4470,
    XSHA1	= 4471,
    XSHA256	= 4472,
    XSTORE	= 4473,
    INSTRUCTION_LIST_END = 4474
  };
}
} // End llvm namespace 
#endif // GET_INSTRINFO_ENUM

//===- TableGen'erated file -------------------------------------*- C++ -*-===//
//
// Target Instruction Descriptors
//
// Automatically generated file, do not edit!
//
//===----------------------------------------------------------------------===//


#ifdef GET_INSTRINFO_MC_DESC
#undef GET_INSTRINFO_MC_DESC
namespace llvm {

static const uint16_t ImplicitList1[] = { X86::EFLAGS, 0 };
static const uint16_t ImplicitList2[] = { X86::AX, 0 };
static const uint16_t ImplicitList3[] = { X86::EAX, 0 };
static const uint16_t ImplicitList4[] = { X86::RAX, 0 };
static const uint16_t ImplicitList5[] = { X86::AL, 0 };
static const uint16_t ImplicitList6[] = { X86::ESP, 0 };
static const uint16_t ImplicitList7[] = { X86::ESP, X86::EFLAGS, 0 };
static const uint16_t ImplicitList8[] = { X86::RSP, 0 };
static const uint16_t ImplicitList9[] = { X86::RSP, X86::EFLAGS, 0 };
static const uint16_t ImplicitList10[] = { X86::EAX, X86::EBX, X86::ECX, X86::EDX, 0 };
static const uint16_t ImplicitList11[] = { X86::EFLAGS, X86::EAX, X86::EBX, X86::ECX, X86::EDX, 0 };
static const uint16_t ImplicitList12[] = { X86::XMM0, 0 };
static const uint16_t ImplicitList13[] = { X86::EAX, X86::EDX, 0 };
static const uint16_t ImplicitList14[] = { X86::RAX, X86::RBX, X86::RCX, X86::RDX, 0 };
static const uint16_t ImplicitList15[] = { X86::RAX, X86::RDX, X86::EFLAGS, 0 };
static const uint16_t ImplicitList16[] = { X86::EAX, X86::EDX, X86::EFLAGS, 0 };
static const uint16_t ImplicitList17[] = { X86::RAX, X86::RDX, 0 };
static const uint16_t ImplicitList18[] = { X86::AX, X86::DX, 0 };
static const uint16_t ImplicitList19[] = { X86::AX, X86::DX, X86::EFLAGS, 0 };
static const uint16_t ImplicitList20[] = { X86::AL, X86::EFLAGS, X86::AX, 0 };
static const uint16_t ImplicitList21[] = { X86::DX, 0 };
static const uint16_t ImplicitList22[] = { X86::EAX, X86::ECX, 0 };
static const uint16_t ImplicitList23[] = { X86::RAX, X86::ECX, 0 };
static const uint16_t ImplicitList24[] = { X86::CX, 0 };
static const uint16_t ImplicitList25[] = { X86::ECX, 0 };
static const uint16_t ImplicitList26[] = { X86::RCX, 0 };
static const uint16_t ImplicitList27[] = { X86::AH, 0 };
static const uint16_t ImplicitList28[] = { X86::AX, X86::EFLAGS, 0 };
static const uint16_t ImplicitList29[] = { X86::EAX, X86::EFLAGS, 0 };
static const uint16_t ImplicitList30[] = { X86::RAX, X86::EFLAGS, 0 };
static const uint16_t ImplicitList31[] = { X86::AL, X86::EFLAGS, 0 };
static const uint16_t ImplicitList32[] = { X86::EBP, X86::ESP, 0 };
static const uint16_t ImplicitList33[] = { X86::RBP, X86::RSP, 0 };
static const uint16_t ImplicitList34[] = { X86::EDI, 0 };
static const uint16_t ImplicitList35[] = { X86::RDI, 0 };
static const uint16_t ImplicitList36[] = { X86::EAX, X86::ECX, X86::EDX, 0 };
static const uint16_t ImplicitList37[] = { X86::RAX, X86::RSI, 0 };
static const uint16_t ImplicitList38[] = { X86::RAX, X86::RDX, X86::RSI, 0 };
static const uint16_t ImplicitList39[] = { X86::EDI, X86::ESI, X86::EFLAGS, 0 };
static const uint16_t ImplicitList40[] = { X86::EDI, X86::ESI, 0 };
static const uint16_t ImplicitList41[] = { X86::EDX, 0 };
static const uint16_t ImplicitList42[] = { X86::RDX, 0 };
static const uint16_t ImplicitList43[] = { X86::ECX, X86::EAX, 0 };
static const uint16_t ImplicitList44[] = { X86::DX, X86::AX, 0 };
static const uint16_t ImplicitList45[] = { X86::DX, X86::EAX, 0 };
static const uint16_t ImplicitList46[] = { X86::DX, X86::AL, 0 };
static const uint16_t ImplicitList47[] = { X86::ECX, X86::EFLAGS, 0 };
static const uint16_t ImplicitList48[] = { X86::XMM0, X86::EFLAGS, 0 };
static const uint16_t ImplicitList49[] = { X86::EDI, X86::ESI, X86::EBP, X86::EBX, X86::EDX, X86::ECX, X86::EAX, X86::ESP, 0 };
static const uint16_t ImplicitList50[] = { X86::CL, 0 };
static const uint16_t ImplicitList51[] = { X86::RAX, X86::RCX, X86::RDX, 0 };
static const uint16_t ImplicitList52[] = { X86::ECX, X86::EDI, X86::ESI, 0 };
static const uint16_t ImplicitList53[] = { X86::RCX, X86::RDI, X86::RSI, 0 };
static const uint16_t ImplicitList54[] = { X86::AL, X86::ECX, X86::EDI, 0 };
static const uint16_t ImplicitList55[] = { X86::ECX, X86::EDI, 0 };
static const uint16_t ImplicitList56[] = { X86::AL, X86::RCX, X86::RDI, 0 };
static const uint16_t ImplicitList57[] = { X86::RCX, X86::RDI, 0 };
static const uint16_t ImplicitList58[] = { X86::EAX, X86::ECX, X86::EDI, 0 };
static const uint16_t ImplicitList59[] = { X86::RAX, X86::RCX, X86::RDI, 0 };
static const uint16_t ImplicitList60[] = { X86::AX, X86::ECX, X86::EDI, 0 };
static const uint16_t ImplicitList61[] = { X86::AX, X86::RCX, X86::RDI, 0 };
static const uint16_t ImplicitList62[] = { X86::EAX, X86::ESP, X86::EFLAGS, 0 };
static const uint16_t ImplicitList63[] = { X86::RAX, X86::RSP, X86::EFLAGS, 0 };
static const uint16_t ImplicitList64[] = { X86::AL, X86::EDI, X86::EFLAGS, 0 };
static const uint16_t ImplicitList65[] = { X86::EAX, X86::EDI, X86::EFLAGS, 0 };
static const uint16_t ImplicitList66[] = { X86::RAX, X86::RCX, X86::RDI, X86::EFLAGS, 0 };
static const uint16_t ImplicitList67[] = { X86::AX, X86::EDI, X86::EFLAGS, 0 };
static const uint16_t ImplicitList68[] = { X86::EAX, X86::ECX, X86::EFLAGS, 0 };
static const uint16_t ImplicitList69[] = { X86::RSP, X86::RDI, 0 };
static const uint16_t ImplicitList70[] = { X86::EAX, X86::ECX, X86::EDX, X86::FP0, X86::FP1, X86::FP2, X86::FP3, X86::FP4, X86::FP5, X86::FP6, X86::ST0, X86::MM0, X86::MM1, X86::MM2, X86::MM3, X86::MM4, X86::MM5, X86::MM6, X86::MM7, X86::XMM0, X86::XMM1, X86::XMM2, X86::XMM3, X86::XMM4, X86::XMM5, X86::XMM6, X86::XMM7, X86::XMM8, X86::XMM9, X86::XMM10, X86::XMM11, X86::XMM12, X86::XMM13, X86::XMM14, X86::XMM15, X86::EFLAGS, 0 };
static const uint16_t ImplicitList71[] = { X86::RAX, X86::RCX, X86::RDX, X86::RSI, X86::RDI, X86::R8, X86::R9, X86::R10, X86::R11, X86::FP0, X86::FP1, X86::FP2, X86::FP3, X86::FP4, X86::FP5, X86::FP6, X86::ST0, X86::ST1, X86::MM0, X86::MM1, X86::MM2, X86::MM3, X86::MM4, X86::MM5, X86::MM6, X86::MM7, X86::XMM0, X86::XMM1, X86::XMM2, X86::XMM3, X86::XMM4, X86::XMM5, X86::XMM6, X86::XMM7, X86::XMM8, X86::XMM9, X86::XMM10, X86::XMM11, X86::XMM12, X86::XMM13, X86::XMM14, X86::XMM15, X86::EFLAGS, 0 };
static const uint16_t ImplicitList72[] = { X86::ST0, 0 };
static const uint16_t ImplicitList73[] = { X86::YMM0, X86::YMM1, X86::YMM2, X86::YMM3, X86::YMM4, X86::YMM5, X86::YMM6, X86::YMM7, X86::YMM8, X86::YMM9, X86::YMM10, X86::YMM11, X86::YMM12, X86::YMM13, X86::YMM14, X86::YMM15, 0 };
static const uint16_t ImplicitList74[] = { X86::RAX, X86::R10, X86::R11, X86::RSP, X86::EFLAGS, 0 };
static const uint16_t ImplicitList75[] = { X86::RBX, X86::RDX, X86::RSI, X86::RDI, 0 };
static const uint16_t ImplicitList76[] = { X86::RSI, X86::RDI, 0 };
static const uint16_t ImplicitList77[] = { X86::RDX, X86::RAX, 0 };
static const uint16_t ImplicitList78[] = { X86::RDX, X86::RAX, X86::RCX, 0 };
static const uint16_t ImplicitList79[] = { X86::RAX, X86::RSI, X86::RDI, 0 };
static const uint16_t ImplicitList80[] = { X86::RDX, X86::RDI, 0 };
static const uint16_t ImplicitList81[] = { X86::RAX, X86::RDI, 0 };

static const MCOperandInfo OperandInfo2[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo3[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo4[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo5[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo6[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo7[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo8[] = { { X86::RFP32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo9[] = { { X86::RFP64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo10[] = { { X86::RFP80RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP80RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo11[] = { { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo12[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo13[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo14[] = { { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo15[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo16[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo17[] = { { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo18[] = { { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo19[] = { { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo20[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo21[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo22[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo23[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo24[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo25[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo26[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo27[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo28[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo29[] = { { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo30[] = { { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo31[] = { { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo32[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo33[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo34[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo35[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo36[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo37[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo38[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo39[] = { { X86::RSTRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo40[] = { { X86::RFP32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo41[] = { { X86::RFP32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo42[] = { { X86::RFP64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo43[] = { { X86::RFP64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo44[] = { { X86::RFP80RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP80RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP80RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo45[] = { { X86::RFP80RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP80RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo46[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo47[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo48[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo49[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo50[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo51[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo52[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo53[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo54[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo55[] = { { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo56[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, ((1 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo57[] = { { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo58[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo59[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo60[] = { { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo61[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo62[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo63[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo64[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo65[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo66[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo67[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo68[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo69[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo70[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo71[] = { { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo72[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo73[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo74[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo75[] = { { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo76[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo77[] = { { X86::RFP32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::RFP32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo78[] = { { X86::RFP64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::RFP64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo79[] = { { X86::RFP80RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP80RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::RFP80RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo80[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo81[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo82[] = { { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo83[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo84[] = { { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo85[] = { { X86::RFP32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo86[] = { { X86::RFP64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo87[] = { { X86::RFP80RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP80RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP80RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo88[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo89[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo90[] = { { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo91[] = { { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo92[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo93[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo94[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo95[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo96[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo97[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo98[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo99[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo100[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo101[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo102[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo103[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo104[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo105[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo106[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo107[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo108[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo109[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo110[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo111[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo112[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo113[] = { { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo114[] = { { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo115[] = { { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo116[] = { { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo117[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo118[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo119[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::RFP32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo120[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::RFP64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo121[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::RFP80RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo122[] = { { X86::RFP80RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo123[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo124[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo125[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo126[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo127[] = { { X86::RFP32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo128[] = { { X86::RFP64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo129[] = { { X86::RFP80RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo130[] = { { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo131[] = { { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo132[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo133[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo134[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo135[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo136[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo137[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo138[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo139[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo140[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo141[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo142[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo143[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo144[] = { { X86::RFP32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo145[] = { { X86::RFP64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo146[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { X86::GR32_NOSPRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo147[] = { { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo148[] = { { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo149[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo150[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo151[] = { { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo152[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo153[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo154[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo155[] = { { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo156[] = { { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo157[] = { { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo158[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo159[] = { { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo160[] = { { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo161[] = { { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo162[] = { { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo163[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo164[] = { { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo165[] = { { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo166[] = { { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo167[] = { { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo168[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo169[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::SEGMENT_REGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo170[] = { { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::SEGMENT_REGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo171[] = { { X86::SEGMENT_REGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo172[] = { { X86::SEGMENT_REGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo173[] = { { X86::CONTROL_REGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo174[] = { { X86::DEBUG_REGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo175[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::CONTROL_REGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo176[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::DEBUG_REGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo177[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::SEGMENT_REGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo178[] = { { X86::SEGMENT_REGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo179[] = { { X86::CONTROL_REGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo180[] = { { X86::DEBUG_REGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo181[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::CONTROL_REGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo182[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::DEBUG_REGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo183[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::SEGMENT_REGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo184[] = { { X86::SEGMENT_REGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo185[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo186[] = { { X86::GR64_NOREXRegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::GR64_NOREX_NOSPRegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::GR8_NOREXRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo187[] = { { X86::GR8_NOREXRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64_NOREXRegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::GR64_NOREX_NOSPRegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo188[] = { { X86::GR8_NOREXRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR8_NOREXRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo189[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo190[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo191[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo192[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo193[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo194[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo195[] = { { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo196[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo197[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo198[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo199[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo200[] = { { X86::GR32_NOREXRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64_NOREXRegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::GR64_NOREX_NOSPRegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo201[] = { { X86::GR32_NOREXRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR8_NOREXRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo202[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo203[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo204[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo205[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo206[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo207[] = { { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo208[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo209[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo210[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo211[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo212[] = { { X86::GR32_TCRegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::GR32_TCRegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo213[] = { { 2, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 2, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo214[] = { { X86::GR32_TCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo215[] = { { 2, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo216[] = { { -1, 0, MCOI::OPERAND_PCREL, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo217[] = { { X86::GR32_TCRegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::GR32_TCRegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo218[] = { { 2, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 2, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo219[] = { { X86::GR32_TCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo220[] = { { 2, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo221[] = { { X86::GR8_NOREXRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo222[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo223[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo224[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo225[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo226[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo227[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo228[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo229[] = { { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo230[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo231[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo232[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo233[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo234[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo235[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo236[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo237[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo238[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo239[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo240[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo241[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo242[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo243[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo244[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo245[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo246[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo247[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo248[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo249[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo250[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo251[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo252[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo253[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo254[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo255[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo256[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo257[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo258[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo259[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo260[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo261[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo262[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo263[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo264[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo265[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo266[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo267[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo268[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo269[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo270[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo271[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo272[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo273[] = { { X86::GR32_NOAXRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };

extern const MCInstrDesc X86Insts[] = {
  { 0,	0,	0,	204,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #0 = PHI
  { 1,	0,	0,	204,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic), 0x0ULL, NULL, NULL, 0 },  // Inst #1 = INLINEASM
  { 2,	1,	0,	204,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::NotDuplicable)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo2 },  // Inst #2 = PROLOG_LABEL
  { 3,	1,	0,	204,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::NotDuplicable)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo2 },  // Inst #3 = EH_LABEL
  { 4,	1,	0,	204,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::NotDuplicable)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo2 },  // Inst #4 = GC_LABEL
  { 5,	0,	0,	204,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic), 0x0ULL, NULL, NULL, 0 },  // Inst #5 = KILL
  { 6,	3,	1,	204,	0,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo3 },  // Inst #6 = EXTRACT_SUBREG
  { 7,	4,	1,	204,	0,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo4 },  // Inst #7 = INSERT_SUBREG
  { 8,	1,	1,	204,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #8 = IMPLICIT_DEF
  { 9,	4,	1,	204,	0,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo6 },  // Inst #9 = SUBREG_TO_REG
  { 10,	3,	1,	204,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo3 },  // Inst #10 = COPY_TO_REGCLASS
  { 11,	0,	0,	204,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic), 0x0ULL, NULL, NULL, 0 },  // Inst #11 = DBG_VALUE
  { 12,	1,	1,	204,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #12 = REG_SEQUENCE
  { 13,	2,	1,	204,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo7 },  // Inst #13 = COPY
  { 14,	0,	0,	204,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #14 = BUNDLE
  { 15,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x6e000001ULL, NULL, NULL, 0 },  // Inst #15 = AAA
  { 16,	1,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1aa004001ULL, NULL, NULL, OperandInfo2 },  // Inst #16 = AAD8i8
  { 17,	1,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a8004001ULL, NULL, NULL, OperandInfo2 },  // Inst #17 = AAM8i8
  { 18,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x7e000001ULL, NULL, NULL, 0 },  // Inst #18 = AAS
  { 19,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1c2000401ULL, NULL, NULL, 0 },  // Inst #19 = ABS_F
  { 20,	2,	1,	18,	0,	0, 0x60000ULL, NULL, NULL, OperandInfo8 },  // Inst #20 = ABS_Fp32
  { 21,	2,	1,	18,	0,	0, 0x60000ULL, NULL, NULL, OperandInfo9 },  // Inst #21 = ABS_Fp64
  { 22,	2,	1,	18,	0,	0, 0x60000ULL, NULL, NULL, OperandInfo10 },  // Inst #22 = ABS_Fp80
  { 23,	6,	1,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo11 },  // Inst #23 = ACQUIRE_MOV16rm
  { 24,	6,	1,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #24 = ACQUIRE_MOV32rm
  { 25,	6,	1,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #25 = ACQUIRE_MOV64rm
  { 26,	6,	1,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo14 },  // Inst #26 = ACQUIRE_MOV8rm
  { 27,	1,	0,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2a00c041ULL, ImplicitList1, ImplicitList1, OperandInfo2 },  // Inst #27 = ADC16i16
  { 28,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10200c05aULL, ImplicitList1, ImplicitList1, OperandInfo15 },  // Inst #28 = ADC16mi
  { 29,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10600405aULL, ImplicitList1, ImplicitList1, OperandInfo15 },  // Inst #29 = ADC16mi8
  { 30,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x22000044ULL, ImplicitList1, ImplicitList1, OperandInfo16 },  // Inst #30 = ADC16mr
  { 31,	3,	1,	3,	0,	0, 0x10200c052ULL, ImplicitList1, ImplicitList1, OperandInfo17 },  // Inst #31 = ADC16ri
  { 32,	3,	1,	3,	0,	0, 0x106004052ULL, ImplicitList1, ImplicitList1, OperandInfo17 },  // Inst #32 = ADC16ri8
  { 33,	7,	1,	3,	0,	0|(1<<MCID::MayLoad), 0x26000046ULL, ImplicitList1, ImplicitList1, OperandInfo18 },  // Inst #33 = ADC16rm
  { 34,	3,	1,	3,	0,	0|(1<<MCID::Commutable), 0x22000043ULL, ImplicitList1, ImplicitList1, OperandInfo19 },  // Inst #34 = ADC16rr
  { 35,	3,	1,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x26000045ULL, ImplicitList1, ImplicitList1, OperandInfo19 },  // Inst #35 = ADC16rr_REV
  { 36,	1,	0,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2a014001ULL, ImplicitList1, ImplicitList1, OperandInfo2 },  // Inst #36 = ADC32i32
  { 37,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10201401aULL, ImplicitList1, ImplicitList1, OperandInfo15 },  // Inst #37 = ADC32mi
  { 38,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10600401aULL, ImplicitList1, ImplicitList1, OperandInfo15 },  // Inst #38 = ADC32mi8
  { 39,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x22000004ULL, ImplicitList1, ImplicitList1, OperandInfo20 },  // Inst #39 = ADC32mr
  { 40,	3,	1,	3,	0,	0, 0x102014012ULL, ImplicitList1, ImplicitList1, OperandInfo21 },  // Inst #40 = ADC32ri
  { 41,	3,	1,	3,	0,	0, 0x106004012ULL, ImplicitList1, ImplicitList1, OperandInfo21 },  // Inst #41 = ADC32ri8
  { 42,	7,	1,	3,	0,	0|(1<<MCID::MayLoad), 0x26000006ULL, ImplicitList1, ImplicitList1, OperandInfo22 },  // Inst #42 = ADC32rm
  { 43,	3,	1,	3,	0,	0|(1<<MCID::Commutable), 0x22000003ULL, ImplicitList1, ImplicitList1, OperandInfo23 },  // Inst #43 = ADC32rr
  { 44,	3,	1,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x26000005ULL, ImplicitList1, ImplicitList1, OperandInfo23 },  // Inst #44 = ADC32rr_REV
  { 45,	1,	0,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2a016001ULL, ImplicitList1, ImplicitList1, OperandInfo2 },  // Inst #45 = ADC64i32
  { 46,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10201601aULL, ImplicitList1, ImplicitList1, OperandInfo15 },  // Inst #46 = ADC64mi32
  { 47,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10600601aULL, ImplicitList1, ImplicitList1, OperandInfo15 },  // Inst #47 = ADC64mi8
  { 48,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x22002004ULL, ImplicitList1, ImplicitList1, OperandInfo24 },  // Inst #48 = ADC64mr
  { 49,	3,	1,	3,	0,	0, 0x102016012ULL, ImplicitList1, ImplicitList1, OperandInfo25 },  // Inst #49 = ADC64ri32
  { 50,	3,	1,	3,	0,	0, 0x106006012ULL, ImplicitList1, ImplicitList1, OperandInfo25 },  // Inst #50 = ADC64ri8
  { 51,	7,	1,	3,	0,	0|(1<<MCID::MayLoad), 0x26002006ULL, ImplicitList1, ImplicitList1, OperandInfo26 },  // Inst #51 = ADC64rm
  { 52,	3,	1,	3,	0,	0|(1<<MCID::Commutable), 0x22002003ULL, ImplicitList1, ImplicitList1, OperandInfo27 },  // Inst #52 = ADC64rr
  { 53,	3,	1,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x26002005ULL, ImplicitList1, ImplicitList1, OperandInfo27 },  // Inst #53 = ADC64rr_REV
  { 54,	1,	0,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x28004001ULL, ImplicitList1, ImplicitList1, OperandInfo2 },  // Inst #54 = ADC8i8
  { 55,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10000401aULL, ImplicitList1, ImplicitList1, OperandInfo15 },  // Inst #55 = ADC8mi
  { 56,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x20000004ULL, ImplicitList1, ImplicitList1, OperandInfo28 },  // Inst #56 = ADC8mr
  { 57,	3,	1,	3,	0,	0, 0x100004012ULL, ImplicitList1, ImplicitList1, OperandInfo29 },  // Inst #57 = ADC8ri
  { 58,	7,	1,	3,	0,	0|(1<<MCID::MayLoad), 0x24000006ULL, ImplicitList1, ImplicitList1, OperandInfo30 },  // Inst #58 = ADC8rm
  { 59,	3,	1,	3,	0,	0|(1<<MCID::Commutable), 0x20000003ULL, ImplicitList1, ImplicitList1, OperandInfo31 },  // Inst #59 = ADC8rr
  { 60,	3,	1,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x24000005ULL, ImplicitList1, ImplicitList1, OperandInfo31 },  // Inst #60 = ADC8rr_REV
  { 61,	1,	0,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xa00c041ULL, ImplicitList2, ImplicitList1, OperandInfo2 },  // Inst #61 = ADD16i16
  { 62,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10200c058ULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #62 = ADD16mi
  { 63,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x106004058ULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #63 = ADD16mi8
  { 64,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x2000044ULL, NULL, ImplicitList1, OperandInfo16 },  // Inst #64 = ADD16mr
  { 65,	3,	1,	3,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x10200c050ULL, NULL, ImplicitList1, OperandInfo17 },  // Inst #65 = ADD16ri
  { 66,	3,	1,	3,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x106004050ULL, NULL, ImplicitList1, OperandInfo17 },  // Inst #66 = ADD16ri8
  { 67,	3,	1,	18,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x0ULL, NULL, ImplicitList1, OperandInfo17 },  // Inst #67 = ADD16ri8_DB
  { 68,	3,	1,	18,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x0ULL, NULL, ImplicitList1, OperandInfo17 },  // Inst #68 = ADD16ri_DB
  { 69,	7,	1,	3,	0,	0|(1<<MCID::MayLoad), 0x6000046ULL, NULL, ImplicitList1, OperandInfo18 },  // Inst #69 = ADD16rm
  { 70,	3,	1,	3,	0,	0|(1<<MCID::ConvertibleTo3Addr)|(1<<MCID::Commutable), 0x2000043ULL, NULL, ImplicitList1, OperandInfo19 },  // Inst #70 = ADD16rr
  { 71,	3,	1,	18,	0,	0|(1<<MCID::ConvertibleTo3Addr)|(1<<MCID::Commutable), 0x0ULL, NULL, ImplicitList1, OperandInfo19 },  // Inst #71 = ADD16rr_DB
  { 72,	3,	1,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x6000045ULL, NULL, ImplicitList1, OperandInfo19 },  // Inst #72 = ADD16rr_REV
  { 73,	1,	0,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xa014001ULL, ImplicitList3, ImplicitList1, OperandInfo2 },  // Inst #73 = ADD32i32
  { 74,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x102014018ULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #74 = ADD32mi
  { 75,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x106004018ULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #75 = ADD32mi8
  { 76,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x2000004ULL, NULL, ImplicitList1, OperandInfo20 },  // Inst #76 = ADD32mr
  { 77,	3,	1,	3,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x102014010ULL, NULL, ImplicitList1, OperandInfo21 },  // Inst #77 = ADD32ri
  { 78,	3,	1,	3,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x106004010ULL, NULL, ImplicitList1, OperandInfo21 },  // Inst #78 = ADD32ri8
  { 79,	3,	1,	18,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x0ULL, NULL, ImplicitList1, OperandInfo21 },  // Inst #79 = ADD32ri8_DB
  { 80,	3,	1,	18,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x0ULL, NULL, ImplicitList1, OperandInfo21 },  // Inst #80 = ADD32ri_DB
  { 81,	7,	1,	3,	0,	0|(1<<MCID::MayLoad), 0x6000006ULL, NULL, ImplicitList1, OperandInfo22 },  // Inst #81 = ADD32rm
  { 82,	3,	1,	3,	0,	0|(1<<MCID::ConvertibleTo3Addr)|(1<<MCID::Commutable), 0x2000003ULL, NULL, ImplicitList1, OperandInfo23 },  // Inst #82 = ADD32rr
  { 83,	3,	1,	18,	0,	0|(1<<MCID::ConvertibleTo3Addr)|(1<<MCID::Commutable), 0x0ULL, NULL, ImplicitList1, OperandInfo23 },  // Inst #83 = ADD32rr_DB
  { 84,	3,	1,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x6000005ULL, NULL, ImplicitList1, OperandInfo23 },  // Inst #84 = ADD32rr_REV
  { 85,	1,	0,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xa016001ULL, ImplicitList4, ImplicitList1, OperandInfo2 },  // Inst #85 = ADD64i32
  { 86,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x102016018ULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #86 = ADD64mi32
  { 87,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x106006018ULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #87 = ADD64mi8
  { 88,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x2002004ULL, NULL, ImplicitList1, OperandInfo24 },  // Inst #88 = ADD64mr
  { 89,	3,	1,	3,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x102016010ULL, NULL, ImplicitList1, OperandInfo25 },  // Inst #89 = ADD64ri32
  { 90,	3,	1,	18,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x0ULL, NULL, ImplicitList1, OperandInfo25 },  // Inst #90 = ADD64ri32_DB
  { 91,	3,	1,	3,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x106006010ULL, NULL, ImplicitList1, OperandInfo25 },  // Inst #91 = ADD64ri8
  { 92,	3,	1,	18,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x0ULL, NULL, ImplicitList1, OperandInfo25 },  // Inst #92 = ADD64ri8_DB
  { 93,	7,	1,	3,	0,	0|(1<<MCID::MayLoad), 0x6002006ULL, NULL, ImplicitList1, OperandInfo26 },  // Inst #93 = ADD64rm
  { 94,	3,	1,	3,	0,	0|(1<<MCID::ConvertibleTo3Addr)|(1<<MCID::Commutable), 0x2002003ULL, NULL, ImplicitList1, OperandInfo27 },  // Inst #94 = ADD64rr
  { 95,	3,	1,	18,	0,	0|(1<<MCID::ConvertibleTo3Addr)|(1<<MCID::Commutable), 0x0ULL, NULL, ImplicitList1, OperandInfo27 },  // Inst #95 = ADD64rr_DB
  { 96,	3,	1,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x6002005ULL, NULL, ImplicitList1, OperandInfo27 },  // Inst #96 = ADD64rr_REV
  { 97,	1,	0,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8004001ULL, ImplicitList5, ImplicitList1, OperandInfo2 },  // Inst #97 = ADD8i8
  { 98,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x100004018ULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #98 = ADD8mi
  { 99,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x4ULL, NULL, ImplicitList1, OperandInfo28 },  // Inst #99 = ADD8mr
  { 100,	3,	1,	3,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x100004010ULL, NULL, ImplicitList1, OperandInfo29 },  // Inst #100 = ADD8ri
  { 101,	7,	1,	3,	0,	0|(1<<MCID::MayLoad), 0x4000006ULL, NULL, ImplicitList1, OperandInfo30 },  // Inst #101 = ADD8rm
  { 102,	3,	1,	3,	0,	0|(1<<MCID::ConvertibleTo3Addr)|(1<<MCID::Commutable), 0x3ULL, NULL, ImplicitList1, OperandInfo31 },  // Inst #102 = ADD8rr
  { 103,	3,	1,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x4000005ULL, NULL, ImplicitList1, OperandInfo31 },  // Inst #103 = ADD8rr_REV
  { 104,	7,	1,	95,	0,	0|(1<<MCID::MayLoad), 0xb1000146ULL, NULL, NULL, OperandInfo32 },  // Inst #104 = ADDPDrm
  { 105,	3,	1,	96,	0,	0|(1<<MCID::Commutable), 0xb1000145ULL, NULL, NULL, OperandInfo33 },  // Inst #105 = ADDPDrr
  { 106,	7,	1,	91,	0,	0|(1<<MCID::MayLoad), 0xb0800106ULL, NULL, NULL, OperandInfo32 },  // Inst #106 = ADDPSrm
  { 107,	3,	1,	92,	0,	0|(1<<MCID::Commutable), 0xb0800105ULL, NULL, NULL, OperandInfo33 },  // Inst #107 = ADDPSrr
  { 108,	7,	1,	97,	0,	0|(1<<MCID::MayLoad), 0xb0000b06ULL, NULL, NULL, OperandInfo34 },  // Inst #108 = ADDSDrm
  { 109,	7,	1,	97,	0,	0|(1<<MCID::MayLoad), 0xb0000b06ULL, NULL, NULL, OperandInfo32 },  // Inst #109 = ADDSDrm_Int
  { 110,	3,	1,	98,	0,	0|(1<<MCID::Commutable), 0xb0000b05ULL, NULL, NULL, OperandInfo35 },  // Inst #110 = ADDSDrr
  { 111,	3,	1,	98,	0,	0, 0xb0000b05ULL, NULL, NULL, OperandInfo33 },  // Inst #111 = ADDSDrr_Int
  { 112,	7,	1,	93,	0,	0|(1<<MCID::MayLoad), 0xb0000c06ULL, NULL, NULL, OperandInfo36 },  // Inst #112 = ADDSSrm
  { 113,	7,	1,	93,	0,	0|(1<<MCID::MayLoad), 0xb0000c06ULL, NULL, NULL, OperandInfo32 },  // Inst #113 = ADDSSrm_Int
  { 114,	3,	1,	94,	0,	0|(1<<MCID::Commutable), 0xb0000c05ULL, NULL, NULL, OperandInfo37 },  // Inst #114 = ADDSSrr
  { 115,	3,	1,	94,	0,	0, 0xb0000c05ULL, NULL, NULL, OperandInfo33 },  // Inst #115 = ADDSSrr_Int
  { 116,	7,	1,	96,	0,	0|(1<<MCID::MayLoad), 0x1a1000146ULL, NULL, NULL, OperandInfo32 },  // Inst #116 = ADDSUBPDrm
  { 117,	3,	1,	96,	0,	0, 0x1a1000145ULL, NULL, NULL, OperandInfo33 },  // Inst #117 = ADDSUBPDrr
  { 118,	7,	1,	92,	0,	0|(1<<MCID::MayLoad), 0x1a0800b06ULL, NULL, NULL, OperandInfo32 },  // Inst #118 = ADDSUBPSrm
  { 119,	3,	1,	92,	0,	0, 0x1a0800b05ULL, NULL, NULL, OperandInfo33 },  // Inst #119 = ADDSUBPSrr
  { 120,	5,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b0000018ULL, NULL, NULL, OperandInfo38 },  // Inst #120 = ADD_F32m
  { 121,	5,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b8000018ULL, NULL, NULL, OperandInfo38 },  // Inst #121 = ADD_F64m
  { 122,	5,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1bc000018ULL, NULL, NULL, OperandInfo38 },  // Inst #122 = ADD_FI16m
  { 123,	5,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b4000018ULL, NULL, NULL, OperandInfo38 },  // Inst #123 = ADD_FI32m
  { 124,	1,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x180000902ULL, NULL, NULL, OperandInfo39 },  // Inst #124 = ADD_FPrST0
  { 125,	1,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x180000302ULL, NULL, NULL, OperandInfo39 },  // Inst #125 = ADD_FST0r
  { 126,	3,	1,	18,	0,	0, 0x80000ULL, NULL, NULL, OperandInfo40 },  // Inst #126 = ADD_Fp32
  { 127,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo41 },  // Inst #127 = ADD_Fp32m
  { 128,	3,	1,	18,	0,	0, 0x80000ULL, NULL, NULL, OperandInfo42 },  // Inst #128 = ADD_Fp64
  { 129,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo43 },  // Inst #129 = ADD_Fp64m
  { 130,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo43 },  // Inst #130 = ADD_Fp64m32
  { 131,	3,	1,	18,	0,	0, 0x80000ULL, NULL, NULL, OperandInfo44 },  // Inst #131 = ADD_Fp80
  { 132,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo45 },  // Inst #132 = ADD_Fp80m32
  { 133,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo45 },  // Inst #133 = ADD_Fp80m64
  { 134,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo41 },  // Inst #134 = ADD_FpI16m32
  { 135,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo43 },  // Inst #135 = ADD_FpI16m64
  { 136,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo45 },  // Inst #136 = ADD_FpI16m80
  { 137,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo41 },  // Inst #137 = ADD_FpI32m32
  { 138,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo43 },  // Inst #138 = ADD_FpI32m64
  { 139,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo45 },  // Inst #139 = ADD_FpI32m80
  { 140,	1,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x180000702ULL, NULL, NULL, OperandInfo39 },  // Inst #140 = ADD_FrST0
  { 141,	1,	0,	18,	0,	0, 0x0ULL, ImplicitList6, ImplicitList7, OperandInfo2 },  // Inst #141 = ADJCALLSTACKDOWN32
  { 142,	1,	0,	18,	0,	0, 0x0ULL, ImplicitList8, ImplicitList9, OperandInfo2 },  // Inst #142 = ADJCALLSTACKDOWN64
  { 143,	2,	0,	18,	0,	0, 0x0ULL, ImplicitList6, ImplicitList7, OperandInfo46 },  // Inst #143 = ADJCALLSTACKUP32
  { 144,	2,	0,	18,	0,	0, 0x0ULL, ImplicitList8, ImplicitList9, OperandInfo46 },  // Inst #144 = ADJCALLSTACKUP64
  { 145,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1bf800d46ULL, NULL, NULL, OperandInfo32 },  // Inst #145 = AESDECLASTrm
  { 146,	3,	1,	18,	0,	0, 0x1bf800d45ULL, NULL, NULL, OperandInfo33 },  // Inst #146 = AESDECLASTrr
  { 147,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1bd800d46ULL, NULL, NULL, OperandInfo32 },  // Inst #147 = AESDECrm
  { 148,	3,	1,	18,	0,	0, 0x1bd800d45ULL, NULL, NULL, OperandInfo33 },  // Inst #148 = AESDECrr
  { 149,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1bb800d46ULL, NULL, NULL, OperandInfo32 },  // Inst #149 = AESENCLASTrm
  { 150,	3,	1,	18,	0,	0, 0x1bb800d45ULL, NULL, NULL, OperandInfo33 },  // Inst #150 = AESENCLASTrr
  { 151,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1b9800d46ULL, NULL, NULL, OperandInfo32 },  // Inst #151 = AESENCrm
  { 152,	3,	1,	18,	0,	0, 0x1b9800d45ULL, NULL, NULL, OperandInfo33 },  // Inst #152 = AESENCrr
  { 153,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1b7800d46ULL, NULL, NULL, OperandInfo47 },  // Inst #153 = AESIMCrm
  { 154,	2,	1,	18,	0,	0, 0x1b7800d45ULL, NULL, NULL, OperandInfo48 },  // Inst #154 = AESIMCrr
  { 155,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1bf804e46ULL, NULL, NULL, OperandInfo49 },  // Inst #155 = AESKEYGENASSIST128rm
  { 156,	3,	1,	18,	0,	0, 0x1bf804e45ULL, NULL, NULL, OperandInfo50 },  // Inst #156 = AESKEYGENASSIST128rr
  { 157,	1,	0,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x4a00c041ULL, ImplicitList2, ImplicitList1, OperandInfo2 },  // Inst #157 = AND16i16
  { 158,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10200c05cULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #158 = AND16mi
  { 159,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10600405cULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #159 = AND16mi8
  { 160,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x42000044ULL, NULL, ImplicitList1, OperandInfo16 },  // Inst #160 = AND16mr
  { 161,	3,	1,	3,	0,	0, 0x10200c054ULL, NULL, ImplicitList1, OperandInfo17 },  // Inst #161 = AND16ri
  { 162,	3,	1,	3,	0,	0, 0x106004054ULL, NULL, ImplicitList1, OperandInfo17 },  // Inst #162 = AND16ri8
  { 163,	7,	1,	3,	0,	0|(1<<MCID::MayLoad), 0x46000046ULL, NULL, ImplicitList1, OperandInfo18 },  // Inst #163 = AND16rm
  { 164,	3,	1,	3,	0,	0|(1<<MCID::Commutable), 0x42000043ULL, NULL, ImplicitList1, OperandInfo19 },  // Inst #164 = AND16rr
  { 165,	3,	1,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x46000045ULL, NULL, ImplicitList1, OperandInfo19 },  // Inst #165 = AND16rr_REV
  { 166,	1,	0,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x4a014001ULL, ImplicitList3, ImplicitList1, OperandInfo2 },  // Inst #166 = AND32i32
  { 167,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10201401cULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #167 = AND32mi
  { 168,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10600401cULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #168 = AND32mi8
  { 169,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x42000004ULL, NULL, ImplicitList1, OperandInfo20 },  // Inst #169 = AND32mr
  { 170,	3,	1,	3,	0,	0, 0x102014014ULL, NULL, ImplicitList1, OperandInfo21 },  // Inst #170 = AND32ri
  { 171,	3,	1,	3,	0,	0, 0x106004014ULL, NULL, ImplicitList1, OperandInfo21 },  // Inst #171 = AND32ri8
  { 172,	7,	1,	3,	0,	0|(1<<MCID::MayLoad), 0x46000006ULL, NULL, ImplicitList1, OperandInfo22 },  // Inst #172 = AND32rm
  { 173,	3,	1,	3,	0,	0|(1<<MCID::Commutable), 0x42000003ULL, NULL, ImplicitList1, OperandInfo23 },  // Inst #173 = AND32rr
  { 174,	3,	1,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x46000005ULL, NULL, ImplicitList1, OperandInfo23 },  // Inst #174 = AND32rr_REV
  { 175,	1,	0,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x4a016001ULL, ImplicitList4, ImplicitList1, OperandInfo2 },  // Inst #175 = AND64i32
  { 176,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10201601cULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #176 = AND64mi32
  { 177,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10600601cULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #177 = AND64mi8
  { 178,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x42002004ULL, NULL, ImplicitList1, OperandInfo24 },  // Inst #178 = AND64mr
  { 179,	3,	1,	3,	0,	0, 0x102016014ULL, NULL, ImplicitList1, OperandInfo25 },  // Inst #179 = AND64ri32
  { 180,	3,	1,	3,	0,	0, 0x106006014ULL, NULL, ImplicitList1, OperandInfo25 },  // Inst #180 = AND64ri8
  { 181,	7,	1,	3,	0,	0|(1<<MCID::MayLoad), 0x46002006ULL, NULL, ImplicitList1, OperandInfo26 },  // Inst #181 = AND64rm
  { 182,	3,	1,	3,	0,	0|(1<<MCID::Commutable), 0x42002003ULL, NULL, ImplicitList1, OperandInfo27 },  // Inst #182 = AND64rr
  { 183,	3,	1,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x46002005ULL, NULL, ImplicitList1, OperandInfo27 },  // Inst #183 = AND64rr_REV
  { 184,	1,	0,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x48004001ULL, ImplicitList5, ImplicitList1, OperandInfo2 },  // Inst #184 = AND8i8
  { 185,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10000401cULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #185 = AND8mi
  { 186,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x40000004ULL, NULL, ImplicitList1, OperandInfo28 },  // Inst #186 = AND8mr
  { 187,	3,	1,	3,	0,	0, 0x100004014ULL, NULL, ImplicitList1, OperandInfo29 },  // Inst #187 = AND8ri
  { 188,	7,	1,	3,	0,	0|(1<<MCID::MayLoad), 0x44000006ULL, NULL, ImplicitList1, OperandInfo30 },  // Inst #188 = AND8rm
  { 189,	3,	1,	3,	0,	0|(1<<MCID::Commutable), 0x40000003ULL, NULL, ImplicitList1, OperandInfo31 },  // Inst #189 = AND8rr
  { 190,	3,	1,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x44000005ULL, NULL, ImplicitList1, OperandInfo31 },  // Inst #190 = AND8rr_REV
  { 191,	7,	1,	2,	0,	0|(1<<MCID::MayLoad), 0xbe4000d06ULL, NULL, ImplicitList1, OperandInfo51 },  // Inst #191 = ANDN32rm
  { 192,	3,	1,	3,	0,	0, 0xbe4000d05ULL, NULL, ImplicitList1, OperandInfo52 },  // Inst #192 = ANDN32rr
  { 193,	7,	1,	2,	0,	0|(1<<MCID::MayLoad), 0xfe4000d06ULL, NULL, ImplicitList1, OperandInfo53 },  // Inst #193 = ANDN64rm
  { 194,	3,	1,	3,	0,	0, 0xfe4000d05ULL, NULL, ImplicitList1, OperandInfo54 },  // Inst #194 = ANDN64rr
  { 195,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xab000146ULL, NULL, NULL, OperandInfo32 },  // Inst #195 = ANDNPDrm
  { 196,	3,	1,	18,	0,	0, 0xab000145ULL, NULL, NULL, OperandInfo33 },  // Inst #196 = ANDNPDrr
  { 197,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xaa800106ULL, NULL, NULL, OperandInfo32 },  // Inst #197 = ANDNPSrm
  { 198,	3,	1,	18,	0,	0, 0xaa800105ULL, NULL, NULL, OperandInfo33 },  // Inst #198 = ANDNPSrr
  { 199,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa9000146ULL, NULL, NULL, OperandInfo32 },  // Inst #199 = ANDPDrm
  { 200,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0xa9000145ULL, NULL, NULL, OperandInfo33 },  // Inst #200 = ANDPDrr
  { 201,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa8800106ULL, NULL, NULL, OperandInfo32 },  // Inst #201 = ANDPSrm
  { 202,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0xa8800105ULL, NULL, NULL, OperandInfo33 },  // Inst #202 = ANDPSrr
  { 203,	6,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xc6000006ULL, NULL, NULL, OperandInfo11 },  // Inst #203 = ARPL16mr
  { 204,	2,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xc6000003ULL, NULL, NULL, OperandInfo55 },  // Inst #204 = ARPL16rr
  { 205,	9,	2,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList10, ImplicitList11, OperandInfo56 },  // Inst #205 = ATOMADD6432
  { 206,	7,	1,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList1, OperandInfo57 },  // Inst #206 = ATOMAND16
  { 207,	7,	1,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList1, OperandInfo58 },  // Inst #207 = ATOMAND32
  { 208,	7,	1,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList1, OperandInfo59 },  // Inst #208 = ATOMAND64
  { 209,	9,	2,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList10, ImplicitList11, OperandInfo56 },  // Inst #209 = ATOMAND6432
  { 210,	7,	1,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList1, OperandInfo60 },  // Inst #210 = ATOMAND8
  { 211,	7,	1,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList1, OperandInfo57 },  // Inst #211 = ATOMMAX16
  { 212,	7,	1,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList1, OperandInfo58 },  // Inst #212 = ATOMMAX32
  { 213,	7,	1,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList1, OperandInfo59 },  // Inst #213 = ATOMMAX64
  { 214,	7,	1,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList1, OperandInfo57 },  // Inst #214 = ATOMMIN16
  { 215,	7,	1,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList1, OperandInfo58 },  // Inst #215 = ATOMMIN32
  { 216,	7,	1,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList1, OperandInfo59 },  // Inst #216 = ATOMMIN64
  { 217,	7,	1,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList1, OperandInfo57 },  // Inst #217 = ATOMNAND16
  { 218,	7,	1,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList1, OperandInfo58 },  // Inst #218 = ATOMNAND32
  { 219,	7,	1,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList1, OperandInfo59 },  // Inst #219 = ATOMNAND64
  { 220,	9,	2,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList10, ImplicitList11, OperandInfo56 },  // Inst #220 = ATOMNAND6432
  { 221,	7,	1,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList1, OperandInfo60 },  // Inst #221 = ATOMNAND8
  { 222,	7,	1,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList1, OperandInfo57 },  // Inst #222 = ATOMOR16
  { 223,	7,	1,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList1, OperandInfo58 },  // Inst #223 = ATOMOR32
  { 224,	7,	1,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList1, OperandInfo59 },  // Inst #224 = ATOMOR64
  { 225,	9,	2,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList10, ImplicitList11, OperandInfo56 },  // Inst #225 = ATOMOR6432
  { 226,	7,	1,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList1, OperandInfo60 },  // Inst #226 = ATOMOR8
  { 227,	9,	2,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList10, ImplicitList11, OperandInfo56 },  // Inst #227 = ATOMSUB6432
  { 228,	9,	2,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList10, ImplicitList11, OperandInfo56 },  // Inst #228 = ATOMSWAP6432
  { 229,	7,	1,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList1, OperandInfo57 },  // Inst #229 = ATOMUMAX16
  { 230,	7,	1,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList1, OperandInfo58 },  // Inst #230 = ATOMUMAX32
  { 231,	7,	1,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList1, OperandInfo59 },  // Inst #231 = ATOMUMAX64
  { 232,	7,	1,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList1, OperandInfo57 },  // Inst #232 = ATOMUMIN16
  { 233,	7,	1,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList1, OperandInfo58 },  // Inst #233 = ATOMUMIN32
  { 234,	7,	1,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList1, OperandInfo59 },  // Inst #234 = ATOMUMIN64
  { 235,	7,	1,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList1, OperandInfo57 },  // Inst #235 = ATOMXOR16
  { 236,	7,	1,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList1, OperandInfo58 },  // Inst #236 = ATOMXOR32
  { 237,	7,	1,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList1, OperandInfo59 },  // Inst #237 = ATOMXOR64
  { 238,	9,	2,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList10, ImplicitList11, OperandInfo56 },  // Inst #238 = ATOMXOR6432
  { 239,	7,	1,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList1, OperandInfo60 },  // Inst #239 = ATOMXOR8
  { 240,	1,	1,	18,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0xbdf000160ULL, NULL, NULL, OperandInfo61 },  // Inst #240 = AVX2_SET0
  { 241,	1,	1,	18,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0xaed800160ULL, NULL, NULL, OperandInfo61 },  // Inst #241 = AVX2_SETALLONES
  { 242,	1,	1,	18,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0xaaf000160ULL, NULL, NULL, OperandInfo61 },  // Inst #242 = AVX_SET0PDY
  { 243,	1,	1,	18,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0xaae800120ULL, NULL, NULL, OperandInfo61 },  // Inst #243 = AVX_SET0PSY
  { 244,	1,	1,	18,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0xaed800160ULL, NULL, NULL, OperandInfo62 },  // Inst #244 = AVX_SETALLONES
  { 245,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x13ee000d06ULL, NULL, ImplicitList1, OperandInfo63 },  // Inst #245 = BEXTR32rm
  { 246,	3,	1,	18,	0,	0, 0x13ee000d05ULL, NULL, ImplicitList1, OperandInfo52 },  // Inst #246 = BEXTR32rr
  { 247,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x17ee000d06ULL, NULL, ImplicitList1, OperandInfo64 },  // Inst #247 = BEXTR64rm
  { 248,	3,	1,	18,	0,	0, 0x17ee000d05ULL, NULL, ImplicitList1, OperandInfo54 },  // Inst #248 = BEXTR64rr
  { 249,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1b004e46ULL, NULL, NULL, OperandInfo65 },  // Inst #249 = BLENDPDrmi
  { 250,	4,	1,	18,	0,	0, 0x1b004e45ULL, NULL, NULL, OperandInfo66 },  // Inst #250 = BLENDPDrri
  { 251,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x18804e46ULL, NULL, NULL, OperandInfo65 },  // Inst #251 = BLENDPSrmi
  { 252,	4,	1,	18,	0,	0, 0x18804e45ULL, NULL, NULL, OperandInfo66 },  // Inst #252 = BLENDPSrri
  { 253,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x2b000d46ULL, ImplicitList12, NULL, OperandInfo32 },  // Inst #253 = BLENDVPDrm0
  { 254,	3,	1,	18,	0,	0, 0x2b000d45ULL, ImplicitList12, NULL, OperandInfo33 },  // Inst #254 = BLENDVPDrr0
  { 255,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x28800d46ULL, ImplicitList12, NULL, OperandInfo32 },  // Inst #255 = BLENDVPSrm0
  { 256,	3,	1,	18,	0,	0, 0x28800d45ULL, ImplicitList12, NULL, OperandInfo33 },  // Inst #256 = BLENDVPSrr0
  { 257,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xbe6000d1bULL, NULL, ImplicitList1, OperandInfo12 },  // Inst #257 = BLSI32rm
  { 258,	2,	1,	18,	0,	0, 0xbe6000d13ULL, NULL, ImplicitList1, OperandInfo67 },  // Inst #258 = BLSI32rr
  { 259,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xfe6000d1bULL, NULL, ImplicitList1, OperandInfo13 },  // Inst #259 = BLSI64rm
  { 260,	2,	1,	18,	0,	0, 0xfe6000d13ULL, NULL, ImplicitList1, OperandInfo68 },  // Inst #260 = BLSI64rr
  { 261,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xbe6000d1aULL, NULL, ImplicitList1, OperandInfo12 },  // Inst #261 = BLSMSK32rm
  { 262,	2,	1,	18,	0,	0, 0xbe6000d12ULL, NULL, ImplicitList1, OperandInfo67 },  // Inst #262 = BLSMSK32rr
  { 263,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xfe6000d1aULL, NULL, ImplicitList1, OperandInfo13 },  // Inst #263 = BLSMSK64rm
  { 264,	2,	1,	18,	0,	0, 0xfe6000d12ULL, NULL, ImplicitList1, OperandInfo68 },  // Inst #264 = BLSMSK64rr
  { 265,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xbe6000d19ULL, NULL, ImplicitList1, OperandInfo12 },  // Inst #265 = BLSR32rm
  { 266,	2,	1,	18,	0,	0, 0xbe6000d11ULL, NULL, ImplicitList1, OperandInfo67 },  // Inst #266 = BLSR32rr
  { 267,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xfe6000d19ULL, NULL, ImplicitList1, OperandInfo13 },  // Inst #267 = BLSR64rm
  { 268,	2,	1,	18,	0,	0, 0xfe6000d11ULL, NULL, ImplicitList1, OperandInfo68 },  // Inst #268 = BLSR64rr
  { 269,	6,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xc4000046ULL, NULL, NULL, OperandInfo11 },  // Inst #269 = BOUNDS16rm
  { 270,	6,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xc4000006ULL, NULL, NULL, OperandInfo12 },  // Inst #270 = BOUNDS32rm
  { 271,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x178000146ULL, NULL, ImplicitList1, OperandInfo11 },  // Inst #271 = BSF16rm
  { 272,	2,	1,	18,	0,	0, 0x178000145ULL, NULL, ImplicitList1, OperandInfo55 },  // Inst #272 = BSF16rr
  { 273,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x178000106ULL, NULL, ImplicitList1, OperandInfo12 },  // Inst #273 = BSF32rm
  { 274,	2,	1,	18,	0,	0, 0x178000105ULL, NULL, ImplicitList1, OperandInfo67 },  // Inst #274 = BSF32rr
  { 275,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x178002106ULL, NULL, ImplicitList1, OperandInfo13 },  // Inst #275 = BSF64rm
  { 276,	2,	1,	18,	0,	0, 0x178002105ULL, NULL, ImplicitList1, OperandInfo68 },  // Inst #276 = BSF64rr
  { 277,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x17a000146ULL, NULL, ImplicitList1, OperandInfo11 },  // Inst #277 = BSR16rm
  { 278,	2,	1,	18,	0,	0, 0x17a000145ULL, NULL, ImplicitList1, OperandInfo55 },  // Inst #278 = BSR16rr
  { 279,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x17a000106ULL, NULL, ImplicitList1, OperandInfo12 },  // Inst #279 = BSR32rm
  { 280,	2,	1,	18,	0,	0, 0x17a000105ULL, NULL, ImplicitList1, OperandInfo67 },  // Inst #280 = BSR32rr
  { 281,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x17a002106ULL, NULL, ImplicitList1, OperandInfo13 },  // Inst #281 = BSR64rm
  { 282,	2,	1,	18,	0,	0, 0x17a002105ULL, NULL, ImplicitList1, OperandInfo68 },  // Inst #282 = BSR64rr
  { 283,	2,	1,	18,	0,	0, 0x190000102ULL, NULL, NULL, OperandInfo69 },  // Inst #283 = BSWAP32r
  { 284,	2,	1,	18,	0,	0, 0x190002102ULL, NULL, NULL, OperandInfo70 },  // Inst #284 = BSWAP64r
  { 285,	6,	0,	18,	0,	0|(1<<MCID::MayLoad), 0x17400415cULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #285 = BT16mi8
  { 286,	6,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x146000144ULL, NULL, ImplicitList1, OperandInfo16 },  // Inst #286 = BT16mr
  { 287,	2,	0,	18,	0,	0, 0x174004154ULL, NULL, ImplicitList1, OperandInfo71 },  // Inst #287 = BT16ri8
  { 288,	2,	0,	18,	0,	0, 0x146000143ULL, NULL, ImplicitList1, OperandInfo55 },  // Inst #288 = BT16rr
  { 289,	6,	0,	18,	0,	0|(1<<MCID::MayLoad), 0x17400411cULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #289 = BT32mi8
  { 290,	6,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x146000104ULL, NULL, ImplicitList1, OperandInfo20 },  // Inst #290 = BT32mr
  { 291,	2,	0,	18,	0,	0, 0x174004114ULL, NULL, ImplicitList1, OperandInfo72 },  // Inst #291 = BT32ri8
  { 292,	2,	0,	18,	0,	0, 0x146000103ULL, NULL, ImplicitList1, OperandInfo67 },  // Inst #292 = BT32rr
  { 293,	6,	0,	18,	0,	0|(1<<MCID::MayLoad), 0x17400611cULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #293 = BT64mi8
  { 294,	6,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x146002104ULL, NULL, ImplicitList1, OperandInfo24 },  // Inst #294 = BT64mr
  { 295,	2,	0,	18,	0,	0, 0x174006114ULL, NULL, ImplicitList1, OperandInfo73 },  // Inst #295 = BT64ri8
  { 296,	2,	0,	18,	0,	0, 0x146002103ULL, NULL, ImplicitList1, OperandInfo68 },  // Inst #296 = BT64rr
  { 297,	6,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x17400415fULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #297 = BTC16mi8
  { 298,	6,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x176000144ULL, NULL, ImplicitList1, OperandInfo16 },  // Inst #298 = BTC16mr
  { 299,	2,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x174004157ULL, NULL, ImplicitList1, OperandInfo71 },  // Inst #299 = BTC16ri8
  { 300,	2,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x176000143ULL, NULL, ImplicitList1, OperandInfo55 },  // Inst #300 = BTC16rr
  { 301,	6,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x17400411fULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #301 = BTC32mi8
  { 302,	6,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x176000104ULL, NULL, ImplicitList1, OperandInfo20 },  // Inst #302 = BTC32mr
  { 303,	2,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x174004117ULL, NULL, ImplicitList1, OperandInfo72 },  // Inst #303 = BTC32ri8
  { 304,	2,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x176000103ULL, NULL, ImplicitList1, OperandInfo67 },  // Inst #304 = BTC32rr
  { 305,	6,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x17400611fULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #305 = BTC64mi8
  { 306,	6,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x176002104ULL, NULL, ImplicitList1, OperandInfo24 },  // Inst #306 = BTC64mr
  { 307,	2,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x174006117ULL, NULL, ImplicitList1, OperandInfo73 },  // Inst #307 = BTC64ri8
  { 308,	2,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x176002103ULL, NULL, ImplicitList1, OperandInfo68 },  // Inst #308 = BTC64rr
  { 309,	6,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x17400415eULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #309 = BTR16mi8
  { 310,	6,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x166000144ULL, NULL, ImplicitList1, OperandInfo16 },  // Inst #310 = BTR16mr
  { 311,	2,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x174004156ULL, NULL, ImplicitList1, OperandInfo71 },  // Inst #311 = BTR16ri8
  { 312,	2,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x166000143ULL, NULL, ImplicitList1, OperandInfo55 },  // Inst #312 = BTR16rr
  { 313,	6,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x17400411eULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #313 = BTR32mi8
  { 314,	6,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x166000104ULL, NULL, ImplicitList1, OperandInfo20 },  // Inst #314 = BTR32mr
  { 315,	2,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x174004116ULL, NULL, ImplicitList1, OperandInfo72 },  // Inst #315 = BTR32ri8
  { 316,	2,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x166000103ULL, NULL, ImplicitList1, OperandInfo67 },  // Inst #316 = BTR32rr
  { 317,	6,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x17400611eULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #317 = BTR64mi8
  { 318,	6,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x166002104ULL, NULL, ImplicitList1, OperandInfo24 },  // Inst #318 = BTR64mr
  { 319,	2,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x174006116ULL, NULL, ImplicitList1, OperandInfo73 },  // Inst #319 = BTR64ri8
  { 320,	2,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x166002103ULL, NULL, ImplicitList1, OperandInfo68 },  // Inst #320 = BTR64rr
  { 321,	6,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x17400415dULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #321 = BTS16mi8
  { 322,	6,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x156000144ULL, NULL, ImplicitList1, OperandInfo16 },  // Inst #322 = BTS16mr
  { 323,	2,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x174004155ULL, NULL, ImplicitList1, OperandInfo71 },  // Inst #323 = BTS16ri8
  { 324,	2,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x156000143ULL, NULL, ImplicitList1, OperandInfo55 },  // Inst #324 = BTS16rr
  { 325,	6,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x17400411dULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #325 = BTS32mi8
  { 326,	6,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x156000104ULL, NULL, ImplicitList1, OperandInfo20 },  // Inst #326 = BTS32mr
  { 327,	2,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x174004115ULL, NULL, ImplicitList1, OperandInfo72 },  // Inst #327 = BTS32ri8
  { 328,	2,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x156000103ULL, NULL, ImplicitList1, OperandInfo67 },  // Inst #328 = BTS32rr
  { 329,	6,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x17400611dULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #329 = BTS64mi8
  { 330,	6,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x156002104ULL, NULL, ImplicitList1, OperandInfo24 },  // Inst #330 = BTS64mr
  { 331,	2,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x174006115ULL, NULL, ImplicitList1, OperandInfo73 },  // Inst #331 = BTS64ri8
  { 332,	2,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x156002103ULL, NULL, ImplicitList1, OperandInfo68 },  // Inst #332 = BTS64rr
  { 333,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x13ea000d06ULL, NULL, ImplicitList1, OperandInfo63 },  // Inst #333 = BZHI32rm
  { 334,	3,	1,	18,	0,	0, 0x13ea000d05ULL, NULL, ImplicitList1, OperandInfo52 },  // Inst #334 = BZHI32rr
  { 335,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x17ea000d06ULL, NULL, ImplicitList1, OperandInfo64 },  // Inst #335 = BZHI64rm
  { 336,	3,	1,	18,	0,	0, 0x17ea000d05ULL, NULL, ImplicitList1, OperandInfo54 },  // Inst #336 = BZHI64rr
  { 337,	5,	0,	6,	0,	0|(1<<MCID::Call)|(1<<MCID::MayLoad)|(1<<MCID::Variadic), 0x1fe00001aULL, ImplicitList6, NULL, OperandInfo38 },  // Inst #337 = CALL32m
  { 338,	1,	0,	7,	0,	0|(1<<MCID::Call)|(1<<MCID::Variadic), 0x1fe000012ULL, ImplicitList6, NULL, OperandInfo74 },  // Inst #338 = CALL32r
  { 339,	5,	0,	6,	0,	0|(1<<MCID::Call)|(1<<MCID::MayLoad)|(1<<MCID::Variadic), 0x1fe00001aULL, ImplicitList8, NULL, OperandInfo38 },  // Inst #339 = CALL64m
  { 340,	1,	0,	7,	0,	0|(1<<MCID::Call)|(1<<MCID::Variadic)|(1<<MCID::UnmodeledSideEffects), 0x1d0018001ULL, ImplicitList8, NULL, OperandInfo75 },  // Inst #340 = CALL64pcrel32
  { 341,	1,	0,	7,	0,	0|(1<<MCID::Call)|(1<<MCID::Variadic), 0x1fe000012ULL, ImplicitList8, NULL, OperandInfo76 },  // Inst #341 = CALL64r
  { 342,	1,	0,	18,	0,	0|(1<<MCID::Call)|(1<<MCID::Variadic)|(1<<MCID::UnmodeledSideEffects), 0x1d0010041ULL, ImplicitList6, NULL, OperandInfo75 },  // Inst #342 = CALLpcrel16
  { 343,	1,	0,	7,	0,	0|(1<<MCID::Call)|(1<<MCID::Variadic)|(1<<MCID::UnmodeledSideEffects), 0x1d0018001ULL, ImplicitList6, NULL, OperandInfo75 },  // Inst #343 = CALLpcrel32
  { 344,	0,	0,	18,	0,	0, 0x130000041ULL, ImplicitList5, ImplicitList2, 0 },  // Inst #344 = CBW
  { 345,	0,	0,	18,	0,	0, 0x132000001ULL, ImplicitList3, ImplicitList13, 0 },  // Inst #345 = CDQ
  { 346,	0,	0,	18,	0,	0, 0x130002001ULL, ImplicitList3, ImplicitList4, 0 },  // Inst #346 = CDQE
  { 347,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1c0000401ULL, NULL, NULL, 0 },  // Inst #347 = CHS_F
  { 348,	2,	1,	18,	0,	0, 0x60000ULL, NULL, NULL, OperandInfo8 },  // Inst #348 = CHS_Fp32
  { 349,	2,	1,	18,	0,	0, 0x60000ULL, NULL, NULL, OperandInfo9 },  // Inst #349 = CHS_Fp64
  { 350,	2,	1,	18,	0,	0, 0x60000ULL, NULL, NULL, OperandInfo10 },  // Inst #350 = CHS_Fp80
  { 351,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1f0000001ULL, NULL, NULL, 0 },  // Inst #351 = CLC
  { 352,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1f8000001ULL, NULL, NULL, 0 },  // Inst #352 = CLD
  { 353,	5,	0,	182,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x15c00011fULL, NULL, NULL, OperandInfo38 },  // Inst #353 = CLFLUSH
  { 354,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000135ULL, NULL, NULL, 0 },  // Inst #354 = CLGI
  { 355,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1f4000001ULL, NULL, NULL, 0 },  // Inst #355 = CLI
  { 356,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xc000101ULL, NULL, NULL, 0 },  // Inst #356 = CLTS
  { 357,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ea000001ULL, NULL, NULL, 0 },  // Inst #357 = CMC
  { 358,	7,	1,	8,	0,	0|(1<<MCID::MayLoad), 0x8e000146ULL, ImplicitList1, NULL, OperandInfo18 },  // Inst #358 = CMOVA16rm
  { 359,	3,	1,	9,	0,	0|(1<<MCID::Commutable), 0x8e000145ULL, ImplicitList1, NULL, OperandInfo19 },  // Inst #359 = CMOVA16rr
  { 360,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0x8e000106ULL, ImplicitList1, NULL, OperandInfo22 },  // Inst #360 = CMOVA32rm
  { 361,	3,	1,	11,	0,	0|(1<<MCID::Commutable), 0x8e000105ULL, ImplicitList1, NULL, OperandInfo23 },  // Inst #361 = CMOVA32rr
  { 362,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0x8e002106ULL, ImplicitList1, NULL, OperandInfo26 },  // Inst #362 = CMOVA64rm
  { 363,	3,	1,	11,	0,	0|(1<<MCID::Commutable), 0x8e002105ULL, ImplicitList1, NULL, OperandInfo27 },  // Inst #363 = CMOVA64rr
  { 364,	7,	1,	8,	0,	0|(1<<MCID::MayLoad), 0x86000146ULL, ImplicitList1, NULL, OperandInfo18 },  // Inst #364 = CMOVAE16rm
  { 365,	3,	1,	9,	0,	0|(1<<MCID::Commutable), 0x86000145ULL, ImplicitList1, NULL, OperandInfo19 },  // Inst #365 = CMOVAE16rr
  { 366,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0x86000106ULL, ImplicitList1, NULL, OperandInfo22 },  // Inst #366 = CMOVAE32rm
  { 367,	3,	1,	11,	0,	0|(1<<MCID::Commutable), 0x86000105ULL, ImplicitList1, NULL, OperandInfo23 },  // Inst #367 = CMOVAE32rr
  { 368,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0x86002106ULL, ImplicitList1, NULL, OperandInfo26 },  // Inst #368 = CMOVAE64rm
  { 369,	3,	1,	11,	0,	0|(1<<MCID::Commutable), 0x86002105ULL, ImplicitList1, NULL, OperandInfo27 },  // Inst #369 = CMOVAE64rr
  { 370,	7,	1,	8,	0,	0|(1<<MCID::MayLoad), 0x84000146ULL, ImplicitList1, NULL, OperandInfo18 },  // Inst #370 = CMOVB16rm
  { 371,	3,	1,	9,	0,	0|(1<<MCID::Commutable), 0x84000145ULL, ImplicitList1, NULL, OperandInfo19 },  // Inst #371 = CMOVB16rr
  { 372,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0x84000106ULL, ImplicitList1, NULL, OperandInfo22 },  // Inst #372 = CMOVB32rm
  { 373,	3,	1,	11,	0,	0|(1<<MCID::Commutable), 0x84000105ULL, ImplicitList1, NULL, OperandInfo23 },  // Inst #373 = CMOVB32rr
  { 374,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0x84002106ULL, ImplicitList1, NULL, OperandInfo26 },  // Inst #374 = CMOVB64rm
  { 375,	3,	1,	11,	0,	0|(1<<MCID::Commutable), 0x84002105ULL, ImplicitList1, NULL, OperandInfo27 },  // Inst #375 = CMOVB64rr
  { 376,	7,	1,	8,	0,	0|(1<<MCID::MayLoad), 0x8c000146ULL, ImplicitList1, NULL, OperandInfo18 },  // Inst #376 = CMOVBE16rm
  { 377,	3,	1,	9,	0,	0|(1<<MCID::Commutable), 0x8c000145ULL, ImplicitList1, NULL, OperandInfo19 },  // Inst #377 = CMOVBE16rr
  { 378,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0x8c000106ULL, ImplicitList1, NULL, OperandInfo22 },  // Inst #378 = CMOVBE32rm
  { 379,	3,	1,	11,	0,	0|(1<<MCID::Commutable), 0x8c000105ULL, ImplicitList1, NULL, OperandInfo23 },  // Inst #379 = CMOVBE32rr
  { 380,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0x8c002106ULL, ImplicitList1, NULL, OperandInfo26 },  // Inst #380 = CMOVBE64rm
  { 381,	3,	1,	11,	0,	0|(1<<MCID::Commutable), 0x8c002105ULL, ImplicitList1, NULL, OperandInfo27 },  // Inst #381 = CMOVBE64rr
  { 382,	1,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a0000502ULL, NULL, NULL, OperandInfo39 },  // Inst #382 = CMOVBE_F
  { 383,	3,	1,	18,	0,	0, 0xc0000ULL, ImplicitList1, NULL, OperandInfo77 },  // Inst #383 = CMOVBE_Fp32
  { 384,	3,	1,	18,	0,	0, 0xc0000ULL, ImplicitList1, NULL, OperandInfo78 },  // Inst #384 = CMOVBE_Fp64
  { 385,	3,	1,	18,	0,	0, 0xc0000ULL, ImplicitList1, NULL, OperandInfo79 },  // Inst #385 = CMOVBE_Fp80
  { 386,	1,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x180000502ULL, NULL, NULL, OperandInfo39 },  // Inst #386 = CMOVB_F
  { 387,	3,	1,	18,	0,	0, 0xc0000ULL, ImplicitList1, NULL, OperandInfo77 },  // Inst #387 = CMOVB_Fp32
  { 388,	3,	1,	18,	0,	0, 0xc0000ULL, ImplicitList1, NULL, OperandInfo78 },  // Inst #388 = CMOVB_Fp64
  { 389,	3,	1,	18,	0,	0, 0xc0000ULL, ImplicitList1, NULL, OperandInfo79 },  // Inst #389 = CMOVB_Fp80
  { 390,	7,	1,	8,	0,	0|(1<<MCID::MayLoad), 0x88000146ULL, ImplicitList1, NULL, OperandInfo18 },  // Inst #390 = CMOVE16rm
  { 391,	3,	1,	9,	0,	0|(1<<MCID::Commutable), 0x88000145ULL, ImplicitList1, NULL, OperandInfo19 },  // Inst #391 = CMOVE16rr
  { 392,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0x88000106ULL, ImplicitList1, NULL, OperandInfo22 },  // Inst #392 = CMOVE32rm
  { 393,	3,	1,	11,	0,	0|(1<<MCID::Commutable), 0x88000105ULL, ImplicitList1, NULL, OperandInfo23 },  // Inst #393 = CMOVE32rr
  { 394,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0x88002106ULL, ImplicitList1, NULL, OperandInfo26 },  // Inst #394 = CMOVE64rm
  { 395,	3,	1,	11,	0,	0|(1<<MCID::Commutable), 0x88002105ULL, ImplicitList1, NULL, OperandInfo27 },  // Inst #395 = CMOVE64rr
  { 396,	1,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x190000502ULL, NULL, NULL, OperandInfo39 },  // Inst #396 = CMOVE_F
  { 397,	3,	1,	18,	0,	0, 0xc0000ULL, ImplicitList1, NULL, OperandInfo77 },  // Inst #397 = CMOVE_Fp32
  { 398,	3,	1,	18,	0,	0, 0xc0000ULL, ImplicitList1, NULL, OperandInfo78 },  // Inst #398 = CMOVE_Fp64
  { 399,	3,	1,	18,	0,	0, 0xc0000ULL, ImplicitList1, NULL, OperandInfo79 },  // Inst #399 = CMOVE_Fp80
  { 400,	7,	1,	8,	0,	0|(1<<MCID::MayLoad), 0x9e000146ULL, ImplicitList1, NULL, OperandInfo18 },  // Inst #400 = CMOVG16rm
  { 401,	3,	1,	9,	0,	0|(1<<MCID::Commutable), 0x9e000145ULL, ImplicitList1, NULL, OperandInfo19 },  // Inst #401 = CMOVG16rr
  { 402,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0x9e000106ULL, ImplicitList1, NULL, OperandInfo22 },  // Inst #402 = CMOVG32rm
  { 403,	3,	1,	11,	0,	0|(1<<MCID::Commutable), 0x9e000105ULL, ImplicitList1, NULL, OperandInfo23 },  // Inst #403 = CMOVG32rr
  { 404,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0x9e002106ULL, ImplicitList1, NULL, OperandInfo26 },  // Inst #404 = CMOVG64rm
  { 405,	3,	1,	11,	0,	0|(1<<MCID::Commutable), 0x9e002105ULL, ImplicitList1, NULL, OperandInfo27 },  // Inst #405 = CMOVG64rr
  { 406,	7,	1,	8,	0,	0|(1<<MCID::MayLoad), 0x9a000146ULL, ImplicitList1, NULL, OperandInfo18 },  // Inst #406 = CMOVGE16rm
  { 407,	3,	1,	9,	0,	0|(1<<MCID::Commutable), 0x9a000145ULL, ImplicitList1, NULL, OperandInfo19 },  // Inst #407 = CMOVGE16rr
  { 408,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0x9a000106ULL, ImplicitList1, NULL, OperandInfo22 },  // Inst #408 = CMOVGE32rm
  { 409,	3,	1,	11,	0,	0|(1<<MCID::Commutable), 0x9a000105ULL, ImplicitList1, NULL, OperandInfo23 },  // Inst #409 = CMOVGE32rr
  { 410,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0x9a002106ULL, ImplicitList1, NULL, OperandInfo26 },  // Inst #410 = CMOVGE64rm
  { 411,	3,	1,	11,	0,	0|(1<<MCID::Commutable), 0x9a002105ULL, ImplicitList1, NULL, OperandInfo27 },  // Inst #411 = CMOVGE64rr
  { 412,	7,	1,	8,	0,	0|(1<<MCID::MayLoad), 0x98000146ULL, ImplicitList1, NULL, OperandInfo18 },  // Inst #412 = CMOVL16rm
  { 413,	3,	1,	9,	0,	0|(1<<MCID::Commutable), 0x98000145ULL, ImplicitList1, NULL, OperandInfo19 },  // Inst #413 = CMOVL16rr
  { 414,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0x98000106ULL, ImplicitList1, NULL, OperandInfo22 },  // Inst #414 = CMOVL32rm
  { 415,	3,	1,	11,	0,	0|(1<<MCID::Commutable), 0x98000105ULL, ImplicitList1, NULL, OperandInfo23 },  // Inst #415 = CMOVL32rr
  { 416,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0x98002106ULL, ImplicitList1, NULL, OperandInfo26 },  // Inst #416 = CMOVL64rm
  { 417,	3,	1,	11,	0,	0|(1<<MCID::Commutable), 0x98002105ULL, ImplicitList1, NULL, OperandInfo27 },  // Inst #417 = CMOVL64rr
  { 418,	7,	1,	8,	0,	0|(1<<MCID::MayLoad), 0x9c000146ULL, ImplicitList1, NULL, OperandInfo18 },  // Inst #418 = CMOVLE16rm
  { 419,	3,	1,	9,	0,	0|(1<<MCID::Commutable), 0x9c000145ULL, ImplicitList1, NULL, OperandInfo19 },  // Inst #419 = CMOVLE16rr
  { 420,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0x9c000106ULL, ImplicitList1, NULL, OperandInfo22 },  // Inst #420 = CMOVLE32rm
  { 421,	3,	1,	11,	0,	0|(1<<MCID::Commutable), 0x9c000105ULL, ImplicitList1, NULL, OperandInfo23 },  // Inst #421 = CMOVLE32rr
  { 422,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0x9c002106ULL, ImplicitList1, NULL, OperandInfo26 },  // Inst #422 = CMOVLE64rm
  { 423,	3,	1,	11,	0,	0|(1<<MCID::Commutable), 0x9c002105ULL, ImplicitList1, NULL, OperandInfo27 },  // Inst #423 = CMOVLE64rr
  { 424,	1,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a0000602ULL, NULL, NULL, OperandInfo39 },  // Inst #424 = CMOVNBE_F
  { 425,	3,	1,	18,	0,	0, 0xc0000ULL, ImplicitList1, NULL, OperandInfo77 },  // Inst #425 = CMOVNBE_Fp32
  { 426,	3,	1,	18,	0,	0, 0xc0000ULL, ImplicitList1, NULL, OperandInfo78 },  // Inst #426 = CMOVNBE_Fp64
  { 427,	3,	1,	18,	0,	0, 0xc0000ULL, ImplicitList1, NULL, OperandInfo79 },  // Inst #427 = CMOVNBE_Fp80
  { 428,	1,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x180000602ULL, NULL, NULL, OperandInfo39 },  // Inst #428 = CMOVNB_F
  { 429,	3,	1,	18,	0,	0, 0xc0000ULL, ImplicitList1, NULL, OperandInfo77 },  // Inst #429 = CMOVNB_Fp32
  { 430,	3,	1,	18,	0,	0, 0xc0000ULL, ImplicitList1, NULL, OperandInfo78 },  // Inst #430 = CMOVNB_Fp64
  { 431,	3,	1,	18,	0,	0, 0xc0000ULL, ImplicitList1, NULL, OperandInfo79 },  // Inst #431 = CMOVNB_Fp80
  { 432,	7,	1,	8,	0,	0|(1<<MCID::MayLoad), 0x8a000146ULL, ImplicitList1, NULL, OperandInfo18 },  // Inst #432 = CMOVNE16rm
  { 433,	3,	1,	9,	0,	0|(1<<MCID::Commutable), 0x8a000145ULL, ImplicitList1, NULL, OperandInfo19 },  // Inst #433 = CMOVNE16rr
  { 434,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0x8a000106ULL, ImplicitList1, NULL, OperandInfo22 },  // Inst #434 = CMOVNE32rm
  { 435,	3,	1,	11,	0,	0|(1<<MCID::Commutable), 0x8a000105ULL, ImplicitList1, NULL, OperandInfo23 },  // Inst #435 = CMOVNE32rr
  { 436,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0x8a002106ULL, ImplicitList1, NULL, OperandInfo26 },  // Inst #436 = CMOVNE64rm
  { 437,	3,	1,	11,	0,	0|(1<<MCID::Commutable), 0x8a002105ULL, ImplicitList1, NULL, OperandInfo27 },  // Inst #437 = CMOVNE64rr
  { 438,	1,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x190000602ULL, NULL, NULL, OperandInfo39 },  // Inst #438 = CMOVNE_F
  { 439,	3,	1,	18,	0,	0, 0xc0000ULL, ImplicitList1, NULL, OperandInfo77 },  // Inst #439 = CMOVNE_Fp32
  { 440,	3,	1,	18,	0,	0, 0xc0000ULL, ImplicitList1, NULL, OperandInfo78 },  // Inst #440 = CMOVNE_Fp64
  { 441,	3,	1,	18,	0,	0, 0xc0000ULL, ImplicitList1, NULL, OperandInfo79 },  // Inst #441 = CMOVNE_Fp80
  { 442,	7,	1,	8,	0,	0|(1<<MCID::MayLoad), 0x82000146ULL, ImplicitList1, NULL, OperandInfo18 },  // Inst #442 = CMOVNO16rm
  { 443,	3,	1,	9,	0,	0|(1<<MCID::Commutable), 0x82000145ULL, ImplicitList1, NULL, OperandInfo19 },  // Inst #443 = CMOVNO16rr
  { 444,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0x82000106ULL, ImplicitList1, NULL, OperandInfo22 },  // Inst #444 = CMOVNO32rm
  { 445,	3,	1,	11,	0,	0|(1<<MCID::Commutable), 0x82000105ULL, ImplicitList1, NULL, OperandInfo23 },  // Inst #445 = CMOVNO32rr
  { 446,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0x82002106ULL, ImplicitList1, NULL, OperandInfo26 },  // Inst #446 = CMOVNO64rm
  { 447,	3,	1,	11,	0,	0|(1<<MCID::Commutable), 0x82002105ULL, ImplicitList1, NULL, OperandInfo27 },  // Inst #447 = CMOVNO64rr
  { 448,	7,	1,	8,	0,	0|(1<<MCID::MayLoad), 0x96000146ULL, ImplicitList1, NULL, OperandInfo18 },  // Inst #448 = CMOVNP16rm
  { 449,	3,	1,	9,	0,	0|(1<<MCID::Commutable), 0x96000145ULL, ImplicitList1, NULL, OperandInfo19 },  // Inst #449 = CMOVNP16rr
  { 450,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0x96000106ULL, ImplicitList1, NULL, OperandInfo22 },  // Inst #450 = CMOVNP32rm
  { 451,	3,	1,	11,	0,	0|(1<<MCID::Commutable), 0x96000105ULL, ImplicitList1, NULL, OperandInfo23 },  // Inst #451 = CMOVNP32rr
  { 452,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0x96002106ULL, ImplicitList1, NULL, OperandInfo26 },  // Inst #452 = CMOVNP64rm
  { 453,	3,	1,	11,	0,	0|(1<<MCID::Commutable), 0x96002105ULL, ImplicitList1, NULL, OperandInfo27 },  // Inst #453 = CMOVNP64rr
  { 454,	1,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1b0000602ULL, NULL, NULL, OperandInfo39 },  // Inst #454 = CMOVNP_F
  { 455,	3,	1,	18,	0,	0, 0xc0000ULL, ImplicitList1, NULL, OperandInfo77 },  // Inst #455 = CMOVNP_Fp32
  { 456,	3,	1,	18,	0,	0, 0xc0000ULL, ImplicitList1, NULL, OperandInfo78 },  // Inst #456 = CMOVNP_Fp64
  { 457,	3,	1,	18,	0,	0, 0xc0000ULL, ImplicitList1, NULL, OperandInfo79 },  // Inst #457 = CMOVNP_Fp80
  { 458,	7,	1,	8,	0,	0|(1<<MCID::MayLoad), 0x92000146ULL, ImplicitList1, NULL, OperandInfo18 },  // Inst #458 = CMOVNS16rm
  { 459,	3,	1,	9,	0,	0|(1<<MCID::Commutable), 0x92000145ULL, ImplicitList1, NULL, OperandInfo19 },  // Inst #459 = CMOVNS16rr
  { 460,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0x92000106ULL, ImplicitList1, NULL, OperandInfo22 },  // Inst #460 = CMOVNS32rm
  { 461,	3,	1,	11,	0,	0|(1<<MCID::Commutable), 0x92000105ULL, ImplicitList1, NULL, OperandInfo23 },  // Inst #461 = CMOVNS32rr
  { 462,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0x92002106ULL, ImplicitList1, NULL, OperandInfo26 },  // Inst #462 = CMOVNS64rm
  { 463,	3,	1,	11,	0,	0|(1<<MCID::Commutable), 0x92002105ULL, ImplicitList1, NULL, OperandInfo27 },  // Inst #463 = CMOVNS64rr
  { 464,	7,	1,	8,	0,	0|(1<<MCID::MayLoad), 0x80000146ULL, ImplicitList1, NULL, OperandInfo18 },  // Inst #464 = CMOVO16rm
  { 465,	3,	1,	9,	0,	0|(1<<MCID::Commutable), 0x80000145ULL, ImplicitList1, NULL, OperandInfo19 },  // Inst #465 = CMOVO16rr
  { 466,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0x80000106ULL, ImplicitList1, NULL, OperandInfo22 },  // Inst #466 = CMOVO32rm
  { 467,	3,	1,	11,	0,	0|(1<<MCID::Commutable), 0x80000105ULL, ImplicitList1, NULL, OperandInfo23 },  // Inst #467 = CMOVO32rr
  { 468,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0x80002106ULL, ImplicitList1, NULL, OperandInfo26 },  // Inst #468 = CMOVO64rm
  { 469,	3,	1,	11,	0,	0|(1<<MCID::Commutable), 0x80002105ULL, ImplicitList1, NULL, OperandInfo27 },  // Inst #469 = CMOVO64rr
  { 470,	7,	1,	8,	0,	0|(1<<MCID::MayLoad), 0x94000146ULL, ImplicitList1, NULL, OperandInfo18 },  // Inst #470 = CMOVP16rm
  { 471,	3,	1,	9,	0,	0|(1<<MCID::Commutable), 0x94000145ULL, ImplicitList1, NULL, OperandInfo19 },  // Inst #471 = CMOVP16rr
  { 472,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0x94000106ULL, ImplicitList1, NULL, OperandInfo22 },  // Inst #472 = CMOVP32rm
  { 473,	3,	1,	11,	0,	0|(1<<MCID::Commutable), 0x94000105ULL, ImplicitList1, NULL, OperandInfo23 },  // Inst #473 = CMOVP32rr
  { 474,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0x94002106ULL, ImplicitList1, NULL, OperandInfo26 },  // Inst #474 = CMOVP64rm
  { 475,	3,	1,	11,	0,	0|(1<<MCID::Commutable), 0x94002105ULL, ImplicitList1, NULL, OperandInfo27 },  // Inst #475 = CMOVP64rr
  { 476,	1,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1b0000502ULL, NULL, NULL, OperandInfo39 },  // Inst #476 = CMOVP_F
  { 477,	3,	1,	18,	0,	0, 0xc0000ULL, ImplicitList1, NULL, OperandInfo77 },  // Inst #477 = CMOVP_Fp32
  { 478,	3,	1,	18,	0,	0, 0xc0000ULL, ImplicitList1, NULL, OperandInfo78 },  // Inst #478 = CMOVP_Fp64
  { 479,	3,	1,	18,	0,	0, 0xc0000ULL, ImplicitList1, NULL, OperandInfo79 },  // Inst #479 = CMOVP_Fp80
  { 480,	7,	1,	8,	0,	0|(1<<MCID::MayLoad), 0x90000146ULL, ImplicitList1, NULL, OperandInfo18 },  // Inst #480 = CMOVS16rm
  { 481,	3,	1,	9,	0,	0|(1<<MCID::Commutable), 0x90000145ULL, ImplicitList1, NULL, OperandInfo19 },  // Inst #481 = CMOVS16rr
  { 482,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0x90000106ULL, ImplicitList1, NULL, OperandInfo22 },  // Inst #482 = CMOVS32rm
  { 483,	3,	1,	11,	0,	0|(1<<MCID::Commutable), 0x90000105ULL, ImplicitList1, NULL, OperandInfo23 },  // Inst #483 = CMOVS32rr
  { 484,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0x90002106ULL, ImplicitList1, NULL, OperandInfo26 },  // Inst #484 = CMOVS64rm
  { 485,	3,	1,	11,	0,	0|(1<<MCID::Commutable), 0x90002105ULL, ImplicitList1, NULL, OperandInfo27 },  // Inst #485 = CMOVS64rr
  { 486,	4,	1,	18,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, NULL, OperandInfo80 },  // Inst #486 = CMOV_FR32
  { 487,	4,	1,	18,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, NULL, OperandInfo81 },  // Inst #487 = CMOV_FR64
  { 488,	4,	1,	18,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, NULL, OperandInfo82 },  // Inst #488 = CMOV_GR16
  { 489,	4,	1,	18,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, NULL, OperandInfo83 },  // Inst #489 = CMOV_GR32
  { 490,	4,	1,	18,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, NULL, OperandInfo84 },  // Inst #490 = CMOV_GR8
  { 491,	4,	1,	18,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, NULL, OperandInfo85 },  // Inst #491 = CMOV_RFP32
  { 492,	4,	1,	18,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, NULL, OperandInfo86 },  // Inst #492 = CMOV_RFP64
  { 493,	4,	1,	18,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, NULL, OperandInfo87 },  // Inst #493 = CMOV_RFP80
  { 494,	4,	1,	18,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, NULL, OperandInfo88 },  // Inst #494 = CMOV_V2F64
  { 495,	4,	1,	18,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, NULL, OperandInfo88 },  // Inst #495 = CMOV_V2I64
  { 496,	4,	1,	18,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, NULL, OperandInfo88 },  // Inst #496 = CMOV_V4F32
  { 497,	4,	1,	18,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, NULL, OperandInfo89 },  // Inst #497 = CMOV_V4F64
  { 498,	4,	1,	18,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, NULL, OperandInfo89 },  // Inst #498 = CMOV_V4I64
  { 499,	4,	1,	18,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, NULL, OperandInfo89 },  // Inst #499 = CMOV_V8F32
  { 500,	1,	0,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x7a00c041ULL, ImplicitList2, ImplicitList1, OperandInfo2 },  // Inst #500 = CMP16i16
  { 501,	6,	0,	2,	0,	0|(1<<MCID::MayLoad), 0x10200c05fULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #501 = CMP16mi
  { 502,	6,	0,	2,	0,	0|(1<<MCID::MayLoad), 0x10600405fULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #502 = CMP16mi8
  { 503,	6,	0,	2,	0,	0|(1<<MCID::MayLoad), 0x72000044ULL, NULL, ImplicitList1, OperandInfo16 },  // Inst #503 = CMP16mr
  { 504,	2,	0,	3,	0,	0, 0x10200c057ULL, NULL, ImplicitList1, OperandInfo71 },  // Inst #504 = CMP16ri
  { 505,	2,	0,	3,	0,	0, 0x106004057ULL, NULL, ImplicitList1, OperandInfo71 },  // Inst #505 = CMP16ri8
  { 506,	6,	0,	3,	0,	0|(1<<MCID::MayLoad), 0x76000046ULL, NULL, ImplicitList1, OperandInfo11 },  // Inst #506 = CMP16rm
  { 507,	2,	0,	3,	0,	0, 0x72000043ULL, NULL, ImplicitList1, OperandInfo55 },  // Inst #507 = CMP16rr
  { 508,	2,	0,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x76000045ULL, NULL, ImplicitList1, OperandInfo55 },  // Inst #508 = CMP16rr_REV
  { 509,	1,	0,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x7a014001ULL, ImplicitList3, ImplicitList1, OperandInfo2 },  // Inst #509 = CMP32i32
  { 510,	6,	0,	2,	0,	0|(1<<MCID::MayLoad), 0x10201401fULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #510 = CMP32mi
  { 511,	6,	0,	2,	0,	0|(1<<MCID::MayLoad), 0x10600401fULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #511 = CMP32mi8
  { 512,	6,	0,	2,	0,	0|(1<<MCID::MayLoad), 0x72000004ULL, NULL, ImplicitList1, OperandInfo20 },  // Inst #512 = CMP32mr
  { 513,	2,	0,	3,	0,	0, 0x102014017ULL, NULL, ImplicitList1, OperandInfo72 },  // Inst #513 = CMP32ri
  { 514,	2,	0,	3,	0,	0, 0x106004017ULL, NULL, ImplicitList1, OperandInfo72 },  // Inst #514 = CMP32ri8
  { 515,	6,	0,	3,	0,	0|(1<<MCID::MayLoad), 0x76000006ULL, NULL, ImplicitList1, OperandInfo12 },  // Inst #515 = CMP32rm
  { 516,	2,	0,	3,	0,	0, 0x72000003ULL, NULL, ImplicitList1, OperandInfo67 },  // Inst #516 = CMP32rr
  { 517,	2,	0,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x76000005ULL, NULL, ImplicitList1, OperandInfo67 },  // Inst #517 = CMP32rr_REV
  { 518,	1,	0,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x7a016001ULL, ImplicitList4, ImplicitList1, OperandInfo2 },  // Inst #518 = CMP64i32
  { 519,	6,	0,	2,	0,	0|(1<<MCID::MayLoad), 0x10201601fULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #519 = CMP64mi32
  { 520,	6,	0,	2,	0,	0|(1<<MCID::MayLoad), 0x10600601fULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #520 = CMP64mi8
  { 521,	6,	0,	2,	0,	0|(1<<MCID::MayLoad), 0x72002004ULL, NULL, ImplicitList1, OperandInfo24 },  // Inst #521 = CMP64mr
  { 522,	2,	0,	3,	0,	0, 0x102016017ULL, NULL, ImplicitList1, OperandInfo73 },  // Inst #522 = CMP64ri32
  { 523,	2,	0,	3,	0,	0, 0x106006017ULL, NULL, ImplicitList1, OperandInfo73 },  // Inst #523 = CMP64ri8
  { 524,	6,	0,	3,	0,	0|(1<<MCID::MayLoad), 0x76002006ULL, NULL, ImplicitList1, OperandInfo13 },  // Inst #524 = CMP64rm
  { 525,	2,	0,	3,	0,	0, 0x72002003ULL, NULL, ImplicitList1, OperandInfo68 },  // Inst #525 = CMP64rr
  { 526,	2,	0,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x76002005ULL, NULL, ImplicitList1, OperandInfo68 },  // Inst #526 = CMP64rr_REV
  { 527,	1,	0,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x78004001ULL, ImplicitList5, ImplicitList1, OperandInfo2 },  // Inst #527 = CMP8i8
  { 528,	6,	0,	2,	0,	0|(1<<MCID::MayLoad), 0x10000401fULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #528 = CMP8mi
  { 529,	6,	0,	2,	0,	0|(1<<MCID::MayLoad), 0x70000004ULL, NULL, ImplicitList1, OperandInfo28 },  // Inst #529 = CMP8mr
  { 530,	2,	0,	3,	0,	0, 0x100004017ULL, NULL, ImplicitList1, OperandInfo90 },  // Inst #530 = CMP8ri
  { 531,	6,	0,	3,	0,	0|(1<<MCID::MayLoad), 0x74000006ULL, NULL, ImplicitList1, OperandInfo14 },  // Inst #531 = CMP8rm
  { 532,	2,	0,	3,	0,	0, 0x70000003ULL, NULL, ImplicitList1, OperandInfo91 },  // Inst #532 = CMP8rr
  { 533,	2,	0,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x74000005ULL, NULL, ImplicitList1, OperandInfo91 },  // Inst #533 = CMP8rr_REV
  { 534,	8,	1,	101,	0,	0|(1<<MCID::MayLoad), 0x185004146ULL, NULL, NULL, OperandInfo65 },  // Inst #534 = CMPPDrmi
  { 535,	8,	1,	101,	0,	0, 0x185004146ULL, NULL, NULL, OperandInfo65 },  // Inst #535 = CMPPDrmi_alt
  { 536,	4,	1,	102,	0,	0, 0x185004145ULL, NULL, NULL, OperandInfo66 },  // Inst #536 = CMPPDrri
  { 537,	4,	1,	102,	0,	0, 0x185004145ULL, NULL, NULL, OperandInfo66 },  // Inst #537 = CMPPDrri_alt
  { 538,	8,	1,	101,	0,	0|(1<<MCID::MayLoad), 0x184804106ULL, NULL, NULL, OperandInfo65 },  // Inst #538 = CMPPSrmi
  { 539,	8,	1,	101,	0,	0, 0x184804106ULL, NULL, NULL, OperandInfo65 },  // Inst #539 = CMPPSrmi_alt
  { 540,	4,	1,	102,	0,	0, 0x184804105ULL, NULL, NULL, OperandInfo66 },  // Inst #540 = CMPPSrri
  { 541,	4,	1,	102,	0,	0, 0x184804105ULL, NULL, NULL, OperandInfo66 },  // Inst #541 = CMPPSrri_alt
  { 542,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x14e000041ULL, NULL, NULL, 0 },  // Inst #542 = CMPS16
  { 543,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x14e000001ULL, NULL, NULL, 0 },  // Inst #543 = CMPS32
  { 544,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x14e002001ULL, NULL, NULL, 0 },  // Inst #544 = CMPS64
  { 545,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x14c000001ULL, NULL, NULL, 0 },  // Inst #545 = CMPS8
  { 546,	8,	1,	93,	0,	0|(1<<MCID::MayLoad), 0x184004b06ULL, NULL, NULL, OperandInfo92 },  // Inst #546 = CMPSDrm
  { 547,	8,	1,	93,	0,	0|(1<<MCID::MayLoad), 0x184004b06ULL, NULL, NULL, OperandInfo92 },  // Inst #547 = CMPSDrm_alt
  { 548,	4,	1,	94,	0,	0, 0x184004b05ULL, NULL, NULL, OperandInfo93 },  // Inst #548 = CMPSDrr
  { 549,	4,	1,	94,	0,	0, 0x184004b05ULL, NULL, NULL, OperandInfo93 },  // Inst #549 = CMPSDrr_alt
  { 550,	8,	1,	93,	0,	0|(1<<MCID::MayLoad), 0x184004c06ULL, NULL, NULL, OperandInfo94 },  // Inst #550 = CMPSSrm
  { 551,	8,	1,	93,	0,	0|(1<<MCID::MayLoad), 0x184004c06ULL, NULL, NULL, OperandInfo94 },  // Inst #551 = CMPSSrm_alt
  { 552,	4,	1,	94,	0,	0, 0x184004c05ULL, NULL, NULL, OperandInfo95 },  // Inst #552 = CMPSSrr
  { 553,	4,	1,	94,	0,	0, 0x184004c05ULL, NULL, NULL, OperandInfo95 },  // Inst #553 = CMPSSrr_alt
  { 554,	5,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x18e002119ULL, ImplicitList14, ImplicitList15, OperandInfo38 },  // Inst #554 = CMPXCHG16B
  { 555,	6,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x162000144ULL, NULL, NULL, OperandInfo16 },  // Inst #555 = CMPXCHG16rm
  { 556,	2,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x162000143ULL, NULL, NULL, OperandInfo55 },  // Inst #556 = CMPXCHG16rr
  { 557,	6,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x162000104ULL, NULL, NULL, OperandInfo20 },  // Inst #557 = CMPXCHG32rm
  { 558,	2,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x162000103ULL, NULL, NULL, OperandInfo67 },  // Inst #558 = CMPXCHG32rr
  { 559,	6,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x162002104ULL, NULL, NULL, OperandInfo24 },  // Inst #559 = CMPXCHG64rm
  { 560,	2,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x162002103ULL, NULL, NULL, OperandInfo68 },  // Inst #560 = CMPXCHG64rr
  { 561,	5,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x18e000119ULL, ImplicitList10, ImplicitList16, OperandInfo38 },  // Inst #561 = CMPXCHG8B
  { 562,	6,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x160000104ULL, NULL, NULL, OperandInfo28 },  // Inst #562 = CMPXCHG8rm
  { 563,	2,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x160000103ULL, NULL, NULL, OperandInfo91 },  // Inst #563 = CMPXCHG8rr
  { 564,	6,	0,	103,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x5f000146ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #564 = COMISDrm
  { 565,	2,	0,	104,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x5f000145ULL, NULL, ImplicitList1, OperandInfo48 },  // Inst #565 = COMISDrr
  { 566,	6,	0,	103,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x5e800106ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #566 = COMISSrm
  { 567,	2,	0,	104,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x5e800105ULL, NULL, ImplicitList1, OperandInfo48 },  // Inst #567 = COMISSrr
  { 568,	1,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1b0000302ULL, NULL, NULL, OperandInfo39 },  // Inst #568 = COMP_FST0r
  { 569,	1,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1e0000a02ULL, NULL, NULL, OperandInfo39 },  // Inst #569 = COM_FIPr
  { 570,	1,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1e0000602ULL, NULL, NULL, OperandInfo39 },  // Inst #570 = COM_FIr
  { 571,	1,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a0000302ULL, NULL, NULL, OperandInfo39 },  // Inst #571 = COM_FST0r
  { 572,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1fe000401ULL, NULL, NULL, 0 },  // Inst #572 = COS_F
  { 573,	2,	1,	18,	0,	0, 0x60000ULL, NULL, NULL, OperandInfo8 },  // Inst #573 = COS_Fp32
  { 574,	2,	1,	18,	0,	0, 0x60000ULL, NULL, NULL, OperandInfo9 },  // Inst #574 = COS_Fp64
  { 575,	2,	1,	18,	0,	0, 0x60000ULL, NULL, NULL, OperandInfo10 },  // Inst #575 = COS_Fp80
  { 576,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x144000101ULL, NULL, NULL, 0 },  // Inst #576 = CPUID
  { 577,	0,	0,	18,	0,	0, 0x132002001ULL, ImplicitList4, ImplicitList17, 0 },  // Inst #577 = CQO
  { 578,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1e2001146ULL, NULL, NULL, OperandInfo22 },  // Inst #578 = CRC32r32m16
  { 579,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1e2001106ULL, NULL, NULL, OperandInfo22 },  // Inst #579 = CRC32r32m32
  { 580,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1e0001106ULL, NULL, NULL, OperandInfo22 },  // Inst #580 = CRC32r32m8
  { 581,	3,	1,	18,	0,	0, 0x1e2001145ULL, NULL, NULL, OperandInfo96 },  // Inst #581 = CRC32r32r16
  { 582,	3,	1,	18,	0,	0, 0x1e2001105ULL, NULL, NULL, OperandInfo23 },  // Inst #582 = CRC32r32r32
  { 583,	3,	1,	18,	0,	0, 0x1e0001105ULL, NULL, NULL, OperandInfo97 },  // Inst #583 = CRC32r32r8
  { 584,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1e2003106ULL, NULL, NULL, OperandInfo26 },  // Inst #584 = CRC32r64m64
  { 585,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1e0003106ULL, NULL, NULL, OperandInfo26 },  // Inst #585 = CRC32r64m8
  { 586,	3,	1,	18,	0,	0, 0x1e2003105ULL, NULL, NULL, OperandInfo27 },  // Inst #586 = CRC32r64r64
  { 587,	3,	1,	18,	0,	0, 0x1e0003105ULL, NULL, NULL, OperandInfo98 },  // Inst #587 = CRC32r64r8
  { 588,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x5c000001ULL, NULL, NULL, 0 },  // Inst #588 = CS_PREFIX
  { 589,	6,	1,	106,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1cc800c06ULL, NULL, NULL, OperandInfo47 },  // Inst #589 = CVTDQ2PDrm
  { 590,	2,	1,	105,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1cc800c05ULL, NULL, NULL, OperandInfo48 },  // Inst #590 = CVTDQ2PDrr
  { 591,	6,	1,	109,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb6800106ULL, NULL, NULL, OperandInfo47 },  // Inst #591 = CVTDQ2PSrm
  { 592,	2,	1,	110,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb6800105ULL, NULL, NULL, OperandInfo48 },  // Inst #592 = CVTDQ2PSrr
  { 593,	6,	1,	105,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1cd000b06ULL, NULL, NULL, OperandInfo47 },  // Inst #593 = CVTPD2DQrm
  { 594,	2,	1,	106,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1cd000b05ULL, NULL, NULL, OperandInfo48 },  // Inst #594 = CVTPD2DQrr
  { 595,	6,	1,	105,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb5000146ULL, NULL, NULL, OperandInfo47 },  // Inst #595 = CVTPD2PSrm
  { 596,	2,	1,	106,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb5000145ULL, NULL, NULL, OperandInfo48 },  // Inst #596 = CVTPD2PSrr
  { 597,	6,	1,	109,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb7000146ULL, NULL, NULL, OperandInfo47 },  // Inst #597 = CVTPS2DQrm
  { 598,	2,	1,	110,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb7000145ULL, NULL, NULL, OperandInfo48 },  // Inst #598 = CVTPS2DQrr
  { 599,	6,	1,	105,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb4000106ULL, NULL, NULL, OperandInfo47 },  // Inst #599 = CVTPS2PDrm
  { 600,	2,	1,	106,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb4000105ULL, NULL, NULL, OperandInfo48 },  // Inst #600 = CVTPS2PDrr
  { 601,	6,	1,	111,	0,	0|(1<<MCID::MayLoad), 0x5a002b06ULL, NULL, NULL, OperandInfo13 },  // Inst #601 = CVTSD2SI64rm
  { 602,	2,	1,	112,	0,	0, 0x5a002b05ULL, NULL, NULL, OperandInfo99 },  // Inst #602 = CVTSD2SI64rr
  { 603,	6,	1,	111,	0,	0|(1<<MCID::MayLoad), 0x5a000b06ULL, NULL, NULL, OperandInfo12 },  // Inst #603 = CVTSD2SIrm
  { 604,	2,	1,	112,	0,	0, 0x5a000b05ULL, NULL, NULL, OperandInfo100 },  // Inst #604 = CVTSD2SIrr
  { 605,	6,	1,	117,	0,	0|(1<<MCID::MayLoad), 0xb4000b06ULL, NULL, NULL, OperandInfo101 },  // Inst #605 = CVTSD2SSrm
  { 606,	2,	1,	118,	0,	0, 0xb4000b05ULL, NULL, NULL, OperandInfo102 },  // Inst #606 = CVTSD2SSrr
  { 607,	6,	1,	117,	0,	0|(1<<MCID::MayLoad), 0x54002b06ULL, NULL, NULL, OperandInfo103 },  // Inst #607 = CVTSI2SD64rm
  { 608,	2,	1,	118,	0,	0, 0x54002b05ULL, NULL, NULL, OperandInfo104 },  // Inst #608 = CVTSI2SD64rr
  { 609,	6,	1,	117,	0,	0|(1<<MCID::MayLoad), 0x54000b06ULL, NULL, NULL, OperandInfo103 },  // Inst #609 = CVTSI2SDrm
  { 610,	2,	1,	118,	0,	0, 0x54000b05ULL, NULL, NULL, OperandInfo105 },  // Inst #610 = CVTSI2SDrr
  { 611,	6,	1,	117,	0,	0|(1<<MCID::MayLoad), 0x54002c06ULL, NULL, NULL, OperandInfo101 },  // Inst #611 = CVTSI2SS64rm
  { 612,	2,	1,	118,	0,	0, 0x54002c05ULL, NULL, NULL, OperandInfo106 },  // Inst #612 = CVTSI2SS64rr
  { 613,	6,	1,	117,	0,	0|(1<<MCID::MayLoad), 0x54000c06ULL, NULL, NULL, OperandInfo101 },  // Inst #613 = CVTSI2SSrm
  { 614,	2,	1,	118,	0,	0, 0x54000c05ULL, NULL, NULL, OperandInfo107 },  // Inst #614 = CVTSI2SSrr
  { 615,	6,	1,	117,	0,	0|(1<<MCID::MayLoad), 0xb4000c06ULL, NULL, NULL, OperandInfo103 },  // Inst #615 = CVTSS2SDrm
  { 616,	2,	1,	118,	0,	0, 0xb4000c05ULL, NULL, NULL, OperandInfo108 },  // Inst #616 = CVTSS2SDrr
  { 617,	6,	1,	115,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x5a002c06ULL, NULL, NULL, OperandInfo13 },  // Inst #617 = CVTSS2SI64rm
  { 618,	2,	1,	116,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x5a002c05ULL, NULL, NULL, OperandInfo109 },  // Inst #618 = CVTSS2SI64rr
  { 619,	6,	1,	113,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x5a000c06ULL, NULL, NULL, OperandInfo12 },  // Inst #619 = CVTSS2SIrm
  { 620,	2,	1,	114,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x5a000c05ULL, NULL, NULL, OperandInfo110 },  // Inst #620 = CVTSS2SIrr
  { 621,	6,	1,	105,	0,	0|(1<<MCID::MayLoad), 0x1cd000146ULL, NULL, NULL, OperandInfo47 },  // Inst #621 = CVTTPD2DQrm
  { 622,	2,	1,	106,	0,	0, 0x1cd000145ULL, NULL, NULL, OperandInfo48 },  // Inst #622 = CVTTPD2DQrr
  { 623,	6,	1,	109,	0,	0|(1<<MCID::MayLoad), 0xb6000c06ULL, NULL, NULL, OperandInfo47 },  // Inst #623 = CVTTPS2DQrm
  { 624,	2,	1,	110,	0,	0, 0xb6000c05ULL, NULL, NULL, OperandInfo48 },  // Inst #624 = CVTTPS2DQrr
  { 625,	6,	1,	111,	0,	0|(1<<MCID::MayLoad), 0x58002b06ULL, NULL, NULL, OperandInfo13 },  // Inst #625 = CVTTSD2SI64rm
  { 626,	2,	1,	112,	0,	0, 0x58002b05ULL, NULL, NULL, OperandInfo111 },  // Inst #626 = CVTTSD2SI64rr
  { 627,	6,	1,	111,	0,	0|(1<<MCID::MayLoad), 0x58000b06ULL, NULL, NULL, OperandInfo12 },  // Inst #627 = CVTTSD2SIrm
  { 628,	2,	1,	112,	0,	0, 0x58000b05ULL, NULL, NULL, OperandInfo112 },  // Inst #628 = CVTTSD2SIrr
  { 629,	6,	1,	115,	0,	0|(1<<MCID::MayLoad), 0x58002c06ULL, NULL, NULL, OperandInfo13 },  // Inst #629 = CVTTSS2SI64rm
  { 630,	2,	1,	116,	0,	0, 0x58002c05ULL, NULL, NULL, OperandInfo109 },  // Inst #630 = CVTTSS2SI64rr
  { 631,	6,	1,	113,	0,	0|(1<<MCID::MayLoad), 0x58000c06ULL, NULL, NULL, OperandInfo12 },  // Inst #631 = CVTTSS2SIrm
  { 632,	2,	1,	114,	0,	0, 0x58000c05ULL, NULL, NULL, OperandInfo110 },  // Inst #632 = CVTTSS2SIrr
  { 633,	0,	0,	18,	0,	0, 0x132000041ULL, ImplicitList2, ImplicitList18, 0 },  // Inst #633 = CWD
  { 634,	0,	0,	18,	0,	0, 0x130000001ULL, ImplicitList2, ImplicitList3, 0 },  // Inst #634 = CWDE
  { 635,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x4e000001ULL, NULL, NULL, 0 },  // Inst #635 = DAA
  { 636,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x5e000001ULL, NULL, NULL, 0 },  // Inst #636 = DAS
  { 637,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xcc000001ULL, NULL, NULL, 0 },  // Inst #637 = DATA16_PREFIX
  { 638,	5,	0,	200,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1fe000059ULL, NULL, ImplicitList1, OperandInfo38 },  // Inst #638 = DEC16m
  { 639,	2,	1,	201,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x90000042ULL, NULL, ImplicitList1, OperandInfo113 },  // Inst #639 = DEC16r
  { 640,	5,	0,	200,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1fe000019ULL, NULL, ImplicitList1, OperandInfo38 },  // Inst #640 = DEC32m
  { 641,	2,	1,	201,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x90000002ULL, NULL, ImplicitList1, OperandInfo69 },  // Inst #641 = DEC32r
  { 642,	5,	0,	200,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1fe000059ULL, NULL, ImplicitList1, OperandInfo38 },  // Inst #642 = DEC64_16m
  { 643,	2,	1,	201,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x1fe000051ULL, NULL, ImplicitList1, OperandInfo113 },  // Inst #643 = DEC64_16r
  { 644,	5,	0,	200,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1fe000019ULL, NULL, ImplicitList1, OperandInfo38 },  // Inst #644 = DEC64_32m
  { 645,	2,	1,	201,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x1fe000011ULL, NULL, ImplicitList1, OperandInfo69 },  // Inst #645 = DEC64_32r
  { 646,	5,	0,	200,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1fe002019ULL, NULL, ImplicitList1, OperandInfo38 },  // Inst #646 = DEC64m
  { 647,	2,	1,	201,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x1fe002011ULL, NULL, ImplicitList1, OperandInfo70 },  // Inst #647 = DEC64r
  { 648,	5,	0,	200,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1fc000019ULL, NULL, ImplicitList1, OperandInfo38 },  // Inst #648 = DEC8m
  { 649,	2,	1,	201,	0,	0, 0x1fc000011ULL, NULL, ImplicitList1, OperandInfo114 },  // Inst #649 = DEC8r
  { 650,	5,	0,	21,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1ee00005eULL, ImplicitList18, ImplicitList19, OperandInfo38 },  // Inst #650 = DIV16m
  { 651,	1,	0,	21,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ee000056ULL, ImplicitList18, ImplicitList19, OperandInfo115 },  // Inst #651 = DIV16r
  { 652,	5,	0,	22,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1ee00001eULL, ImplicitList13, ImplicitList16, OperandInfo38 },  // Inst #652 = DIV32m
  { 653,	1,	0,	22,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ee000016ULL, ImplicitList13, ImplicitList16, OperandInfo74 },  // Inst #653 = DIV32r
  { 654,	5,	0,	23,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1ee00201eULL, ImplicitList17, ImplicitList15, OperandInfo38 },  // Inst #654 = DIV64m
  { 655,	1,	0,	23,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ee002016ULL, ImplicitList17, ImplicitList15, OperandInfo76 },  // Inst #655 = DIV64r
  { 656,	5,	0,	19,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1ec00001eULL, ImplicitList2, ImplicitList20, OperandInfo38 },  // Inst #656 = DIV8m
  { 657,	1,	0,	20,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ec000016ULL, ImplicitList2, ImplicitList20, OperandInfo116 },  // Inst #657 = DIV8r
  { 658,	7,	1,	123,	0,	0|(1<<MCID::MayLoad), 0xbd000146ULL, NULL, NULL, OperandInfo32 },  // Inst #658 = DIVPDrm
  { 659,	3,	1,	124,	0,	0, 0xbd000145ULL, NULL, NULL, OperandInfo33 },  // Inst #659 = DIVPDrr
  { 660,	7,	1,	123,	0,	0|(1<<MCID::MayLoad), 0xbc800106ULL, NULL, NULL, OperandInfo32 },  // Inst #660 = DIVPSrm
  { 661,	3,	1,	120,	0,	0, 0xbc800105ULL, NULL, NULL, OperandInfo33 },  // Inst #661 = DIVPSrr
  { 662,	5,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b000001fULL, NULL, NULL, OperandInfo38 },  // Inst #662 = DIVR_F32m
  { 663,	5,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b800001fULL, NULL, NULL, OperandInfo38 },  // Inst #663 = DIVR_F64m
  { 664,	5,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1bc00001fULL, NULL, NULL, OperandInfo38 },  // Inst #664 = DIVR_FI16m
  { 665,	5,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b400001fULL, NULL, NULL, OperandInfo38 },  // Inst #665 = DIVR_FI32m
  { 666,	1,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1e0000902ULL, NULL, NULL, OperandInfo39 },  // Inst #666 = DIVR_FPrST0
  { 667,	1,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1f0000302ULL, NULL, NULL, OperandInfo39 },  // Inst #667 = DIVR_FST0r
  { 668,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo41 },  // Inst #668 = DIVR_Fp32m
  { 669,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo43 },  // Inst #669 = DIVR_Fp64m
  { 670,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo43 },  // Inst #670 = DIVR_Fp64m32
  { 671,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo45 },  // Inst #671 = DIVR_Fp80m32
  { 672,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo45 },  // Inst #672 = DIVR_Fp80m64
  { 673,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo41 },  // Inst #673 = DIVR_FpI16m32
  { 674,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo43 },  // Inst #674 = DIVR_FpI16m64
  { 675,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo45 },  // Inst #675 = DIVR_FpI16m80
  { 676,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo41 },  // Inst #676 = DIVR_FpI32m32
  { 677,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo43 },  // Inst #677 = DIVR_FpI32m64
  { 678,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo45 },  // Inst #678 = DIVR_FpI32m80
  { 679,	1,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1e0000702ULL, NULL, NULL, OperandInfo39 },  // Inst #679 = DIVR_FrST0
  { 680,	7,	1,	125,	0,	0|(1<<MCID::MayLoad), 0xbc000b06ULL, NULL, NULL, OperandInfo34 },  // Inst #680 = DIVSDrm
  { 681,	7,	1,	125,	0,	0|(1<<MCID::MayLoad), 0xbc000b06ULL, NULL, NULL, OperandInfo32 },  // Inst #681 = DIVSDrm_Int
  { 682,	3,	1,	126,	0,	0, 0xbc000b05ULL, NULL, NULL, OperandInfo35 },  // Inst #682 = DIVSDrr
  { 683,	3,	1,	126,	0,	0, 0xbc000b05ULL, NULL, NULL, OperandInfo33 },  // Inst #683 = DIVSDrr_Int
  { 684,	7,	1,	125,	0,	0|(1<<MCID::MayLoad), 0xbc000c06ULL, NULL, NULL, OperandInfo36 },  // Inst #684 = DIVSSrm
  { 685,	7,	1,	125,	0,	0|(1<<MCID::MayLoad), 0xbc000c06ULL, NULL, NULL, OperandInfo32 },  // Inst #685 = DIVSSrm_Int
  { 686,	3,	1,	122,	0,	0, 0xbc000c05ULL, NULL, NULL, OperandInfo37 },  // Inst #686 = DIVSSrr
  { 687,	3,	1,	122,	0,	0, 0xbc000c05ULL, NULL, NULL, OperandInfo33 },  // Inst #687 = DIVSSrr_Int
  { 688,	5,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b000001eULL, NULL, NULL, OperandInfo38 },  // Inst #688 = DIV_F32m
  { 689,	5,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b800001eULL, NULL, NULL, OperandInfo38 },  // Inst #689 = DIV_F64m
  { 690,	5,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1bc00001eULL, NULL, NULL, OperandInfo38 },  // Inst #690 = DIV_FI16m
  { 691,	5,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b400001eULL, NULL, NULL, OperandInfo38 },  // Inst #691 = DIV_FI32m
  { 692,	1,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1f0000902ULL, NULL, NULL, OperandInfo39 },  // Inst #692 = DIV_FPrST0
  { 693,	1,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1e0000302ULL, NULL, NULL, OperandInfo39 },  // Inst #693 = DIV_FST0r
  { 694,	3,	1,	18,	0,	0, 0x80000ULL, NULL, NULL, OperandInfo40 },  // Inst #694 = DIV_Fp32
  { 695,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo41 },  // Inst #695 = DIV_Fp32m
  { 696,	3,	1,	18,	0,	0, 0x80000ULL, NULL, NULL, OperandInfo42 },  // Inst #696 = DIV_Fp64
  { 697,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo43 },  // Inst #697 = DIV_Fp64m
  { 698,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo43 },  // Inst #698 = DIV_Fp64m32
  { 699,	3,	1,	18,	0,	0, 0x80000ULL, NULL, NULL, OperandInfo44 },  // Inst #699 = DIV_Fp80
  { 700,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo45 },  // Inst #700 = DIV_Fp80m32
  { 701,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo45 },  // Inst #701 = DIV_Fp80m64
  { 702,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo41 },  // Inst #702 = DIV_FpI16m32
  { 703,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo43 },  // Inst #703 = DIV_FpI16m64
  { 704,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo45 },  // Inst #704 = DIV_FpI16m80
  { 705,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo41 },  // Inst #705 = DIV_FpI32m32
  { 706,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo43 },  // Inst #706 = DIV_FpI32m64
  { 707,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo45 },  // Inst #707 = DIV_FpI32m80
  { 708,	1,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1f0000702ULL, NULL, NULL, OperandInfo39 },  // Inst #708 = DIV_FrST0
  { 709,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x83004e46ULL, NULL, NULL, OperandInfo65 },  // Inst #709 = DPPDrmi
  { 710,	4,	1,	18,	0,	0|(1<<MCID::Commutable), 0x83004e45ULL, NULL, NULL, OperandInfo66 },  // Inst #710 = DPPDrri
  { 711,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x80804e46ULL, NULL, NULL, OperandInfo65 },  // Inst #711 = DPPSrmi
  { 712,	4,	1,	18,	0,	0|(1<<MCID::Commutable), 0x80804e45ULL, NULL, NULL, OperandInfo66 },  // Inst #712 = DPPSrri
  { 713,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x7c000001ULL, NULL, NULL, 0 },  // Inst #713 = DS_PREFIX
  { 714,	1,	0,	74,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Terminator), 0x186000001ULL, NULL, NULL, OperandInfo74 },  // Inst #714 = EH_RETURN
  { 715,	1,	0,	74,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Terminator), 0x186000001ULL, NULL, NULL, OperandInfo76 },  // Inst #715 = EH_RETURN64
  { 716,	2,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x19000c02bULL, NULL, NULL, OperandInfo46 },  // Inst #716 = ENTER
  { 717,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x4c000001ULL, NULL, NULL, 0 },  // Inst #717 = ES_PREFIX
  { 718,	7,	0,	18,	0,	0|(1<<MCID::MayStore), 0x2e804e44ULL, NULL, NULL, OperandInfo117 },  // Inst #718 = EXTRACTPSmr
  { 719,	3,	1,	18,	0,	0, 0x2e804e43ULL, NULL, NULL, OperandInfo118 },  // Inst #719 = EXTRACTPSrr
  { 720,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1e0000401ULL, NULL, NULL, 0 },  // Inst #720 = F2XM1
  { 721,	2,	0,	5,	0,	0|(1<<MCID::Call)|(1<<MCID::UnmodeledSideEffects), 0x13400c06cULL, ImplicitList6, NULL, OperandInfo46 },  // Inst #721 = FARCALL16i
  { 722,	5,	0,	4,	0,	0|(1<<MCID::Call)|(1<<MCID::UnmodeledSideEffects), 0x1fe00005bULL, ImplicitList6, NULL, OperandInfo38 },  // Inst #722 = FARCALL16m
  { 723,	2,	0,	5,	0,	0|(1<<MCID::Call)|(1<<MCID::UnmodeledSideEffects), 0x13401402cULL, ImplicitList6, NULL, OperandInfo46 },  // Inst #723 = FARCALL32i
  { 724,	5,	0,	4,	0,	0|(1<<MCID::Call)|(1<<MCID::UnmodeledSideEffects), 0x1fe00001bULL, ImplicitList6, NULL, OperandInfo38 },  // Inst #724 = FARCALL32m
  { 725,	5,	0,	4,	0,	0|(1<<MCID::Call)|(1<<MCID::UnmodeledSideEffects), 0x1fe00201bULL, ImplicitList8, NULL, OperandInfo38 },  // Inst #725 = FARCALL64
  { 726,	2,	0,	48,	0,	0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x1d400c06cULL, NULL, NULL, OperandInfo46 },  // Inst #726 = FARJMP16i
  { 727,	5,	0,	47,	0,	0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x1fe00005dULL, NULL, NULL, OperandInfo38 },  // Inst #727 = FARJMP16m
  { 728,	2,	0,	48,	0,	0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x1d401402cULL, NULL, NULL, OperandInfo46 },  // Inst #728 = FARJMP32i
  { 729,	5,	0,	47,	0,	0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x1fe00001dULL, NULL, NULL, OperandInfo38 },  // Inst #729 = FARJMP32m
  { 730,	5,	0,	47,	0,	0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x1fe00201dULL, NULL, NULL, OperandInfo38 },  // Inst #730 = FARJMP64
  { 731,	5,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1be00001cULL, NULL, NULL, OperandInfo38 },  // Inst #731 = FBLDm
  { 732,	5,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1be00001eULL, NULL, NULL, OperandInfo38 },  // Inst #732 = FBSTPm
  { 733,	5,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1b000001aULL, NULL, NULL, OperandInfo38 },  // Inst #733 = FCOM32m
  { 734,	5,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1b800001aULL, NULL, NULL, OperandInfo38 },  // Inst #734 = FCOM64m
  { 735,	5,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1b000001bULL, NULL, NULL, OperandInfo38 },  // Inst #735 = FCOMP32m
  { 736,	5,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1b800001bULL, NULL, NULL, OperandInfo38 },  // Inst #736 = FCOMP64m
  { 737,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1b2000901ULL, NULL, NULL, 0 },  // Inst #737 = FCOMPP
  { 738,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ec000401ULL, NULL, NULL, 0 },  // Inst #738 = FDECSTP
  { 739,	0,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1c000101ULL, NULL, NULL, 0 },  // Inst #739 = FEMMS
  { 740,	1,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x180000802ULL, NULL, NULL, OperandInfo39 },  // Inst #740 = FFREE
  { 741,	5,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1bc00001aULL, NULL, NULL, OperandInfo38 },  // Inst #741 = FICOM16m
  { 742,	5,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1b400001aULL, NULL, NULL, OperandInfo38 },  // Inst #742 = FICOM32m
  { 743,	5,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1bc00001bULL, NULL, NULL, OperandInfo38 },  // Inst #743 = FICOMP16m
  { 744,	5,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1b400001bULL, NULL, NULL, OperandInfo38 },  // Inst #744 = FICOMP32m
  { 745,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ee000401ULL, NULL, NULL, 0 },  // Inst #745 = FINCSTP
  { 746,	5,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b200001dULL, NULL, NULL, OperandInfo38 },  // Inst #746 = FLDCW16m
  { 747,	5,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1b200001cULL, NULL, NULL, OperandInfo38 },  // Inst #747 = FLDENVm
  { 748,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1d4000401ULL, NULL, NULL, 0 },  // Inst #748 = FLDL2E
  { 749,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1d2000401ULL, NULL, NULL, 0 },  // Inst #749 = FLDL2T
  { 750,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1d8000401ULL, NULL, NULL, 0 },  // Inst #750 = FLDLG2
  { 751,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1da000401ULL, NULL, NULL, 0 },  // Inst #751 = FLDLN2
  { 752,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1d6000401ULL, NULL, NULL, 0 },  // Inst #752 = FLDPI
  { 753,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1c4000601ULL, NULL, NULL, 0 },  // Inst #753 = FNCLEX
  { 754,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1c6000601ULL, NULL, NULL, 0 },  // Inst #754 = FNINIT
  { 755,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a0000401ULL, NULL, NULL, 0 },  // Inst #755 = FNOP
  { 756,	5,	0,	18,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1b200001fULL, NULL, NULL, OperandInfo38 },  // Inst #756 = FNSTCW16m
  { 757,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1c0000a01ULL, NULL, ImplicitList2, 0 },  // Inst #757 = FNSTSW8r
  { 758,	5,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ba00001fULL, NULL, NULL, OperandInfo38 },  // Inst #758 = FNSTSWm
  { 759,	6,	0,	204,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo119 },  // Inst #759 = FP32_TO_INT16_IN_MEM
  { 760,	6,	0,	204,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo119 },  // Inst #760 = FP32_TO_INT32_IN_MEM
  { 761,	6,	0,	204,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo119 },  // Inst #761 = FP32_TO_INT64_IN_MEM
  { 762,	6,	0,	204,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo120 },  // Inst #762 = FP64_TO_INT16_IN_MEM
  { 763,	6,	0,	204,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo120 },  // Inst #763 = FP64_TO_INT32_IN_MEM
  { 764,	6,	0,	204,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo120 },  // Inst #764 = FP64_TO_INT64_IN_MEM
  { 765,	6,	0,	204,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo121 },  // Inst #765 = FP80_TO_INT16_IN_MEM
  { 766,	6,	0,	204,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo121 },  // Inst #766 = FP80_TO_INT32_IN_MEM
  { 767,	6,	0,	204,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo121 },  // Inst #767 = FP80_TO_INT64_IN_MEM
  { 768,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1e6000401ULL, NULL, NULL, 0 },  // Inst #768 = FPATAN
  { 769,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1f0000401ULL, NULL, NULL, 0 },  // Inst #769 = FPREM
  { 770,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ea000401ULL, NULL, NULL, 0 },  // Inst #770 = FPREM1
  { 771,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1e4000401ULL, NULL, NULL, 0 },  // Inst #771 = FPTAN
  { 772,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1f8000401ULL, NULL, NULL, 0 },  // Inst #772 = FRNDINT
  { 773,	5,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ba00001cULL, NULL, NULL, OperandInfo38 },  // Inst #773 = FRSTORm
  { 774,	5,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ba00001eULL, NULL, NULL, OperandInfo38 },  // Inst #774 = FSAVEm
  { 775,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1fa000401ULL, NULL, NULL, 0 },  // Inst #775 = FSCALE
  { 776,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1f6000401ULL, NULL, NULL, 0 },  // Inst #776 = FSINCOS
  { 777,	5,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1b200001eULL, NULL, NULL, OperandInfo38 },  // Inst #777 = FSTENVm
  { 778,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xc8000001ULL, NULL, NULL, 0 },  // Inst #778 = FS_PREFIX
  { 779,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ca000401ULL, NULL, NULL, 0 },  // Inst #779 = FXAM
  { 780,	5,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x15c000119ULL, NULL, NULL, OperandInfo38 },  // Inst #780 = FXRSTOR
  { 781,	5,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x15c002119ULL, NULL, NULL, OperandInfo38 },  // Inst #781 = FXRSTOR64
  { 782,	5,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x15c000118ULL, NULL, NULL, OperandInfo38 },  // Inst #782 = FXSAVE
  { 783,	5,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x15c002118ULL, NULL, NULL, OperandInfo38 },  // Inst #783 = FXSAVE64
  { 784,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1e8000401ULL, NULL, NULL, 0 },  // Inst #784 = FXTRACT
  { 785,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1e2000401ULL, NULL, NULL, 0 },  // Inst #785 = FYL2X
  { 786,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1f2000401ULL, NULL, NULL, 0 },  // Inst #786 = FYL2XP1
  { 787,	1,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xe0000ULL, NULL, NULL, OperandInfo122 },  // Inst #787 = FpPOP_RETVAL
  { 788,	7,	1,	99,	0,	0|(1<<MCID::MayLoad), 0xab000146ULL, NULL, NULL, OperandInfo34 },  // Inst #788 = FsANDNPDrm
  { 789,	3,	1,	100,	0,	0, 0xab000145ULL, NULL, NULL, OperandInfo35 },  // Inst #789 = FsANDNPDrr
  { 790,	7,	1,	99,	0,	0|(1<<MCID::MayLoad), 0xaa800106ULL, NULL, NULL, OperandInfo36 },  // Inst #790 = FsANDNPSrm
  { 791,	3,	1,	100,	0,	0, 0xaa800105ULL, NULL, NULL, OperandInfo37 },  // Inst #791 = FsANDNPSrr
  { 792,	7,	1,	99,	0,	0|(1<<MCID::MayLoad), 0xa9000146ULL, NULL, NULL, OperandInfo34 },  // Inst #792 = FsANDPDrm
  { 793,	3,	1,	100,	0,	0|(1<<MCID::Commutable), 0xa9000145ULL, NULL, NULL, OperandInfo35 },  // Inst #793 = FsANDPDrr
  { 794,	7,	1,	99,	0,	0|(1<<MCID::MayLoad), 0xa8800106ULL, NULL, NULL, OperandInfo36 },  // Inst #794 = FsANDPSrm
  { 795,	3,	1,	100,	0,	0|(1<<MCID::Commutable), 0xa8800105ULL, NULL, NULL, OperandInfo37 },  // Inst #795 = FsANDPSrr
  { 796,	1,	1,	18,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::FoldableAsLoad)|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo123 },  // Inst #796 = FsFLD0SD
  { 797,	1,	1,	18,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::FoldableAsLoad)|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo124 },  // Inst #797 = FsFLD0SS
  { 798,	6,	1,	145,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x51000146ULL, NULL, NULL, OperandInfo103 },  // Inst #798 = FsMOVAPDrm
  { 799,	2,	1,	146,	0,	0, 0x51000145ULL, NULL, NULL, OperandInfo125 },  // Inst #799 = FsMOVAPDrr
  { 800,	6,	1,	145,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x50800106ULL, NULL, NULL, OperandInfo101 },  // Inst #800 = FsMOVAPSrm
  { 801,	2,	1,	146,	0,	0, 0x50800105ULL, NULL, NULL, OperandInfo126 },  // Inst #801 = FsMOVAPSrr
  { 802,	7,	1,	99,	0,	0|(1<<MCID::MayLoad), 0xad000146ULL, NULL, NULL, OperandInfo34 },  // Inst #802 = FsORPDrm
  { 803,	3,	1,	100,	0,	0|(1<<MCID::Commutable), 0xad000145ULL, NULL, NULL, OperandInfo35 },  // Inst #803 = FsORPDrr
  { 804,	7,	1,	99,	0,	0|(1<<MCID::MayLoad), 0xac800106ULL, NULL, NULL, OperandInfo36 },  // Inst #804 = FsORPSrm
  { 805,	3,	1,	100,	0,	0|(1<<MCID::Commutable), 0xac800105ULL, NULL, NULL, OperandInfo37 },  // Inst #805 = FsORPSrr
  { 806,	6,	1,	145,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x251000146ULL, NULL, NULL, OperandInfo103 },  // Inst #806 = FsVMOVAPDrm
  { 807,	2,	1,	146,	0,	0, 0x251000145ULL, NULL, NULL, OperandInfo125 },  // Inst #807 = FsVMOVAPDrr
  { 808,	6,	1,	145,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x250800106ULL, NULL, NULL, OperandInfo101 },  // Inst #808 = FsVMOVAPSrm
  { 809,	2,	1,	146,	0,	0, 0x250800105ULL, NULL, NULL, OperandInfo126 },  // Inst #809 = FsVMOVAPSrr
  { 810,	7,	1,	99,	0,	0|(1<<MCID::MayLoad), 0xaf000146ULL, NULL, NULL, OperandInfo34 },  // Inst #810 = FsXORPDrm
  { 811,	3,	1,	100,	0,	0|(1<<MCID::Commutable), 0xaf000145ULL, NULL, NULL, OperandInfo35 },  // Inst #811 = FsXORPDrr
  { 812,	7,	1,	99,	0,	0|(1<<MCID::MayLoad), 0xae800106ULL, NULL, NULL, OperandInfo36 },  // Inst #812 = FsXORPSrm
  { 813,	3,	1,	100,	0,	0|(1<<MCID::Commutable), 0xae800105ULL, NULL, NULL, OperandInfo37 },  // Inst #813 = FsXORPSrr
  { 814,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xca000001ULL, NULL, NULL, 0 },  // Inst #814 = GS_PREFIX
  { 815,	7,	1,	127,	0,	0|(1<<MCID::MayLoad), 0xf9000146ULL, NULL, NULL, OperandInfo32 },  // Inst #815 = HADDPDrm
  { 816,	3,	1,	128,	0,	0, 0xf9000145ULL, NULL, NULL, OperandInfo33 },  // Inst #816 = HADDPDrr
  { 817,	7,	1,	127,	0,	0|(1<<MCID::MayLoad), 0xf8800b06ULL, NULL, NULL, OperandInfo32 },  // Inst #817 = HADDPSrm
  { 818,	3,	1,	128,	0,	0, 0xf8800b05ULL, NULL, NULL, OperandInfo33 },  // Inst #818 = HADDPSrr
  { 819,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1e8000001ULL, NULL, NULL, 0 },  // Inst #819 = HLT
  { 820,	7,	1,	127,	0,	0|(1<<MCID::MayLoad), 0xfb000146ULL, NULL, NULL, OperandInfo32 },  // Inst #820 = HSUBPDrm
  { 821,	3,	1,	128,	0,	0, 0xfb000145ULL, NULL, NULL, OperandInfo33 },  // Inst #821 = HSUBPDrr
  { 822,	7,	1,	127,	0,	0|(1<<MCID::MayLoad), 0xfa800b06ULL, NULL, NULL, OperandInfo32 },  // Inst #822 = HSUBPSrm
  { 823,	3,	1,	128,	0,	0, 0xfa800b05ULL, NULL, NULL, OperandInfo33 },  // Inst #823 = HSUBPSrr
  { 824,	5,	0,	25,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1ee00005fULL, ImplicitList18, ImplicitList19, OperandInfo38 },  // Inst #824 = IDIV16m
  { 825,	1,	0,	25,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ee000057ULL, ImplicitList18, ImplicitList19, OperandInfo115 },  // Inst #825 = IDIV16r
  { 826,	5,	0,	26,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1ee00001fULL, ImplicitList13, ImplicitList16, OperandInfo38 },  // Inst #826 = IDIV32m
  { 827,	1,	0,	26,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ee000017ULL, ImplicitList13, ImplicitList16, OperandInfo74 },  // Inst #827 = IDIV32r
  { 828,	5,	0,	27,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1ee00201fULL, ImplicitList17, ImplicitList15, OperandInfo38 },  // Inst #828 = IDIV64m
  { 829,	1,	0,	27,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ee002017ULL, ImplicitList17, ImplicitList15, OperandInfo76 },  // Inst #829 = IDIV64r
  { 830,	5,	0,	24,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1ec00001fULL, ImplicitList2, ImplicitList20, OperandInfo38 },  // Inst #830 = IDIV8m
  { 831,	1,	0,	24,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ec000017ULL, ImplicitList2, ImplicitList20, OperandInfo116 },  // Inst #831 = IDIV8r
  { 832,	5,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1be000018ULL, NULL, NULL, OperandInfo38 },  // Inst #832 = ILD_F16m
  { 833,	5,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b6000018ULL, NULL, NULL, OperandInfo38 },  // Inst #833 = ILD_F32m
  { 834,	5,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1be00001dULL, NULL, NULL, OperandInfo38 },  // Inst #834 = ILD_F64m
  { 835,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x20000ULL, NULL, NULL, OperandInfo127 },  // Inst #835 = ILD_Fp16m32
  { 836,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x20000ULL, NULL, NULL, OperandInfo128 },  // Inst #836 = ILD_Fp16m64
  { 837,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x20000ULL, NULL, NULL, OperandInfo129 },  // Inst #837 = ILD_Fp16m80
  { 838,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x20000ULL, NULL, NULL, OperandInfo127 },  // Inst #838 = ILD_Fp32m32
  { 839,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x20000ULL, NULL, NULL, OperandInfo128 },  // Inst #839 = ILD_Fp32m64
  { 840,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x20000ULL, NULL, NULL, OperandInfo129 },  // Inst #840 = ILD_Fp32m80
  { 841,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x20000ULL, NULL, NULL, OperandInfo127 },  // Inst #841 = ILD_Fp64m32
  { 842,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x20000ULL, NULL, NULL, OperandInfo128 },  // Inst #842 = ILD_Fp64m64
  { 843,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x20000ULL, NULL, NULL, OperandInfo129 },  // Inst #843 = ILD_Fp64m80
  { 844,	5,	0,	29,	0,	0|(1<<MCID::MayLoad), 0x1ee00005dULL, ImplicitList2, ImplicitList19, OperandInfo38 },  // Inst #844 = IMUL16m
  { 845,	1,	0,	33,	0,	0, 0x1ee000055ULL, ImplicitList2, ImplicitList19, OperandInfo115 },  // Inst #845 = IMUL16r
  { 846,	7,	1,	31,	0,	0|(1<<MCID::MayLoad), 0x15e000146ULL, NULL, ImplicitList1, OperandInfo18 },  // Inst #846 = IMUL16rm
  { 847,	7,	1,	32,	0,	0|(1<<MCID::MayLoad), 0xd200c046ULL, NULL, ImplicitList1, OperandInfo130 },  // Inst #847 = IMUL16rmi
  { 848,	7,	1,	32,	0,	0|(1<<MCID::MayLoad), 0xd6004046ULL, NULL, ImplicitList1, OperandInfo130 },  // Inst #848 = IMUL16rmi8
  { 849,	3,	1,	33,	0,	0|(1<<MCID::Commutable), 0x15e000145ULL, NULL, ImplicitList1, OperandInfo19 },  // Inst #849 = IMUL16rr
  { 850,	3,	1,	34,	0,	0, 0xd200c045ULL, NULL, ImplicitList1, OperandInfo131 },  // Inst #850 = IMUL16rri
  { 851,	3,	1,	34,	0,	0, 0xd6004045ULL, NULL, ImplicitList1, OperandInfo131 },  // Inst #851 = IMUL16rri8
  { 852,	5,	0,	35,	0,	0|(1<<MCID::MayLoad), 0x1ee00001dULL, ImplicitList3, ImplicitList16, OperandInfo38 },  // Inst #852 = IMUL32m
  { 853,	1,	0,	39,	0,	0, 0x1ee000015ULL, ImplicitList3, ImplicitList16, OperandInfo74 },  // Inst #853 = IMUL32r
  { 854,	7,	1,	37,	0,	0|(1<<MCID::MayLoad), 0x15e000106ULL, NULL, ImplicitList1, OperandInfo22 },  // Inst #854 = IMUL32rm
  { 855,	7,	1,	38,	0,	0|(1<<MCID::MayLoad), 0xd2014006ULL, NULL, ImplicitList1, OperandInfo132 },  // Inst #855 = IMUL32rmi
  { 856,	7,	1,	38,	0,	0|(1<<MCID::MayLoad), 0xd6004006ULL, NULL, ImplicitList1, OperandInfo132 },  // Inst #856 = IMUL32rmi8
  { 857,	3,	1,	39,	0,	0|(1<<MCID::Commutable), 0x15e000105ULL, NULL, ImplicitList1, OperandInfo23 },  // Inst #857 = IMUL32rr
  { 858,	3,	1,	40,	0,	0, 0xd2014005ULL, NULL, ImplicitList1, OperandInfo133 },  // Inst #858 = IMUL32rri
  { 859,	3,	1,	40,	0,	0, 0xd6004005ULL, NULL, ImplicitList1, OperandInfo133 },  // Inst #859 = IMUL32rri8
  { 860,	5,	0,	41,	0,	0|(1<<MCID::MayLoad), 0x1ee00201dULL, ImplicitList4, ImplicitList15, OperandInfo38 },  // Inst #860 = IMUL64m
  { 861,	1,	0,	44,	0,	0, 0x1ee002015ULL, ImplicitList4, ImplicitList15, OperandInfo76 },  // Inst #861 = IMUL64r
  { 862,	7,	1,	42,	0,	0|(1<<MCID::MayLoad), 0x15e002106ULL, NULL, ImplicitList1, OperandInfo26 },  // Inst #862 = IMUL64rm
  { 863,	7,	1,	43,	0,	0|(1<<MCID::MayLoad), 0xd2016006ULL, NULL, ImplicitList1, OperandInfo134 },  // Inst #863 = IMUL64rmi32
  { 864,	7,	1,	43,	0,	0|(1<<MCID::MayLoad), 0xd6006006ULL, NULL, ImplicitList1, OperandInfo134 },  // Inst #864 = IMUL64rmi8
  { 865,	3,	1,	44,	0,	0|(1<<MCID::Commutable), 0x15e002105ULL, NULL, ImplicitList1, OperandInfo27 },  // Inst #865 = IMUL64rr
  { 866,	3,	1,	45,	0,	0, 0xd2016005ULL, NULL, ImplicitList1, OperandInfo135 },  // Inst #866 = IMUL64rri32
  { 867,	3,	1,	45,	0,	0, 0xd6006005ULL, NULL, ImplicitList1, OperandInfo135 },  // Inst #867 = IMUL64rri8
  { 868,	5,	0,	28,	0,	0|(1<<MCID::MayLoad), 0x1ec00001dULL, ImplicitList5, ImplicitList20, OperandInfo38 },  // Inst #868 = IMUL8m
  { 869,	1,	0,	28,	0,	0, 0x1ec000015ULL, ImplicitList5, ImplicitList20, OperandInfo116 },  // Inst #869 = IMUL8r
  { 870,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xda000041ULL, NULL, NULL, 0 },  // Inst #870 = IN16
  { 871,	1,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ca004041ULL, NULL, ImplicitList2, OperandInfo2 },  // Inst #871 = IN16ri
  { 872,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1da000041ULL, ImplicitList21, ImplicitList2, 0 },  // Inst #872 = IN16rr
  { 873,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xda000001ULL, NULL, NULL, 0 },  // Inst #873 = IN32
  { 874,	1,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ca004001ULL, NULL, ImplicitList3, OperandInfo2 },  // Inst #874 = IN32ri
  { 875,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1da000001ULL, ImplicitList21, ImplicitList3, 0 },  // Inst #875 = IN32rr
  { 876,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xd8000001ULL, NULL, NULL, 0 },  // Inst #876 = IN8
  { 877,	1,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1c8004001ULL, NULL, ImplicitList5, OperandInfo2 },  // Inst #877 = IN8ri
  { 878,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1d8000001ULL, ImplicitList21, ImplicitList5, 0 },  // Inst #878 = IN8rr
  { 879,	5,	0,	200,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1fe000058ULL, NULL, ImplicitList1, OperandInfo38 },  // Inst #879 = INC16m
  { 880,	2,	1,	201,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x80000042ULL, NULL, ImplicitList1, OperandInfo113 },  // Inst #880 = INC16r
  { 881,	5,	0,	200,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1fe000018ULL, NULL, ImplicitList1, OperandInfo38 },  // Inst #881 = INC32m
  { 882,	2,	1,	201,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x80000002ULL, NULL, ImplicitList1, OperandInfo69 },  // Inst #882 = INC32r
  { 883,	5,	0,	200,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1fe000058ULL, NULL, ImplicitList1, OperandInfo38 },  // Inst #883 = INC64_16m
  { 884,	2,	1,	201,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x1fe000050ULL, NULL, ImplicitList1, OperandInfo113 },  // Inst #884 = INC64_16r
  { 885,	5,	0,	200,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1fe000018ULL, NULL, ImplicitList1, OperandInfo38 },  // Inst #885 = INC64_32m
  { 886,	2,	1,	201,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x1fe000010ULL, NULL, ImplicitList1, OperandInfo69 },  // Inst #886 = INC64_32r
  { 887,	5,	0,	200,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1fe002018ULL, NULL, ImplicitList1, OperandInfo38 },  // Inst #887 = INC64m
  { 888,	2,	1,	201,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x1fe002010ULL, NULL, ImplicitList1, OperandInfo70 },  // Inst #888 = INC64r
  { 889,	5,	0,	200,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1fc000018ULL, NULL, ImplicitList1, OperandInfo38 },  // Inst #889 = INC8m
  { 890,	2,	1,	201,	0,	0, 0x1fc000010ULL, NULL, ImplicitList1, OperandInfo114 },  // Inst #890 = INC8r
  { 891,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x42804e46ULL, NULL, NULL, OperandInfo65 },  // Inst #891 = INSERTPSrm
  { 892,	4,	1,	18,	0,	0, 0x42804e45ULL, NULL, NULL, OperandInfo66 },  // Inst #892 = INSERTPSrr
  { 893,	1,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x19a004001ULL, NULL, NULL, OperandInfo2 },  // Inst #893 = INT
  { 894,	0,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x198000001ULL, NULL, NULL, 0 },  // Inst #894 = INT3
  { 895,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x19c000001ULL, ImplicitList1, NULL, 0 },  // Inst #895 = INTO
  { 896,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x10000101ULL, NULL, NULL, 0 },  // Inst #896 = INVD
  { 897,	6,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x100000d46ULL, NULL, NULL, OperandInfo12 },  // Inst #897 = INVEPT32
  { 898,	6,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x100000d46ULL, NULL, NULL, OperandInfo13 },  // Inst #898 = INVEPT64
  { 899,	5,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x200011fULL, NULL, NULL, OperandInfo38 },  // Inst #899 = INVLPG
  { 900,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000137ULL, ImplicitList22, NULL, 0 },  // Inst #900 = INVLPGA32
  { 901,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000137ULL, ImplicitList23, NULL, 0 },  // Inst #901 = INVLPGA64
  { 902,	6,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x104000d46ULL, NULL, NULL, OperandInfo12 },  // Inst #902 = INVPCID32
  { 903,	6,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x104000d46ULL, NULL, NULL, OperandInfo13 },  // Inst #903 = INVPCID64
  { 904,	6,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x102000d46ULL, NULL, NULL, OperandInfo12 },  // Inst #904 = INVVPID32
  { 905,	6,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x102000d46ULL, NULL, NULL, OperandInfo13 },  // Inst #905 = INVVPID64
  { 906,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x19e000041ULL, NULL, NULL, 0 },  // Inst #906 = IRET16
  { 907,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x19e000001ULL, NULL, NULL, 0 },  // Inst #907 = IRET32
  { 908,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x19e002001ULL, NULL, NULL, 0 },  // Inst #908 = IRET64
  { 909,	5,	0,	18,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1be000019ULL, NULL, NULL, OperandInfo38 },  // Inst #909 = ISTT_FP16m
  { 910,	5,	0,	18,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1b6000019ULL, NULL, NULL, OperandInfo38 },  // Inst #910 = ISTT_FP32m
  { 911,	5,	0,	18,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1ba000019ULL, NULL, NULL, OperandInfo38 },  // Inst #911 = ISTT_FP64m
  { 912,	6,	0,	18,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, NULL, OperandInfo119 },  // Inst #912 = ISTT_Fp16m32
  { 913,	6,	0,	18,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, NULL, OperandInfo120 },  // Inst #913 = ISTT_Fp16m64
  { 914,	6,	0,	18,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, NULL, OperandInfo121 },  // Inst #914 = ISTT_Fp16m80
  { 915,	6,	0,	18,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, NULL, OperandInfo119 },  // Inst #915 = ISTT_Fp32m32
  { 916,	6,	0,	18,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, NULL, OperandInfo120 },  // Inst #916 = ISTT_Fp32m64
  { 917,	6,	0,	18,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, NULL, OperandInfo121 },  // Inst #917 = ISTT_Fp32m80
  { 918,	6,	0,	18,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, NULL, OperandInfo119 },  // Inst #918 = ISTT_Fp64m32
  { 919,	6,	0,	18,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, NULL, OperandInfo120 },  // Inst #919 = ISTT_Fp64m64
  { 920,	6,	0,	18,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, NULL, OperandInfo121 },  // Inst #920 = ISTT_Fp64m80
  { 921,	5,	0,	18,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1be00001aULL, NULL, NULL, OperandInfo38 },  // Inst #921 = IST_F16m
  { 922,	5,	0,	18,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1b600001aULL, NULL, NULL, OperandInfo38 },  // Inst #922 = IST_F32m
  { 923,	5,	0,	18,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1be00001bULL, NULL, NULL, OperandInfo38 },  // Inst #923 = IST_FP16m
  { 924,	5,	0,	18,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1b600001bULL, NULL, NULL, OperandInfo38 },  // Inst #924 = IST_FP32m
  { 925,	5,	0,	18,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1be00001fULL, NULL, NULL, OperandInfo38 },  // Inst #925 = IST_FP64m
  { 926,	6,	0,	18,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, NULL, OperandInfo119 },  // Inst #926 = IST_Fp16m32
  { 927,	6,	0,	18,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, NULL, OperandInfo120 },  // Inst #927 = IST_Fp16m64
  { 928,	6,	0,	18,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, NULL, OperandInfo121 },  // Inst #928 = IST_Fp16m80
  { 929,	6,	0,	18,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, NULL, OperandInfo119 },  // Inst #929 = IST_Fp32m32
  { 930,	6,	0,	18,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, NULL, OperandInfo120 },  // Inst #930 = IST_Fp32m64
  { 931,	6,	0,	18,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, NULL, OperandInfo121 },  // Inst #931 = IST_Fp32m80
  { 932,	6,	0,	18,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, NULL, OperandInfo119 },  // Inst #932 = IST_Fp64m32
  { 933,	6,	0,	18,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, NULL, OperandInfo120 },  // Inst #933 = IST_Fp64m64
  { 934,	6,	0,	18,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, NULL, OperandInfo121 },  // Inst #934 = IST_Fp64m80
  { 935,	8,	1,	93,	0,	0|(1<<MCID::MayLoad), 0x184004b06ULL, NULL, NULL, OperandInfo65 },  // Inst #935 = Int_CMPSDrm
  { 936,	4,	1,	94,	0,	0, 0x184004b05ULL, NULL, NULL, OperandInfo66 },  // Inst #936 = Int_CMPSDrr
  { 937,	8,	1,	93,	0,	0|(1<<MCID::MayLoad), 0x184004c06ULL, NULL, NULL, OperandInfo65 },  // Inst #937 = Int_CMPSSrm
  { 938,	4,	1,	94,	0,	0, 0x184004c05ULL, NULL, NULL, OperandInfo66 },  // Inst #938 = Int_CMPSSrr
  { 939,	6,	0,	103,	0,	0|(1<<MCID::MayLoad), 0x5f000146ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #939 = Int_COMISDrm
  { 940,	2,	0,	104,	0,	0, 0x5f000145ULL, NULL, ImplicitList1, OperandInfo48 },  // Inst #940 = Int_COMISDrr
  { 941,	6,	0,	103,	0,	0|(1<<MCID::MayLoad), 0x5e800106ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #941 = Int_COMISSrm
  { 942,	2,	0,	104,	0,	0, 0x5e800105ULL, NULL, ImplicitList1, OperandInfo48 },  // Inst #942 = Int_COMISSrr
  { 943,	6,	1,	105,	0,	0|(1<<MCID::MayLoad), 0x1cc000c06ULL, NULL, NULL, OperandInfo47 },  // Inst #943 = Int_CVTDQ2PDrm
  { 944,	2,	1,	106,	0,	0, 0x1cc000c05ULL, NULL, NULL, OperandInfo48 },  // Inst #944 = Int_CVTDQ2PDrr
  { 945,	6,	1,	109,	0,	0|(1<<MCID::MayLoad), 0xb6000106ULL, NULL, NULL, OperandInfo47 },  // Inst #945 = Int_CVTDQ2PSrm
  { 946,	2,	1,	110,	0,	0, 0xb6000105ULL, NULL, NULL, OperandInfo48 },  // Inst #946 = Int_CVTDQ2PSrr
  { 947,	6,	1,	105,	0,	0|(1<<MCID::MayLoad), 0x1cc000b06ULL, NULL, NULL, OperandInfo47 },  // Inst #947 = Int_CVTPD2DQrm
  { 948,	2,	1,	106,	0,	0, 0x1cc000b05ULL, NULL, NULL, OperandInfo48 },  // Inst #948 = Int_CVTPD2DQrr
  { 949,	6,	1,	105,	0,	0|(1<<MCID::MayLoad), 0xb5000146ULL, NULL, NULL, OperandInfo47 },  // Inst #949 = Int_CVTPD2PSrm
  { 950,	2,	1,	106,	0,	0, 0xb5000145ULL, NULL, NULL, OperandInfo48 },  // Inst #950 = Int_CVTPD2PSrr
  { 951,	6,	1,	109,	0,	0|(1<<MCID::MayLoad), 0xb7000146ULL, NULL, NULL, OperandInfo47 },  // Inst #951 = Int_CVTPS2DQrm
  { 952,	2,	1,	110,	0,	0, 0xb7000145ULL, NULL, NULL, OperandInfo48 },  // Inst #952 = Int_CVTPS2DQrr
  { 953,	6,	1,	105,	0,	0|(1<<MCID::MayLoad), 0xb4000106ULL, NULL, NULL, OperandInfo47 },  // Inst #953 = Int_CVTPS2PDrm
  { 954,	2,	1,	106,	0,	0, 0xb4000105ULL, NULL, NULL, OperandInfo48 },  // Inst #954 = Int_CVTPS2PDrr
  { 955,	7,	1,	117,	0,	0|(1<<MCID::MayLoad), 0xb4000c06ULL, NULL, NULL, OperandInfo32 },  // Inst #955 = Int_CVTSD2SSrm
  { 956,	3,	1,	118,	0,	0, 0xb4000c05ULL, NULL, NULL, OperandInfo33 },  // Inst #956 = Int_CVTSD2SSrr
  { 957,	7,	1,	117,	0,	0|(1<<MCID::MayLoad), 0x54002b06ULL, NULL, NULL, OperandInfo32 },  // Inst #957 = Int_CVTSI2SD64rm
  { 958,	3,	1,	118,	0,	0, 0x54002b05ULL, NULL, NULL, OperandInfo136 },  // Inst #958 = Int_CVTSI2SD64rr
  { 959,	7,	1,	117,	0,	0|(1<<MCID::MayLoad), 0x54000b06ULL, NULL, NULL, OperandInfo32 },  // Inst #959 = Int_CVTSI2SDrm
  { 960,	3,	1,	118,	0,	0, 0x54000b05ULL, NULL, NULL, OperandInfo137 },  // Inst #960 = Int_CVTSI2SDrr
  { 961,	7,	1,	117,	0,	0|(1<<MCID::MayLoad), 0x54002c06ULL, NULL, NULL, OperandInfo32 },  // Inst #961 = Int_CVTSI2SS64rm
  { 962,	3,	1,	118,	0,	0, 0x54002c05ULL, NULL, NULL, OperandInfo136 },  // Inst #962 = Int_CVTSI2SS64rr
  { 963,	7,	1,	117,	0,	0|(1<<MCID::MayLoad), 0x54000c06ULL, NULL, NULL, OperandInfo32 },  // Inst #963 = Int_CVTSI2SSrm
  { 964,	3,	1,	118,	0,	0, 0x54000c05ULL, NULL, NULL, OperandInfo137 },  // Inst #964 = Int_CVTSI2SSrr
  { 965,	7,	1,	117,	0,	0|(1<<MCID::MayLoad), 0xb4000c06ULL, NULL, NULL, OperandInfo32 },  // Inst #965 = Int_CVTSS2SDrm
  { 966,	3,	1,	118,	0,	0, 0xb4000c05ULL, NULL, NULL, OperandInfo33 },  // Inst #966 = Int_CVTSS2SDrr
  { 967,	6,	1,	111,	0,	0|(1<<MCID::MayLoad), 0x58002b06ULL, NULL, NULL, OperandInfo13 },  // Inst #967 = Int_CVTTSD2SI64rm
  { 968,	2,	1,	112,	0,	0, 0x58002b05ULL, NULL, NULL, OperandInfo99 },  // Inst #968 = Int_CVTTSD2SI64rr
  { 969,	6,	1,	111,	0,	0|(1<<MCID::MayLoad), 0x58000b06ULL, NULL, NULL, OperandInfo12 },  // Inst #969 = Int_CVTTSD2SIrm
  { 970,	2,	1,	112,	0,	0, 0x58000b05ULL, NULL, NULL, OperandInfo100 },  // Inst #970 = Int_CVTTSD2SIrr
  { 971,	6,	1,	115,	0,	0|(1<<MCID::MayLoad), 0x58002c06ULL, NULL, NULL, OperandInfo13 },  // Inst #971 = Int_CVTTSS2SI64rm
  { 972,	2,	1,	116,	0,	0, 0x58002c05ULL, NULL, NULL, OperandInfo99 },  // Inst #972 = Int_CVTTSS2SI64rr
  { 973,	6,	1,	113,	0,	0|(1<<MCID::MayLoad), 0x58000c06ULL, NULL, NULL, OperandInfo12 },  // Inst #973 = Int_CVTTSS2SIrm
  { 974,	2,	1,	114,	0,	0, 0x58000c05ULL, NULL, NULL, OperandInfo100 },  // Inst #974 = Int_CVTTSS2SIrr
  { 975,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #975 = Int_MemBarrier
  { 976,	6,	0,	103,	0,	0|(1<<MCID::MayLoad), 0x5d000146ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #976 = Int_UCOMISDrm
  { 977,	2,	0,	104,	0,	0, 0x5d000145ULL, NULL, ImplicitList1, OperandInfo48 },  // Inst #977 = Int_UCOMISDrr
  { 978,	6,	0,	103,	0,	0|(1<<MCID::MayLoad), 0x5c800106ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #978 = Int_UCOMISSrm
  { 979,	2,	0,	104,	0,	0, 0x5c800105ULL, NULL, ImplicitList1, OperandInfo48 },  // Inst #979 = Int_UCOMISSrr
  { 980,	8,	1,	93,	0,	0|(1<<MCID::MayLoad), 0xb84004b06ULL, NULL, NULL, OperandInfo138 },  // Inst #980 = Int_VCMPSDrm
  { 981,	4,	1,	94,	0,	0, 0xb84004b05ULL, NULL, NULL, OperandInfo88 },  // Inst #981 = Int_VCMPSDrr
  { 982,	8,	1,	93,	0,	0|(1<<MCID::MayLoad), 0xb84004c06ULL, NULL, NULL, OperandInfo138 },  // Inst #982 = Int_VCMPSSrm
  { 983,	4,	1,	94,	0,	0, 0xb84004c05ULL, NULL, NULL, OperandInfo88 },  // Inst #983 = Int_VCMPSSrr
  { 984,	6,	0,	103,	0,	0|(1<<MCID::MayLoad), 0x25f000146ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #984 = Int_VCOMISDrm
  { 985,	2,	0,	104,	0,	0, 0x25f000145ULL, NULL, ImplicitList1, OperandInfo48 },  // Inst #985 = Int_VCOMISDrr
  { 986,	6,	0,	103,	0,	0|(1<<MCID::MayLoad), 0x25e800106ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #986 = Int_VCOMISSrm
  { 987,	2,	0,	104,	0,	0, 0x25e800105ULL, NULL, ImplicitList1, OperandInfo48 },  // Inst #987 = Int_VCOMISSrr
  { 988,	6,	1,	105,	0,	0|(1<<MCID::MayLoad), 0x3cc000c06ULL, NULL, NULL, OperandInfo47 },  // Inst #988 = Int_VCVTDQ2PDrm
  { 989,	2,	1,	106,	0,	0, 0x3cc000c05ULL, NULL, NULL, OperandInfo48 },  // Inst #989 = Int_VCVTDQ2PDrr
  { 990,	6,	1,	109,	0,	0|(1<<MCID::MayLoad), 0x2b6000106ULL, NULL, NULL, OperandInfo47 },  // Inst #990 = Int_VCVTDQ2PSrm
  { 991,	2,	1,	110,	0,	0, 0x2b6000105ULL, NULL, NULL, OperandInfo48 },  // Inst #991 = Int_VCVTDQ2PSrr
  { 992,	6,	1,	105,	0,	0|(1<<MCID::MayLoad), 0x3cc000b06ULL, NULL, NULL, OperandInfo47 },  // Inst #992 = Int_VCVTPD2DQrm
  { 993,	2,	1,	106,	0,	0, 0x3cc000b05ULL, NULL, NULL, OperandInfo48 },  // Inst #993 = Int_VCVTPD2DQrr
  { 994,	6,	1,	105,	0,	0|(1<<MCID::MayLoad), 0xb5000146ULL, NULL, NULL, OperandInfo47 },  // Inst #994 = Int_VCVTPD2PSrm
  { 995,	2,	1,	106,	0,	0, 0xb5000145ULL, NULL, NULL, OperandInfo48 },  // Inst #995 = Int_VCVTPD2PSrr
  { 996,	6,	1,	109,	0,	0|(1<<MCID::MayLoad), 0x2b7000146ULL, NULL, NULL, OperandInfo47 },  // Inst #996 = Int_VCVTPS2DQrm
  { 997,	2,	1,	110,	0,	0, 0x2b7000145ULL, NULL, NULL, OperandInfo48 },  // Inst #997 = Int_VCVTPS2DQrr
  { 998,	6,	1,	105,	0,	0|(1<<MCID::MayLoad), 0x2b4000106ULL, NULL, NULL, OperandInfo47 },  // Inst #998 = Int_VCVTPS2PDrm
  { 999,	2,	1,	106,	0,	0, 0x2b4000105ULL, NULL, NULL, OperandInfo48 },  // Inst #999 = Int_VCVTPS2PDrr
  { 1000,	7,	1,	117,	0,	0|(1<<MCID::MayLoad), 0xab4000c06ULL, NULL, NULL, OperandInfo139 },  // Inst #1000 = Int_VCVTSD2SSrm
  { 1001,	3,	1,	118,	0,	0, 0xab4000c05ULL, NULL, NULL, OperandInfo140 },  // Inst #1001 = Int_VCVTSD2SSrr
  { 1002,	7,	1,	117,	0,	0|(1<<MCID::MayLoad), 0xe54000b06ULL, NULL, NULL, OperandInfo139 },  // Inst #1002 = Int_VCVTSI2SD64rm
  { 1003,	3,	1,	118,	0,	0, 0xe54000b05ULL, NULL, NULL, OperandInfo141 },  // Inst #1003 = Int_VCVTSI2SD64rr
  { 1004,	7,	1,	117,	0,	0|(1<<MCID::MayLoad), 0xa54000b06ULL, NULL, NULL, OperandInfo139 },  // Inst #1004 = Int_VCVTSI2SDrm
  { 1005,	3,	1,	118,	0,	0, 0xa54000b05ULL, NULL, NULL, OperandInfo142 },  // Inst #1005 = Int_VCVTSI2SDrr
  { 1006,	7,	1,	117,	0,	0|(1<<MCID::MayLoad), 0xe54000c06ULL, NULL, NULL, OperandInfo139 },  // Inst #1006 = Int_VCVTSI2SS64rm
  { 1007,	3,	1,	118,	0,	0, 0xe54000c05ULL, NULL, NULL, OperandInfo141 },  // Inst #1007 = Int_VCVTSI2SS64rr
  { 1008,	7,	1,	117,	0,	0|(1<<MCID::MayLoad), 0xa54000c06ULL, NULL, NULL, OperandInfo139 },  // Inst #1008 = Int_VCVTSI2SSrm
  { 1009,	3,	1,	118,	0,	0, 0xa54000c05ULL, NULL, NULL, OperandInfo142 },  // Inst #1009 = Int_VCVTSI2SSrr
  { 1010,	7,	1,	117,	0,	0|(1<<MCID::MayLoad), 0xab4000c06ULL, NULL, NULL, OperandInfo139 },  // Inst #1010 = Int_VCVTSS2SDrm
  { 1011,	3,	1,	118,	0,	0, 0xab4000c05ULL, NULL, NULL, OperandInfo140 },  // Inst #1011 = Int_VCVTSS2SDrr
  { 1012,	6,	1,	111,	0,	0|(1<<MCID::MayLoad), 0x658000b06ULL, NULL, NULL, OperandInfo13 },  // Inst #1012 = Int_VCVTTSD2SI64rm
  { 1013,	2,	1,	112,	0,	0, 0x658000b05ULL, NULL, NULL, OperandInfo99 },  // Inst #1013 = Int_VCVTTSD2SI64rr
  { 1014,	6,	1,	111,	0,	0|(1<<MCID::MayLoad), 0x258000b06ULL, NULL, NULL, OperandInfo12 },  // Inst #1014 = Int_VCVTTSD2SIrm
  { 1015,	2,	1,	112,	0,	0, 0x258000b05ULL, NULL, NULL, OperandInfo100 },  // Inst #1015 = Int_VCVTTSD2SIrr
  { 1016,	6,	1,	115,	0,	0|(1<<MCID::MayLoad), 0x658000c06ULL, NULL, NULL, OperandInfo13 },  // Inst #1016 = Int_VCVTTSS2SI64rm
  { 1017,	2,	1,	116,	0,	0, 0x658000c05ULL, NULL, NULL, OperandInfo99 },  // Inst #1017 = Int_VCVTTSS2SI64rr
  { 1018,	6,	1,	113,	0,	0|(1<<MCID::MayLoad), 0x258000c06ULL, NULL, NULL, OperandInfo12 },  // Inst #1018 = Int_VCVTTSS2SIrm
  { 1019,	2,	1,	114,	0,	0, 0x258000c05ULL, NULL, NULL, OperandInfo100 },  // Inst #1019 = Int_VCVTTSS2SIrr
  { 1020,	6,	0,	103,	0,	0|(1<<MCID::MayLoad), 0x25d000146ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #1020 = Int_VUCOMISDrm
  { 1021,	2,	0,	104,	0,	0, 0x25d000145ULL, NULL, ImplicitList1, OperandInfo48 },  // Inst #1021 = Int_VUCOMISDrr
  { 1022,	6,	0,	103,	0,	0|(1<<MCID::MayLoad), 0x25c800106ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #1022 = Int_VUCOMISSrm
  { 1023,	2,	0,	104,	0,	0, 0x25c800105ULL, NULL, ImplicitList1, OperandInfo48 },  // Inst #1023 = Int_VUCOMISSrr
  { 1024,	1,	0,	52,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0xe6008001ULL, ImplicitList1, NULL, OperandInfo75 },  // Inst #1024 = JAE_1
  { 1025,	1,	0,	52,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x106018101ULL, ImplicitList1, NULL, OperandInfo75 },  // Inst #1025 = JAE_4
  { 1026,	1,	0,	52,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0xee008001ULL, ImplicitList1, NULL, OperandInfo75 },  // Inst #1026 = JA_1
  { 1027,	1,	0,	52,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x10e018101ULL, ImplicitList1, NULL, OperandInfo75 },  // Inst #1027 = JA_4
  { 1028,	1,	0,	52,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0xec008001ULL, ImplicitList1, NULL, OperandInfo75 },  // Inst #1028 = JBE_1
  { 1029,	1,	0,	52,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x10c018101ULL, ImplicitList1, NULL, OperandInfo75 },  // Inst #1029 = JBE_4
  { 1030,	1,	0,	52,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0xe4008001ULL, ImplicitList1, NULL, OperandInfo75 },  // Inst #1030 = JB_1
  { 1031,	1,	0,	52,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x104018101ULL, ImplicitList1, NULL, OperandInfo75 },  // Inst #1031 = JB_4
  { 1032,	1,	0,	46,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x1c6008081ULL, ImplicitList24, NULL, OperandInfo75 },  // Inst #1032 = JCXZ
  { 1033,	1,	0,	46,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x1c6008001ULL, ImplicitList25, NULL, OperandInfo75 },  // Inst #1033 = JECXZ_32
  { 1034,	1,	0,	46,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x1c6008081ULL, ImplicitList25, NULL, OperandInfo75 },  // Inst #1034 = JECXZ_64
  { 1035,	1,	0,	52,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0xe8008001ULL, ImplicitList1, NULL, OperandInfo75 },  // Inst #1035 = JE_1
  { 1036,	1,	0,	52,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x108018101ULL, ImplicitList1, NULL, OperandInfo75 },  // Inst #1036 = JE_4
  { 1037,	1,	0,	52,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0xfa008001ULL, ImplicitList1, NULL, OperandInfo75 },  // Inst #1037 = JGE_1
  { 1038,	1,	0,	52,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x11a018101ULL, ImplicitList1, NULL, OperandInfo75 },  // Inst #1038 = JGE_4
  { 1039,	1,	0,	52,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0xfe008001ULL, ImplicitList1, NULL, OperandInfo75 },  // Inst #1039 = JG_1
  { 1040,	1,	0,	52,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x11e018101ULL, ImplicitList1, NULL, OperandInfo75 },  // Inst #1040 = JG_4
  { 1041,	1,	0,	52,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0xfc008001ULL, ImplicitList1, NULL, OperandInfo75 },  // Inst #1041 = JLE_1
  { 1042,	1,	0,	52,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x11c018101ULL, ImplicitList1, NULL, OperandInfo75 },  // Inst #1042 = JLE_4
  { 1043,	1,	0,	52,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0xf8008001ULL, ImplicitList1, NULL, OperandInfo75 },  // Inst #1043 = JL_1
  { 1044,	1,	0,	52,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x118018101ULL, ImplicitList1, NULL, OperandInfo75 },  // Inst #1044 = JL_4
  { 1045,	5,	0,	49,	0,	0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::MayLoad)|(1<<MCID::Terminator), 0x1fe00001cULL, NULL, NULL, OperandInfo38 },  // Inst #1045 = JMP32m
  { 1046,	1,	0,	50,	0,	0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::Terminator), 0x1fe000014ULL, NULL, NULL, OperandInfo74 },  // Inst #1046 = JMP32r
  { 1047,	5,	0,	49,	0,	0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::MayLoad)|(1<<MCID::Terminator), 0x1fe00001cULL, NULL, NULL, OperandInfo38 },  // Inst #1047 = JMP64m
  { 1048,	1,	0,	51,	0,	0|(1<<MCID::Branch)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x1d2000001ULL, NULL, NULL, OperandInfo75 },  // Inst #1048 = JMP64pcrel32
  { 1049,	1,	0,	50,	0,	0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::Terminator), 0x1fe000014ULL, NULL, NULL, OperandInfo76 },  // Inst #1049 = JMP64r
  { 1050,	1,	0,	51,	0,	0|(1<<MCID::Branch)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x1d6008001ULL, NULL, NULL, OperandInfo75 },  // Inst #1050 = JMP_1
  { 1051,	1,	0,	51,	0,	0|(1<<MCID::Branch)|(1<<MCID::Barrier)|(1<<MCID::Terminator), 0x1d2018001ULL, NULL, NULL, OperandInfo75 },  // Inst #1051 = JMP_4
  { 1052,	1,	0,	52,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0xea008001ULL, ImplicitList1, NULL, OperandInfo75 },  // Inst #1052 = JNE_1
  { 1053,	1,	0,	52,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x10a018101ULL, ImplicitList1, NULL, OperandInfo75 },  // Inst #1053 = JNE_4
  { 1054,	1,	0,	52,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0xe2008001ULL, ImplicitList1, NULL, OperandInfo75 },  // Inst #1054 = JNO_1
  { 1055,	1,	0,	52,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x102018101ULL, ImplicitList1, NULL, OperandInfo75 },  // Inst #1055 = JNO_4
  { 1056,	1,	0,	52,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0xf6008001ULL, ImplicitList1, NULL, OperandInfo75 },  // Inst #1056 = JNP_1
  { 1057,	1,	0,	52,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x116018101ULL, ImplicitList1, NULL, OperandInfo75 },  // Inst #1057 = JNP_4
  { 1058,	1,	0,	52,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0xf2008001ULL, ImplicitList1, NULL, OperandInfo75 },  // Inst #1058 = JNS_1
  { 1059,	1,	0,	52,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x112018101ULL, ImplicitList1, NULL, OperandInfo75 },  // Inst #1059 = JNS_4
  { 1060,	1,	0,	52,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0xe0008001ULL, ImplicitList1, NULL, OperandInfo75 },  // Inst #1060 = JO_1
  { 1061,	1,	0,	52,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x100018101ULL, ImplicitList1, NULL, OperandInfo75 },  // Inst #1061 = JO_4
  { 1062,	1,	0,	52,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0xf4008001ULL, ImplicitList1, NULL, OperandInfo75 },  // Inst #1062 = JP_1
  { 1063,	1,	0,	52,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x114018101ULL, ImplicitList1, NULL, OperandInfo75 },  // Inst #1063 = JP_4
  { 1064,	1,	0,	46,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x1c6008001ULL, ImplicitList26, NULL, OperandInfo75 },  // Inst #1064 = JRCXZ
  { 1065,	1,	0,	52,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0xf0008001ULL, ImplicitList1, NULL, OperandInfo75 },  // Inst #1065 = JS_1
  { 1066,	1,	0,	52,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x110018101ULL, ImplicitList1, NULL, OperandInfo75 },  // Inst #1066 = JS_4
  { 1067,	0,	0,	18,	0,	0, 0x13e000001ULL, ImplicitList1, ImplicitList27, 0 },  // Inst #1067 = LAHF
  { 1068,	6,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x4000146ULL, NULL, NULL, OperandInfo11 },  // Inst #1068 = LAR16rm
  { 1069,	2,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x4000145ULL, NULL, NULL, OperandInfo55 },  // Inst #1069 = LAR16rr
  { 1070,	6,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x4000106ULL, NULL, NULL, OperandInfo12 },  // Inst #1070 = LAR32rm
  { 1071,	2,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x4000105ULL, NULL, NULL, OperandInfo67 },  // Inst #1071 = LAR32rr
  { 1072,	6,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x4002106ULL, NULL, NULL, OperandInfo13 },  // Inst #1072 = LAR64rm
  { 1073,	2,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x4002105ULL, NULL, NULL, OperandInfo143 },  // Inst #1073 = LAR64rr
  { 1074,	6,	0,	14,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x162100144ULL, ImplicitList2, ImplicitList28, OperandInfo16 },  // Inst #1074 = LCMPXCHG16
  { 1075,	5,	0,	17,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x18e102119ULL, ImplicitList14, ImplicitList15, OperandInfo38 },  // Inst #1075 = LCMPXCHG16B
  { 1076,	6,	0,	14,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x162100104ULL, ImplicitList3, ImplicitList29, OperandInfo20 },  // Inst #1076 = LCMPXCHG32
  { 1077,	6,	0,	14,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x162102104ULL, ImplicitList4, ImplicitList30, OperandInfo24 },  // Inst #1077 = LCMPXCHG64
  { 1078,	6,	0,	15,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x160100104ULL, ImplicitList5, ImplicitList31, OperandInfo28 },  // Inst #1078 = LCMPXCHG8
  { 1079,	5,	0,	16,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x18e100119ULL, ImplicitList10, ImplicitList16, OperandInfo38 },  // Inst #1079 = LCMPXCHG8B
  { 1080,	6,	1,	138,	0,	0|(1<<MCID::MayLoad), 0x1e1000b06ULL, NULL, NULL, OperandInfo47 },  // Inst #1080 = LDDQUrm
  { 1081,	5,	0,	139,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x15c80011aULL, NULL, NULL, OperandInfo38 },  // Inst #1081 = LDMXCSR
  { 1082,	6,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x18a000046ULL, NULL, NULL, OperandInfo11 },  // Inst #1082 = LDS16rm
  { 1083,	6,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x18a000006ULL, NULL, NULL, OperandInfo12 },  // Inst #1083 = LDS32rm
  { 1084,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1dc000401ULL, NULL, NULL, 0 },  // Inst #1084 = LD_F0
  { 1085,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1d0000401ULL, NULL, NULL, 0 },  // Inst #1085 = LD_F1
  { 1086,	5,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b2000018ULL, NULL, NULL, OperandInfo38 },  // Inst #1086 = LD_F32m
  { 1087,	5,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1ba000018ULL, NULL, NULL, OperandInfo38 },  // Inst #1087 = LD_F64m
  { 1088,	5,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b600001dULL, NULL, NULL, OperandInfo38 },  // Inst #1088 = LD_F80m
  { 1089,	1,	1,	18,	0,	0|(1<<MCID::Rematerializable), 0x20000ULL, NULL, NULL, OperandInfo144 },  // Inst #1089 = LD_Fp032
  { 1090,	1,	1,	18,	0,	0|(1<<MCID::Rematerializable), 0x20000ULL, NULL, NULL, OperandInfo145 },  // Inst #1090 = LD_Fp064
  { 1091,	1,	1,	18,	0,	0|(1<<MCID::Rematerializable), 0x20000ULL, NULL, NULL, OperandInfo122 },  // Inst #1091 = LD_Fp080
  { 1092,	1,	1,	18,	0,	0|(1<<MCID::Rematerializable), 0x20000ULL, NULL, NULL, OperandInfo144 },  // Inst #1092 = LD_Fp132
  { 1093,	1,	1,	18,	0,	0|(1<<MCID::Rematerializable), 0x20000ULL, NULL, NULL, OperandInfo145 },  // Inst #1093 = LD_Fp164
  { 1094,	1,	1,	18,	0,	0|(1<<MCID::Rematerializable), 0x20000ULL, NULL, NULL, OperandInfo122 },  // Inst #1094 = LD_Fp180
  { 1095,	6,	1,	18,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x20000ULL, NULL, NULL, OperandInfo127 },  // Inst #1095 = LD_Fp32m
  { 1096,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x20000ULL, NULL, NULL, OperandInfo128 },  // Inst #1096 = LD_Fp32m64
  { 1097,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x20000ULL, NULL, NULL, OperandInfo129 },  // Inst #1097 = LD_Fp32m80
  { 1098,	6,	1,	18,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x20000ULL, NULL, NULL, OperandInfo128 },  // Inst #1098 = LD_Fp64m
  { 1099,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x20000ULL, NULL, NULL, OperandInfo129 },  // Inst #1099 = LD_Fp64m80
  { 1100,	6,	1,	18,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x20000ULL, NULL, NULL, OperandInfo129 },  // Inst #1100 = LD_Fp80m
  { 1101,	1,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x180000402ULL, NULL, NULL, OperandInfo39 },  // Inst #1101 = LD_Frr
  { 1102,	6,	1,	54,	0,	0, 0x11a000046ULL, NULL, NULL, OperandInfo11 },  // Inst #1102 = LEA16r
  { 1103,	6,	1,	53,	0,	0|(1<<MCID::Rematerializable), 0x11a000006ULL, NULL, NULL, OperandInfo12 },  // Inst #1103 = LEA32r
  { 1104,	6,	1,	53,	0,	0, 0x11a000006ULL, NULL, NULL, OperandInfo146 },  // Inst #1104 = LEA64_32r
  { 1105,	6,	1,	53,	0,	0|(1<<MCID::Rematerializable), 0x11a002006ULL, NULL, NULL, OperandInfo13 },  // Inst #1105 = LEA64r
  { 1106,	0,	0,	18,	0,	0|(1<<MCID::MayLoad), 0x192000001ULL, ImplicitList32, ImplicitList32, 0 },  // Inst #1106 = LEAVE
  { 1107,	0,	0,	18,	0,	0|(1<<MCID::MayLoad), 0x192000001ULL, ImplicitList33, ImplicitList33, 0 },  // Inst #1107 = LEAVE64
  { 1108,	6,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x188000046ULL, NULL, NULL, OperandInfo11 },  // Inst #1108 = LES16rm
  { 1109,	6,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x188000006ULL, NULL, NULL, OperandInfo12 },  // Inst #1109 = LES32rm
  { 1110,	0,	0,	140,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x15c000127ULL, NULL, NULL, 0 },  // Inst #1110 = LFENCE
  { 1111,	6,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x168000146ULL, NULL, NULL, OperandInfo11 },  // Inst #1111 = LFS16rm
  { 1112,	6,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x168000106ULL, NULL, NULL, OperandInfo12 },  // Inst #1112 = LFS32rm
  { 1113,	6,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x168002106ULL, NULL, NULL, OperandInfo13 },  // Inst #1113 = LFS64rm
  { 1114,	5,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x200015aULL, NULL, NULL, OperandInfo38 },  // Inst #1114 = LGDT16m
  { 1115,	5,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x200011aULL, NULL, NULL, OperandInfo38 },  // Inst #1115 = LGDTm
  { 1116,	6,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x16a000146ULL, NULL, NULL, OperandInfo11 },  // Inst #1116 = LGS16rm
  { 1117,	6,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x16a000106ULL, NULL, NULL, OperandInfo12 },  // Inst #1117 = LGS32rm
  { 1118,	6,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x16a002106ULL, NULL, NULL, OperandInfo13 },  // Inst #1118 = LGS64rm
  { 1119,	5,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x200015bULL, NULL, NULL, OperandInfo38 },  // Inst #1119 = LIDT16m
  { 1120,	5,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x200011bULL, NULL, NULL, OperandInfo38 },  // Inst #1120 = LIDTm
  { 1121,	5,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x11aULL, NULL, NULL, OperandInfo38 },  // Inst #1121 = LLDT16m
  { 1122,	1,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x112ULL, NULL, NULL, OperandInfo115 },  // Inst #1122 = LLDT16r
  { 1123,	5,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x200011eULL, NULL, NULL, OperandInfo38 },  // Inst #1123 = LMSW16m
  { 1124,	1,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000116ULL, NULL, NULL, OperandInfo115 },  // Inst #1124 = LMSW16r
  { 1125,	6,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10210c018ULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #1125 = LOCK_ADD16mi
  { 1126,	6,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x106104018ULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #1126 = LOCK_ADD16mi8
  { 1127,	6,	0,	1,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2100044ULL, NULL, ImplicitList1, OperandInfo16 },  // Inst #1127 = LOCK_ADD16mr
  { 1128,	6,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x102114018ULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #1128 = LOCK_ADD32mi
  { 1129,	6,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x106104018ULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #1129 = LOCK_ADD32mi8
  { 1130,	6,	0,	1,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2100004ULL, NULL, ImplicitList1, OperandInfo20 },  // Inst #1130 = LOCK_ADD32mr
  { 1131,	6,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x102116018ULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #1131 = LOCK_ADD64mi32
  { 1132,	6,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x106106018ULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #1132 = LOCK_ADD64mi8
  { 1133,	6,	0,	1,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2102004ULL, NULL, ImplicitList1, OperandInfo24 },  // Inst #1133 = LOCK_ADD64mr
  { 1134,	6,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x100104018ULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #1134 = LOCK_ADD8mi
  { 1135,	6,	0,	1,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x100004ULL, NULL, ImplicitList1, OperandInfo28 },  // Inst #1135 = LOCK_ADD8mr
  { 1136,	6,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10210c01cULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #1136 = LOCK_AND16mi
  { 1137,	6,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10610401cULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #1137 = LOCK_AND16mi8
  { 1138,	6,	0,	1,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x42100044ULL, NULL, ImplicitList1, OperandInfo16 },  // Inst #1138 = LOCK_AND16mr
  { 1139,	6,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10211401cULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #1139 = LOCK_AND32mi
  { 1140,	6,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10610401cULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #1140 = LOCK_AND32mi8
  { 1141,	6,	0,	1,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x42100004ULL, NULL, ImplicitList1, OperandInfo20 },  // Inst #1141 = LOCK_AND32mr
  { 1142,	6,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10211601cULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #1142 = LOCK_AND64mi32
  { 1143,	6,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10610601cULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #1143 = LOCK_AND64mi8
  { 1144,	6,	0,	1,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x42102004ULL, NULL, ImplicitList1, OperandInfo24 },  // Inst #1144 = LOCK_AND64mr
  { 1145,	6,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10010401cULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #1145 = LOCK_AND8mi
  { 1146,	6,	0,	1,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x40100004ULL, NULL, ImplicitList1, OperandInfo28 },  // Inst #1146 = LOCK_AND8mr
  { 1147,	5,	0,	200,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1fe100059ULL, NULL, ImplicitList1, OperandInfo38 },  // Inst #1147 = LOCK_DEC16m
  { 1148,	5,	0,	200,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1fe100019ULL, NULL, ImplicitList1, OperandInfo38 },  // Inst #1148 = LOCK_DEC32m
  { 1149,	5,	0,	200,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1fe102019ULL, NULL, ImplicitList1, OperandInfo38 },  // Inst #1149 = LOCK_DEC64m
  { 1150,	5,	0,	200,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1fc100019ULL, NULL, ImplicitList1, OperandInfo38 },  // Inst #1150 = LOCK_DEC8m
  { 1151,	5,	0,	200,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1fe100058ULL, NULL, ImplicitList1, OperandInfo38 },  // Inst #1151 = LOCK_INC16m
  { 1152,	5,	0,	200,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1fe100018ULL, NULL, ImplicitList1, OperandInfo38 },  // Inst #1152 = LOCK_INC32m
  { 1153,	5,	0,	200,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1fe102018ULL, NULL, ImplicitList1, OperandInfo38 },  // Inst #1153 = LOCK_INC64m
  { 1154,	5,	0,	200,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1fc100018ULL, NULL, ImplicitList1, OperandInfo38 },  // Inst #1154 = LOCK_INC8m
  { 1155,	6,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10210c019ULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #1155 = LOCK_OR16mi
  { 1156,	6,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x106104019ULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #1156 = LOCK_OR16mi8
  { 1157,	6,	0,	1,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x12100044ULL, NULL, ImplicitList1, OperandInfo16 },  // Inst #1157 = LOCK_OR16mr
  { 1158,	6,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x102114019ULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #1158 = LOCK_OR32mi
  { 1159,	6,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x106104019ULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #1159 = LOCK_OR32mi8
  { 1160,	6,	0,	1,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x12100004ULL, NULL, ImplicitList1, OperandInfo20 },  // Inst #1160 = LOCK_OR32mr
  { 1161,	6,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x102116019ULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #1161 = LOCK_OR64mi32
  { 1162,	6,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x106106019ULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #1162 = LOCK_OR64mi8
  { 1163,	6,	0,	1,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x12102004ULL, NULL, ImplicitList1, OperandInfo24 },  // Inst #1163 = LOCK_OR64mr
  { 1164,	6,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x100104019ULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #1164 = LOCK_OR8mi
  { 1165,	6,	0,	1,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10100004ULL, NULL, ImplicitList1, OperandInfo28 },  // Inst #1165 = LOCK_OR8mr
  { 1166,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1e0000001ULL, NULL, NULL, 0 },  // Inst #1166 = LOCK_PREFIX
  { 1167,	6,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10210c01dULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #1167 = LOCK_SUB16mi
  { 1168,	6,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10610401dULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #1168 = LOCK_SUB16mi8
  { 1169,	6,	0,	1,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x52100044ULL, NULL, ImplicitList1, OperandInfo16 },  // Inst #1169 = LOCK_SUB16mr
  { 1170,	6,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10211401dULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #1170 = LOCK_SUB32mi
  { 1171,	6,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10610401dULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #1171 = LOCK_SUB32mi8
  { 1172,	6,	0,	1,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x52100004ULL, NULL, ImplicitList1, OperandInfo20 },  // Inst #1172 = LOCK_SUB32mr
  { 1173,	6,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10211601dULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #1173 = LOCK_SUB64mi32
  { 1174,	6,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10610601dULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #1174 = LOCK_SUB64mi8
  { 1175,	6,	0,	1,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x52102004ULL, NULL, ImplicitList1, OperandInfo24 },  // Inst #1175 = LOCK_SUB64mr
  { 1176,	6,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10010401dULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #1176 = LOCK_SUB8mi
  { 1177,	6,	0,	1,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x50100004ULL, NULL, ImplicitList1, OperandInfo28 },  // Inst #1177 = LOCK_SUB8mr
  { 1178,	6,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10210c01eULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #1178 = LOCK_XOR16mi
  { 1179,	6,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10610401eULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #1179 = LOCK_XOR16mi8
  { 1180,	6,	0,	1,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x62100044ULL, NULL, ImplicitList1, OperandInfo16 },  // Inst #1180 = LOCK_XOR16mr
  { 1181,	6,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10211401eULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #1181 = LOCK_XOR32mi
  { 1182,	6,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10610401eULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #1182 = LOCK_XOR32mi8
  { 1183,	6,	0,	1,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x62100004ULL, NULL, ImplicitList1, OperandInfo20 },  // Inst #1183 = LOCK_XOR32mr
  { 1184,	6,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10211601eULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #1184 = LOCK_XOR64mi32
  { 1185,	6,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10610601eULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #1185 = LOCK_XOR64mi8
  { 1186,	6,	0,	1,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x62102004ULL, NULL, ImplicitList1, OperandInfo24 },  // Inst #1186 = LOCK_XOR64mr
  { 1187,	6,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10010401eULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #1187 = LOCK_XOR8mi
  { 1188,	6,	0,	1,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x60100004ULL, NULL, ImplicitList1, OperandInfo28 },  // Inst #1188 = LOCK_XOR8mr
  { 1189,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x158000001ULL, NULL, NULL, 0 },  // Inst #1189 = LODSB
  { 1190,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x15a000001ULL, NULL, NULL, 0 },  // Inst #1190 = LODSD
  { 1191,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x15a002001ULL, NULL, NULL, 0 },  // Inst #1191 = LODSQ
  { 1192,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x15a000041ULL, NULL, NULL, 0 },  // Inst #1192 = LODSW
  { 1193,	1,	0,	55,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1c4008001ULL, NULL, NULL, OperandInfo75 },  // Inst #1193 = LOOP
  { 1194,	1,	0,	56,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1c2008001ULL, NULL, NULL, OperandInfo75 },  // Inst #1194 = LOOPE
  { 1195,	1,	0,	57,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1c0008001ULL, NULL, NULL, OperandInfo75 },  // Inst #1195 = LOOPNE
  { 1196,	1,	0,	74,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x1940ec001ULL, NULL, NULL, OperandInfo2 },  // Inst #1196 = LRETI
  { 1197,	1,	0,	74,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x1940ec041ULL, NULL, NULL, OperandInfo2 },  // Inst #1197 = LRETIW
  { 1198,	0,	0,	74,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x1960e0001ULL, NULL, NULL, 0 },  // Inst #1198 = LRETL
  { 1199,	0,	0,	74,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x1960e2001ULL, NULL, NULL, 0 },  // Inst #1199 = LRETQ
  { 1200,	0,	0,	74,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x1960e0041ULL, NULL, NULL, 0 },  // Inst #1200 = LRETW
  { 1201,	6,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x6000146ULL, NULL, NULL, OperandInfo11 },  // Inst #1201 = LSL16rm
  { 1202,	2,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x6000145ULL, NULL, NULL, OperandInfo55 },  // Inst #1202 = LSL16rr
  { 1203,	6,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x6000106ULL, NULL, NULL, OperandInfo12 },  // Inst #1203 = LSL32rm
  { 1204,	2,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x6000105ULL, NULL, NULL, OperandInfo67 },  // Inst #1204 = LSL32rr
  { 1205,	6,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x6002106ULL, NULL, NULL, OperandInfo13 },  // Inst #1205 = LSL64rm
  { 1206,	2,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x6002105ULL, NULL, NULL, OperandInfo68 },  // Inst #1206 = LSL64rr
  { 1207,	6,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x164000146ULL, NULL, NULL, OperandInfo11 },  // Inst #1207 = LSS16rm
  { 1208,	6,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x164000106ULL, NULL, NULL, OperandInfo12 },  // Inst #1208 = LSS32rm
  { 1209,	6,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x164002106ULL, NULL, NULL, OperandInfo13 },  // Inst #1209 = LSS64rm
  { 1210,	5,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x11bULL, NULL, NULL, OperandInfo38 },  // Inst #1210 = LTRm
  { 1211,	1,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x113ULL, NULL, NULL, OperandInfo115 },  // Inst #1211 = LTRr
  { 1212,	7,	1,	202,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x182100146ULL, NULL, ImplicitList1, OperandInfo18 },  // Inst #1212 = LXADD16
  { 1213,	7,	1,	202,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x182100106ULL, NULL, ImplicitList1, OperandInfo22 },  // Inst #1213 = LXADD32
  { 1214,	7,	1,	202,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x182102106ULL, NULL, ImplicitList1, OperandInfo26 },  // Inst #1214 = LXADD64
  { 1215,	7,	1,	203,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x180100106ULL, NULL, ImplicitList1, OperandInfo30 },  // Inst #1215 = LXADD8
  { 1216,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x17a000c46ULL, NULL, ImplicitList1, OperandInfo11 },  // Inst #1216 = LZCNT16rm
  { 1217,	2,	1,	18,	0,	0, 0x17a000c45ULL, NULL, ImplicitList1, OperandInfo55 },  // Inst #1217 = LZCNT16rr
  { 1218,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x17a000c06ULL, NULL, ImplicitList1, OperandInfo12 },  // Inst #1218 = LZCNT32rm
  { 1219,	2,	1,	18,	0,	0, 0x17a000c05ULL, NULL, ImplicitList1, OperandInfo67 },  // Inst #1219 = LZCNT32rr
  { 1220,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x17a002c06ULL, NULL, ImplicitList1, OperandInfo13 },  // Inst #1220 = LZCNT64rm
  { 1221,	2,	1,	18,	0,	0, 0x17a002c05ULL, NULL, ImplicitList1, OperandInfo68 },  // Inst #1221 = LZCNT64rr
  { 1222,	2,	0,	141,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1ef800145ULL, ImplicitList34, NULL, OperandInfo48 },  // Inst #1222 = MASKMOVDQU
  { 1223,	2,	0,	141,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1ef800145ULL, ImplicitList35, NULL, OperandInfo48 },  // Inst #1223 = MASKMOVDQU64
  { 1224,	7,	1,	95,	0,	0|(1<<MCID::MayLoad), 0xbf000146ULL, NULL, NULL, OperandInfo32 },  // Inst #1224 = MAXPDrm
  { 1225,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xbf000146ULL, NULL, NULL, OperandInfo32 },  // Inst #1225 = MAXPDrm_Int
  { 1226,	3,	1,	96,	0,	0, 0xbf000145ULL, NULL, NULL, OperandInfo33 },  // Inst #1226 = MAXPDrr
  { 1227,	3,	1,	18,	0,	0, 0xbf000145ULL, NULL, NULL, OperandInfo33 },  // Inst #1227 = MAXPDrr_Int
  { 1228,	7,	1,	91,	0,	0|(1<<MCID::MayLoad), 0xbe800106ULL, NULL, NULL, OperandInfo32 },  // Inst #1228 = MAXPSrm
  { 1229,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xbe800106ULL, NULL, NULL, OperandInfo32 },  // Inst #1229 = MAXPSrm_Int
  { 1230,	3,	1,	92,	0,	0, 0xbe800105ULL, NULL, NULL, OperandInfo33 },  // Inst #1230 = MAXPSrr
  { 1231,	3,	1,	18,	0,	0, 0xbe800105ULL, NULL, NULL, OperandInfo33 },  // Inst #1231 = MAXPSrr_Int
  { 1232,	7,	1,	97,	0,	0|(1<<MCID::MayLoad), 0xbe000b06ULL, NULL, NULL, OperandInfo34 },  // Inst #1232 = MAXSDrm
  { 1233,	7,	1,	97,	0,	0|(1<<MCID::MayLoad), 0xbe000b06ULL, NULL, NULL, OperandInfo32 },  // Inst #1233 = MAXSDrm_Int
  { 1234,	3,	1,	98,	0,	0, 0xbe000b05ULL, NULL, NULL, OperandInfo35 },  // Inst #1234 = MAXSDrr
  { 1235,	3,	1,	98,	0,	0, 0xbe000b05ULL, NULL, NULL, OperandInfo33 },  // Inst #1235 = MAXSDrr_Int
  { 1236,	7,	1,	93,	0,	0|(1<<MCID::MayLoad), 0xbe000c06ULL, NULL, NULL, OperandInfo36 },  // Inst #1236 = MAXSSrm
  { 1237,	7,	1,	93,	0,	0|(1<<MCID::MayLoad), 0xbe000c06ULL, NULL, NULL, OperandInfo32 },  // Inst #1237 = MAXSSrm_Int
  { 1238,	3,	1,	94,	0,	0, 0xbe000c05ULL, NULL, NULL, OperandInfo37 },  // Inst #1238 = MAXSSrr
  { 1239,	3,	1,	94,	0,	0, 0xbe000c05ULL, NULL, NULL, OperandInfo33 },  // Inst #1239 = MAXSSrr_Int
  { 1240,	0,	0,	142,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x15c000128ULL, NULL, NULL, 0 },  // Inst #1240 = MFENCE
  { 1241,	7,	1,	95,	0,	0|(1<<MCID::MayLoad), 0xbb000146ULL, NULL, NULL, OperandInfo32 },  // Inst #1241 = MINPDrm
  { 1242,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xbb000146ULL, NULL, NULL, OperandInfo32 },  // Inst #1242 = MINPDrm_Int
  { 1243,	3,	1,	96,	0,	0, 0xbb000145ULL, NULL, NULL, OperandInfo33 },  // Inst #1243 = MINPDrr
  { 1244,	3,	1,	18,	0,	0, 0xbb000145ULL, NULL, NULL, OperandInfo33 },  // Inst #1244 = MINPDrr_Int
  { 1245,	7,	1,	91,	0,	0|(1<<MCID::MayLoad), 0xba800106ULL, NULL, NULL, OperandInfo32 },  // Inst #1245 = MINPSrm
  { 1246,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xba800106ULL, NULL, NULL, OperandInfo32 },  // Inst #1246 = MINPSrm_Int
  { 1247,	3,	1,	92,	0,	0, 0xba800105ULL, NULL, NULL, OperandInfo33 },  // Inst #1247 = MINPSrr
  { 1248,	3,	1,	18,	0,	0, 0xba800105ULL, NULL, NULL, OperandInfo33 },  // Inst #1248 = MINPSrr_Int
  { 1249,	7,	1,	97,	0,	0|(1<<MCID::MayLoad), 0xba000b06ULL, NULL, NULL, OperandInfo34 },  // Inst #1249 = MINSDrm
  { 1250,	7,	1,	97,	0,	0|(1<<MCID::MayLoad), 0xba000b06ULL, NULL, NULL, OperandInfo32 },  // Inst #1250 = MINSDrm_Int
  { 1251,	3,	1,	98,	0,	0, 0xba000b05ULL, NULL, NULL, OperandInfo35 },  // Inst #1251 = MINSDrr
  { 1252,	3,	1,	98,	0,	0, 0xba000b05ULL, NULL, NULL, OperandInfo33 },  // Inst #1252 = MINSDrr_Int
  { 1253,	7,	1,	93,	0,	0|(1<<MCID::MayLoad), 0xba000c06ULL, NULL, NULL, OperandInfo36 },  // Inst #1253 = MINSSrm
  { 1254,	7,	1,	93,	0,	0|(1<<MCID::MayLoad), 0xba000c06ULL, NULL, NULL, OperandInfo32 },  // Inst #1254 = MINSSrm_Int
  { 1255,	3,	1,	94,	0,	0, 0xba000c05ULL, NULL, NULL, OperandInfo37 },  // Inst #1255 = MINSSrr
  { 1256,	3,	1,	94,	0,	0, 0xba000c05ULL, NULL, NULL, OperandInfo33 },  // Inst #1256 = MINSSrr_Int
  { 1257,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x5b000146ULL, NULL, NULL, OperandInfo147 },  // Inst #1257 = MMX_CVTPD2PIirm
  { 1258,	2,	1,	18,	0,	0, 0x5b000145ULL, NULL, NULL, OperandInfo148 },  // Inst #1258 = MMX_CVTPD2PIirr
  { 1259,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x55000146ULL, NULL, NULL, OperandInfo47 },  // Inst #1259 = MMX_CVTPI2PDirm
  { 1260,	2,	1,	18,	0,	0, 0x55000145ULL, NULL, NULL, OperandInfo149 },  // Inst #1260 = MMX_CVTPI2PDirr
  { 1261,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x54800106ULL, NULL, NULL, OperandInfo32 },  // Inst #1261 = MMX_CVTPI2PSirm
  { 1262,	3,	1,	18,	0,	0, 0x54800105ULL, NULL, NULL, OperandInfo150 },  // Inst #1262 = MMX_CVTPI2PSirr
  { 1263,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x5a800106ULL, NULL, NULL, OperandInfo147 },  // Inst #1263 = MMX_CVTPS2PIirm
  { 1264,	2,	1,	18,	0,	0, 0x5a800105ULL, NULL, NULL, OperandInfo148 },  // Inst #1264 = MMX_CVTPS2PIirr
  { 1265,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x59000146ULL, NULL, NULL, OperandInfo147 },  // Inst #1265 = MMX_CVTTPD2PIirm
  { 1266,	2,	1,	18,	0,	0, 0x59000145ULL, NULL, NULL, OperandInfo148 },  // Inst #1266 = MMX_CVTTPD2PIirr
  { 1267,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x58800106ULL, NULL, NULL, OperandInfo147 },  // Inst #1267 = MMX_CVTTPS2PIirm
  { 1268,	2,	1,	18,	0,	0, 0x58800105ULL, NULL, NULL, OperandInfo148 },  // Inst #1268 = MMX_CVTTPS2PIirr
  { 1269,	0,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0xee000101ULL, NULL, NULL, 0 },  // Inst #1269 = MMX_EMMS
  { 1270,	2,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1ee000105ULL, ImplicitList34, NULL, OperandInfo151 },  // Inst #1270 = MMX_MASKMOVQ
  { 1271,	2,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1ee000105ULL, ImplicitList35, NULL, OperandInfo151 },  // Inst #1271 = MMX_MASKMOVQ64
  { 1272,	2,	1,	18,	0,	0|(1<<MCID::Bitcast), 0xfc002103ULL, NULL, NULL, OperandInfo152 },  // Inst #1272 = MMX_MOVD64from64rr
  { 1273,	2,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xfc000103ULL, NULL, NULL, OperandInfo153 },  // Inst #1273 = MMX_MOVD64grr
  { 1274,	6,	0,	18,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0xfc000104ULL, NULL, NULL, OperandInfo154 },  // Inst #1274 = MMX_MOVD64mr
  { 1275,	6,	1,	18,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0xdc000106ULL, NULL, NULL, OperandInfo147 },  // Inst #1275 = MMX_MOVD64rm
  { 1276,	2,	1,	18,	0,	0, 0xdc000105ULL, NULL, NULL, OperandInfo155 },  // Inst #1276 = MMX_MOVD64rr
  { 1277,	2,	1,	18,	0,	0|(1<<MCID::Bitcast), 0xdc002105ULL, NULL, NULL, OperandInfo156 },  // Inst #1277 = MMX_MOVD64rrv164
  { 1278,	2,	1,	18,	0,	0, 0xdc002105ULL, NULL, NULL, OperandInfo156 },  // Inst #1278 = MMX_MOVD64to64rr
  { 1279,	2,	1,	18,	0,	0, 0x1ac004b05ULL, NULL, NULL, OperandInfo148 },  // Inst #1279 = MMX_MOVDQ2Qrr
  { 1280,	2,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ac004b05ULL, NULL, NULL, OperandInfo157 },  // Inst #1280 = MMX_MOVFR642Qrr
  { 1281,	6,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1ce000104ULL, NULL, NULL, OperandInfo154 },  // Inst #1281 = MMX_MOVNTQmr
  { 1282,	2,	1,	18,	0,	0, 0x1ac004c05ULL, NULL, NULL, OperandInfo149 },  // Inst #1282 = MMX_MOVQ2DQrr
  { 1283,	2,	1,	18,	0,	0, 0x1ac004c05ULL, NULL, NULL, OperandInfo158 },  // Inst #1283 = MMX_MOVQ2FR64rr
  { 1284,	6,	0,	18,	0,	0|(1<<MCID::MayStore), 0xfe000104ULL, NULL, NULL, OperandInfo154 },  // Inst #1284 = MMX_MOVQ64mr
  { 1285,	6,	1,	18,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0xde000106ULL, NULL, NULL, OperandInfo147 },  // Inst #1285 = MMX_MOVQ64rm
  { 1286,	2,	1,	18,	0,	0, 0xde000105ULL, NULL, NULL, OperandInfo151 },  // Inst #1286 = MMX_MOVQ64rr
  { 1287,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xdc000106ULL, NULL, NULL, OperandInfo147 },  // Inst #1287 = MMX_MOVZDI2PDIrm
  { 1288,	2,	1,	18,	0,	0, 0xdc000105ULL, NULL, NULL, OperandInfo155 },  // Inst #1288 = MMX_MOVZDI2PDIrr
  { 1289,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x39800d06ULL, NULL, NULL, OperandInfo147 },  // Inst #1289 = MMX_PABSBrm64
  { 1290,	2,	1,	18,	0,	0, 0x39800d05ULL, NULL, NULL, OperandInfo151 },  // Inst #1290 = MMX_PABSBrr64
  { 1291,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x3d800d06ULL, NULL, NULL, OperandInfo147 },  // Inst #1291 = MMX_PABSDrm64
  { 1292,	2,	1,	18,	0,	0, 0x3d800d05ULL, NULL, NULL, OperandInfo151 },  // Inst #1292 = MMX_PABSDrr64
  { 1293,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x3b800d06ULL, NULL, NULL, OperandInfo147 },  // Inst #1293 = MMX_PABSWrm64
  { 1294,	2,	1,	18,	0,	0, 0x3b800d05ULL, NULL, NULL, OperandInfo151 },  // Inst #1294 = MMX_PABSWrr64
  { 1295,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xd6000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1295 = MMX_PACKSSDWirm
  { 1296,	3,	1,	18,	0,	0, 0xd6000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1296 = MMX_PACKSSDWirr
  { 1297,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xc6000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1297 = MMX_PACKSSWBirm
  { 1298,	3,	1,	18,	0,	0, 0xc6000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1298 = MMX_PACKSSWBirr
  { 1299,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xce000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1299 = MMX_PACKUSWBirm
  { 1300,	3,	1,	18,	0,	0, 0xce000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1300 = MMX_PACKUSWBirr
  { 1301,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1f8000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1301 = MMX_PADDBirm
  { 1302,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0x1f8000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1302 = MMX_PADDBirr
  { 1303,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1fc000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1303 = MMX_PADDDirm
  { 1304,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0x1fc000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1304 = MMX_PADDDirr
  { 1305,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1a8000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1305 = MMX_PADDQirm
  { 1306,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0x1a8000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1306 = MMX_PADDQirr
  { 1307,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1d8000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1307 = MMX_PADDSBirm
  { 1308,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0x1d8000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1308 = MMX_PADDSBirr
  { 1309,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1da000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1309 = MMX_PADDSWirm
  { 1310,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0x1da000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1310 = MMX_PADDSWirr
  { 1311,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1b8000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1311 = MMX_PADDUSBirm
  { 1312,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0x1b8000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1312 = MMX_PADDUSBirr
  { 1313,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1ba000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1313 = MMX_PADDUSWirm
  { 1314,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0x1ba000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1314 = MMX_PADDUSWirr
  { 1315,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1fa000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1315 = MMX_PADDWirm
  { 1316,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0x1fa000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1316 = MMX_PADDWirr
  { 1317,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1f804e06ULL, NULL, NULL, OperandInfo161 },  // Inst #1317 = MMX_PALIGNR64irm
  { 1318,	4,	1,	18,	0,	0, 0x1f804e05ULL, NULL, NULL, OperandInfo162 },  // Inst #1318 = MMX_PALIGNR64irr
  { 1319,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1be000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1319 = MMX_PANDNirm
  { 1320,	3,	1,	18,	0,	0, 0x1be000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1320 = MMX_PANDNirr
  { 1321,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1b6000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1321 = MMX_PANDirm
  { 1322,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0x1b6000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1322 = MMX_PANDirr
  { 1323,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1c0000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1323 = MMX_PAVGBirm
  { 1324,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0x1c0000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1324 = MMX_PAVGBirr
  { 1325,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1c6000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1325 = MMX_PAVGWirm
  { 1326,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0x1c6000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1326 = MMX_PAVGWirr
  { 1327,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xe8000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1327 = MMX_PCMPEQBirm
  { 1328,	3,	1,	18,	0,	0, 0xe8000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1328 = MMX_PCMPEQBirr
  { 1329,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xec000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1329 = MMX_PCMPEQDirm
  { 1330,	3,	1,	18,	0,	0, 0xec000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1330 = MMX_PCMPEQDirr
  { 1331,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xea000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1331 = MMX_PCMPEQWirm
  { 1332,	3,	1,	18,	0,	0, 0xea000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1332 = MMX_PCMPEQWirr
  { 1333,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xc8000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1333 = MMX_PCMPGTBirm
  { 1334,	3,	1,	18,	0,	0, 0xc8000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1334 = MMX_PCMPGTBirr
  { 1335,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xcc000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1335 = MMX_PCMPGTDirm
  { 1336,	3,	1,	18,	0,	0, 0xcc000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1336 = MMX_PCMPGTDirr
  { 1337,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xca000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1337 = MMX_PCMPGTWirm
  { 1338,	3,	1,	18,	0,	0, 0xca000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1338 = MMX_PCMPGTWirr
  { 1339,	3,	1,	18,	0,	0, 0x18a004105ULL, NULL, NULL, OperandInfo163 },  // Inst #1339 = MMX_PEXTRWirri
  { 1340,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x7800d06ULL, NULL, NULL, OperandInfo159 },  // Inst #1340 = MMX_PHADDSWrm64
  { 1341,	3,	1,	18,	0,	0, 0x7800d05ULL, NULL, NULL, OperandInfo160 },  // Inst #1341 = MMX_PHADDSWrr64
  { 1342,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x3800d06ULL, NULL, NULL, OperandInfo159 },  // Inst #1342 = MMX_PHADDWrm64
  { 1343,	3,	1,	18,	0,	0, 0x3800d05ULL, NULL, NULL, OperandInfo160 },  // Inst #1343 = MMX_PHADDWrr64
  { 1344,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x5800d06ULL, NULL, NULL, OperandInfo159 },  // Inst #1344 = MMX_PHADDrm64
  { 1345,	3,	1,	18,	0,	0, 0x5800d05ULL, NULL, NULL, OperandInfo160 },  // Inst #1345 = MMX_PHADDrr64
  { 1346,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xd800d06ULL, NULL, NULL, OperandInfo159 },  // Inst #1346 = MMX_PHSUBDrm64
  { 1347,	3,	1,	18,	0,	0, 0xd800d05ULL, NULL, NULL, OperandInfo160 },  // Inst #1347 = MMX_PHSUBDrr64
  { 1348,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xf800d06ULL, NULL, NULL, OperandInfo159 },  // Inst #1348 = MMX_PHSUBSWrm64
  { 1349,	3,	1,	18,	0,	0, 0xf800d05ULL, NULL, NULL, OperandInfo160 },  // Inst #1349 = MMX_PHSUBSWrr64
  { 1350,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xb800d06ULL, NULL, NULL, OperandInfo159 },  // Inst #1350 = MMX_PHSUBWrm64
  { 1351,	3,	1,	18,	0,	0, 0xb800d05ULL, NULL, NULL, OperandInfo160 },  // Inst #1351 = MMX_PHSUBWrr64
  { 1352,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x188004106ULL, NULL, NULL, OperandInfo161 },  // Inst #1352 = MMX_PINSRWirmi
  { 1353,	4,	1,	18,	0,	0, 0x188004105ULL, NULL, NULL, OperandInfo164 },  // Inst #1353 = MMX_PINSRWirri
  { 1354,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x9800d06ULL, NULL, NULL, OperandInfo159 },  // Inst #1354 = MMX_PMADDUBSWrm64
  { 1355,	3,	1,	18,	0,	0, 0x9800d05ULL, NULL, NULL, OperandInfo160 },  // Inst #1355 = MMX_PMADDUBSWrr64
  { 1356,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1ea000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1356 = MMX_PMADDWDirm
  { 1357,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0x1ea000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1357 = MMX_PMADDWDirr
  { 1358,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1dc000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1358 = MMX_PMAXSWirm
  { 1359,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0x1dc000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1359 = MMX_PMAXSWirr
  { 1360,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1bc000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1360 = MMX_PMAXUBirm
  { 1361,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0x1bc000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1361 = MMX_PMAXUBirr
  { 1362,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1d4000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1362 = MMX_PMINSWirm
  { 1363,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0x1d4000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1363 = MMX_PMINSWirr
  { 1364,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1b4000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1364 = MMX_PMINUBirm
  { 1365,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0x1b4000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1365 = MMX_PMINUBirr
  { 1366,	2,	1,	18,	0,	0, 0x1ae000105ULL, NULL, NULL, OperandInfo153 },  // Inst #1366 = MMX_PMOVMSKBrr
  { 1367,	7,	1,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::Commutable), 0x17800d06ULL, NULL, NULL, OperandInfo159 },  // Inst #1367 = MMX_PMULHRSWrm64
  { 1368,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0x17800d05ULL, NULL, NULL, OperandInfo160 },  // Inst #1368 = MMX_PMULHRSWrr64
  { 1369,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1c8000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1369 = MMX_PMULHUWirm
  { 1370,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0x1c8000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1370 = MMX_PMULHUWirr
  { 1371,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1ca000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1371 = MMX_PMULHWirm
  { 1372,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0x1ca000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1372 = MMX_PMULHWirr
  { 1373,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1aa000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1373 = MMX_PMULLWirm
  { 1374,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0x1aa000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1374 = MMX_PMULLWirr
  { 1375,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1e8000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1375 = MMX_PMULUDQirm
  { 1376,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0x1e8000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1376 = MMX_PMULUDQirr
  { 1377,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1d6000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1377 = MMX_PORirm
  { 1378,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0x1d6000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1378 = MMX_PORirr
  { 1379,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1ec000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1379 = MMX_PSADBWirm
  { 1380,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0x1ec000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1380 = MMX_PSADBWirr
  { 1381,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1800d06ULL, NULL, NULL, OperandInfo159 },  // Inst #1381 = MMX_PSHUFBrm64
  { 1382,	3,	1,	18,	0,	0, 0x1800d05ULL, NULL, NULL, OperandInfo160 },  // Inst #1382 = MMX_PSHUFBrr64
  { 1383,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xe0004106ULL, NULL, NULL, OperandInfo165 },  // Inst #1383 = MMX_PSHUFWmi
  { 1384,	3,	1,	18,	0,	0, 0xe0004105ULL, NULL, NULL, OperandInfo166 },  // Inst #1384 = MMX_PSHUFWri
  { 1385,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x11800d06ULL, NULL, NULL, OperandInfo159 },  // Inst #1385 = MMX_PSIGNBrm64
  { 1386,	3,	1,	18,	0,	0, 0x11800d05ULL, NULL, NULL, OperandInfo160 },  // Inst #1386 = MMX_PSIGNBrr64
  { 1387,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x15800d06ULL, NULL, NULL, OperandInfo159 },  // Inst #1387 = MMX_PSIGNDrm64
  { 1388,	3,	1,	18,	0,	0, 0x15800d05ULL, NULL, NULL, OperandInfo160 },  // Inst #1388 = MMX_PSIGNDrr64
  { 1389,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x13800d06ULL, NULL, NULL, OperandInfo159 },  // Inst #1389 = MMX_PSIGNWrm64
  { 1390,	3,	1,	18,	0,	0, 0x13800d05ULL, NULL, NULL, OperandInfo160 },  // Inst #1390 = MMX_PSIGNWrr64
  { 1391,	3,	1,	18,	0,	0, 0xe4004116ULL, NULL, NULL, OperandInfo167 },  // Inst #1391 = MMX_PSLLDri
  { 1392,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1e4000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1392 = MMX_PSLLDrm
  { 1393,	3,	1,	18,	0,	0, 0x1e4000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1393 = MMX_PSLLDrr
  { 1394,	3,	1,	18,	0,	0, 0xe6004116ULL, NULL, NULL, OperandInfo167 },  // Inst #1394 = MMX_PSLLQri
  { 1395,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1e6000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1395 = MMX_PSLLQrm
  { 1396,	3,	1,	18,	0,	0, 0x1e6000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1396 = MMX_PSLLQrr
  { 1397,	3,	1,	18,	0,	0, 0xe2004116ULL, NULL, NULL, OperandInfo167 },  // Inst #1397 = MMX_PSLLWri
  { 1398,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1e2000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1398 = MMX_PSLLWrm
  { 1399,	3,	1,	18,	0,	0, 0x1e2000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1399 = MMX_PSLLWrr
  { 1400,	3,	1,	18,	0,	0, 0xe4004114ULL, NULL, NULL, OperandInfo167 },  // Inst #1400 = MMX_PSRADri
  { 1401,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1c4000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1401 = MMX_PSRADrm
  { 1402,	3,	1,	18,	0,	0, 0x1c4000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1402 = MMX_PSRADrr
  { 1403,	3,	1,	18,	0,	0, 0xe2004114ULL, NULL, NULL, OperandInfo167 },  // Inst #1403 = MMX_PSRAWri
  { 1404,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1c2000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1404 = MMX_PSRAWrm
  { 1405,	3,	1,	18,	0,	0, 0x1c2000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1405 = MMX_PSRAWrr
  { 1406,	3,	1,	18,	0,	0, 0xe4004112ULL, NULL, NULL, OperandInfo167 },  // Inst #1406 = MMX_PSRLDri
  { 1407,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1a4000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1407 = MMX_PSRLDrm
  { 1408,	3,	1,	18,	0,	0, 0x1a4000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1408 = MMX_PSRLDrr
  { 1409,	3,	1,	18,	0,	0, 0xe6004112ULL, NULL, NULL, OperandInfo167 },  // Inst #1409 = MMX_PSRLQri
  { 1410,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1a6000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1410 = MMX_PSRLQrm
  { 1411,	3,	1,	18,	0,	0, 0x1a6000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1411 = MMX_PSRLQrr
  { 1412,	3,	1,	18,	0,	0, 0xe2004112ULL, NULL, NULL, OperandInfo167 },  // Inst #1412 = MMX_PSRLWri
  { 1413,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1a2000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1413 = MMX_PSRLWrm
  { 1414,	3,	1,	18,	0,	0, 0x1a2000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1414 = MMX_PSRLWrr
  { 1415,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1f0000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1415 = MMX_PSUBBirm
  { 1416,	3,	1,	18,	0,	0, 0x1f0000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1416 = MMX_PSUBBirr
  { 1417,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1f4000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1417 = MMX_PSUBDirm
  { 1418,	3,	1,	18,	0,	0, 0x1f4000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1418 = MMX_PSUBDirr
  { 1419,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1f6000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1419 = MMX_PSUBQirm
  { 1420,	3,	1,	18,	0,	0, 0x1f6000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1420 = MMX_PSUBQirr
  { 1421,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1d0000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1421 = MMX_PSUBSBirm
  { 1422,	3,	1,	18,	0,	0, 0x1d0000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1422 = MMX_PSUBSBirr
  { 1423,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1d2000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1423 = MMX_PSUBSWirm
  { 1424,	3,	1,	18,	0,	0, 0x1d2000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1424 = MMX_PSUBSWirr
  { 1425,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1b0000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1425 = MMX_PSUBUSBirm
  { 1426,	3,	1,	18,	0,	0, 0x1b0000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1426 = MMX_PSUBUSBirr
  { 1427,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1b2000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1427 = MMX_PSUBUSWirm
  { 1428,	3,	1,	18,	0,	0, 0x1b2000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1428 = MMX_PSUBUSWirr
  { 1429,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1f2000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1429 = MMX_PSUBWirm
  { 1430,	3,	1,	18,	0,	0, 0x1f2000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1430 = MMX_PSUBWirr
  { 1431,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xd0000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1431 = MMX_PUNPCKHBWirm
  { 1432,	3,	1,	18,	0,	0, 0xd0000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1432 = MMX_PUNPCKHBWirr
  { 1433,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xd4000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1433 = MMX_PUNPCKHDQirm
  { 1434,	3,	1,	18,	0,	0, 0xd4000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1434 = MMX_PUNPCKHDQirr
  { 1435,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xd2000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1435 = MMX_PUNPCKHWDirm
  { 1436,	3,	1,	18,	0,	0, 0xd2000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1436 = MMX_PUNPCKHWDirr
  { 1437,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xc0000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1437 = MMX_PUNPCKLBWirm
  { 1438,	3,	1,	18,	0,	0, 0xc0000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1438 = MMX_PUNPCKLBWirr
  { 1439,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xc4000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1439 = MMX_PUNPCKLDQirm
  { 1440,	3,	1,	18,	0,	0, 0xc4000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1440 = MMX_PUNPCKLDQirr
  { 1441,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xc2000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1441 = MMX_PUNPCKLWDirm
  { 1442,	3,	1,	18,	0,	0, 0xc2000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1442 = MMX_PUNPCKLWDirr
  { 1443,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1de000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1443 = MMX_PXORirm
  { 1444,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0x1de000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1444 = MMX_PXORirr
  { 1445,	7,	0,	204,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo168 },  // Inst #1445 = MONITOR
  { 1446,	0,	0,	143,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000125ULL, ImplicitList36, NULL, 0 },  // Inst #1446 = MONITORrrr
  { 1447,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x180000f01ULL, ImplicitList37, ImplicitList38, 0 },  // Inst #1447 = MONTMUL
  { 1448,	0,	0,	18,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #1448 = MORESTACK_RET
  { 1449,	0,	0,	18,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #1449 = MORESTACK_RET_RESTORE_R10
  { 1450,	1,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x146014041ULL, NULL, NULL, OperandInfo75 },  // Inst #1450 = MOV16ao16
  { 1451,	6,	0,	18,	0,	0|(1<<MCID::MayStore), 0x18e00c058ULL, NULL, NULL, OperandInfo15 },  // Inst #1451 = MOV16mi
  { 1452,	6,	0,	18,	0,	0|(1<<MCID::MayStore), 0x112000044ULL, NULL, NULL, OperandInfo16 },  // Inst #1452 = MOV16mr
  { 1453,	6,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x118000044ULL, NULL, NULL, OperandInfo169 },  // Inst #1453 = MOV16ms
  { 1454,	1,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x142014041ULL, NULL, NULL, OperandInfo75 },  // Inst #1454 = MOV16o16a
  { 1455,	1,	1,	1,	0,	0|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x62000060ULL, NULL, ImplicitList1, OperandInfo115 },  // Inst #1455 = MOV16r0
  { 1456,	2,	1,	18,	0,	0|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x17000c042ULL, NULL, NULL, OperandInfo71 },  // Inst #1456 = MOV16ri
  { 1457,	6,	1,	18,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x116000046ULL, NULL, NULL, OperandInfo11 },  // Inst #1457 = MOV16rm
  { 1458,	2,	1,	18,	0,	0, 0x112000043ULL, NULL, NULL, OperandInfo55 },  // Inst #1458 = MOV16rr
  { 1459,	2,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x116000045ULL, NULL, NULL, OperandInfo55 },  // Inst #1459 = MOV16rr_REV
  { 1460,	2,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x118000043ULL, NULL, NULL, OperandInfo170 },  // Inst #1460 = MOV16rs
  { 1461,	6,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x11c000046ULL, NULL, NULL, OperandInfo171 },  // Inst #1461 = MOV16sm
  { 1462,	2,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x11c000045ULL, NULL, NULL, OperandInfo172 },  // Inst #1462 = MOV16sr
  { 1463,	1,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x146014001ULL, NULL, NULL, OperandInfo75 },  // Inst #1463 = MOV32ao32
  { 1464,	2,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x44000105ULL, NULL, NULL, OperandInfo173 },  // Inst #1464 = MOV32cr
  { 1465,	2,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x46000105ULL, NULL, NULL, OperandInfo174 },  // Inst #1465 = MOV32dr
  { 1466,	6,	0,	18,	0,	0|(1<<MCID::MayStore), 0x18e014018ULL, NULL, NULL, OperandInfo15 },  // Inst #1466 = MOV32mi
  { 1467,	6,	0,	18,	0,	0|(1<<MCID::MayStore), 0x112000004ULL, NULL, NULL, OperandInfo20 },  // Inst #1467 = MOV32mr
  { 1468,	6,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x118000004ULL, NULL, NULL, OperandInfo169 },  // Inst #1468 = MOV32ms
  { 1469,	1,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x142014001ULL, NULL, NULL, OperandInfo75 },  // Inst #1469 = MOV32o32a
  { 1470,	1,	1,	1,	0,	0|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x62000020ULL, NULL, ImplicitList1, OperandInfo74 },  // Inst #1470 = MOV32r0
  { 1471,	2,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x40000103ULL, NULL, NULL, OperandInfo175 },  // Inst #1471 = MOV32rc
  { 1472,	2,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x42000103ULL, NULL, NULL, OperandInfo176 },  // Inst #1472 = MOV32rd
  { 1473,	2,	1,	18,	0,	0|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x170014002ULL, NULL, NULL, OperandInfo72 },  // Inst #1473 = MOV32ri
  { 1474,	6,	1,	18,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x116000006ULL, NULL, NULL, OperandInfo12 },  // Inst #1474 = MOV32rm
  { 1475,	2,	1,	18,	0,	0, 0x112000003ULL, NULL, NULL, OperandInfo67 },  // Inst #1475 = MOV32rr
  { 1476,	2,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x116000005ULL, NULL, NULL, OperandInfo67 },  // Inst #1476 = MOV32rr_REV
  { 1477,	2,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x118000003ULL, NULL, NULL, OperandInfo177 },  // Inst #1477 = MOV32rs
  { 1478,	6,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x11c000006ULL, NULL, NULL, OperandInfo171 },  // Inst #1478 = MOV32sm
  { 1479,	2,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x11c000005ULL, NULL, NULL, OperandInfo178 },  // Inst #1479 = MOV32sr
  { 1480,	2,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x44000105ULL, NULL, NULL, OperandInfo179 },  // Inst #1480 = MOV64cr
  { 1481,	2,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x46000105ULL, NULL, NULL, OperandInfo180 },  // Inst #1481 = MOV64dr
  { 1482,	6,	0,	18,	0,	0|(1<<MCID::MayStore), 0x18e016018ULL, NULL, NULL, OperandInfo15 },  // Inst #1482 = MOV64mi32
  { 1483,	6,	0,	18,	0,	0|(1<<MCID::MayStore), 0x112002004ULL, NULL, NULL, OperandInfo24 },  // Inst #1483 = MOV64mr
  { 1484,	6,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x118002004ULL, NULL, NULL, OperandInfo169 },  // Inst #1484 = MOV64ms
  { 1485,	1,	1,	1,	0,	0|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x62000020ULL, NULL, ImplicitList1, OperandInfo76 },  // Inst #1485 = MOV64r0
  { 1486,	2,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x40000103ULL, NULL, NULL, OperandInfo181 },  // Inst #1486 = MOV64rc
  { 1487,	2,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x42000103ULL, NULL, NULL, OperandInfo182 },  // Inst #1487 = MOV64rd
  { 1488,	2,	1,	18,	0,	0|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x17001e002ULL, NULL, NULL, OperandInfo73 },  // Inst #1488 = MOV64ri
  { 1489,	2,	1,	18,	0,	0|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x18e016010ULL, NULL, NULL, OperandInfo73 },  // Inst #1489 = MOV64ri32
  { 1490,	2,	1,	1,	0,	0|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x170014002ULL, NULL, NULL, OperandInfo73 },  // Inst #1490 = MOV64ri64i32
  { 1491,	6,	1,	18,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x116002006ULL, NULL, NULL, OperandInfo13 },  // Inst #1491 = MOV64rm
  { 1492,	2,	1,	18,	0,	0, 0x112002003ULL, NULL, NULL, OperandInfo68 },  // Inst #1492 = MOV64rr
  { 1493,	2,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x116002005ULL, NULL, NULL, OperandInfo68 },  // Inst #1493 = MOV64rr_REV
  { 1494,	2,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x118002003ULL, NULL, NULL, OperandInfo183 },  // Inst #1494 = MOV64rs
  { 1495,	6,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x11c002006ULL, NULL, NULL, OperandInfo171 },  // Inst #1495 = MOV64sm
  { 1496,	2,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x11c002005ULL, NULL, NULL, OperandInfo184 },  // Inst #1496 = MOV64sr
  { 1497,	2,	1,	147,	0,	0, 0xdd002145ULL, NULL, NULL, OperandInfo185 },  // Inst #1497 = MOV64toPQIrr
  { 1498,	6,	1,	147,	0,	0|(1<<MCID::MayLoad), 0xfc800c06ULL, NULL, NULL, OperandInfo103 },  // Inst #1498 = MOV64toSDrm
  { 1499,	2,	1,	147,	0,	0|(1<<MCID::Bitcast), 0xdd002145ULL, NULL, NULL, OperandInfo104 },  // Inst #1499 = MOV64toSDrr
  { 1500,	1,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x144014001ULL, NULL, NULL, OperandInfo75 },  // Inst #1500 = MOV8ao8
  { 1501,	6,	0,	18,	0,	0|(1<<MCID::MayStore), 0x18c004018ULL, NULL, NULL, OperandInfo15 },  // Inst #1501 = MOV8mi
  { 1502,	6,	0,	18,	0,	0|(1<<MCID::MayStore), 0x110000004ULL, NULL, NULL, OperandInfo28 },  // Inst #1502 = MOV8mr
  { 1503,	6,	0,	18,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x110000004ULL, NULL, NULL, OperandInfo186 },  // Inst #1503 = MOV8mr_NOREX
  { 1504,	1,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x140014001ULL, NULL, NULL, OperandInfo75 },  // Inst #1504 = MOV8o8a
  { 1505,	1,	1,	1,	0,	0|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x60000020ULL, NULL, ImplicitList1, OperandInfo116 },  // Inst #1505 = MOV8r0
  { 1506,	2,	1,	18,	0,	0|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x160004002ULL, NULL, NULL, OperandInfo90 },  // Inst #1506 = MOV8ri
  { 1507,	6,	1,	18,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x114000006ULL, NULL, NULL, OperandInfo14 },  // Inst #1507 = MOV8rm
  { 1508,	6,	1,	18,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x114000006ULL, NULL, NULL, OperandInfo187 },  // Inst #1508 = MOV8rm_NOREX
  { 1509,	2,	1,	18,	0,	0, 0x110000003ULL, NULL, NULL, OperandInfo91 },  // Inst #1509 = MOV8rr
  { 1510,	2,	1,	18,	0,	0, 0x110000003ULL, NULL, NULL, OperandInfo188 },  // Inst #1510 = MOV8rr_NOREX
  { 1511,	2,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x114000005ULL, NULL, NULL, OperandInfo91 },  // Inst #1511 = MOV8rr_REV
  { 1512,	6,	0,	144,	0,	0|(1<<MCID::MayStore), 0x53000144ULL, NULL, NULL, OperandInfo189 },  // Inst #1512 = MOVAPDmr
  { 1513,	6,	1,	145,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x51000146ULL, NULL, NULL, OperandInfo47 },  // Inst #1513 = MOVAPDrm
  { 1514,	2,	1,	146,	0,	0, 0x51000145ULL, NULL, NULL, OperandInfo48 },  // Inst #1514 = MOVAPDrr
  { 1515,	2,	1,	146,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x53000143ULL, NULL, NULL, OperandInfo48 },  // Inst #1515 = MOVAPDrr_REV
  { 1516,	6,	0,	144,	0,	0|(1<<MCID::MayStore), 0x52800104ULL, NULL, NULL, OperandInfo189 },  // Inst #1516 = MOVAPSmr
  { 1517,	6,	1,	145,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x50800106ULL, NULL, NULL, OperandInfo47 },  // Inst #1517 = MOVAPSrm
  { 1518,	2,	1,	146,	0,	0, 0x50800105ULL, NULL, NULL, OperandInfo48 },  // Inst #1518 = MOVAPSrr
  { 1519,	2,	1,	146,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x52800103ULL, NULL, NULL, OperandInfo48 },  // Inst #1519 = MOVAPSrr_REV
  { 1520,	6,	0,	18,	0,	0|(1<<MCID::MayStore), 0x1e2000d44ULL, NULL, NULL, OperandInfo16 },  // Inst #1520 = MOVBE16mr
  { 1521,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1e0000d46ULL, NULL, NULL, OperandInfo11 },  // Inst #1521 = MOVBE16rm
  { 1522,	6,	0,	18,	0,	0|(1<<MCID::MayStore), 0x1e2000d04ULL, NULL, NULL, OperandInfo20 },  // Inst #1522 = MOVBE32mr
  { 1523,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1e0000d06ULL, NULL, NULL, OperandInfo12 },  // Inst #1523 = MOVBE32rm
  { 1524,	6,	0,	18,	0,	0|(1<<MCID::MayStore), 0x1e2002d04ULL, NULL, NULL, OperandInfo24 },  // Inst #1524 = MOVBE64mr
  { 1525,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1e0002d06ULL, NULL, NULL, OperandInfo13 },  // Inst #1525 = MOVBE64rm
  { 1526,	6,	1,	155,	0,	0|(1<<MCID::MayLoad), 0x25000b06ULL, NULL, NULL, OperandInfo47 },  // Inst #1526 = MOVDDUPrm
  { 1527,	2,	1,	155,	0,	0, 0x25000b05ULL, NULL, NULL, OperandInfo48 },  // Inst #1527 = MOVDDUPrr
  { 1528,	6,	1,	147,	0,	0|(1<<MCID::MayLoad), 0xdd000146ULL, NULL, NULL, OperandInfo47 },  // Inst #1528 = MOVDI2PDIrm
  { 1529,	2,	1,	147,	0,	0, 0xdd000145ULL, NULL, NULL, OperandInfo190 },  // Inst #1529 = MOVDI2PDIrr
  { 1530,	6,	1,	147,	0,	0|(1<<MCID::MayLoad), 0xdd000146ULL, NULL, NULL, OperandInfo101 },  // Inst #1530 = MOVDI2SSrm
  { 1531,	2,	1,	147,	0,	0|(1<<MCID::Bitcast), 0xdd000145ULL, NULL, NULL, OperandInfo107 },  // Inst #1531 = MOVDI2SSrr
  { 1532,	6,	0,	144,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0xff800144ULL, NULL, NULL, OperandInfo189 },  // Inst #1532 = MOVDQAmr
  { 1533,	6,	1,	145,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0xdf800146ULL, NULL, NULL, OperandInfo47 },  // Inst #1533 = MOVDQArm
  { 1534,	2,	1,	146,	0,	0, 0xdf800145ULL, NULL, NULL, OperandInfo48 },  // Inst #1534 = MOVDQArr
  { 1535,	2,	1,	146,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xff800143ULL, NULL, NULL, OperandInfo48 },  // Inst #1535 = MOVDQArr_REV
  { 1536,	6,	0,	152,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0xff800c04ULL, NULL, NULL, OperandInfo189 },  // Inst #1536 = MOVDQUmr
  { 1537,	6,	0,	152,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0xff800c04ULL, NULL, NULL, OperandInfo189 },  // Inst #1537 = MOVDQUmr_Int
  { 1538,	6,	1,	153,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0xdf800c06ULL, NULL, NULL, OperandInfo47 },  // Inst #1538 = MOVDQUrm
  { 1539,	2,	1,	154,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xdf800c05ULL, NULL, NULL, OperandInfo48 },  // Inst #1539 = MOVDQUrr
  { 1540,	2,	1,	154,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xff800c03ULL, NULL, NULL, OperandInfo48 },  // Inst #1540 = MOVDQUrr_REV
  { 1541,	3,	1,	155,	0,	0, 0x24800105ULL, NULL, NULL, OperandInfo33 },  // Inst #1541 = MOVHLPSrr
  { 1542,	6,	0,	155,	0,	0|(1<<MCID::MayStore), 0x2f000144ULL, NULL, NULL, OperandInfo189 },  // Inst #1542 = MOVHPDmr
  { 1543,	7,	1,	155,	0,	0|(1<<MCID::MayLoad), 0x2d000146ULL, NULL, NULL, OperandInfo32 },  // Inst #1543 = MOVHPDrm
  { 1544,	6,	0,	155,	0,	0|(1<<MCID::MayStore), 0x2e800104ULL, NULL, NULL, OperandInfo189 },  // Inst #1544 = MOVHPSmr
  { 1545,	7,	1,	155,	0,	0|(1<<MCID::MayLoad), 0x2c800106ULL, NULL, NULL, OperandInfo32 },  // Inst #1545 = MOVHPSrm
  { 1546,	3,	1,	155,	0,	0, 0x2c800105ULL, NULL, NULL, OperandInfo33 },  // Inst #1546 = MOVLHPSrr
  { 1547,	6,	0,	155,	0,	0|(1<<MCID::MayStore), 0x27000144ULL, NULL, NULL, OperandInfo189 },  // Inst #1547 = MOVLPDmr
  { 1548,	7,	1,	155,	0,	0|(1<<MCID::MayLoad), 0x25000146ULL, NULL, NULL, OperandInfo32 },  // Inst #1548 = MOVLPDrm
  { 1549,	6,	0,	155,	0,	0|(1<<MCID::MayStore), 0x26800104ULL, NULL, NULL, OperandInfo189 },  // Inst #1549 = MOVLPSmr
  { 1550,	7,	1,	155,	0,	0|(1<<MCID::MayLoad), 0x24800106ULL, NULL, NULL, OperandInfo32 },  // Inst #1550 = MOVLPSrm
  { 1551,	6,	0,	147,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1ad000144ULL, NULL, NULL, OperandInfo189 },  // Inst #1551 = MOVLQ128mr
  { 1552,	2,	1,	149,	0,	0, 0xa1000145ULL, NULL, NULL, OperandInfo100 },  // Inst #1552 = MOVMSKPDrr32
  { 1553,	2,	1,	149,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xa1002145ULL, NULL, NULL, OperandInfo99 },  // Inst #1553 = MOVMSKPDrr64
  { 1554,	2,	1,	149,	0,	0, 0xa0800105ULL, NULL, NULL, OperandInfo100 },  // Inst #1554 = MOVMSKPSrr32
  { 1555,	2,	1,	149,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xa0802105ULL, NULL, NULL, OperandInfo99 },  // Inst #1555 = MOVMSKPSrr64
  { 1556,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x55800d46ULL, NULL, NULL, OperandInfo47 },  // Inst #1556 = MOVNTDQArm
  { 1557,	6,	0,	150,	0,	0|(1<<MCID::MayStore), 0x1cf800144ULL, NULL, NULL, OperandInfo189 },  // Inst #1557 = MOVNTDQmr
  { 1558,	6,	0,	150,	0,	0|(1<<MCID::MayStore), 0x186002104ULL, NULL, NULL, OperandInfo24 },  // Inst #1558 = MOVNTI_64mr
  { 1559,	6,	0,	150,	0,	0|(1<<MCID::MayStore), 0x186000104ULL, NULL, NULL, OperandInfo20 },  // Inst #1559 = MOVNTImr
  { 1560,	6,	0,	150,	0,	0|(1<<MCID::MayStore), 0x57000144ULL, NULL, NULL, OperandInfo189 },  // Inst #1560 = MOVNTPDmr
  { 1561,	6,	0,	150,	0,	0|(1<<MCID::MayStore), 0x56800104ULL, NULL, NULL, OperandInfo189 },  // Inst #1561 = MOVNTPSmr
  { 1562,	2,	1,	18,	0,	0|(1<<MCID::NotDuplicable), 0x1d0014000ULL, ImplicitList6, NULL, OperandInfo72 },  // Inst #1562 = MOVPC32r
  { 1563,	6,	0,	147,	0,	0|(1<<MCID::MayStore), 0xfd000144ULL, NULL, NULL, OperandInfo189 },  // Inst #1563 = MOVPDI2DImr
  { 1564,	2,	1,	148,	0,	0, 0xfd000143ULL, NULL, NULL, OperandInfo100 },  // Inst #1564 = MOVPDI2DIrr
  { 1565,	6,	0,	147,	0,	0|(1<<MCID::MayStore), 0x1ad000144ULL, NULL, NULL, OperandInfo189 },  // Inst #1565 = MOVPQI2QImr
  { 1566,	2,	1,	148,	0,	0, 0xfd002143ULL, NULL, NULL, OperandInfo99 },  // Inst #1566 = MOVPQIto64rr
  { 1567,	6,	1,	147,	0,	0|(1<<MCID::MayLoad), 0xfc000c06ULL, NULL, NULL, OperandInfo47 },  // Inst #1567 = MOVQI2PQIrm
  { 1568,	2,	1,	151,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xfc000c05ULL, NULL, NULL, OperandInfo48 },  // Inst #1568 = MOVQxrxr
  { 1569,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x148000001ULL, ImplicitList39, ImplicitList40, 0 },  // Inst #1569 = MOVSB
  { 1570,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x14a000001ULL, ImplicitList39, ImplicitList40, 0 },  // Inst #1570 = MOVSD
  { 1571,	6,	0,	156,	0,	0|(1<<MCID::MayStore), 0x22000b04ULL, NULL, NULL, OperandInfo191 },  // Inst #1571 = MOVSDmr
  { 1572,	6,	1,	157,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x20000b06ULL, NULL, NULL, OperandInfo103 },  // Inst #1572 = MOVSDrm
  { 1573,	3,	1,	158,	0,	0, 0x20000b05ULL, NULL, NULL, OperandInfo192 },  // Inst #1573 = MOVSDrr
  { 1574,	3,	1,	158,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x22000b03ULL, NULL, NULL, OperandInfo192 },  // Inst #1574 = MOVSDrr_REV
  { 1575,	6,	0,	147,	0,	0|(1<<MCID::MayStore), 0xfd002144ULL, NULL, NULL, OperandInfo191 },  // Inst #1575 = MOVSDto64mr
  { 1576,	2,	1,	148,	0,	0|(1<<MCID::Bitcast), 0xfd002143ULL, NULL, NULL, OperandInfo111 },  // Inst #1576 = MOVSDto64rr
  { 1577,	6,	1,	155,	0,	0|(1<<MCID::MayLoad), 0x2c800c06ULL, NULL, NULL, OperandInfo47 },  // Inst #1577 = MOVSHDUPrm
  { 1578,	2,	1,	155,	0,	0, 0x2c800c05ULL, NULL, NULL, OperandInfo48 },  // Inst #1578 = MOVSHDUPrr
  { 1579,	6,	1,	155,	0,	0|(1<<MCID::MayLoad), 0x24800c06ULL, NULL, NULL, OperandInfo47 },  // Inst #1579 = MOVSLDUPrm
  { 1580,	2,	1,	155,	0,	0, 0x24800c05ULL, NULL, NULL, OperandInfo48 },  // Inst #1580 = MOVSLDUPrr
  { 1581,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x14a002001ULL, ImplicitList39, ImplicitList40, 0 },  // Inst #1581 = MOVSQ
  { 1582,	6,	0,	147,	0,	0|(1<<MCID::MayStore), 0xfd000144ULL, NULL, NULL, OperandInfo193 },  // Inst #1582 = MOVSS2DImr
  { 1583,	2,	1,	148,	0,	0|(1<<MCID::Bitcast), 0xfd000143ULL, NULL, NULL, OperandInfo110 },  // Inst #1583 = MOVSS2DIrr
  { 1584,	6,	0,	156,	0,	0|(1<<MCID::MayStore), 0x22000c04ULL, NULL, NULL, OperandInfo193 },  // Inst #1584 = MOVSSmr
  { 1585,	6,	1,	157,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x20000c06ULL, NULL, NULL, OperandInfo101 },  // Inst #1585 = MOVSSrm
  { 1586,	3,	1,	158,	0,	0, 0x20000c05ULL, NULL, NULL, OperandInfo194 },  // Inst #1586 = MOVSSrr
  { 1587,	3,	1,	158,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x22000c03ULL, NULL, NULL, OperandInfo194 },  // Inst #1587 = MOVSSrr_REV
  { 1588,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x14a000041ULL, ImplicitList39, ImplicitList40, 0 },  // Inst #1588 = MOVSW
  { 1589,	6,	1,	59,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x17c000146ULL, NULL, NULL, OperandInfo11 },  // Inst #1589 = MOVSX16rm8
  { 1590,	2,	1,	60,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x17c000145ULL, NULL, NULL, OperandInfo195 },  // Inst #1590 = MOVSX16rr8
  { 1591,	6,	1,	58,	0,	0|(1<<MCID::MayLoad), 0x17e000106ULL, NULL, NULL, OperandInfo12 },  // Inst #1591 = MOVSX32rm16
  { 1592,	6,	1,	58,	0,	0|(1<<MCID::MayLoad), 0x17c000106ULL, NULL, NULL, OperandInfo12 },  // Inst #1592 = MOVSX32rm8
  { 1593,	2,	1,	58,	0,	0, 0x17e000105ULL, NULL, NULL, OperandInfo196 },  // Inst #1593 = MOVSX32rr16
  { 1594,	2,	1,	58,	0,	0, 0x17c000105ULL, NULL, NULL, OperandInfo197 },  // Inst #1594 = MOVSX32rr8
  { 1595,	6,	1,	58,	0,	0|(1<<MCID::MayLoad), 0x17e002106ULL, NULL, NULL, OperandInfo13 },  // Inst #1595 = MOVSX64rm16
  { 1596,	6,	1,	58,	0,	0|(1<<MCID::MayLoad), 0xc6002006ULL, NULL, NULL, OperandInfo13 },  // Inst #1596 = MOVSX64rm32
  { 1597,	6,	1,	58,	0,	0|(1<<MCID::MayLoad), 0x17c002106ULL, NULL, NULL, OperandInfo13 },  // Inst #1597 = MOVSX64rm8
  { 1598,	2,	1,	58,	0,	0, 0x17e002105ULL, NULL, NULL, OperandInfo198 },  // Inst #1598 = MOVSX64rr16
  { 1599,	2,	1,	58,	0,	0, 0xc6002005ULL, NULL, NULL, OperandInfo143 },  // Inst #1599 = MOVSX64rr32
  { 1600,	2,	1,	58,	0,	0, 0x17c002105ULL, NULL, NULL, OperandInfo199 },  // Inst #1600 = MOVSX64rr8
  { 1601,	6,	0,	152,	0,	0|(1<<MCID::MayStore), 0x23000144ULL, NULL, NULL, OperandInfo189 },  // Inst #1601 = MOVUPDmr
  { 1602,	6,	1,	153,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x21000146ULL, NULL, NULL, OperandInfo47 },  // Inst #1602 = MOVUPDrm
  { 1603,	2,	1,	154,	0,	0, 0x21000145ULL, NULL, NULL, OperandInfo48 },  // Inst #1603 = MOVUPDrr
  { 1604,	2,	1,	154,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x23000143ULL, NULL, NULL, OperandInfo48 },  // Inst #1604 = MOVUPDrr_REV
  { 1605,	6,	0,	152,	0,	0|(1<<MCID::MayStore), 0x22800104ULL, NULL, NULL, OperandInfo189 },  // Inst #1605 = MOVUPSmr
  { 1606,	6,	1,	153,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x20800106ULL, NULL, NULL, OperandInfo47 },  // Inst #1606 = MOVUPSrm
  { 1607,	2,	1,	154,	0,	0, 0x20800105ULL, NULL, NULL, OperandInfo48 },  // Inst #1607 = MOVUPSrr
  { 1608,	2,	1,	154,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x22800103ULL, NULL, NULL, OperandInfo48 },  // Inst #1608 = MOVUPSrr_REV
  { 1609,	6,	1,	147,	0,	0|(1<<MCID::MayLoad), 0xdd000146ULL, NULL, NULL, OperandInfo47 },  // Inst #1609 = MOVZDI2PDIrm
  { 1610,	2,	1,	147,	0,	0, 0xdd000145ULL, NULL, NULL, OperandInfo190 },  // Inst #1610 = MOVZDI2PDIrr
  { 1611,	6,	1,	147,	0,	0|(1<<MCID::MayLoad), 0xfc000c06ULL, NULL, NULL, OperandInfo47 },  // Inst #1611 = MOVZPQILo2PQIrm
  { 1612,	2,	1,	151,	0,	0, 0xfc000c05ULL, NULL, NULL, OperandInfo48 },  // Inst #1612 = MOVZPQILo2PQIrr
  { 1613,	6,	1,	147,	0,	0|(1<<MCID::MayLoad), 0xfc000c06ULL, NULL, NULL, OperandInfo47 },  // Inst #1613 = MOVZQI2PQIrm
  { 1614,	2,	1,	147,	0,	0, 0xdd002145ULL, NULL, NULL, OperandInfo185 },  // Inst #1614 = MOVZQI2PQIrr
  { 1615,	6,	1,	64,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x16c000146ULL, NULL, NULL, OperandInfo11 },  // Inst #1615 = MOVZX16rm8
  { 1616,	2,	1,	65,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x16c000145ULL, NULL, NULL, OperandInfo195 },  // Inst #1616 = MOVZX16rr8
  { 1617,	6,	1,	63,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x16c000106ULL, NULL, NULL, OperandInfo200 },  // Inst #1617 = MOVZX32_NOREXrm8
  { 1618,	2,	1,	63,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x16c000105ULL, NULL, NULL, OperandInfo201 },  // Inst #1618 = MOVZX32_NOREXrr8
  { 1619,	6,	1,	63,	0,	0|(1<<MCID::MayLoad), 0x16e000106ULL, NULL, NULL, OperandInfo12 },  // Inst #1619 = MOVZX32rm16
  { 1620,	6,	1,	63,	0,	0|(1<<MCID::MayLoad), 0x16c000106ULL, NULL, NULL, OperandInfo12 },  // Inst #1620 = MOVZX32rm8
  { 1621,	2,	1,	63,	0,	0, 0x16e000105ULL, NULL, NULL, OperandInfo196 },  // Inst #1621 = MOVZX32rr16
  { 1622,	2,	1,	63,	0,	0, 0x16c000105ULL, NULL, NULL, OperandInfo197 },  // Inst #1622 = MOVZX32rr8
  { 1623,	6,	1,	63,	0,	0|(1<<MCID::MayLoad), 0x16e000106ULL, NULL, NULL, OperandInfo13 },  // Inst #1623 = MOVZX64rm16
  { 1624,	6,	1,	63,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x16e002106ULL, NULL, NULL, OperandInfo13 },  // Inst #1624 = MOVZX64rm16_Q
  { 1625,	6,	1,	63,	0,	0|(1<<MCID::MayLoad), 0x116000006ULL, NULL, NULL, OperandInfo13 },  // Inst #1625 = MOVZX64rm32
  { 1626,	6,	1,	63,	0,	0|(1<<MCID::MayLoad), 0x16c000106ULL, NULL, NULL, OperandInfo13 },  // Inst #1626 = MOVZX64rm8
  { 1627,	6,	1,	63,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x16c002106ULL, NULL, NULL, OperandInfo13 },  // Inst #1627 = MOVZX64rm8_Q
  { 1628,	2,	1,	63,	0,	0, 0x16e000105ULL, NULL, NULL, OperandInfo198 },  // Inst #1628 = MOVZX64rr16
  { 1629,	2,	1,	63,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x16e002105ULL, NULL, NULL, OperandInfo198 },  // Inst #1629 = MOVZX64rr16_Q
  { 1630,	2,	1,	63,	0,	0, 0x112000003ULL, NULL, NULL, OperandInfo143 },  // Inst #1630 = MOVZX64rr32
  { 1631,	2,	1,	63,	0,	0, 0x16c000105ULL, NULL, NULL, OperandInfo199 },  // Inst #1631 = MOVZX64rr8
  { 1632,	2,	1,	63,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x16c002105ULL, NULL, NULL, OperandInfo199 },  // Inst #1632 = MOVZX64rr8_Q
  { 1633,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x85804e46ULL, NULL, NULL, OperandInfo65 },  // Inst #1633 = MPSADBWrmi
  { 1634,	4,	1,	18,	0,	0, 0x85804e45ULL, NULL, NULL, OperandInfo66 },  // Inst #1634 = MPSADBWrri
  { 1635,	5,	0,	67,	0,	0|(1<<MCID::MayLoad), 0x1ee00005cULL, ImplicitList2, ImplicitList19, OperandInfo38 },  // Inst #1635 = MUL16m
  { 1636,	1,	0,	68,	0,	0, 0x1ee000054ULL, ImplicitList2, ImplicitList19, OperandInfo115 },  // Inst #1636 = MUL16r
  { 1637,	5,	0,	69,	0,	0|(1<<MCID::MayLoad), 0x1ee00001cULL, ImplicitList3, ImplicitList16, OperandInfo38 },  // Inst #1637 = MUL32m
  { 1638,	1,	0,	70,	0,	0, 0x1ee000014ULL, ImplicitList3, ImplicitList16, OperandInfo74 },  // Inst #1638 = MUL32r
  { 1639,	5,	0,	71,	0,	0|(1<<MCID::MayLoad), 0x1ee00201cULL, ImplicitList4, ImplicitList15, OperandInfo38 },  // Inst #1639 = MUL64m
  { 1640,	1,	0,	71,	0,	0, 0x1ee002014ULL, ImplicitList4, ImplicitList15, OperandInfo76 },  // Inst #1640 = MUL64r
  { 1641,	5,	0,	66,	0,	0|(1<<MCID::MayLoad), 0x1ec00001cULL, ImplicitList5, ImplicitList20, OperandInfo38 },  // Inst #1641 = MUL8m
  { 1642,	1,	0,	66,	0,	0, 0x1ec000014ULL, ImplicitList5, ImplicitList20, OperandInfo116 },  // Inst #1642 = MUL8r
  { 1643,	7,	1,	163,	0,	0|(1<<MCID::MayLoad), 0xb3000146ULL, NULL, NULL, OperandInfo32 },  // Inst #1643 = MULPDrm
  { 1644,	3,	1,	164,	0,	0|(1<<MCID::Commutable), 0xb3000145ULL, NULL, NULL, OperandInfo33 },  // Inst #1644 = MULPDrr
  { 1645,	7,	1,	163,	0,	0|(1<<MCID::MayLoad), 0xb2800106ULL, NULL, NULL, OperandInfo32 },  // Inst #1645 = MULPSrm
  { 1646,	3,	1,	160,	0,	0|(1<<MCID::Commutable), 0xb2800105ULL, NULL, NULL, OperandInfo33 },  // Inst #1646 = MULPSrr
  { 1647,	7,	1,	165,	0,	0|(1<<MCID::MayLoad), 0xb2000b06ULL, NULL, NULL, OperandInfo34 },  // Inst #1647 = MULSDrm
  { 1648,	7,	1,	165,	0,	0|(1<<MCID::MayLoad), 0xb2000b06ULL, NULL, NULL, OperandInfo32 },  // Inst #1648 = MULSDrm_Int
  { 1649,	3,	1,	166,	0,	0|(1<<MCID::Commutable), 0xb2000b05ULL, NULL, NULL, OperandInfo35 },  // Inst #1649 = MULSDrr
  { 1650,	3,	1,	166,	0,	0, 0xb2000b05ULL, NULL, NULL, OperandInfo33 },  // Inst #1650 = MULSDrr_Int
  { 1651,	7,	1,	165,	0,	0|(1<<MCID::MayLoad), 0xb2000c06ULL, NULL, NULL, OperandInfo36 },  // Inst #1651 = MULSSrm
  { 1652,	7,	1,	165,	0,	0|(1<<MCID::MayLoad), 0xb2000c06ULL, NULL, NULL, OperandInfo32 },  // Inst #1652 = MULSSrm_Int
  { 1653,	3,	1,	162,	0,	0|(1<<MCID::Commutable), 0xb2000c05ULL, NULL, NULL, OperandInfo37 },  // Inst #1653 = MULSSrr
  { 1654,	3,	1,	162,	0,	0, 0xb2000c05ULL, NULL, NULL, OperandInfo33 },  // Inst #1654 = MULSSrr_Int
  { 1655,	7,	2,	66,	0,	0|(1<<MCID::MayLoad), 0xbec001106ULL, ImplicitList41, NULL, OperandInfo51 },  // Inst #1655 = MULX32rm
  { 1656,	3,	2,	66,	0,	0|(1<<MCID::Commutable), 0xbec001105ULL, ImplicitList41, NULL, OperandInfo52 },  // Inst #1656 = MULX32rr
  { 1657,	7,	2,	66,	0,	0|(1<<MCID::MayLoad), 0xfec001106ULL, ImplicitList42, NULL, OperandInfo53 },  // Inst #1657 = MULX64rm
  { 1658,	3,	2,	66,	0,	0|(1<<MCID::Commutable), 0xfec001105ULL, ImplicitList42, NULL, OperandInfo54 },  // Inst #1658 = MULX64rr
  { 1659,	5,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b0000019ULL, NULL, NULL, OperandInfo38 },  // Inst #1659 = MUL_F32m
  { 1660,	5,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b8000019ULL, NULL, NULL, OperandInfo38 },  // Inst #1660 = MUL_F64m
  { 1661,	5,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1bc000019ULL, NULL, NULL, OperandInfo38 },  // Inst #1661 = MUL_FI16m
  { 1662,	5,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b4000019ULL, NULL, NULL, OperandInfo38 },  // Inst #1662 = MUL_FI32m
  { 1663,	1,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x190000902ULL, NULL, NULL, OperandInfo39 },  // Inst #1663 = MUL_FPrST0
  { 1664,	1,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x190000302ULL, NULL, NULL, OperandInfo39 },  // Inst #1664 = MUL_FST0r
  { 1665,	3,	1,	18,	0,	0, 0x80000ULL, NULL, NULL, OperandInfo40 },  // Inst #1665 = MUL_Fp32
  { 1666,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo41 },  // Inst #1666 = MUL_Fp32m
  { 1667,	3,	1,	18,	0,	0, 0x80000ULL, NULL, NULL, OperandInfo42 },  // Inst #1667 = MUL_Fp64
  { 1668,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo43 },  // Inst #1668 = MUL_Fp64m
  { 1669,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo43 },  // Inst #1669 = MUL_Fp64m32
  { 1670,	3,	1,	18,	0,	0, 0x80000ULL, NULL, NULL, OperandInfo44 },  // Inst #1670 = MUL_Fp80
  { 1671,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo45 },  // Inst #1671 = MUL_Fp80m32
  { 1672,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo45 },  // Inst #1672 = MUL_Fp80m64
  { 1673,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo41 },  // Inst #1673 = MUL_FpI16m32
  { 1674,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo43 },  // Inst #1674 = MUL_FpI16m64
  { 1675,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo45 },  // Inst #1675 = MUL_FpI16m80
  { 1676,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo41 },  // Inst #1676 = MUL_FpI32m32
  { 1677,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo43 },  // Inst #1677 = MUL_FpI32m64
  { 1678,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo45 },  // Inst #1678 = MUL_FpI32m80
  { 1679,	1,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x190000702ULL, NULL, NULL, OperandInfo39 },  // Inst #1679 = MUL_FrST0
  { 1680,	2,	0,	204,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo67 },  // Inst #1680 = MWAIT
  { 1681,	0,	0,	167,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000126ULL, ImplicitList43, NULL, 0 },  // Inst #1681 = MWAITrr
  { 1682,	5,	0,	200,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1ee00005bULL, NULL, ImplicitList1, OperandInfo38 },  // Inst #1682 = NEG16m
  { 1683,	2,	1,	201,	0,	0, 0x1ee000053ULL, NULL, ImplicitList1, OperandInfo113 },  // Inst #1683 = NEG16r
  { 1684,	5,	0,	200,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1ee00001bULL, NULL, ImplicitList1, OperandInfo38 },  // Inst #1684 = NEG32m
  { 1685,	2,	1,	201,	0,	0, 0x1ee000013ULL, NULL, ImplicitList1, OperandInfo69 },  // Inst #1685 = NEG32r
  { 1686,	5,	0,	200,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1ee00201bULL, NULL, ImplicitList1, OperandInfo38 },  // Inst #1686 = NEG64m
  { 1687,	2,	1,	201,	0,	0, 0x1ee002013ULL, NULL, ImplicitList1, OperandInfo70 },  // Inst #1687 = NEG64r
  { 1688,	5,	0,	200,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1ec00001bULL, NULL, ImplicitList1, OperandInfo38 },  // Inst #1688 = NEG8m
  { 1689,	2,	1,	201,	0,	0, 0x1ec000013ULL, NULL, ImplicitList1, OperandInfo114 },  // Inst #1689 = NEG8r
  { 1690,	0,	0,	18,	0,	0, 0x120000001ULL, NULL, NULL, 0 },  // Inst #1690 = NOOP
  { 1691,	5,	0,	18,	0,	0, 0x3e000118ULL, NULL, NULL, OperandInfo38 },  // Inst #1691 = NOOPL
  { 1692,	5,	0,	18,	0,	0, 0x3e000158ULL, NULL, NULL, OperandInfo38 },  // Inst #1692 = NOOPW
  { 1693,	5,	0,	200,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1ee00005aULL, NULL, NULL, OperandInfo38 },  // Inst #1693 = NOT16m
  { 1694,	2,	1,	201,	0,	0, 0x1ee000052ULL, NULL, NULL, OperandInfo113 },  // Inst #1694 = NOT16r
  { 1695,	5,	0,	200,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1ee00001aULL, NULL, NULL, OperandInfo38 },  // Inst #1695 = NOT32m
  { 1696,	2,	1,	201,	0,	0, 0x1ee000012ULL, NULL, NULL, OperandInfo69 },  // Inst #1696 = NOT32r
  { 1697,	5,	0,	200,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1ee00201aULL, NULL, NULL, OperandInfo38 },  // Inst #1697 = NOT64m
  { 1698,	2,	1,	201,	0,	0, 0x1ee002012ULL, NULL, NULL, OperandInfo70 },  // Inst #1698 = NOT64r
  { 1699,	5,	0,	200,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1ec00001aULL, NULL, NULL, OperandInfo38 },  // Inst #1699 = NOT8m
  { 1700,	2,	1,	201,	0,	0, 0x1ec000012ULL, NULL, NULL, OperandInfo114 },  // Inst #1700 = NOT8r
  { 1701,	1,	0,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a00c041ULL, ImplicitList2, ImplicitList1, OperandInfo2 },  // Inst #1701 = OR16i16
  { 1702,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10200c059ULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #1702 = OR16mi
  { 1703,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x106004059ULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #1703 = OR16mi8
  { 1704,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x12000044ULL, NULL, ImplicitList1, OperandInfo16 },  // Inst #1704 = OR16mr
  { 1705,	3,	1,	3,	0,	0, 0x10200c051ULL, NULL, ImplicitList1, OperandInfo17 },  // Inst #1705 = OR16ri
  { 1706,	3,	1,	3,	0,	0, 0x106004051ULL, NULL, ImplicitList1, OperandInfo17 },  // Inst #1706 = OR16ri8
  { 1707,	7,	1,	3,	0,	0|(1<<MCID::MayLoad), 0x16000046ULL, NULL, ImplicitList1, OperandInfo18 },  // Inst #1707 = OR16rm
  { 1708,	3,	1,	3,	0,	0|(1<<MCID::Commutable), 0x12000043ULL, NULL, ImplicitList1, OperandInfo19 },  // Inst #1708 = OR16rr
  { 1709,	3,	1,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x16000045ULL, NULL, ImplicitList1, OperandInfo19 },  // Inst #1709 = OR16rr_REV
  { 1710,	1,	0,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a014001ULL, ImplicitList3, ImplicitList1, OperandInfo2 },  // Inst #1710 = OR32i32
  { 1711,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x102014019ULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #1711 = OR32mi
  { 1712,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x106004019ULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #1712 = OR32mi8
  { 1713,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x12000004ULL, NULL, ImplicitList1, OperandInfo20 },  // Inst #1713 = OR32mr
  { 1714,	6,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x12100004ULL, NULL, ImplicitList1, OperandInfo20 },  // Inst #1714 = OR32mrLocked
  { 1715,	3,	1,	3,	0,	0, 0x102014011ULL, NULL, ImplicitList1, OperandInfo21 },  // Inst #1715 = OR32ri
  { 1716,	3,	1,	3,	0,	0, 0x106004011ULL, NULL, ImplicitList1, OperandInfo21 },  // Inst #1716 = OR32ri8
  { 1717,	7,	1,	3,	0,	0|(1<<MCID::MayLoad), 0x16000006ULL, NULL, ImplicitList1, OperandInfo22 },  // Inst #1717 = OR32rm
  { 1718,	3,	1,	3,	0,	0|(1<<MCID::Commutable), 0x12000003ULL, NULL, ImplicitList1, OperandInfo23 },  // Inst #1718 = OR32rr
  { 1719,	3,	1,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x16000005ULL, NULL, ImplicitList1, OperandInfo23 },  // Inst #1719 = OR32rr_REV
  { 1720,	1,	0,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a016001ULL, ImplicitList4, ImplicitList1, OperandInfo2 },  // Inst #1720 = OR64i32
  { 1721,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x102016019ULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #1721 = OR64mi32
  { 1722,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x106006019ULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #1722 = OR64mi8
  { 1723,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x12002004ULL, NULL, ImplicitList1, OperandInfo24 },  // Inst #1723 = OR64mr
  { 1724,	3,	1,	3,	0,	0, 0x102016011ULL, NULL, ImplicitList1, OperandInfo25 },  // Inst #1724 = OR64ri32
  { 1725,	3,	1,	3,	0,	0, 0x106006011ULL, NULL, ImplicitList1, OperandInfo25 },  // Inst #1725 = OR64ri8
  { 1726,	7,	1,	3,	0,	0|(1<<MCID::MayLoad), 0x16002006ULL, NULL, ImplicitList1, OperandInfo26 },  // Inst #1726 = OR64rm
  { 1727,	3,	1,	3,	0,	0|(1<<MCID::Commutable), 0x12002003ULL, NULL, ImplicitList1, OperandInfo27 },  // Inst #1727 = OR64rr
  { 1728,	3,	1,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x16002005ULL, NULL, ImplicitList1, OperandInfo27 },  // Inst #1728 = OR64rr_REV
  { 1729,	1,	0,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x18004001ULL, ImplicitList5, ImplicitList1, OperandInfo2 },  // Inst #1729 = OR8i8
  { 1730,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x100004019ULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #1730 = OR8mi
  { 1731,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10000004ULL, NULL, ImplicitList1, OperandInfo28 },  // Inst #1731 = OR8mr
  { 1732,	3,	1,	3,	0,	0, 0x100004011ULL, NULL, ImplicitList1, OperandInfo29 },  // Inst #1732 = OR8ri
  { 1733,	7,	1,	3,	0,	0|(1<<MCID::MayLoad), 0x14000006ULL, NULL, ImplicitList1, OperandInfo30 },  // Inst #1733 = OR8rm
  { 1734,	3,	1,	3,	0,	0|(1<<MCID::Commutable), 0x10000003ULL, NULL, ImplicitList1, OperandInfo31 },  // Inst #1734 = OR8rr
  { 1735,	3,	1,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x14000005ULL, NULL, ImplicitList1, OperandInfo31 },  // Inst #1735 = OR8rr_REV
  { 1736,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xad000146ULL, NULL, NULL, OperandInfo32 },  // Inst #1736 = ORPDrm
  { 1737,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0xad000145ULL, NULL, NULL, OperandInfo33 },  // Inst #1737 = ORPDrr
  { 1738,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xac800106ULL, NULL, NULL, OperandInfo32 },  // Inst #1738 = ORPSrm
  { 1739,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0xac800105ULL, NULL, NULL, OperandInfo33 },  // Inst #1739 = ORPSrr
  { 1740,	1,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ce004041ULL, ImplicitList2, NULL, OperandInfo2 },  // Inst #1740 = OUT16ir
  { 1741,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1de000041ULL, ImplicitList44, NULL, 0 },  // Inst #1741 = OUT16rr
  { 1742,	1,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ce004001ULL, ImplicitList3, NULL, OperandInfo2 },  // Inst #1742 = OUT32ir
  { 1743,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1de000001ULL, ImplicitList45, NULL, 0 },  // Inst #1743 = OUT32rr
  { 1744,	1,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1cc004001ULL, ImplicitList5, NULL, OperandInfo2 },  // Inst #1744 = OUT8ir
  { 1745,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1dc000001ULL, ImplicitList46, NULL, 0 },  // Inst #1745 = OUT8rr
  { 1746,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xdc000001ULL, NULL, NULL, 0 },  // Inst #1746 = OUTSB
  { 1747,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xde000001ULL, NULL, NULL, 0 },  // Inst #1747 = OUTSD
  { 1748,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xde000041ULL, NULL, NULL, 0 },  // Inst #1748 = OUTSW
  { 1749,	6,	1,	168,	0,	0|(1<<MCID::MayLoad), 0x39800d46ULL, NULL, NULL, OperandInfo47 },  // Inst #1749 = PABSBrm128
  { 1750,	2,	1,	169,	0,	0, 0x39800d45ULL, NULL, NULL, OperandInfo48 },  // Inst #1750 = PABSBrr128
  { 1751,	6,	1,	168,	0,	0|(1<<MCID::MayLoad), 0x3d800d46ULL, NULL, NULL, OperandInfo47 },  // Inst #1751 = PABSDrm128
  { 1752,	2,	1,	169,	0,	0, 0x3d800d45ULL, NULL, NULL, OperandInfo48 },  // Inst #1752 = PABSDrr128
  { 1753,	6,	1,	168,	0,	0|(1<<MCID::MayLoad), 0x3b800d46ULL, NULL, NULL, OperandInfo47 },  // Inst #1753 = PABSWrm128
  { 1754,	2,	1,	169,	0,	0, 0x3b800d45ULL, NULL, NULL, OperandInfo48 },  // Inst #1754 = PABSWrr128
  { 1755,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xd7800146ULL, NULL, NULL, OperandInfo32 },  // Inst #1755 = PACKSSDWrm
  { 1756,	3,	1,	132,	0,	0, 0xd7800145ULL, NULL, NULL, OperandInfo33 },  // Inst #1756 = PACKSSDWrr
  { 1757,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xc7800146ULL, NULL, NULL, OperandInfo32 },  // Inst #1757 = PACKSSWBrm
  { 1758,	3,	1,	132,	0,	0, 0xc7800145ULL, NULL, NULL, OperandInfo33 },  // Inst #1758 = PACKSSWBrr
  { 1759,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x57800d46ULL, NULL, NULL, OperandInfo32 },  // Inst #1759 = PACKUSDWrm
  { 1760,	3,	1,	18,	0,	0, 0x57800d45ULL, NULL, NULL, OperandInfo33 },  // Inst #1760 = PACKUSDWrr
  { 1761,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xcf800146ULL, NULL, NULL, OperandInfo32 },  // Inst #1761 = PACKUSWBrm
  { 1762,	3,	1,	132,	0,	0, 0xcf800145ULL, NULL, NULL, OperandInfo33 },  // Inst #1762 = PACKUSWBrr
  { 1763,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0x1f9800146ULL, NULL, NULL, OperandInfo32 },  // Inst #1763 = PADDBrm
  { 1764,	3,	1,	132,	0,	0|(1<<MCID::Commutable), 0x1f9800145ULL, NULL, NULL, OperandInfo33 },  // Inst #1764 = PADDBrr
  { 1765,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0x1fd800146ULL, NULL, NULL, OperandInfo32 },  // Inst #1765 = PADDDrm
  { 1766,	3,	1,	132,	0,	0|(1<<MCID::Commutable), 0x1fd800145ULL, NULL, NULL, OperandInfo33 },  // Inst #1766 = PADDDrr
  { 1767,	7,	1,	129,	0,	0|(1<<MCID::MayLoad), 0x1a9800146ULL, NULL, NULL, OperandInfo32 },  // Inst #1767 = PADDQrm
  { 1768,	3,	1,	130,	0,	0|(1<<MCID::Commutable), 0x1a9800145ULL, NULL, NULL, OperandInfo33 },  // Inst #1768 = PADDQrr
  { 1769,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0x1d9800146ULL, NULL, NULL, OperandInfo32 },  // Inst #1769 = PADDSBrm
  { 1770,	3,	1,	132,	0,	0|(1<<MCID::Commutable), 0x1d9800145ULL, NULL, NULL, OperandInfo33 },  // Inst #1770 = PADDSBrr
  { 1771,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0x1db800146ULL, NULL, NULL, OperandInfo32 },  // Inst #1771 = PADDSWrm
  { 1772,	3,	1,	132,	0,	0|(1<<MCID::Commutable), 0x1db800145ULL, NULL, NULL, OperandInfo33 },  // Inst #1772 = PADDSWrr
  { 1773,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0x1b9800146ULL, NULL, NULL, OperandInfo32 },  // Inst #1773 = PADDUSBrm
  { 1774,	3,	1,	132,	0,	0|(1<<MCID::Commutable), 0x1b9800145ULL, NULL, NULL, OperandInfo33 },  // Inst #1774 = PADDUSBrr
  { 1775,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0x1bb800146ULL, NULL, NULL, OperandInfo32 },  // Inst #1775 = PADDUSWrm
  { 1776,	3,	1,	132,	0,	0|(1<<MCID::Commutable), 0x1bb800145ULL, NULL, NULL, OperandInfo33 },  // Inst #1776 = PADDUSWrr
  { 1777,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0x1fb800146ULL, NULL, NULL, OperandInfo32 },  // Inst #1777 = PADDWrm
  { 1778,	3,	1,	132,	0,	0|(1<<MCID::Commutable), 0x1fb800145ULL, NULL, NULL, OperandInfo33 },  // Inst #1778 = PADDWrr
  { 1779,	8,	1,	170,	0,	0|(1<<MCID::MayLoad), 0x1f804e46ULL, NULL, NULL, OperandInfo65 },  // Inst #1779 = PALIGNR128rm
  { 1780,	4,	1,	170,	0,	0, 0x1f804e45ULL, NULL, NULL, OperandInfo66 },  // Inst #1780 = PALIGNR128rr
  { 1781,	7,	1,	99,	0,	0|(1<<MCID::MayLoad), 0x1bf800146ULL, NULL, NULL, OperandInfo32 },  // Inst #1781 = PANDNrm
  { 1782,	3,	1,	100,	0,	0, 0x1bf800145ULL, NULL, NULL, OperandInfo33 },  // Inst #1782 = PANDNrr
  { 1783,	7,	1,	99,	0,	0|(1<<MCID::MayLoad), 0x1b7800146ULL, NULL, NULL, OperandInfo32 },  // Inst #1783 = PANDrm
  { 1784,	3,	1,	100,	0,	0|(1<<MCID::Commutable), 0x1b7800145ULL, NULL, NULL, OperandInfo33 },  // Inst #1784 = PANDrr
  { 1785,	0,	0,	171,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x120000201ULL, NULL, NULL, 0 },  // Inst #1785 = PAUSE
  { 1786,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0x1c1800146ULL, NULL, NULL, OperandInfo32 },  // Inst #1786 = PAVGBrm
  { 1787,	3,	1,	132,	0,	0|(1<<MCID::Commutable), 0x1c1800145ULL, NULL, NULL, OperandInfo33 },  // Inst #1787 = PAVGBrr
  { 1788,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1017e000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1788 = PAVGUSBrm
  { 1789,	3,	1,	18,	0,	0, 0x1017e000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1789 = PAVGUSBrr
  { 1790,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0x1c7800146ULL, NULL, NULL, OperandInfo32 },  // Inst #1790 = PAVGWrm
  { 1791,	3,	1,	132,	0,	0|(1<<MCID::Commutable), 0x1c7800145ULL, NULL, NULL, OperandInfo33 },  // Inst #1791 = PAVGWrr
  { 1792,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x21800d46ULL, ImplicitList12, NULL, OperandInfo32 },  // Inst #1792 = PBLENDVBrm0
  { 1793,	3,	1,	18,	0,	0, 0x21800d45ULL, ImplicitList12, NULL, OperandInfo33 },  // Inst #1793 = PBLENDVBrr0
  { 1794,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1d804e46ULL, NULL, NULL, OperandInfo65 },  // Inst #1794 = PBLENDWrmi
  { 1795,	4,	1,	18,	0,	0, 0x1d804e45ULL, NULL, NULL, OperandInfo66 },  // Inst #1795 = PBLENDWrri
  { 1796,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x89804e46ULL, NULL, NULL, OperandInfo65 },  // Inst #1796 = PCLMULQDQrm
  { 1797,	4,	1,	18,	0,	0, 0x89804e45ULL, NULL, NULL, OperandInfo66 },  // Inst #1797 = PCLMULQDQrr
  { 1798,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xe9800146ULL, NULL, NULL, OperandInfo32 },  // Inst #1798 = PCMPEQBrm
  { 1799,	3,	1,	132,	0,	0|(1<<MCID::Commutable), 0xe9800145ULL, NULL, NULL, OperandInfo33 },  // Inst #1799 = PCMPEQBrr
  { 1800,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xed800146ULL, NULL, NULL, OperandInfo32 },  // Inst #1800 = PCMPEQDrm
  { 1801,	3,	1,	132,	0,	0|(1<<MCID::Commutable), 0xed800145ULL, NULL, NULL, OperandInfo33 },  // Inst #1801 = PCMPEQDrr
  { 1802,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x53800d46ULL, NULL, NULL, OperandInfo32 },  // Inst #1802 = PCMPEQQrm
  { 1803,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0x53800d45ULL, NULL, NULL, OperandInfo33 },  // Inst #1803 = PCMPEQQrr
  { 1804,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xeb800146ULL, NULL, NULL, OperandInfo32 },  // Inst #1804 = PCMPEQWrm
  { 1805,	3,	1,	132,	0,	0|(1<<MCID::Commutable), 0xeb800145ULL, NULL, NULL, OperandInfo33 },  // Inst #1805 = PCMPEQWrr
  { 1806,	7,	0,	18,	0,	0|(1<<MCID::MayLoad), 0xc3804e46ULL, ImplicitList13, ImplicitList47, OperandInfo49 },  // Inst #1806 = PCMPESTRIArm
  { 1807,	3,	0,	18,	0,	0, 0xc3804e45ULL, ImplicitList13, ImplicitList47, OperandInfo50 },  // Inst #1807 = PCMPESTRIArr
  { 1808,	7,	0,	18,	0,	0|(1<<MCID::MayLoad), 0xc3804e46ULL, ImplicitList13, ImplicitList47, OperandInfo49 },  // Inst #1808 = PCMPESTRICrm
  { 1809,	3,	0,	18,	0,	0, 0xc3804e45ULL, ImplicitList13, ImplicitList47, OperandInfo50 },  // Inst #1809 = PCMPESTRICrr
  { 1810,	7,	0,	18,	0,	0|(1<<MCID::MayLoad), 0xc3804e46ULL, ImplicitList13, ImplicitList47, OperandInfo49 },  // Inst #1810 = PCMPESTRIOrm
  { 1811,	3,	0,	18,	0,	0, 0xc3804e45ULL, ImplicitList13, ImplicitList47, OperandInfo50 },  // Inst #1811 = PCMPESTRIOrr
  { 1812,	7,	0,	18,	0,	0|(1<<MCID::MayLoad), 0xc3804e46ULL, ImplicitList13, ImplicitList47, OperandInfo49 },  // Inst #1812 = PCMPESTRISrm
  { 1813,	3,	0,	18,	0,	0, 0xc3804e45ULL, ImplicitList13, ImplicitList47, OperandInfo50 },  // Inst #1813 = PCMPESTRISrr
  { 1814,	7,	0,	18,	0,	0|(1<<MCID::MayLoad), 0xc3804e46ULL, ImplicitList13, ImplicitList47, OperandInfo49 },  // Inst #1814 = PCMPESTRIZrm
  { 1815,	3,	0,	18,	0,	0, 0xc3804e45ULL, ImplicitList13, ImplicitList47, OperandInfo50 },  // Inst #1815 = PCMPESTRIZrr
  { 1816,	7,	0,	18,	0,	0|(1<<MCID::MayLoad), 0xc3804e46ULL, ImplicitList13, ImplicitList47, OperandInfo49 },  // Inst #1816 = PCMPESTRIrm
  { 1817,	3,	0,	18,	0,	0, 0xc3804e45ULL, ImplicitList13, ImplicitList47, OperandInfo50 },  // Inst #1817 = PCMPESTRIrr
  { 1818,	8,	1,	204,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList13, ImplicitList1, OperandInfo138 },  // Inst #1818 = PCMPESTRM128MEM
  { 1819,	4,	1,	204,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList13, ImplicitList1, OperandInfo88 },  // Inst #1819 = PCMPESTRM128REG
  { 1820,	7,	0,	18,	0,	0|(1<<MCID::MayLoad), 0xc1804e46ULL, ImplicitList13, ImplicitList48, OperandInfo49 },  // Inst #1820 = PCMPESTRM128rm
  { 1821,	3,	0,	18,	0,	0, 0xc1804e45ULL, ImplicitList13, ImplicitList48, OperandInfo50 },  // Inst #1821 = PCMPESTRM128rr
  { 1822,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xc9800146ULL, NULL, NULL, OperandInfo32 },  // Inst #1822 = PCMPGTBrm
  { 1823,	3,	1,	132,	0,	0, 0xc9800145ULL, NULL, NULL, OperandInfo33 },  // Inst #1823 = PCMPGTBrr
  { 1824,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xcd800146ULL, NULL, NULL, OperandInfo32 },  // Inst #1824 = PCMPGTDrm
  { 1825,	3,	1,	132,	0,	0, 0xcd800145ULL, NULL, NULL, OperandInfo33 },  // Inst #1825 = PCMPGTDrr
  { 1826,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x6f800d46ULL, NULL, NULL, OperandInfo32 },  // Inst #1826 = PCMPGTQrm
  { 1827,	3,	1,	18,	0,	0, 0x6f800d45ULL, NULL, NULL, OperandInfo33 },  // Inst #1827 = PCMPGTQrr
  { 1828,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xcb800146ULL, NULL, NULL, OperandInfo32 },  // Inst #1828 = PCMPGTWrm
  { 1829,	3,	1,	132,	0,	0, 0xcb800145ULL, NULL, NULL, OperandInfo33 },  // Inst #1829 = PCMPGTWrr
  { 1830,	7,	0,	18,	0,	0|(1<<MCID::MayLoad), 0xc7804e46ULL, NULL, ImplicitList47, OperandInfo49 },  // Inst #1830 = PCMPISTRIArm
  { 1831,	3,	0,	18,	0,	0, 0xc7804e45ULL, NULL, ImplicitList47, OperandInfo50 },  // Inst #1831 = PCMPISTRIArr
  { 1832,	7,	0,	18,	0,	0|(1<<MCID::MayLoad), 0xc7804e46ULL, NULL, ImplicitList47, OperandInfo49 },  // Inst #1832 = PCMPISTRICrm
  { 1833,	3,	0,	18,	0,	0, 0xc7804e45ULL, NULL, ImplicitList47, OperandInfo50 },  // Inst #1833 = PCMPISTRICrr
  { 1834,	7,	0,	18,	0,	0|(1<<MCID::MayLoad), 0xc7804e46ULL, NULL, ImplicitList47, OperandInfo49 },  // Inst #1834 = PCMPISTRIOrm
  { 1835,	3,	0,	18,	0,	0, 0xc7804e45ULL, NULL, ImplicitList47, OperandInfo50 },  // Inst #1835 = PCMPISTRIOrr
  { 1836,	7,	0,	18,	0,	0|(1<<MCID::MayLoad), 0xc7804e46ULL, NULL, ImplicitList47, OperandInfo49 },  // Inst #1836 = PCMPISTRISrm
  { 1837,	3,	0,	18,	0,	0, 0xc7804e45ULL, NULL, ImplicitList47, OperandInfo50 },  // Inst #1837 = PCMPISTRISrr
  { 1838,	7,	0,	18,	0,	0|(1<<MCID::MayLoad), 0xc7804e46ULL, NULL, ImplicitList47, OperandInfo49 },  // Inst #1838 = PCMPISTRIZrm
  { 1839,	3,	0,	18,	0,	0, 0xc7804e45ULL, NULL, ImplicitList47, OperandInfo50 },  // Inst #1839 = PCMPISTRIZrr
  { 1840,	7,	0,	18,	0,	0|(1<<MCID::MayLoad), 0xc7804e46ULL, NULL, ImplicitList47, OperandInfo49 },  // Inst #1840 = PCMPISTRIrm
  { 1841,	3,	0,	18,	0,	0, 0xc7804e45ULL, NULL, ImplicitList47, OperandInfo50 },  // Inst #1841 = PCMPISTRIrr
  { 1842,	8,	1,	204,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList1, OperandInfo138 },  // Inst #1842 = PCMPISTRM128MEM
  { 1843,	4,	1,	204,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList1, OperandInfo88 },  // Inst #1843 = PCMPISTRM128REG
  { 1844,	7,	0,	18,	0,	0|(1<<MCID::MayLoad), 0xc5804e46ULL, NULL, ImplicitList48, OperandInfo49 },  // Inst #1844 = PCMPISTRM128rm
  { 1845,	3,	0,	18,	0,	0, 0xc5804e45ULL, NULL, ImplicitList48, OperandInfo50 },  // Inst #1845 = PCMPISTRM128rr
  { 1846,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xbea001106ULL, NULL, NULL, OperandInfo51 },  // Inst #1846 = PDEP32rm
  { 1847,	3,	1,	18,	0,	0, 0xbea001105ULL, NULL, NULL, OperandInfo52 },  // Inst #1847 = PDEP32rr
  { 1848,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xfea001106ULL, NULL, NULL, OperandInfo53 },  // Inst #1848 = PDEP64rm
  { 1849,	3,	1,	18,	0,	0, 0xfea001105ULL, NULL, NULL, OperandInfo54 },  // Inst #1849 = PDEP64rr
  { 1850,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xbea001206ULL, NULL, NULL, OperandInfo51 },  // Inst #1850 = PEXT32rm
  { 1851,	3,	1,	18,	0,	0, 0xbea001205ULL, NULL, NULL, OperandInfo52 },  // Inst #1851 = PEXT32rr
  { 1852,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xfea001206ULL, NULL, NULL, OperandInfo53 },  // Inst #1852 = PEXT64rm
  { 1853,	3,	1,	18,	0,	0, 0xfea001205ULL, NULL, NULL, OperandInfo54 },  // Inst #1853 = PEXT64rr
  { 1854,	7,	0,	18,	0,	0|(1<<MCID::MayStore), 0x29804e44ULL, NULL, NULL, OperandInfo117 },  // Inst #1854 = PEXTRBmr
  { 1855,	3,	1,	18,	0,	0, 0x29804e43ULL, NULL, NULL, OperandInfo118 },  // Inst #1855 = PEXTRBrr
  { 1856,	7,	0,	18,	0,	0|(1<<MCID::MayStore), 0x2d804e44ULL, NULL, NULL, OperandInfo117 },  // Inst #1856 = PEXTRDmr
  { 1857,	3,	1,	18,	0,	0, 0x2d804e43ULL, NULL, NULL, OperandInfo118 },  // Inst #1857 = PEXTRDrr
  { 1858,	7,	0,	18,	0,	0|(1<<MCID::MayStore), 0x2d806e44ULL, NULL, NULL, OperandInfo117 },  // Inst #1858 = PEXTRQmr
  { 1859,	3,	1,	18,	0,	0, 0x2d806e43ULL, NULL, NULL, OperandInfo202 },  // Inst #1859 = PEXTRQrr
  { 1860,	7,	0,	18,	0,	0|(1<<MCID::MayStore), 0x2b804e44ULL, NULL, NULL, OperandInfo117 },  // Inst #1860 = PEXTRWmr
  { 1861,	3,	1,	172,	0,	0, 0x18b804145ULL, NULL, NULL, OperandInfo118 },  // Inst #1861 = PEXTRWri
  { 1862,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1003a000106ULL, NULL, NULL, OperandInfo147 },  // Inst #1862 = PF2IDrm
  { 1863,	2,	1,	18,	0,	0, 0x1003a000105ULL, NULL, NULL, OperandInfo151 },  // Inst #1863 = PF2IDrr
  { 1864,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x10038000106ULL, NULL, NULL, OperandInfo147 },  // Inst #1864 = PF2IWrm
  { 1865,	2,	1,	18,	0,	0, 0x10038000105ULL, NULL, NULL, OperandInfo151 },  // Inst #1865 = PF2IWrr
  { 1866,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1015c000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1866 = PFACCrm
  { 1867,	3,	1,	18,	0,	0, 0x1015c000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1867 = PFACCrr
  { 1868,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1013c000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1868 = PFADDrm
  { 1869,	3,	1,	18,	0,	0, 0x1013c000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1869 = PFADDrr
  { 1870,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x10160000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1870 = PFCMPEQrm
  { 1871,	3,	1,	18,	0,	0, 0x10160000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1871 = PFCMPEQrr
  { 1872,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x10120000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1872 = PFCMPGErm
  { 1873,	3,	1,	18,	0,	0, 0x10120000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1873 = PFCMPGErr
  { 1874,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x10140000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1874 = PFCMPGTrm
  { 1875,	3,	1,	18,	0,	0, 0x10140000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1875 = PFCMPGTrr
  { 1876,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x10148000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1876 = PFMAXrm
  { 1877,	3,	1,	18,	0,	0, 0x10148000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1877 = PFMAXrr
  { 1878,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x10128000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1878 = PFMINrm
  { 1879,	3,	1,	18,	0,	0, 0x10128000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1879 = PFMINrr
  { 1880,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x10168000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1880 = PFMULrm
  { 1881,	3,	1,	18,	0,	0, 0x10168000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1881 = PFMULrr
  { 1882,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x10114000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1882 = PFNACCrm
  { 1883,	3,	1,	18,	0,	0, 0x10114000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1883 = PFNACCrr
  { 1884,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1011c000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1884 = PFPNACCrm
  { 1885,	3,	1,	18,	0,	0, 0x1011c000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1885 = PFPNACCrr
  { 1886,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1014c000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1886 = PFRCPIT1rm
  { 1887,	3,	1,	18,	0,	0, 0x1014c000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1887 = PFRCPIT1rr
  { 1888,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1016c000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1888 = PFRCPIT2rm
  { 1889,	3,	1,	18,	0,	0, 0x1016c000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1889 = PFRCPIT2rr
  { 1890,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1012c000106ULL, NULL, NULL, OperandInfo147 },  // Inst #1890 = PFRCPrm
  { 1891,	2,	1,	18,	0,	0, 0x1012c000105ULL, NULL, NULL, OperandInfo151 },  // Inst #1891 = PFRCPrr
  { 1892,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1014e000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1892 = PFRSQIT1rm
  { 1893,	3,	1,	18,	0,	0, 0x1014e000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1893 = PFRSQIT1rr
  { 1894,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1012e000106ULL, NULL, NULL, OperandInfo147 },  // Inst #1894 = PFRSQRTrm
  { 1895,	2,	1,	18,	0,	0, 0x1012e000105ULL, NULL, NULL, OperandInfo151 },  // Inst #1895 = PFRSQRTrr
  { 1896,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x10154000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1896 = PFSUBRrm
  { 1897,	3,	1,	18,	0,	0, 0x10154000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1897 = PFSUBRrr
  { 1898,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x10134000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1898 = PFSUBrm
  { 1899,	3,	1,	18,	0,	0, 0x10134000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1899 = PFSUBrr
  { 1900,	7,	1,	173,	0,	0|(1<<MCID::MayLoad), 0x5800d46ULL, NULL, NULL, OperandInfo32 },  // Inst #1900 = PHADDDrm
  { 1901,	3,	1,	174,	0,	0, 0x5800d45ULL, NULL, NULL, OperandInfo33 },  // Inst #1901 = PHADDDrr
  { 1902,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x7800d46ULL, NULL, NULL, OperandInfo32 },  // Inst #1902 = PHADDSWrm128
  { 1903,	3,	1,	18,	0,	0, 0x7800d45ULL, NULL, NULL, OperandInfo33 },  // Inst #1903 = PHADDSWrr128
  { 1904,	7,	1,	177,	0,	0|(1<<MCID::MayLoad), 0x3800d46ULL, NULL, NULL, OperandInfo32 },  // Inst #1904 = PHADDWrm
  { 1905,	3,	1,	178,	0,	0, 0x3800d45ULL, NULL, NULL, OperandInfo33 },  // Inst #1905 = PHADDWrr
  { 1906,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x83800d46ULL, NULL, NULL, OperandInfo47 },  // Inst #1906 = PHMINPOSUWrm128
  { 1907,	2,	1,	18,	0,	0, 0x83800d45ULL, NULL, NULL, OperandInfo48 },  // Inst #1907 = PHMINPOSUWrr128
  { 1908,	7,	1,	173,	0,	0|(1<<MCID::MayLoad), 0xd800d46ULL, NULL, NULL, OperandInfo32 },  // Inst #1908 = PHSUBDrm
  { 1909,	3,	1,	174,	0,	0, 0xd800d45ULL, NULL, NULL, OperandInfo33 },  // Inst #1909 = PHSUBDrr
  { 1910,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xf800d46ULL, NULL, NULL, OperandInfo32 },  // Inst #1910 = PHSUBSWrm128
  { 1911,	3,	1,	18,	0,	0, 0xf800d45ULL, NULL, NULL, OperandInfo33 },  // Inst #1911 = PHSUBSWrr128
  { 1912,	7,	1,	177,	0,	0|(1<<MCID::MayLoad), 0xb800d46ULL, NULL, NULL, OperandInfo32 },  // Inst #1912 = PHSUBWrm
  { 1913,	3,	1,	178,	0,	0, 0xb800d45ULL, NULL, NULL, OperandInfo33 },  // Inst #1913 = PHSUBWrr
  { 1914,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1001a000106ULL, NULL, NULL, OperandInfo147 },  // Inst #1914 = PI2FDrm
  { 1915,	2,	1,	18,	0,	0, 0x1001a000105ULL, NULL, NULL, OperandInfo151 },  // Inst #1915 = PI2FDrr
  { 1916,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x10018000106ULL, NULL, NULL, OperandInfo147 },  // Inst #1916 = PI2FWrm
  { 1917,	2,	1,	18,	0,	0, 0x10018000105ULL, NULL, NULL, OperandInfo151 },  // Inst #1917 = PI2FWrr
  { 1918,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x41804e46ULL, NULL, NULL, OperandInfo65 },  // Inst #1918 = PINSRBrm
  { 1919,	4,	1,	18,	0,	0, 0x41804e45ULL, NULL, NULL, OperandInfo203 },  // Inst #1919 = PINSRBrr
  { 1920,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x45804e46ULL, NULL, NULL, OperandInfo65 },  // Inst #1920 = PINSRDrm
  { 1921,	4,	1,	18,	0,	0, 0x45804e45ULL, NULL, NULL, OperandInfo203 },  // Inst #1921 = PINSRDrr
  { 1922,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x45806e46ULL, NULL, NULL, OperandInfo65 },  // Inst #1922 = PINSRQrm
  { 1923,	4,	1,	18,	0,	0, 0x45806e45ULL, NULL, NULL, OperandInfo204 },  // Inst #1923 = PINSRQrr
  { 1924,	8,	1,	179,	0,	0|(1<<MCID::MayLoad), 0x189804146ULL, NULL, NULL, OperandInfo65 },  // Inst #1924 = PINSRWrmi
  { 1925,	4,	1,	179,	0,	0, 0x189804145ULL, NULL, NULL, OperandInfo203 },  // Inst #1925 = PINSRWrri
  { 1926,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x9800d46ULL, NULL, NULL, OperandInfo32 },  // Inst #1926 = PMADDUBSWrm128
  { 1927,	3,	1,	18,	0,	0, 0x9800d45ULL, NULL, NULL, OperandInfo33 },  // Inst #1927 = PMADDUBSWrr128
  { 1928,	7,	1,	180,	0,	0|(1<<MCID::MayLoad), 0x1eb800146ULL, NULL, NULL, OperandInfo32 },  // Inst #1928 = PMADDWDrm
  { 1929,	3,	1,	180,	0,	0|(1<<MCID::Commutable), 0x1eb800145ULL, NULL, NULL, OperandInfo33 },  // Inst #1929 = PMADDWDrr
  { 1930,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x79800d46ULL, NULL, NULL, OperandInfo32 },  // Inst #1930 = PMAXSBrm
  { 1931,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0x79800d45ULL, NULL, NULL, OperandInfo33 },  // Inst #1931 = PMAXSBrr
  { 1932,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x7b800d46ULL, NULL, NULL, OperandInfo32 },  // Inst #1932 = PMAXSDrm
  { 1933,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0x7b800d45ULL, NULL, NULL, OperandInfo33 },  // Inst #1933 = PMAXSDrr
  { 1934,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0x1dd800146ULL, NULL, NULL, OperandInfo32 },  // Inst #1934 = PMAXSWrm
  { 1935,	3,	1,	132,	0,	0|(1<<MCID::Commutable), 0x1dd800145ULL, NULL, NULL, OperandInfo33 },  // Inst #1935 = PMAXSWrr
  { 1936,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0x1bd800146ULL, NULL, NULL, OperandInfo32 },  // Inst #1936 = PMAXUBrm
  { 1937,	3,	1,	132,	0,	0|(1<<MCID::Commutable), 0x1bd800145ULL, NULL, NULL, OperandInfo33 },  // Inst #1937 = PMAXUBrr
  { 1938,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x7f800d46ULL, NULL, NULL, OperandInfo32 },  // Inst #1938 = PMAXUDrm
  { 1939,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0x7f800d45ULL, NULL, NULL, OperandInfo33 },  // Inst #1939 = PMAXUDrr
  { 1940,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x7d800d46ULL, NULL, NULL, OperandInfo32 },  // Inst #1940 = PMAXUWrm
  { 1941,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0x7d800d45ULL, NULL, NULL, OperandInfo33 },  // Inst #1941 = PMAXUWrr
  { 1942,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x71800d46ULL, NULL, NULL, OperandInfo32 },  // Inst #1942 = PMINSBrm
  { 1943,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0x71800d45ULL, NULL, NULL, OperandInfo33 },  // Inst #1943 = PMINSBrr
  { 1944,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x73800d46ULL, NULL, NULL, OperandInfo32 },  // Inst #1944 = PMINSDrm
  { 1945,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0x73800d45ULL, NULL, NULL, OperandInfo33 },  // Inst #1945 = PMINSDrr
  { 1946,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0x1d5800146ULL, NULL, NULL, OperandInfo32 },  // Inst #1946 = PMINSWrm
  { 1947,	3,	1,	132,	0,	0|(1<<MCID::Commutable), 0x1d5800145ULL, NULL, NULL, OperandInfo33 },  // Inst #1947 = PMINSWrr
  { 1948,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0x1b5800146ULL, NULL, NULL, OperandInfo32 },  // Inst #1948 = PMINUBrm
  { 1949,	3,	1,	132,	0,	0|(1<<MCID::Commutable), 0x1b5800145ULL, NULL, NULL, OperandInfo33 },  // Inst #1949 = PMINUBrr
  { 1950,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x77800d46ULL, NULL, NULL, OperandInfo32 },  // Inst #1950 = PMINUDrm
  { 1951,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0x77800d45ULL, NULL, NULL, OperandInfo33 },  // Inst #1951 = PMINUDrr
  { 1952,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x75800d46ULL, NULL, NULL, OperandInfo32 },  // Inst #1952 = PMINUWrm
  { 1953,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0x75800d45ULL, NULL, NULL, OperandInfo33 },  // Inst #1953 = PMINUWrr
  { 1954,	2,	1,	149,	0,	0, 0x1af800145ULL, NULL, NULL, OperandInfo100 },  // Inst #1954 = PMOVMSKBrr
  { 1955,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x43800d46ULL, NULL, NULL, OperandInfo47 },  // Inst #1955 = PMOVSXBDrm
  { 1956,	2,	1,	18,	0,	0, 0x43800d45ULL, NULL, NULL, OperandInfo48 },  // Inst #1956 = PMOVSXBDrr
  { 1957,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x45800d46ULL, NULL, NULL, OperandInfo47 },  // Inst #1957 = PMOVSXBQrm
  { 1958,	2,	1,	18,	0,	0, 0x45800d45ULL, NULL, NULL, OperandInfo48 },  // Inst #1958 = PMOVSXBQrr
  { 1959,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x41800d46ULL, NULL, NULL, OperandInfo47 },  // Inst #1959 = PMOVSXBWrm
  { 1960,	2,	1,	18,	0,	0, 0x41800d45ULL, NULL, NULL, OperandInfo48 },  // Inst #1960 = PMOVSXBWrr
  { 1961,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x4b800d46ULL, NULL, NULL, OperandInfo47 },  // Inst #1961 = PMOVSXDQrm
  { 1962,	2,	1,	18,	0,	0, 0x4b800d45ULL, NULL, NULL, OperandInfo48 },  // Inst #1962 = PMOVSXDQrr
  { 1963,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x47800d46ULL, NULL, NULL, OperandInfo47 },  // Inst #1963 = PMOVSXWDrm
  { 1964,	2,	1,	18,	0,	0, 0x47800d45ULL, NULL, NULL, OperandInfo48 },  // Inst #1964 = PMOVSXWDrr
  { 1965,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x49800d46ULL, NULL, NULL, OperandInfo47 },  // Inst #1965 = PMOVSXWQrm
  { 1966,	2,	1,	18,	0,	0, 0x49800d45ULL, NULL, NULL, OperandInfo48 },  // Inst #1966 = PMOVSXWQrr
  { 1967,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x63800d46ULL, NULL, NULL, OperandInfo47 },  // Inst #1967 = PMOVZXBDrm
  { 1968,	2,	1,	18,	0,	0, 0x63800d45ULL, NULL, NULL, OperandInfo48 },  // Inst #1968 = PMOVZXBDrr
  { 1969,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x65800d46ULL, NULL, NULL, OperandInfo47 },  // Inst #1969 = PMOVZXBQrm
  { 1970,	2,	1,	18,	0,	0, 0x65800d45ULL, NULL, NULL, OperandInfo48 },  // Inst #1970 = PMOVZXBQrr
  { 1971,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x61800d46ULL, NULL, NULL, OperandInfo47 },  // Inst #1971 = PMOVZXBWrm
  { 1972,	2,	1,	18,	0,	0, 0x61800d45ULL, NULL, NULL, OperandInfo48 },  // Inst #1972 = PMOVZXBWrr
  { 1973,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x6b800d46ULL, NULL, NULL, OperandInfo47 },  // Inst #1973 = PMOVZXDQrm
  { 1974,	2,	1,	18,	0,	0, 0x6b800d45ULL, NULL, NULL, OperandInfo48 },  // Inst #1974 = PMOVZXDQrr
  { 1975,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x67800d46ULL, NULL, NULL, OperandInfo47 },  // Inst #1975 = PMOVZXWDrm
  { 1976,	2,	1,	18,	0,	0, 0x67800d45ULL, NULL, NULL, OperandInfo48 },  // Inst #1976 = PMOVZXWDrr
  { 1977,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x69800d46ULL, NULL, NULL, OperandInfo47 },  // Inst #1977 = PMOVZXWQrm
  { 1978,	2,	1,	18,	0,	0, 0x69800d45ULL, NULL, NULL, OperandInfo48 },  // Inst #1978 = PMOVZXWQrr
  { 1979,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x51800d46ULL, NULL, NULL, OperandInfo32 },  // Inst #1979 = PMULDQrm
  { 1980,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0x51800d45ULL, NULL, NULL, OperandInfo33 },  // Inst #1980 = PMULDQrr
  { 1981,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x17800d46ULL, NULL, NULL, OperandInfo32 },  // Inst #1981 = PMULHRSWrm128
  { 1982,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0x17800d45ULL, NULL, NULL, OperandInfo33 },  // Inst #1982 = PMULHRSWrr128
  { 1983,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1016e000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1983 = PMULHRWrm
  { 1984,	3,	1,	18,	0,	0, 0x1016e000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1984 = PMULHRWrr
  { 1985,	7,	1,	133,	0,	0|(1<<MCID::MayLoad), 0x1c9800146ULL, NULL, NULL, OperandInfo32 },  // Inst #1985 = PMULHUWrm
  { 1986,	3,	1,	134,	0,	0|(1<<MCID::Commutable), 0x1c9800145ULL, NULL, NULL, OperandInfo33 },  // Inst #1986 = PMULHUWrr
  { 1987,	7,	1,	133,	0,	0|(1<<MCID::MayLoad), 0x1cb800146ULL, NULL, NULL, OperandInfo32 },  // Inst #1987 = PMULHWrm
  { 1988,	3,	1,	134,	0,	0|(1<<MCID::Commutable), 0x1cb800145ULL, NULL, NULL, OperandInfo33 },  // Inst #1988 = PMULHWrr
  { 1989,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x81800d46ULL, NULL, NULL, OperandInfo32 },  // Inst #1989 = PMULLDrm
  { 1990,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0x81800d45ULL, NULL, NULL, OperandInfo33 },  // Inst #1990 = PMULLDrr
  { 1991,	7,	1,	133,	0,	0|(1<<MCID::MayLoad), 0x1ab800146ULL, NULL, NULL, OperandInfo32 },  // Inst #1991 = PMULLWrm
  { 1992,	3,	1,	134,	0,	0|(1<<MCID::Commutable), 0x1ab800145ULL, NULL, NULL, OperandInfo33 },  // Inst #1992 = PMULLWrr
  { 1993,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1e9800146ULL, NULL, NULL, OperandInfo32 },  // Inst #1993 = PMULUDQrm
  { 1994,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0x1e9800145ULL, NULL, NULL, OperandInfo33 },  // Inst #1994 = PMULUDQrr
  { 1995,	1,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xb0000042ULL, ImplicitList6, ImplicitList6, OperandInfo115 },  // Inst #1995 = POP16r
  { 1996,	5,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x11e000058ULL, ImplicitList6, ImplicitList6, OperandInfo38 },  // Inst #1996 = POP16rmm
  { 1997,	1,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x11e000050ULL, ImplicitList6, ImplicitList6, OperandInfo115 },  // Inst #1997 = POP16rmr
  { 1998,	1,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xb0000002ULL, ImplicitList6, ImplicitList6, OperandInfo74 },  // Inst #1998 = POP32r
  { 1999,	5,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x11e000018ULL, ImplicitList6, ImplicitList6, OperandInfo38 },  // Inst #1999 = POP32rmm
  { 2000,	1,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x11e000010ULL, ImplicitList6, ImplicitList6, OperandInfo74 },  // Inst #2000 = POP32rmr
  { 2001,	1,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xb0000002ULL, ImplicitList8, ImplicitList8, OperandInfo76 },  // Inst #2001 = POP64r
  { 2002,	5,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x11e000018ULL, ImplicitList8, ImplicitList8, OperandInfo38 },  // Inst #2002 = POP64rmm
  { 2003,	1,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x11e000010ULL, ImplicitList8, ImplicitList8, OperandInfo76 },  // Inst #2003 = POP64rmr
  { 2004,	0,	0,	18,	0,	0|(1<<MCID::MayLoad), 0xc2000001ULL, ImplicitList6, ImplicitList49, 0 },  // Inst #2004 = POPA32
  { 2005,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x170000c46ULL, NULL, ImplicitList1, OperandInfo11 },  // Inst #2005 = POPCNT16rm
  { 2006,	2,	1,	18,	0,	0, 0x170000c45ULL, NULL, ImplicitList1, OperandInfo55 },  // Inst #2006 = POPCNT16rr
  { 2007,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x170000c06ULL, NULL, ImplicitList1, OperandInfo12 },  // Inst #2007 = POPCNT32rm
  { 2008,	2,	1,	18,	0,	0, 0x170000c05ULL, NULL, ImplicitList1, OperandInfo67 },  // Inst #2008 = POPCNT32rr
  { 2009,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x170002c06ULL, NULL, ImplicitList1, OperandInfo13 },  // Inst #2009 = POPCNT64rm
  { 2010,	2,	1,	18,	0,	0, 0x170002c05ULL, NULL, ImplicitList1, OperandInfo68 },  // Inst #2010 = POPCNT64rr
  { 2011,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x3e000041ULL, NULL, NULL, 0 },  // Inst #2011 = POPDS16
  { 2012,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x3e000001ULL, NULL, NULL, 0 },  // Inst #2012 = POPDS32
  { 2013,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xe000041ULL, NULL, NULL, 0 },  // Inst #2013 = POPES16
  { 2014,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xe000001ULL, NULL, NULL, 0 },  // Inst #2014 = POPES32
  { 2015,	0,	0,	18,	0,	0|(1<<MCID::MayLoad), 0x13a000041ULL, ImplicitList6, ImplicitList6, 0 },  // Inst #2015 = POPF16
  { 2016,	0,	0,	18,	0,	0|(1<<MCID::MayLoad), 0x13a000001ULL, ImplicitList6, ImplicitList6, 0 },  // Inst #2016 = POPF32
  { 2017,	0,	0,	18,	0,	0|(1<<MCID::MayLoad), 0x13a000001ULL, ImplicitList8, ImplicitList9, 0 },  // Inst #2017 = POPF64
  { 2018,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x142000141ULL, NULL, NULL, 0 },  // Inst #2018 = POPFS16
  { 2019,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x142000101ULL, NULL, NULL, 0 },  // Inst #2019 = POPFS32
  { 2020,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x142000101ULL, NULL, NULL, 0 },  // Inst #2020 = POPFS64
  { 2021,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x152000141ULL, NULL, NULL, 0 },  // Inst #2021 = POPGS16
  { 2022,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x152000101ULL, NULL, NULL, 0 },  // Inst #2022 = POPGS32
  { 2023,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x152000101ULL, NULL, NULL, 0 },  // Inst #2023 = POPGS64
  { 2024,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2e000041ULL, NULL, NULL, 0 },  // Inst #2024 = POPSS16
  { 2025,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2e000001ULL, NULL, NULL, 0 },  // Inst #2025 = POPSS32
  { 2026,	7,	1,	99,	0,	0|(1<<MCID::MayLoad), 0x1d7800146ULL, NULL, NULL, OperandInfo32 },  // Inst #2026 = PORrm
  { 2027,	3,	1,	100,	0,	0|(1<<MCID::Commutable), 0x1d7800145ULL, NULL, NULL, OperandInfo33 },  // Inst #2027 = PORrr
  { 2028,	5,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a000118ULL, NULL, NULL, OperandInfo38 },  // Inst #2028 = PREFETCH
  { 2029,	5,	0,	182,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x30000118ULL, NULL, NULL, OperandInfo38 },  // Inst #2029 = PREFETCHNTA
  { 2030,	5,	0,	182,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x30000119ULL, NULL, NULL, OperandInfo38 },  // Inst #2030 = PREFETCHT0
  { 2031,	5,	0,	182,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x3000011aULL, NULL, NULL, OperandInfo38 },  // Inst #2031 = PREFETCHT1
  { 2032,	5,	0,	182,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x3000011bULL, NULL, NULL, OperandInfo38 },  // Inst #2032 = PREFETCHT2
  { 2033,	5,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a000119ULL, NULL, NULL, OperandInfo38 },  // Inst #2033 = PREFETCHW
  { 2034,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0x1ed800146ULL, NULL, NULL, OperandInfo32 },  // Inst #2034 = PSADBWrm
  { 2035,	3,	1,	132,	0,	0|(1<<MCID::Commutable), 0x1ed800145ULL, NULL, NULL, OperandInfo33 },  // Inst #2035 = PSADBWrr
  { 2036,	7,	1,	184,	0,	0|(1<<MCID::MayLoad), 0x1800d46ULL, NULL, NULL, OperandInfo32 },  // Inst #2036 = PSHUFBrm
  { 2037,	3,	1,	185,	0,	0, 0x1800d45ULL, NULL, NULL, OperandInfo33 },  // Inst #2037 = PSHUFBrr
  { 2038,	7,	1,	183,	0,	0|(1<<MCID::MayLoad), 0xe1804146ULL, NULL, NULL, OperandInfo49 },  // Inst #2038 = PSHUFDmi
  { 2039,	3,	1,	183,	0,	0, 0xe1804145ULL, NULL, NULL, OperandInfo50 },  // Inst #2039 = PSHUFDri
  { 2040,	7,	1,	183,	0,	0|(1<<MCID::MayLoad), 0xe1804c06ULL, NULL, NULL, OperandInfo49 },  // Inst #2040 = PSHUFHWmi
  { 2041,	3,	1,	183,	0,	0, 0xe1804c05ULL, NULL, NULL, OperandInfo50 },  // Inst #2041 = PSHUFHWri
  { 2042,	7,	1,	183,	0,	0|(1<<MCID::MayLoad), 0xe1804b06ULL, NULL, NULL, OperandInfo49 },  // Inst #2042 = PSHUFLWmi
  { 2043,	3,	1,	183,	0,	0, 0xe1804b05ULL, NULL, NULL, OperandInfo50 },  // Inst #2043 = PSHUFLWri
  { 2044,	7,	1,	186,	0,	0|(1<<MCID::MayLoad), 0x11800d46ULL, NULL, NULL, OperandInfo32 },  // Inst #2044 = PSIGNBrm
  { 2045,	3,	1,	187,	0,	0, 0x11800d45ULL, NULL, NULL, OperandInfo33 },  // Inst #2045 = PSIGNBrr
  { 2046,	7,	1,	186,	0,	0|(1<<MCID::MayLoad), 0x15800d46ULL, NULL, NULL, OperandInfo32 },  // Inst #2046 = PSIGNDrm
  { 2047,	3,	1,	187,	0,	0, 0x15800d45ULL, NULL, NULL, OperandInfo33 },  // Inst #2047 = PSIGNDrr
  { 2048,	7,	1,	186,	0,	0|(1<<MCID::MayLoad), 0x13800d46ULL, NULL, NULL, OperandInfo32 },  // Inst #2048 = PSIGNWrm
  { 2049,	3,	1,	187,	0,	0, 0x13800d45ULL, NULL, NULL, OperandInfo33 },  // Inst #2049 = PSIGNWrr
  { 2050,	3,	1,	18,	0,	0, 0xe7804157ULL, NULL, NULL, OperandInfo205 },  // Inst #2050 = PSLLDQri
  { 2051,	3,	1,	135,	0,	0, 0xe5804156ULL, NULL, NULL, OperandInfo205 },  // Inst #2051 = PSLLDri
  { 2052,	7,	1,	136,	0,	0|(1<<MCID::MayLoad), 0x1e5800146ULL, NULL, NULL, OperandInfo32 },  // Inst #2052 = PSLLDrm
  { 2053,	3,	1,	137,	0,	0, 0x1e5800145ULL, NULL, NULL, OperandInfo33 },  // Inst #2053 = PSLLDrr
  { 2054,	3,	1,	135,	0,	0, 0xe7804156ULL, NULL, NULL, OperandInfo205 },  // Inst #2054 = PSLLQri
  { 2055,	7,	1,	136,	0,	0|(1<<MCID::MayLoad), 0x1e7800146ULL, NULL, NULL, OperandInfo32 },  // Inst #2055 = PSLLQrm
  { 2056,	3,	1,	137,	0,	0, 0x1e7800145ULL, NULL, NULL, OperandInfo33 },  // Inst #2056 = PSLLQrr
  { 2057,	3,	1,	135,	0,	0, 0xe3804156ULL, NULL, NULL, OperandInfo205 },  // Inst #2057 = PSLLWri
  { 2058,	7,	1,	136,	0,	0|(1<<MCID::MayLoad), 0x1e3800146ULL, NULL, NULL, OperandInfo32 },  // Inst #2058 = PSLLWrm
  { 2059,	3,	1,	137,	0,	0, 0x1e3800145ULL, NULL, NULL, OperandInfo33 },  // Inst #2059 = PSLLWrr
  { 2060,	3,	1,	135,	0,	0, 0xe5804154ULL, NULL, NULL, OperandInfo205 },  // Inst #2060 = PSRADri
  { 2061,	7,	1,	136,	0,	0|(1<<MCID::MayLoad), 0x1c5800146ULL, NULL, NULL, OperandInfo32 },  // Inst #2061 = PSRADrm
  { 2062,	3,	1,	137,	0,	0, 0x1c5800145ULL, NULL, NULL, OperandInfo33 },  // Inst #2062 = PSRADrr
  { 2063,	3,	1,	135,	0,	0, 0xe3804154ULL, NULL, NULL, OperandInfo205 },  // Inst #2063 = PSRAWri
  { 2064,	7,	1,	136,	0,	0|(1<<MCID::MayLoad), 0x1c3800146ULL, NULL, NULL, OperandInfo32 },  // Inst #2064 = PSRAWrm
  { 2065,	3,	1,	137,	0,	0, 0x1c3800145ULL, NULL, NULL, OperandInfo33 },  // Inst #2065 = PSRAWrr
  { 2066,	3,	1,	18,	0,	0, 0xe7804153ULL, NULL, NULL, OperandInfo205 },  // Inst #2066 = PSRLDQri
  { 2067,	3,	1,	135,	0,	0, 0xe5804152ULL, NULL, NULL, OperandInfo205 },  // Inst #2067 = PSRLDri
  { 2068,	7,	1,	136,	0,	0|(1<<MCID::MayLoad), 0x1a5800146ULL, NULL, NULL, OperandInfo32 },  // Inst #2068 = PSRLDrm
  { 2069,	3,	1,	137,	0,	0, 0x1a5800145ULL, NULL, NULL, OperandInfo33 },  // Inst #2069 = PSRLDrr
  { 2070,	3,	1,	135,	0,	0, 0xe7804152ULL, NULL, NULL, OperandInfo205 },  // Inst #2070 = PSRLQri
  { 2071,	7,	1,	136,	0,	0|(1<<MCID::MayLoad), 0x1a7800146ULL, NULL, NULL, OperandInfo32 },  // Inst #2071 = PSRLQrm
  { 2072,	3,	1,	137,	0,	0, 0x1a7800145ULL, NULL, NULL, OperandInfo33 },  // Inst #2072 = PSRLQrr
  { 2073,	3,	1,	135,	0,	0, 0xe3804152ULL, NULL, NULL, OperandInfo205 },  // Inst #2073 = PSRLWri
  { 2074,	7,	1,	136,	0,	0|(1<<MCID::MayLoad), 0x1a3800146ULL, NULL, NULL, OperandInfo32 },  // Inst #2074 = PSRLWrm
  { 2075,	3,	1,	137,	0,	0, 0x1a3800145ULL, NULL, NULL, OperandInfo33 },  // Inst #2075 = PSRLWrr
  { 2076,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0x1f1800146ULL, NULL, NULL, OperandInfo32 },  // Inst #2076 = PSUBBrm
  { 2077,	3,	1,	132,	0,	0, 0x1f1800145ULL, NULL, NULL, OperandInfo33 },  // Inst #2077 = PSUBBrr
  { 2078,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0x1f5800146ULL, NULL, NULL, OperandInfo32 },  // Inst #2078 = PSUBDrm
  { 2079,	3,	1,	132,	0,	0, 0x1f5800145ULL, NULL, NULL, OperandInfo33 },  // Inst #2079 = PSUBDrr
  { 2080,	7,	1,	129,	0,	0|(1<<MCID::MayLoad), 0x1f7800146ULL, NULL, NULL, OperandInfo32 },  // Inst #2080 = PSUBQrm
  { 2081,	3,	1,	130,	0,	0, 0x1f7800145ULL, NULL, NULL, OperandInfo33 },  // Inst #2081 = PSUBQrr
  { 2082,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0x1d1800146ULL, NULL, NULL, OperandInfo32 },  // Inst #2082 = PSUBSBrm
  { 2083,	3,	1,	132,	0,	0, 0x1d1800145ULL, NULL, NULL, OperandInfo33 },  // Inst #2083 = PSUBSBrr
  { 2084,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0x1d3800146ULL, NULL, NULL, OperandInfo32 },  // Inst #2084 = PSUBSWrm
  { 2085,	3,	1,	132,	0,	0, 0x1d3800145ULL, NULL, NULL, OperandInfo33 },  // Inst #2085 = PSUBSWrr
  { 2086,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0x1b1800146ULL, NULL, NULL, OperandInfo32 },  // Inst #2086 = PSUBUSBrm
  { 2087,	3,	1,	132,	0,	0, 0x1b1800145ULL, NULL, NULL, OperandInfo33 },  // Inst #2087 = PSUBUSBrr
  { 2088,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0x1b3800146ULL, NULL, NULL, OperandInfo32 },  // Inst #2088 = PSUBUSWrm
  { 2089,	3,	1,	132,	0,	0, 0x1b3800145ULL, NULL, NULL, OperandInfo33 },  // Inst #2089 = PSUBUSWrr
  { 2090,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0x1f3800146ULL, NULL, NULL, OperandInfo32 },  // Inst #2090 = PSUBWrm
  { 2091,	3,	1,	132,	0,	0, 0x1f3800145ULL, NULL, NULL, OperandInfo33 },  // Inst #2091 = PSUBWrr
  { 2092,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x10176000106ULL, NULL, NULL, OperandInfo147 },  // Inst #2092 = PSWAPDrm
  { 2093,	2,	1,	18,	0,	0, 0x10176000105ULL, NULL, NULL, OperandInfo151 },  // Inst #2093 = PSWAPDrr
  { 2094,	6,	0,	18,	0,	0|(1<<MCID::MayLoad), 0x2f800d46ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #2094 = PTESTrm
  { 2095,	2,	0,	18,	0,	0, 0x2f800d45ULL, NULL, ImplicitList1, OperandInfo48 },  // Inst #2095 = PTESTrr
  { 2096,	7,	1,	199,	0,	0|(1<<MCID::MayLoad), 0xd1800146ULL, NULL, NULL, OperandInfo32 },  // Inst #2096 = PUNPCKHBWrm
  { 2097,	3,	1,	199,	0,	0, 0xd1800145ULL, NULL, NULL, OperandInfo33 },  // Inst #2097 = PUNPCKHBWrr
  { 2098,	7,	1,	199,	0,	0|(1<<MCID::MayLoad), 0xd5800146ULL, NULL, NULL, OperandInfo32 },  // Inst #2098 = PUNPCKHDQrm
  { 2099,	3,	1,	199,	0,	0, 0xd5800145ULL, NULL, NULL, OperandInfo33 },  // Inst #2099 = PUNPCKHDQrr
  { 2100,	7,	1,	199,	0,	0|(1<<MCID::MayLoad), 0xdb800146ULL, NULL, NULL, OperandInfo32 },  // Inst #2100 = PUNPCKHQDQrm
  { 2101,	3,	1,	199,	0,	0, 0xdb800145ULL, NULL, NULL, OperandInfo33 },  // Inst #2101 = PUNPCKHQDQrr
  { 2102,	7,	1,	199,	0,	0|(1<<MCID::MayLoad), 0xd3800146ULL, NULL, NULL, OperandInfo32 },  // Inst #2102 = PUNPCKHWDrm
  { 2103,	3,	1,	199,	0,	0, 0xd3800145ULL, NULL, NULL, OperandInfo33 },  // Inst #2103 = PUNPCKHWDrr
  { 2104,	7,	1,	199,	0,	0|(1<<MCID::MayLoad), 0xc1800146ULL, NULL, NULL, OperandInfo32 },  // Inst #2104 = PUNPCKLBWrm
  { 2105,	3,	1,	199,	0,	0, 0xc1800145ULL, NULL, NULL, OperandInfo33 },  // Inst #2105 = PUNPCKLBWrr
  { 2106,	7,	1,	199,	0,	0|(1<<MCID::MayLoad), 0xc5800146ULL, NULL, NULL, OperandInfo32 },  // Inst #2106 = PUNPCKLDQrm
  { 2107,	3,	1,	199,	0,	0, 0xc5800145ULL, NULL, NULL, OperandInfo33 },  // Inst #2107 = PUNPCKLDQrr
  { 2108,	7,	1,	199,	0,	0|(1<<MCID::MayLoad), 0xd9800146ULL, NULL, NULL, OperandInfo32 },  // Inst #2108 = PUNPCKLQDQrm
  { 2109,	3,	1,	199,	0,	0, 0xd9800145ULL, NULL, NULL, OperandInfo33 },  // Inst #2109 = PUNPCKLQDQrr
  { 2110,	7,	1,	199,	0,	0|(1<<MCID::MayLoad), 0xc3800146ULL, NULL, NULL, OperandInfo32 },  // Inst #2110 = PUNPCKLWDrm
  { 2111,	3,	1,	199,	0,	0, 0xc3800145ULL, NULL, NULL, OperandInfo33 },  // Inst #2111 = PUNPCKLWDrr
  { 2112,	1,	0,	18,	0,	0|(1<<MCID::MayStore), 0xa0000042ULL, ImplicitList6, ImplicitList6, OperandInfo115 },  // Inst #2112 = PUSH16r
  { 2113,	5,	0,	18,	0,	0|(1<<MCID::MayStore), 0x1fe00005eULL, ImplicitList6, ImplicitList6, OperandInfo38 },  // Inst #2113 = PUSH16rmm
  { 2114,	1,	0,	18,	0,	0|(1<<MCID::MayStore), 0x1fe000056ULL, ImplicitList6, ImplicitList6, OperandInfo115 },  // Inst #2114 = PUSH16rmr
  { 2115,	1,	0,	18,	0,	0|(1<<MCID::MayStore), 0xa0000002ULL, ImplicitList6, ImplicitList6, OperandInfo74 },  // Inst #2115 = PUSH32r
  { 2116,	5,	0,	18,	0,	0|(1<<MCID::MayStore), 0x1fe00001eULL, ImplicitList6, ImplicitList6, OperandInfo38 },  // Inst #2116 = PUSH32rmm
  { 2117,	1,	0,	18,	0,	0|(1<<MCID::MayStore), 0x1fe000016ULL, ImplicitList6, ImplicitList6, OperandInfo74 },  // Inst #2117 = PUSH32rmr
  { 2118,	1,	0,	18,	0,	0|(1<<MCID::MayStore), 0xd000c001ULL, ImplicitList8, ImplicitList8, OperandInfo2 },  // Inst #2118 = PUSH64i16
  { 2119,	1,	0,	18,	0,	0|(1<<MCID::MayStore), 0xd0014001ULL, ImplicitList8, ImplicitList8, OperandInfo2 },  // Inst #2119 = PUSH64i32
  { 2120,	1,	0,	18,	0,	0|(1<<MCID::MayStore), 0xd4004001ULL, ImplicitList8, ImplicitList8, OperandInfo2 },  // Inst #2120 = PUSH64i8
  { 2121,	1,	0,	18,	0,	0|(1<<MCID::MayStore), 0xa0000002ULL, ImplicitList8, ImplicitList8, OperandInfo76 },  // Inst #2121 = PUSH64r
  { 2122,	5,	0,	18,	0,	0|(1<<MCID::MayStore), 0x1fe00001eULL, ImplicitList8, ImplicitList8, OperandInfo38 },  // Inst #2122 = PUSH64rmm
  { 2123,	1,	0,	18,	0,	0|(1<<MCID::MayStore), 0x1fe000016ULL, ImplicitList8, ImplicitList8, OperandInfo76 },  // Inst #2123 = PUSH64rmr
  { 2124,	0,	0,	18,	0,	0|(1<<MCID::MayStore), 0xc0000001ULL, ImplicitList49, ImplicitList6, 0 },  // Inst #2124 = PUSHA32
  { 2125,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1c000041ULL, NULL, NULL, 0 },  // Inst #2125 = PUSHCS16
  { 2126,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1c000001ULL, NULL, NULL, 0 },  // Inst #2126 = PUSHCS32
  { 2127,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x3c000041ULL, NULL, NULL, 0 },  // Inst #2127 = PUSHDS16
  { 2128,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x3c000001ULL, NULL, NULL, 0 },  // Inst #2128 = PUSHDS32
  { 2129,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xc000041ULL, NULL, NULL, 0 },  // Inst #2129 = PUSHES16
  { 2130,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xc000001ULL, NULL, NULL, 0 },  // Inst #2130 = PUSHES32
  { 2131,	0,	0,	18,	0,	0|(1<<MCID::MayStore), 0x138000041ULL, ImplicitList6, ImplicitList6, 0 },  // Inst #2131 = PUSHF16
  { 2132,	0,	0,	18,	0,	0|(1<<MCID::MayStore), 0x138000001ULL, ImplicitList6, ImplicitList6, 0 },  // Inst #2132 = PUSHF32
  { 2133,	0,	0,	18,	0,	0|(1<<MCID::MayStore), 0x138000001ULL, ImplicitList9, ImplicitList8, 0 },  // Inst #2133 = PUSHF64
  { 2134,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x140000141ULL, NULL, NULL, 0 },  // Inst #2134 = PUSHFS16
  { 2135,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x140000101ULL, NULL, NULL, 0 },  // Inst #2135 = PUSHFS32
  { 2136,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x140000101ULL, NULL, NULL, 0 },  // Inst #2136 = PUSHFS64
  { 2137,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x150000141ULL, NULL, NULL, 0 },  // Inst #2137 = PUSHGS16
  { 2138,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x150000101ULL, NULL, NULL, 0 },  // Inst #2138 = PUSHGS32
  { 2139,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x150000101ULL, NULL, NULL, 0 },  // Inst #2139 = PUSHGS64
  { 2140,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2c000041ULL, NULL, NULL, 0 },  // Inst #2140 = PUSHSS16
  { 2141,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2c000001ULL, NULL, NULL, 0 },  // Inst #2141 = PUSHSS32
  { 2142,	1,	0,	18,	0,	0|(1<<MCID::MayStore), 0xd000c041ULL, ImplicitList6, ImplicitList6, OperandInfo2 },  // Inst #2142 = PUSHi16
  { 2143,	1,	0,	18,	0,	0|(1<<MCID::MayStore), 0xd0014001ULL, ImplicitList6, ImplicitList6, OperandInfo2 },  // Inst #2143 = PUSHi32
  { 2144,	1,	0,	18,	0,	0|(1<<MCID::MayStore), 0xd4004001ULL, ImplicitList6, ImplicitList6, OperandInfo2 },  // Inst #2144 = PUSHi8
  { 2145,	7,	1,	99,	0,	0|(1<<MCID::MayLoad), 0x1df800146ULL, NULL, NULL, OperandInfo32 },  // Inst #2145 = PXORrm
  { 2146,	3,	1,	100,	0,	0|(1<<MCID::Commutable), 0x1df800145ULL, NULL, NULL, OperandInfo33 },  // Inst #2146 = PXORrr
  { 2147,	5,	0,	90,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a200005aULL, NULL, ImplicitList1, OperandInfo38 },  // Inst #2147 = RCL16m1
  { 2148,	5,	0,	90,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a600005aULL, ImplicitList50, ImplicitList1, OperandInfo38 },  // Inst #2148 = RCL16mCL
  { 2149,	6,	0,	90,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x18200405aULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #2149 = RCL16mi
  { 2150,	2,	1,	90,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a2000052ULL, NULL, ImplicitList1, OperandInfo113 },  // Inst #2150 = RCL16r1
  { 2151,	2,	1,	90,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a6000052ULL, ImplicitList50, ImplicitList1, OperandInfo113 },  // Inst #2151 = RCL16rCL
  { 2152,	3,	1,	90,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x182004052ULL, NULL, ImplicitList1, OperandInfo17 },  // Inst #2152 = RCL16ri
  { 2153,	5,	0,	90,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a200001aULL, NULL, ImplicitList1, OperandInfo38 },  // Inst #2153 = RCL32m1
  { 2154,	5,	0,	90,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a600001aULL, ImplicitList50, ImplicitList1, OperandInfo38 },  // Inst #2154 = RCL32mCL
  { 2155,	6,	0,	90,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x18200401aULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #2155 = RCL32mi
  { 2156,	2,	1,	90,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a2000012ULL, NULL, ImplicitList1, OperandInfo69 },  // Inst #2156 = RCL32r1
  { 2157,	2,	1,	90,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a6000012ULL, ImplicitList50, ImplicitList1, OperandInfo69 },  // Inst #2157 = RCL32rCL
  { 2158,	3,	1,	90,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x182004012ULL, NULL, ImplicitList1, OperandInfo21 },  // Inst #2158 = RCL32ri
  { 2159,	5,	0,	90,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a200201aULL, NULL, ImplicitList1, OperandInfo38 },  // Inst #2159 = RCL64m1
  { 2160,	5,	0,	90,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a600201aULL, ImplicitList50, ImplicitList1, OperandInfo38 },  // Inst #2160 = RCL64mCL
  { 2161,	6,	0,	90,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x18200601aULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #2161 = RCL64mi
  { 2162,	2,	1,	90,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a2002012ULL, NULL, ImplicitList1, OperandInfo70 },  // Inst #2162 = RCL64r1
  { 2163,	2,	1,	90,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a6002012ULL, ImplicitList50, ImplicitList1, OperandInfo70 },  // Inst #2163 = RCL64rCL
  { 2164,	3,	1,	90,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x182006012ULL, NULL, ImplicitList1, OperandInfo25 },  // Inst #2164 = RCL64ri
  { 2165,	5,	0,	90,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a000001aULL, NULL, ImplicitList1, OperandInfo38 },  // Inst #2165 = RCL8m1
  { 2166,	5,	0,	90,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a400001aULL, ImplicitList50, ImplicitList1, OperandInfo38 },  // Inst #2166 = RCL8mCL
  { 2167,	6,	0,	90,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x18000401aULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #2167 = RCL8mi
  { 2168,	2,	1,	90,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a0000012ULL, NULL, ImplicitList1, OperandInfo114 },  // Inst #2168 = RCL8r1
  { 2169,	2,	1,	90,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a4000012ULL, ImplicitList50, ImplicitList1, OperandInfo114 },  // Inst #2169 = RCL8rCL
  { 2170,	3,	1,	90,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x180004012ULL, NULL, ImplicitList1, OperandInfo29 },  // Inst #2170 = RCL8ri
  { 2171,	6,	1,	190,	0,	0|(1<<MCID::MayLoad), 0xa6800106ULL, NULL, NULL, OperandInfo47 },  // Inst #2171 = RCPPSm
  { 2172,	6,	1,	190,	0,	0|(1<<MCID::MayLoad), 0xa6800106ULL, NULL, NULL, OperandInfo47 },  // Inst #2172 = RCPPSm_Int
  { 2173,	2,	1,	191,	0,	0, 0xa6800105ULL, NULL, NULL, OperandInfo48 },  // Inst #2173 = RCPPSr
  { 2174,	2,	1,	191,	0,	0, 0xa6800105ULL, NULL, NULL, OperandInfo48 },  // Inst #2174 = RCPPSr_Int
  { 2175,	6,	1,	190,	0,	0|(1<<MCID::MayLoad), 0xa6000c06ULL, NULL, NULL, OperandInfo101 },  // Inst #2175 = RCPSSm
  { 2176,	6,	1,	190,	0,	0|(1<<MCID::MayLoad), 0xa6000c06ULL, NULL, NULL, OperandInfo47 },  // Inst #2176 = RCPSSm_Int
  { 2177,	2,	1,	18,	0,	0, 0xa6000c05ULL, NULL, NULL, OperandInfo126 },  // Inst #2177 = RCPSSr
  { 2178,	2,	1,	191,	0,	0, 0xa6000c05ULL, NULL, NULL, OperandInfo48 },  // Inst #2178 = RCPSSr_Int
  { 2179,	5,	0,	90,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a200005bULL, NULL, ImplicitList1, OperandInfo38 },  // Inst #2179 = RCR16m1
  { 2180,	5,	0,	90,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a600005bULL, ImplicitList50, ImplicitList1, OperandInfo38 },  // Inst #2180 = RCR16mCL
  { 2181,	6,	0,	90,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x18200405bULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #2181 = RCR16mi
  { 2182,	2,	1,	90,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a2000053ULL, NULL, ImplicitList1, OperandInfo113 },  // Inst #2182 = RCR16r1
  { 2183,	2,	1,	90,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a6000053ULL, ImplicitList50, ImplicitList1, OperandInfo113 },  // Inst #2183 = RCR16rCL
  { 2184,	3,	1,	90,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x182004053ULL, NULL, ImplicitList1, OperandInfo17 },  // Inst #2184 = RCR16ri
  { 2185,	5,	0,	90,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a200001bULL, NULL, ImplicitList1, OperandInfo38 },  // Inst #2185 = RCR32m1
  { 2186,	5,	0,	90,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a600001bULL, ImplicitList50, ImplicitList1, OperandInfo38 },  // Inst #2186 = RCR32mCL
  { 2187,	6,	0,	90,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x18200401bULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #2187 = RCR32mi
  { 2188,	2,	1,	90,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a2000013ULL, NULL, ImplicitList1, OperandInfo69 },  // Inst #2188 = RCR32r1
  { 2189,	2,	1,	90,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a6000013ULL, ImplicitList50, ImplicitList1, OperandInfo69 },  // Inst #2189 = RCR32rCL
  { 2190,	3,	1,	90,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x182004013ULL, NULL, ImplicitList1, OperandInfo21 },  // Inst #2190 = RCR32ri
  { 2191,	5,	0,	90,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a200201bULL, NULL, ImplicitList1, OperandInfo38 },  // Inst #2191 = RCR64m1
  { 2192,	5,	0,	90,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a600201bULL, ImplicitList50, ImplicitList1, OperandInfo38 },  // Inst #2192 = RCR64mCL
  { 2193,	6,	0,	90,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x18200601bULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #2193 = RCR64mi
  { 2194,	2,	1,	90,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a2002013ULL, NULL, ImplicitList1, OperandInfo70 },  // Inst #2194 = RCR64r1
  { 2195,	2,	1,	90,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a6002013ULL, ImplicitList50, ImplicitList1, OperandInfo70 },  // Inst #2195 = RCR64rCL
  { 2196,	3,	1,	90,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x182006013ULL, NULL, ImplicitList1, OperandInfo25 },  // Inst #2196 = RCR64ri
  { 2197,	5,	0,	90,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a000001bULL, NULL, ImplicitList1, OperandInfo38 },  // Inst #2197 = RCR8m1
  { 2198,	5,	0,	90,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a400001bULL, ImplicitList50, ImplicitList1, OperandInfo38 },  // Inst #2198 = RCR8mCL
  { 2199,	6,	0,	90,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x18000401bULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #2199 = RCR8mi
  { 2200,	2,	1,	90,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a0000013ULL, NULL, ImplicitList1, OperandInfo114 },  // Inst #2200 = RCR8r1
  { 2201,	2,	1,	90,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a4000013ULL, ImplicitList50, ImplicitList1, OperandInfo114 },  // Inst #2201 = RCR8rCL
  { 2202,	3,	1,	90,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x180004013ULL, NULL, ImplicitList1, OperandInfo29 },  // Inst #2202 = RCR8ri
  { 2203,	1,	1,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x15c000c10ULL, NULL, NULL, OperandInfo74 },  // Inst #2203 = RDFSBASE
  { 2204,	1,	1,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x15c002c10ULL, NULL, NULL, OperandInfo76 },  // Inst #2204 = RDFSBASE64
  { 2205,	1,	1,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x15c000c11ULL, NULL, NULL, OperandInfo74 },  // Inst #2205 = RDGSBASE
  { 2206,	1,	1,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x15c002c11ULL, NULL, NULL, OperandInfo76 },  // Inst #2206 = RDGSBASE64
  { 2207,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x64000101ULL, NULL, NULL, 0 },  // Inst #2207 = RDMSR
  { 2208,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x66000101ULL, NULL, NULL, 0 },  // Inst #2208 = RDPMC
  { 2209,	1,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x18e000156ULL, NULL, ImplicitList1, OperandInfo115 },  // Inst #2209 = RDRAND16r
  { 2210,	1,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x18e000116ULL, NULL, ImplicitList1, OperandInfo74 },  // Inst #2210 = RDRAND32r
  { 2211,	1,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x18e002116ULL, NULL, ImplicitList1, OperandInfo76 },  // Inst #2211 = RDRAND64r
  { 2212,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x62000101ULL, NULL, ImplicitList17, 0 },  // Inst #2212 = RDTSC
  { 2213,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x200012aULL, NULL, ImplicitList51, 0 },  // Inst #2213 = RDTSCP
  { 2214,	6,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo16 },  // Inst #2214 = RELEASE_MOV16mr
  { 2215,	6,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo20 },  // Inst #2215 = RELEASE_MOV32mr
  { 2216,	6,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo24 },  // Inst #2216 = RELEASE_MOV64mr
  { 2217,	6,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo28 },  // Inst #2217 = RELEASE_MOV8mr
  { 2218,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1e4000001ULL, ImplicitList47, ImplicitList25, 0 },  // Inst #2218 = REPNE_PREFIX
  { 2219,	0,	0,	72,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x148000201ULL, ImplicitList52, ImplicitList52, 0 },  // Inst #2219 = REP_MOVSB_32
  { 2220,	0,	0,	72,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x148000201ULL, ImplicitList53, ImplicitList53, 0 },  // Inst #2220 = REP_MOVSB_64
  { 2221,	0,	0,	72,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x14a000201ULL, ImplicitList52, ImplicitList52, 0 },  // Inst #2221 = REP_MOVSD_32
  { 2222,	0,	0,	72,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x14a000201ULL, ImplicitList53, ImplicitList53, 0 },  // Inst #2222 = REP_MOVSD_64
  { 2223,	0,	0,	72,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x14a002201ULL, ImplicitList53, ImplicitList53, 0 },  // Inst #2223 = REP_MOVSQ_64
  { 2224,	0,	0,	72,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x14a000241ULL, ImplicitList52, ImplicitList52, 0 },  // Inst #2224 = REP_MOVSW_32
  { 2225,	0,	0,	72,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x14a000241ULL, ImplicitList53, ImplicitList53, 0 },  // Inst #2225 = REP_MOVSW_64
  { 2226,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1e6000001ULL, ImplicitList47, ImplicitList25, 0 },  // Inst #2226 = REP_PREFIX
  { 2227,	0,	0,	73,	0,	0|(1<<MCID::MayStore), 0x154000201ULL, ImplicitList54, ImplicitList55, 0 },  // Inst #2227 = REP_STOSB_32
  { 2228,	0,	0,	73,	0,	0|(1<<MCID::MayStore), 0x154000201ULL, ImplicitList56, ImplicitList57, 0 },  // Inst #2228 = REP_STOSB_64
  { 2229,	0,	0,	73,	0,	0|(1<<MCID::MayStore), 0x156000201ULL, ImplicitList58, ImplicitList55, 0 },  // Inst #2229 = REP_STOSD_32
  { 2230,	0,	0,	73,	0,	0|(1<<MCID::MayStore), 0x156000201ULL, ImplicitList59, ImplicitList57, 0 },  // Inst #2230 = REP_STOSD_64
  { 2231,	0,	0,	73,	0,	0|(1<<MCID::MayStore), 0x156002201ULL, ImplicitList59, ImplicitList57, 0 },  // Inst #2231 = REP_STOSQ_64
  { 2232,	0,	0,	73,	0,	0|(1<<MCID::MayStore), 0x156000241ULL, ImplicitList60, ImplicitList55, 0 },  // Inst #2232 = REP_STOSW_32
  { 2233,	0,	0,	73,	0,	0|(1<<MCID::MayStore), 0x156000241ULL, ImplicitList61, ImplicitList57, 0 },  // Inst #2233 = REP_STOSW_64
  { 2234,	0,	0,	74,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::Variadic), 0x1860e0001ULL, NULL, NULL, 0 },  // Inst #2234 = RET
  { 2235,	1,	0,	75,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::Variadic), 0x1840ec001ULL, NULL, NULL, OperandInfo2 },  // Inst #2235 = RETI
  { 2236,	1,	0,	75,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::Variadic)|(1<<MCID::UnmodeledSideEffects), 0x1840ec041ULL, NULL, NULL, OperandInfo2 },  // Inst #2236 = RETIW
  { 2237,	0,	0,	74,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::Variadic)|(1<<MCID::UnmodeledSideEffects), 0x1860e0041ULL, NULL, NULL, 0 },  // Inst #2237 = RETW
  { 2238,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x90000001ULL, NULL, NULL, 0 },  // Inst #2238 = REX64_PREFIX
  { 2239,	5,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a2000058ULL, NULL, ImplicitList1, OperandInfo38 },  // Inst #2239 = ROL16m1
  { 2240,	5,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a6000058ULL, ImplicitList50, ImplicitList1, OperandInfo38 },  // Inst #2240 = ROL16mCL
  { 2241,	6,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x182004058ULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #2241 = ROL16mi
  { 2242,	2,	1,	90,	0,	0, 0x1a2000050ULL, NULL, ImplicitList1, OperandInfo113 },  // Inst #2242 = ROL16r1
  { 2243,	2,	1,	90,	0,	0, 0x1a6000050ULL, ImplicitList50, ImplicitList1, OperandInfo113 },  // Inst #2243 = ROL16rCL
  { 2244,	3,	1,	90,	0,	0, 0x182004050ULL, NULL, ImplicitList1, OperandInfo17 },  // Inst #2244 = ROL16ri
  { 2245,	5,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a2000018ULL, NULL, ImplicitList1, OperandInfo38 },  // Inst #2245 = ROL32m1
  { 2246,	5,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a6000018ULL, ImplicitList50, ImplicitList1, OperandInfo38 },  // Inst #2246 = ROL32mCL
  { 2247,	6,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x182004018ULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #2247 = ROL32mi
  { 2248,	2,	1,	90,	0,	0, 0x1a2000010ULL, NULL, ImplicitList1, OperandInfo69 },  // Inst #2248 = ROL32r1
  { 2249,	2,	1,	90,	0,	0, 0x1a6000010ULL, ImplicitList50, ImplicitList1, OperandInfo69 },  // Inst #2249 = ROL32rCL
  { 2250,	3,	1,	90,	0,	0, 0x182004010ULL, NULL, ImplicitList1, OperandInfo21 },  // Inst #2250 = ROL32ri
  { 2251,	5,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a2002018ULL, NULL, ImplicitList1, OperandInfo38 },  // Inst #2251 = ROL64m1
  { 2252,	5,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a6002018ULL, ImplicitList50, ImplicitList1, OperandInfo38 },  // Inst #2252 = ROL64mCL
  { 2253,	6,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x182006018ULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #2253 = ROL64mi
  { 2254,	2,	1,	90,	0,	0, 0x1a2002010ULL, NULL, ImplicitList1, OperandInfo70 },  // Inst #2254 = ROL64r1
  { 2255,	2,	1,	90,	0,	0, 0x1a6002010ULL, ImplicitList50, ImplicitList1, OperandInfo70 },  // Inst #2255 = ROL64rCL
  { 2256,	3,	1,	90,	0,	0, 0x182006010ULL, NULL, ImplicitList1, OperandInfo25 },  // Inst #2256 = ROL64ri
  { 2257,	5,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a0000018ULL, NULL, ImplicitList1, OperandInfo38 },  // Inst #2257 = ROL8m1
  { 2258,	5,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a4000018ULL, ImplicitList50, ImplicitList1, OperandInfo38 },  // Inst #2258 = ROL8mCL
  { 2259,	6,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x180004018ULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #2259 = ROL8mi
  { 2260,	2,	1,	90,	0,	0, 0x1a0000010ULL, NULL, ImplicitList1, OperandInfo114 },  // Inst #2260 = ROL8r1
  { 2261,	2,	1,	90,	0,	0, 0x1a4000010ULL, ImplicitList50, ImplicitList1, OperandInfo114 },  // Inst #2261 = ROL8rCL
  { 2262,	3,	1,	90,	0,	0, 0x180004010ULL, NULL, ImplicitList1, OperandInfo29 },  // Inst #2262 = ROL8ri
  { 2263,	5,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a2000059ULL, NULL, ImplicitList1, OperandInfo38 },  // Inst #2263 = ROR16m1
  { 2264,	5,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a6000059ULL, ImplicitList50, ImplicitList1, OperandInfo38 },  // Inst #2264 = ROR16mCL
  { 2265,	6,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x182004059ULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #2265 = ROR16mi
  { 2266,	2,	1,	90,	0,	0, 0x1a2000051ULL, NULL, ImplicitList1, OperandInfo113 },  // Inst #2266 = ROR16r1
  { 2267,	2,	1,	90,	0,	0, 0x1a6000051ULL, ImplicitList50, ImplicitList1, OperandInfo113 },  // Inst #2267 = ROR16rCL
  { 2268,	3,	1,	90,	0,	0, 0x182004051ULL, NULL, ImplicitList1, OperandInfo17 },  // Inst #2268 = ROR16ri
  { 2269,	5,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a2000019ULL, NULL, ImplicitList1, OperandInfo38 },  // Inst #2269 = ROR32m1
  { 2270,	5,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a6000019ULL, ImplicitList50, ImplicitList1, OperandInfo38 },  // Inst #2270 = ROR32mCL
  { 2271,	6,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x182004019ULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #2271 = ROR32mi
  { 2272,	2,	1,	90,	0,	0, 0x1a2000011ULL, NULL, ImplicitList1, OperandInfo69 },  // Inst #2272 = ROR32r1
  { 2273,	2,	1,	90,	0,	0, 0x1a6000011ULL, ImplicitList50, ImplicitList1, OperandInfo69 },  // Inst #2273 = ROR32rCL
  { 2274,	3,	1,	90,	0,	0, 0x182004011ULL, NULL, ImplicitList1, OperandInfo21 },  // Inst #2274 = ROR32ri
  { 2275,	5,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a2002019ULL, NULL, ImplicitList1, OperandInfo38 },  // Inst #2275 = ROR64m1
  { 2276,	5,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a6002019ULL, ImplicitList50, ImplicitList1, OperandInfo38 },  // Inst #2276 = ROR64mCL
  { 2277,	6,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x182006019ULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #2277 = ROR64mi
  { 2278,	2,	1,	90,	0,	0, 0x1a2002011ULL, NULL, ImplicitList1, OperandInfo70 },  // Inst #2278 = ROR64r1
  { 2279,	2,	1,	90,	0,	0, 0x1a6002011ULL, ImplicitList50, ImplicitList1, OperandInfo70 },  // Inst #2279 = ROR64rCL
  { 2280,	3,	1,	90,	0,	0, 0x182006011ULL, NULL, ImplicitList1, OperandInfo25 },  // Inst #2280 = ROR64ri
  { 2281,	5,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a0000019ULL, NULL, ImplicitList1, OperandInfo38 },  // Inst #2281 = ROR8m1
  { 2282,	5,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a4000019ULL, ImplicitList50, ImplicitList1, OperandInfo38 },  // Inst #2282 = ROR8mCL
  { 2283,	6,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x180004019ULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #2283 = ROR8mi
  { 2284,	2,	1,	90,	0,	0, 0x1a0000011ULL, NULL, ImplicitList1, OperandInfo114 },  // Inst #2284 = ROR8r1
  { 2285,	2,	1,	90,	0,	0, 0x1a4000011ULL, ImplicitList50, ImplicitList1, OperandInfo114 },  // Inst #2285 = ROR8rCL
  { 2286,	3,	1,	90,	0,	0, 0x180004011ULL, NULL, ImplicitList1, OperandInfo29 },  // Inst #2286 = ROR8ri
  { 2287,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x3e0005306ULL, NULL, NULL, OperandInfo132 },  // Inst #2287 = RORX32mi
  { 2288,	3,	1,	18,	0,	0, 0x3e0005305ULL, NULL, NULL, OperandInfo133 },  // Inst #2288 = RORX32ri
  { 2289,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x7e0005306ULL, NULL, NULL, OperandInfo134 },  // Inst #2289 = RORX64mi
  { 2290,	3,	1,	18,	0,	0, 0x7e0005305ULL, NULL, NULL, OperandInfo135 },  // Inst #2290 = RORX64ri
  { 2291,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x13004e46ULL, NULL, NULL, OperandInfo49 },  // Inst #2291 = ROUNDPDm
  { 2292,	3,	1,	18,	0,	0, 0x13004e45ULL, NULL, NULL, OperandInfo50 },  // Inst #2292 = ROUNDPDr
  { 2293,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x10804e46ULL, NULL, NULL, OperandInfo49 },  // Inst #2293 = ROUNDPSm
  { 2294,	3,	1,	18,	0,	0, 0x10804e45ULL, NULL, NULL, OperandInfo50 },  // Inst #2294 = ROUNDPSr
  { 2295,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x16004e46ULL, NULL, NULL, OperandInfo65 },  // Inst #2295 = ROUNDSDm
  { 2296,	4,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x16004e45ULL, NULL, NULL, OperandInfo93 },  // Inst #2296 = ROUNDSDr
  { 2297,	4,	1,	18,	0,	0, 0x16004e45ULL, NULL, NULL, OperandInfo66 },  // Inst #2297 = ROUNDSDr_Int
  { 2298,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x14004e46ULL, NULL, NULL, OperandInfo65 },  // Inst #2298 = ROUNDSSm
  { 2299,	4,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x14004e45ULL, NULL, NULL, OperandInfo95 },  // Inst #2299 = ROUNDSSr
  { 2300,	4,	1,	18,	0,	0, 0x14004e45ULL, NULL, NULL, OperandInfo66 },  // Inst #2300 = ROUNDSSr_Int
  { 2301,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x154000101ULL, NULL, NULL, 0 },  // Inst #2301 = RSM
  { 2302,	6,	1,	196,	0,	0|(1<<MCID::MayLoad), 0xa4800106ULL, NULL, NULL, OperandInfo47 },  // Inst #2302 = RSQRTPSm
  { 2303,	6,	1,	196,	0,	0|(1<<MCID::MayLoad), 0xa4800106ULL, NULL, NULL, OperandInfo47 },  // Inst #2303 = RSQRTPSm_Int
  { 2304,	2,	1,	197,	0,	0, 0xa4800105ULL, NULL, NULL, OperandInfo48 },  // Inst #2304 = RSQRTPSr
  { 2305,	2,	1,	197,	0,	0, 0xa4800105ULL, NULL, NULL, OperandInfo48 },  // Inst #2305 = RSQRTPSr_Int
  { 2306,	6,	1,	196,	0,	0|(1<<MCID::MayLoad), 0xa4000c06ULL, NULL, NULL, OperandInfo101 },  // Inst #2306 = RSQRTSSm
  { 2307,	6,	1,	196,	0,	0|(1<<MCID::MayLoad), 0xa4000c06ULL, NULL, NULL, OperandInfo47 },  // Inst #2307 = RSQRTSSm_Int
  { 2308,	2,	1,	18,	0,	0, 0xa4000c05ULL, NULL, NULL, OperandInfo126 },  // Inst #2308 = RSQRTSSr
  { 2309,	2,	1,	197,	0,	0, 0xa4000c05ULL, NULL, NULL, OperandInfo48 },  // Inst #2309 = RSQRTSSr_Int
  { 2310,	0,	0,	18,	0,	0, 0x13c000001ULL, ImplicitList27, ImplicitList1, 0 },  // Inst #2310 = SAHF
  { 2311,	5,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a200005fULL, NULL, ImplicitList1, OperandInfo38 },  // Inst #2311 = SAR16m1
  { 2312,	5,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a600005fULL, ImplicitList50, ImplicitList1, OperandInfo38 },  // Inst #2312 = SAR16mCL
  { 2313,	6,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x18200405fULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #2313 = SAR16mi
  { 2314,	2,	1,	90,	0,	0, 0x1a2000057ULL, NULL, ImplicitList1, OperandInfo113 },  // Inst #2314 = SAR16r1
  { 2315,	2,	1,	90,	0,	0, 0x1a6000057ULL, ImplicitList50, ImplicitList1, OperandInfo113 },  // Inst #2315 = SAR16rCL
  { 2316,	3,	1,	90,	0,	0, 0x182004057ULL, NULL, ImplicitList1, OperandInfo17 },  // Inst #2316 = SAR16ri
  { 2317,	5,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a200001fULL, NULL, ImplicitList1, OperandInfo38 },  // Inst #2317 = SAR32m1
  { 2318,	5,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a600001fULL, ImplicitList50, ImplicitList1, OperandInfo38 },  // Inst #2318 = SAR32mCL
  { 2319,	6,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x18200401fULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #2319 = SAR32mi
  { 2320,	2,	1,	90,	0,	0, 0x1a2000017ULL, NULL, ImplicitList1, OperandInfo69 },  // Inst #2320 = SAR32r1
  { 2321,	2,	1,	90,	0,	0, 0x1a6000017ULL, ImplicitList50, ImplicitList1, OperandInfo69 },  // Inst #2321 = SAR32rCL
  { 2322,	3,	1,	90,	0,	0, 0x182004017ULL, NULL, ImplicitList1, OperandInfo21 },  // Inst #2322 = SAR32ri
  { 2323,	5,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a200201fULL, NULL, ImplicitList1, OperandInfo38 },  // Inst #2323 = SAR64m1
  { 2324,	5,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a600201fULL, ImplicitList50, ImplicitList1, OperandInfo38 },  // Inst #2324 = SAR64mCL
  { 2325,	6,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x18200601fULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #2325 = SAR64mi
  { 2326,	2,	1,	90,	0,	0, 0x1a2002017ULL, NULL, ImplicitList1, OperandInfo70 },  // Inst #2326 = SAR64r1
  { 2327,	2,	1,	90,	0,	0, 0x1a6002017ULL, ImplicitList50, ImplicitList1, OperandInfo70 },  // Inst #2327 = SAR64rCL
  { 2328,	3,	1,	90,	0,	0, 0x182006017ULL, NULL, ImplicitList1, OperandInfo25 },  // Inst #2328 = SAR64ri
  { 2329,	5,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a000001fULL, NULL, ImplicitList1, OperandInfo38 },  // Inst #2329 = SAR8m1
  { 2330,	5,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a400001fULL, ImplicitList50, ImplicitList1, OperandInfo38 },  // Inst #2330 = SAR8mCL
  { 2331,	6,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x18000401fULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #2331 = SAR8mi
  { 2332,	2,	1,	90,	0,	0, 0x1a0000017ULL, NULL, ImplicitList1, OperandInfo114 },  // Inst #2332 = SAR8r1
  { 2333,	2,	1,	90,	0,	0, 0x1a4000017ULL, ImplicitList50, ImplicitList1, OperandInfo114 },  // Inst #2333 = SAR8rCL
  { 2334,	3,	1,	90,	0,	0, 0x180004017ULL, NULL, ImplicitList1, OperandInfo29 },  // Inst #2334 = SAR8ri
  { 2335,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x13ee001206ULL, NULL, NULL, OperandInfo63 },  // Inst #2335 = SARX32rm
  { 2336,	3,	1,	18,	0,	0, 0x13ee001205ULL, NULL, NULL, OperandInfo52 },  // Inst #2336 = SARX32rr
  { 2337,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x17ee001206ULL, NULL, NULL, OperandInfo64 },  // Inst #2337 = SARX64rm
  { 2338,	3,	1,	18,	0,	0, 0x17ee001205ULL, NULL, NULL, OperandInfo54 },  // Inst #2338 = SARX64rr
  { 2339,	1,	0,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x3a00c041ULL, ImplicitList1, ImplicitList1, OperandInfo2 },  // Inst #2339 = SBB16i16
  { 2340,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10200c05bULL, ImplicitList1, ImplicitList1, OperandInfo15 },  // Inst #2340 = SBB16mi
  { 2341,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10600405bULL, ImplicitList1, ImplicitList1, OperandInfo15 },  // Inst #2341 = SBB16mi8
  { 2342,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x32000044ULL, ImplicitList1, ImplicitList1, OperandInfo16 },  // Inst #2342 = SBB16mr
  { 2343,	3,	1,	3,	0,	0, 0x10200c053ULL, ImplicitList1, ImplicitList1, OperandInfo17 },  // Inst #2343 = SBB16ri
  { 2344,	3,	1,	3,	0,	0, 0x106004053ULL, ImplicitList1, ImplicitList1, OperandInfo17 },  // Inst #2344 = SBB16ri8
  { 2345,	7,	1,	3,	0,	0|(1<<MCID::MayLoad), 0x36000046ULL, ImplicitList1, ImplicitList1, OperandInfo18 },  // Inst #2345 = SBB16rm
  { 2346,	3,	1,	3,	0,	0, 0x32000043ULL, ImplicitList1, ImplicitList1, OperandInfo19 },  // Inst #2346 = SBB16rr
  { 2347,	3,	1,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x36000045ULL, ImplicitList1, ImplicitList1, OperandInfo19 },  // Inst #2347 = SBB16rr_REV
  { 2348,	1,	0,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x3a014001ULL, ImplicitList1, ImplicitList1, OperandInfo2 },  // Inst #2348 = SBB32i32
  { 2349,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10201401bULL, ImplicitList1, ImplicitList1, OperandInfo15 },  // Inst #2349 = SBB32mi
  { 2350,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10600401bULL, ImplicitList1, ImplicitList1, OperandInfo15 },  // Inst #2350 = SBB32mi8
  { 2351,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x32000004ULL, ImplicitList1, ImplicitList1, OperandInfo20 },  // Inst #2351 = SBB32mr
  { 2352,	3,	1,	3,	0,	0, 0x102014013ULL, ImplicitList1, ImplicitList1, OperandInfo21 },  // Inst #2352 = SBB32ri
  { 2353,	3,	1,	3,	0,	0, 0x106004013ULL, ImplicitList1, ImplicitList1, OperandInfo21 },  // Inst #2353 = SBB32ri8
  { 2354,	7,	1,	3,	0,	0|(1<<MCID::MayLoad), 0x36000006ULL, ImplicitList1, ImplicitList1, OperandInfo22 },  // Inst #2354 = SBB32rm
  { 2355,	3,	1,	3,	0,	0, 0x32000003ULL, ImplicitList1, ImplicitList1, OperandInfo23 },  // Inst #2355 = SBB32rr
  { 2356,	3,	1,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x36000005ULL, ImplicitList1, ImplicitList1, OperandInfo23 },  // Inst #2356 = SBB32rr_REV
  { 2357,	1,	0,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x3a016001ULL, ImplicitList1, ImplicitList1, OperandInfo2 },  // Inst #2357 = SBB64i32
  { 2358,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10201601bULL, ImplicitList1, ImplicitList1, OperandInfo15 },  // Inst #2358 = SBB64mi32
  { 2359,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10600601bULL, ImplicitList1, ImplicitList1, OperandInfo15 },  // Inst #2359 = SBB64mi8
  { 2360,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x32002004ULL, ImplicitList1, ImplicitList1, OperandInfo24 },  // Inst #2360 = SBB64mr
  { 2361,	3,	1,	3,	0,	0, 0x102016013ULL, ImplicitList1, ImplicitList1, OperandInfo25 },  // Inst #2361 = SBB64ri32
  { 2362,	3,	1,	3,	0,	0, 0x106006013ULL, ImplicitList1, ImplicitList1, OperandInfo25 },  // Inst #2362 = SBB64ri8
  { 2363,	7,	1,	3,	0,	0|(1<<MCID::MayLoad), 0x36002006ULL, ImplicitList1, ImplicitList1, OperandInfo26 },  // Inst #2363 = SBB64rm
  { 2364,	3,	1,	3,	0,	0, 0x32002003ULL, ImplicitList1, ImplicitList1, OperandInfo27 },  // Inst #2364 = SBB64rr
  { 2365,	3,	1,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x36002005ULL, ImplicitList1, ImplicitList1, OperandInfo27 },  // Inst #2365 = SBB64rr_REV
  { 2366,	1,	0,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x38004001ULL, ImplicitList1, ImplicitList1, OperandInfo2 },  // Inst #2366 = SBB8i8
  { 2367,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10000401bULL, ImplicitList1, ImplicitList1, OperandInfo15 },  // Inst #2367 = SBB8mi
  { 2368,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x30000004ULL, ImplicitList1, ImplicitList1, OperandInfo28 },  // Inst #2368 = SBB8mr
  { 2369,	3,	1,	3,	0,	0, 0x100004013ULL, ImplicitList1, ImplicitList1, OperandInfo29 },  // Inst #2369 = SBB8ri
  { 2370,	7,	1,	3,	0,	0|(1<<MCID::MayLoad), 0x34000006ULL, ImplicitList1, ImplicitList1, OperandInfo30 },  // Inst #2370 = SBB8rm
  { 2371,	3,	1,	3,	0,	0, 0x30000003ULL, ImplicitList1, ImplicitList1, OperandInfo31 },  // Inst #2371 = SBB8rr
  { 2372,	3,	1,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x34000005ULL, ImplicitList1, ImplicitList1, OperandInfo31 },  // Inst #2372 = SBB8rr_REV
  { 2373,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x15e000041ULL, NULL, NULL, 0 },  // Inst #2373 = SCAS16
  { 2374,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x15e000001ULL, NULL, NULL, 0 },  // Inst #2374 = SCAS32
  { 2375,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x15e002001ULL, NULL, NULL, 0 },  // Inst #2375 = SCAS64
  { 2376,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x15c000001ULL, NULL, NULL, 0 },  // Inst #2376 = SCAS8
  { 2377,	2,	1,	18,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList6, ImplicitList62, OperandInfo67 },  // Inst #2377 = SEG_ALLOCA_32
  { 2378,	2,	1,	18,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList8, ImplicitList63, OperandInfo68 },  // Inst #2378 = SEG_ALLOCA_64
  { 2379,	5,	0,	76,	0,	0|(1<<MCID::MayStore), 0x126000118ULL, ImplicitList1, NULL, OperandInfo38 },  // Inst #2379 = SETAEm
  { 2380,	1,	1,	77,	0,	0, 0x126000110ULL, ImplicitList1, NULL, OperandInfo116 },  // Inst #2380 = SETAEr
  { 2381,	5,	0,	76,	0,	0|(1<<MCID::MayStore), 0x12e000118ULL, ImplicitList1, NULL, OperandInfo38 },  // Inst #2381 = SETAm
  { 2382,	1,	1,	77,	0,	0, 0x12e000110ULL, ImplicitList1, NULL, OperandInfo116 },  // Inst #2382 = SETAr
  { 2383,	5,	0,	76,	0,	0|(1<<MCID::MayStore), 0x12c000118ULL, ImplicitList1, NULL, OperandInfo38 },  // Inst #2383 = SETBEm
  { 2384,	1,	1,	77,	0,	0, 0x12c000110ULL, ImplicitList1, NULL, OperandInfo116 },  // Inst #2384 = SETBEr
  { 2385,	1,	1,	1,	0,	0, 0x32000060ULL, ImplicitList1, ImplicitList1, OperandInfo115 },  // Inst #2385 = SETB_C16r
  { 2386,	1,	1,	1,	0,	0, 0x32000020ULL, ImplicitList1, ImplicitList1, OperandInfo74 },  // Inst #2386 = SETB_C32r
  { 2387,	1,	1,	1,	0,	0, 0x32002020ULL, ImplicitList1, ImplicitList1, OperandInfo76 },  // Inst #2387 = SETB_C64r
  { 2388,	1,	1,	1,	0,	0, 0x30000020ULL, ImplicitList1, ImplicitList1, OperandInfo116 },  // Inst #2388 = SETB_C8r
  { 2389,	5,	0,	76,	0,	0|(1<<MCID::MayStore), 0x124000118ULL, ImplicitList1, NULL, OperandInfo38 },  // Inst #2389 = SETBm
  { 2390,	1,	1,	77,	0,	0, 0x124000110ULL, ImplicitList1, NULL, OperandInfo116 },  // Inst #2390 = SETBr
  { 2391,	5,	0,	76,	0,	0|(1<<MCID::MayStore), 0x128000118ULL, ImplicitList1, NULL, OperandInfo38 },  // Inst #2391 = SETEm
  { 2392,	1,	1,	77,	0,	0, 0x128000110ULL, ImplicitList1, NULL, OperandInfo116 },  // Inst #2392 = SETEr
  { 2393,	5,	0,	76,	0,	0|(1<<MCID::MayStore), 0x13a000118ULL, ImplicitList1, NULL, OperandInfo38 },  // Inst #2393 = SETGEm
  { 2394,	1,	1,	77,	0,	0, 0x13a000110ULL, ImplicitList1, NULL, OperandInfo116 },  // Inst #2394 = SETGEr
  { 2395,	5,	0,	76,	0,	0|(1<<MCID::MayStore), 0x13e000118ULL, ImplicitList1, NULL, OperandInfo38 },  // Inst #2395 = SETGm
  { 2396,	1,	1,	77,	0,	0, 0x13e000110ULL, ImplicitList1, NULL, OperandInfo116 },  // Inst #2396 = SETGr
  { 2397,	5,	0,	76,	0,	0|(1<<MCID::MayStore), 0x13c000118ULL, ImplicitList1, NULL, OperandInfo38 },  // Inst #2397 = SETLEm
  { 2398,	1,	1,	77,	0,	0, 0x13c000110ULL, ImplicitList1, NULL, OperandInfo116 },  // Inst #2398 = SETLEr
  { 2399,	5,	0,	76,	0,	0|(1<<MCID::MayStore), 0x138000118ULL, ImplicitList1, NULL, OperandInfo38 },  // Inst #2399 = SETLm
  { 2400,	1,	1,	77,	0,	0, 0x138000110ULL, ImplicitList1, NULL, OperandInfo116 },  // Inst #2400 = SETLr
  { 2401,	5,	0,	76,	0,	0|(1<<MCID::MayStore), 0x12a000118ULL, ImplicitList1, NULL, OperandInfo38 },  // Inst #2401 = SETNEm
  { 2402,	1,	1,	77,	0,	0, 0x12a000110ULL, ImplicitList1, NULL, OperandInfo116 },  // Inst #2402 = SETNEr
  { 2403,	5,	0,	76,	0,	0|(1<<MCID::MayStore), 0x122000118ULL, ImplicitList1, NULL, OperandInfo38 },  // Inst #2403 = SETNOm
  { 2404,	1,	1,	77,	0,	0, 0x122000110ULL, ImplicitList1, NULL, OperandInfo116 },  // Inst #2404 = SETNOr
  { 2405,	5,	0,	76,	0,	0|(1<<MCID::MayStore), 0x136000118ULL, ImplicitList1, NULL, OperandInfo38 },  // Inst #2405 = SETNPm
  { 2406,	1,	1,	77,	0,	0, 0x136000110ULL, ImplicitList1, NULL, OperandInfo116 },  // Inst #2406 = SETNPr
  { 2407,	5,	0,	76,	0,	0|(1<<MCID::MayStore), 0x132000118ULL, ImplicitList1, NULL, OperandInfo38 },  // Inst #2407 = SETNSm
  { 2408,	1,	1,	77,	0,	0, 0x132000110ULL, ImplicitList1, NULL, OperandInfo116 },  // Inst #2408 = SETNSr
  { 2409,	5,	0,	76,	0,	0|(1<<MCID::MayStore), 0x120000118ULL, ImplicitList1, NULL, OperandInfo38 },  // Inst #2409 = SETOm
  { 2410,	1,	1,	77,	0,	0, 0x120000110ULL, ImplicitList1, NULL, OperandInfo116 },  // Inst #2410 = SETOr
  { 2411,	5,	0,	76,	0,	0|(1<<MCID::MayStore), 0x134000118ULL, ImplicitList1, NULL, OperandInfo38 },  // Inst #2411 = SETPm
  { 2412,	1,	1,	77,	0,	0, 0x134000110ULL, ImplicitList1, NULL, OperandInfo116 },  // Inst #2412 = SETPr
  { 2413,	5,	0,	76,	0,	0|(1<<MCID::MayStore), 0x130000118ULL, ImplicitList1, NULL, OperandInfo38 },  // Inst #2413 = SETSm
  { 2414,	1,	1,	77,	0,	0, 0x130000110ULL, ImplicitList1, NULL, OperandInfo116 },  // Inst #2414 = SETSr
  { 2415,	0,	0,	192,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x15c000129ULL, NULL, NULL, 0 },  // Inst #2415 = SFENCE
  { 2416,	5,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000158ULL, NULL, NULL, OperandInfo38 },  // Inst #2416 = SGDT16m
  { 2417,	5,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000118ULL, NULL, NULL, OperandInfo38 },  // Inst #2417 = SGDTm
  { 2418,	5,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a200005cULL, NULL, ImplicitList1, OperandInfo38 },  // Inst #2418 = SHL16m1
  { 2419,	5,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a600005cULL, ImplicitList50, ImplicitList1, OperandInfo38 },  // Inst #2419 = SHL16mCL
  { 2420,	6,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x18200405cULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #2420 = SHL16mi
  { 2421,	2,	1,	90,	0,	0|(1<<MCID::ConvertibleTo3Addr)|(1<<MCID::UnmodeledSideEffects), 0x1a2000054ULL, NULL, ImplicitList1, OperandInfo113 },  // Inst #2421 = SHL16r1
  { 2422,	2,	1,	90,	0,	0, 0x1a6000054ULL, ImplicitList50, ImplicitList1, OperandInfo113 },  // Inst #2422 = SHL16rCL
  { 2423,	3,	1,	90,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x182004054ULL, NULL, ImplicitList1, OperandInfo17 },  // Inst #2423 = SHL16ri
  { 2424,	5,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a200001cULL, NULL, ImplicitList1, OperandInfo38 },  // Inst #2424 = SHL32m1
  { 2425,	5,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a600001cULL, ImplicitList50, ImplicitList1, OperandInfo38 },  // Inst #2425 = SHL32mCL
  { 2426,	6,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x18200401cULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #2426 = SHL32mi
  { 2427,	2,	1,	90,	0,	0|(1<<MCID::ConvertibleTo3Addr)|(1<<MCID::UnmodeledSideEffects), 0x1a2000014ULL, NULL, ImplicitList1, OperandInfo69 },  // Inst #2427 = SHL32r1
  { 2428,	2,	1,	90,	0,	0, 0x1a6000014ULL, ImplicitList50, ImplicitList1, OperandInfo69 },  // Inst #2428 = SHL32rCL
  { 2429,	3,	1,	90,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x182004014ULL, NULL, ImplicitList1, OperandInfo21 },  // Inst #2429 = SHL32ri
  { 2430,	5,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a200201cULL, NULL, ImplicitList1, OperandInfo38 },  // Inst #2430 = SHL64m1
  { 2431,	5,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a600201cULL, ImplicitList50, ImplicitList1, OperandInfo38 },  // Inst #2431 = SHL64mCL
  { 2432,	6,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x18200601cULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #2432 = SHL64mi
  { 2433,	2,	1,	90,	0,	0|(1<<MCID::ConvertibleTo3Addr)|(1<<MCID::UnmodeledSideEffects), 0x1a2002014ULL, NULL, ImplicitList1, OperandInfo70 },  // Inst #2433 = SHL64r1
  { 2434,	2,	1,	90,	0,	0, 0x1a6002014ULL, ImplicitList50, ImplicitList1, OperandInfo70 },  // Inst #2434 = SHL64rCL
  { 2435,	3,	1,	90,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x182006014ULL, NULL, ImplicitList1, OperandInfo25 },  // Inst #2435 = SHL64ri
  { 2436,	5,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a000001cULL, NULL, ImplicitList1, OperandInfo38 },  // Inst #2436 = SHL8m1
  { 2437,	5,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a400001cULL, ImplicitList50, ImplicitList1, OperandInfo38 },  // Inst #2437 = SHL8mCL
  { 2438,	6,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x18000401cULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #2438 = SHL8mi
  { 2439,	2,	1,	90,	0,	0|(1<<MCID::ConvertibleTo3Addr)|(1<<MCID::UnmodeledSideEffects), 0x1a0000014ULL, NULL, ImplicitList1, OperandInfo114 },  // Inst #2439 = SHL8r1
  { 2440,	2,	1,	90,	0,	0, 0x1a4000014ULL, ImplicitList50, ImplicitList1, OperandInfo114 },  // Inst #2440 = SHL8rCL
  { 2441,	3,	1,	90,	0,	0, 0x180004014ULL, NULL, ImplicitList1, OperandInfo29 },  // Inst #2441 = SHL8ri
  { 2442,	6,	0,	78,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x14a000144ULL, ImplicitList50, ImplicitList1, OperandInfo16 },  // Inst #2442 = SHLD16mrCL
  { 2443,	7,	0,	79,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x148004144ULL, NULL, ImplicitList1, OperandInfo206 },  // Inst #2443 = SHLD16mri8
  { 2444,	3,	1,	80,	0,	0, 0x14a000143ULL, ImplicitList50, ImplicitList1, OperandInfo19 },  // Inst #2444 = SHLD16rrCL
  { 2445,	4,	1,	81,	0,	0|(1<<MCID::Commutable), 0x148004143ULL, NULL, ImplicitList1, OperandInfo207 },  // Inst #2445 = SHLD16rri8
  { 2446,	6,	0,	82,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x14a000104ULL, ImplicitList50, ImplicitList1, OperandInfo20 },  // Inst #2446 = SHLD32mrCL
  { 2447,	7,	0,	83,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x148004104ULL, NULL, ImplicitList1, OperandInfo208 },  // Inst #2447 = SHLD32mri8
  { 2448,	3,	1,	84,	0,	0, 0x14a000103ULL, ImplicitList50, ImplicitList1, OperandInfo23 },  // Inst #2448 = SHLD32rrCL
  { 2449,	4,	1,	85,	0,	0|(1<<MCID::Commutable), 0x148004103ULL, NULL, ImplicitList1, OperandInfo209 },  // Inst #2449 = SHLD32rri8
  { 2450,	6,	0,	86,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x14a002104ULL, ImplicitList50, ImplicitList1, OperandInfo24 },  // Inst #2450 = SHLD64mrCL
  { 2451,	7,	0,	87,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x148006104ULL, NULL, ImplicitList1, OperandInfo210 },  // Inst #2451 = SHLD64mri8
  { 2452,	3,	1,	88,	0,	0, 0x14a002103ULL, ImplicitList50, ImplicitList1, OperandInfo27 },  // Inst #2452 = SHLD64rrCL
  { 2453,	4,	1,	89,	0,	0|(1<<MCID::Commutable), 0x148006103ULL, NULL, ImplicitList1, OperandInfo211 },  // Inst #2453 = SHLD64rri8
  { 2454,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x13ee000d46ULL, NULL, NULL, OperandInfo63 },  // Inst #2454 = SHLX32rm
  { 2455,	3,	1,	18,	0,	0, 0x13ee000d45ULL, NULL, NULL, OperandInfo52 },  // Inst #2455 = SHLX32rr
  { 2456,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x17ee000d46ULL, NULL, NULL, OperandInfo64 },  // Inst #2456 = SHLX64rm
  { 2457,	3,	1,	18,	0,	0, 0x17ee000d45ULL, NULL, NULL, OperandInfo54 },  // Inst #2457 = SHLX64rr
  { 2458,	5,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a200005dULL, NULL, ImplicitList1, OperandInfo38 },  // Inst #2458 = SHR16m1
  { 2459,	5,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a600005dULL, ImplicitList50, ImplicitList1, OperandInfo38 },  // Inst #2459 = SHR16mCL
  { 2460,	6,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x18200405dULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #2460 = SHR16mi
  { 2461,	2,	1,	90,	0,	0, 0x1a2000055ULL, NULL, ImplicitList1, OperandInfo113 },  // Inst #2461 = SHR16r1
  { 2462,	2,	1,	90,	0,	0, 0x1a6000055ULL, ImplicitList50, ImplicitList1, OperandInfo113 },  // Inst #2462 = SHR16rCL
  { 2463,	3,	1,	90,	0,	0, 0x182004055ULL, NULL, ImplicitList1, OperandInfo17 },  // Inst #2463 = SHR16ri
  { 2464,	5,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a200001dULL, NULL, ImplicitList1, OperandInfo38 },  // Inst #2464 = SHR32m1
  { 2465,	5,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a600001dULL, ImplicitList50, ImplicitList1, OperandInfo38 },  // Inst #2465 = SHR32mCL
  { 2466,	6,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x18200401dULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #2466 = SHR32mi
  { 2467,	2,	1,	90,	0,	0, 0x1a2000015ULL, NULL, ImplicitList1, OperandInfo69 },  // Inst #2467 = SHR32r1
  { 2468,	2,	1,	90,	0,	0, 0x1a6000015ULL, ImplicitList50, ImplicitList1, OperandInfo69 },  // Inst #2468 = SHR32rCL
  { 2469,	3,	1,	90,	0,	0, 0x182004015ULL, NULL, ImplicitList1, OperandInfo21 },  // Inst #2469 = SHR32ri
  { 2470,	5,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a200201dULL, NULL, ImplicitList1, OperandInfo38 },  // Inst #2470 = SHR64m1
  { 2471,	5,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a600201dULL, ImplicitList50, ImplicitList1, OperandInfo38 },  // Inst #2471 = SHR64mCL
  { 2472,	6,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x18200601dULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #2472 = SHR64mi
  { 2473,	2,	1,	90,	0,	0, 0x1a2002015ULL, NULL, ImplicitList1, OperandInfo70 },  // Inst #2473 = SHR64r1
  { 2474,	2,	1,	90,	0,	0, 0x1a6002015ULL, ImplicitList50, ImplicitList1, OperandInfo70 },  // Inst #2474 = SHR64rCL
  { 2475,	3,	1,	90,	0,	0, 0x182006015ULL, NULL, ImplicitList1, OperandInfo25 },  // Inst #2475 = SHR64ri
  { 2476,	5,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a000001dULL, NULL, ImplicitList1, OperandInfo38 },  // Inst #2476 = SHR8m1
  { 2477,	5,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a400001dULL, ImplicitList50, ImplicitList1, OperandInfo38 },  // Inst #2477 = SHR8mCL
  { 2478,	6,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x18000401dULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #2478 = SHR8mi
  { 2479,	2,	1,	90,	0,	0, 0x1a0000015ULL, NULL, ImplicitList1, OperandInfo114 },  // Inst #2479 = SHR8r1
  { 2480,	2,	1,	90,	0,	0, 0x1a4000015ULL, ImplicitList50, ImplicitList1, OperandInfo114 },  // Inst #2480 = SHR8rCL
  { 2481,	3,	1,	90,	0,	0, 0x180004015ULL, NULL, ImplicitList1, OperandInfo29 },  // Inst #2481 = SHR8ri
  { 2482,	6,	0,	78,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x15a000144ULL, ImplicitList50, ImplicitList1, OperandInfo16 },  // Inst #2482 = SHRD16mrCL
  { 2483,	7,	0,	79,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x158004144ULL, NULL, ImplicitList1, OperandInfo206 },  // Inst #2483 = SHRD16mri8
  { 2484,	3,	1,	80,	0,	0, 0x15a000143ULL, ImplicitList50, ImplicitList1, OperandInfo19 },  // Inst #2484 = SHRD16rrCL
  { 2485,	4,	1,	81,	0,	0|(1<<MCID::Commutable), 0x158004143ULL, NULL, ImplicitList1, OperandInfo207 },  // Inst #2485 = SHRD16rri8
  { 2486,	6,	0,	82,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x15a000104ULL, ImplicitList50, ImplicitList1, OperandInfo20 },  // Inst #2486 = SHRD32mrCL
  { 2487,	7,	0,	83,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x158004104ULL, NULL, ImplicitList1, OperandInfo208 },  // Inst #2487 = SHRD32mri8
  { 2488,	3,	1,	84,	0,	0, 0x15a000103ULL, ImplicitList50, ImplicitList1, OperandInfo23 },  // Inst #2488 = SHRD32rrCL
  { 2489,	4,	1,	85,	0,	0|(1<<MCID::Commutable), 0x158004103ULL, NULL, ImplicitList1, OperandInfo209 },  // Inst #2489 = SHRD32rri8
  { 2490,	6,	0,	86,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x15a002104ULL, ImplicitList50, ImplicitList1, OperandInfo24 },  // Inst #2490 = SHRD64mrCL
  { 2491,	7,	0,	87,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x158006104ULL, NULL, ImplicitList1, OperandInfo210 },  // Inst #2491 = SHRD64mri8
  { 2492,	3,	1,	88,	0,	0, 0x15a002103ULL, ImplicitList50, ImplicitList1, OperandInfo27 },  // Inst #2492 = SHRD64rrCL
  { 2493,	4,	1,	89,	0,	0|(1<<MCID::Commutable), 0x158006103ULL, NULL, ImplicitList1, OperandInfo211 },  // Inst #2493 = SHRD64rri8
  { 2494,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x13ee001106ULL, NULL, NULL, OperandInfo63 },  // Inst #2494 = SHRX32rm
  { 2495,	3,	1,	18,	0,	0, 0x13ee001105ULL, NULL, NULL, OperandInfo52 },  // Inst #2495 = SHRX32rr
  { 2496,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x17ee001106ULL, NULL, NULL, OperandInfo64 },  // Inst #2496 = SHRX64rm
  { 2497,	3,	1,	18,	0,	0, 0x17ee001105ULL, NULL, NULL, OperandInfo54 },  // Inst #2497 = SHRX64rr
  { 2498,	8,	1,	193,	0,	0|(1<<MCID::MayLoad), 0x18d004146ULL, NULL, NULL, OperandInfo65 },  // Inst #2498 = SHUFPDrmi
  { 2499,	4,	1,	193,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x18d004145ULL, NULL, NULL, OperandInfo66 },  // Inst #2499 = SHUFPDrri
  { 2500,	8,	1,	193,	0,	0|(1<<MCID::MayLoad), 0x18c804106ULL, NULL, NULL, OperandInfo65 },  // Inst #2500 = SHUFPSrmi
  { 2501,	4,	1,	193,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x18c804105ULL, NULL, NULL, OperandInfo66 },  // Inst #2501 = SHUFPSrri
  { 2502,	5,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000159ULL, NULL, NULL, OperandInfo38 },  // Inst #2502 = SIDT16m
  { 2503,	5,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000119ULL, NULL, NULL, OperandInfo38 },  // Inst #2503 = SIDTm
  { 2504,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1fc000401ULL, NULL, NULL, 0 },  // Inst #2504 = SIN_F
  { 2505,	2,	1,	18,	0,	0, 0x60000ULL, NULL, NULL, OperandInfo8 },  // Inst #2505 = SIN_Fp32
  { 2506,	2,	1,	18,	0,	0, 0x60000ULL, NULL, NULL, OperandInfo9 },  // Inst #2506 = SIN_Fp64
  { 2507,	2,	1,	18,	0,	0, 0x60000ULL, NULL, NULL, OperandInfo10 },  // Inst #2507 = SIN_Fp80
  { 2508,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000136ULL, ImplicitList3, NULL, 0 },  // Inst #2508 = SKINIT
  { 2509,	5,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x118ULL, NULL, NULL, OperandInfo38 },  // Inst #2509 = SLDT16m
  { 2510,	1,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x150ULL, NULL, NULL, OperandInfo115 },  // Inst #2510 = SLDT16r
  { 2511,	1,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x110ULL, NULL, NULL, OperandInfo74 },  // Inst #2511 = SLDT32r
  { 2512,	5,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2118ULL, NULL, NULL, OperandInfo38 },  // Inst #2512 = SLDT64m
  { 2513,	1,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2110ULL, NULL, NULL, OperandInfo76 },  // Inst #2513 = SLDT64r
  { 2514,	5,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x200011cULL, NULL, NULL, OperandInfo38 },  // Inst #2514 = SMSW16m
  { 2515,	1,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000154ULL, NULL, NULL, OperandInfo115 },  // Inst #2515 = SMSW16r
  { 2516,	1,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000114ULL, NULL, NULL, OperandInfo74 },  // Inst #2516 = SMSW32r
  { 2517,	1,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2002114ULL, NULL, NULL, OperandInfo76 },  // Inst #2517 = SMSW64r
  { 2518,	6,	1,	196,	0,	0|(1<<MCID::MayLoad), 0xa3000146ULL, NULL, NULL, OperandInfo47 },  // Inst #2518 = SQRTPDm
  { 2519,	6,	1,	196,	0,	0|(1<<MCID::MayLoad), 0xa3000146ULL, NULL, NULL, OperandInfo47 },  // Inst #2519 = SQRTPDm_Int
  { 2520,	2,	1,	197,	0,	0, 0xa3000145ULL, NULL, NULL, OperandInfo48 },  // Inst #2520 = SQRTPDr
  { 2521,	2,	1,	197,	0,	0, 0xa3000145ULL, NULL, NULL, OperandInfo48 },  // Inst #2521 = SQRTPDr_Int
  { 2522,	6,	1,	196,	0,	0|(1<<MCID::MayLoad), 0xa2800106ULL, NULL, NULL, OperandInfo47 },  // Inst #2522 = SQRTPSm
  { 2523,	6,	1,	196,	0,	0|(1<<MCID::MayLoad), 0xa2800106ULL, NULL, NULL, OperandInfo47 },  // Inst #2523 = SQRTPSm_Int
  { 2524,	2,	1,	197,	0,	0, 0xa2800105ULL, NULL, NULL, OperandInfo48 },  // Inst #2524 = SQRTPSr
  { 2525,	2,	1,	197,	0,	0, 0xa2800105ULL, NULL, NULL, OperandInfo48 },  // Inst #2525 = SQRTPSr_Int
  { 2526,	6,	1,	196,	0,	0|(1<<MCID::MayLoad), 0xa2000b06ULL, NULL, NULL, OperandInfo103 },  // Inst #2526 = SQRTSDm
  { 2527,	6,	1,	196,	0,	0|(1<<MCID::MayLoad), 0xa2000b06ULL, NULL, NULL, OperandInfo47 },  // Inst #2527 = SQRTSDm_Int
  { 2528,	2,	1,	197,	0,	0, 0xa2000b05ULL, NULL, NULL, OperandInfo125 },  // Inst #2528 = SQRTSDr
  { 2529,	2,	1,	197,	0,	0, 0xa2000b05ULL, NULL, NULL, OperandInfo48 },  // Inst #2529 = SQRTSDr_Int
  { 2530,	6,	1,	196,	0,	0|(1<<MCID::MayLoad), 0xa2000c06ULL, NULL, NULL, OperandInfo101 },  // Inst #2530 = SQRTSSm
  { 2531,	6,	1,	196,	0,	0|(1<<MCID::MayLoad), 0xa2000c06ULL, NULL, NULL, OperandInfo47 },  // Inst #2531 = SQRTSSm_Int
  { 2532,	2,	1,	18,	0,	0, 0xa2000c05ULL, NULL, NULL, OperandInfo126 },  // Inst #2532 = SQRTSSr
  { 2533,	2,	1,	197,	0,	0, 0xa2000c05ULL, NULL, NULL, OperandInfo48 },  // Inst #2533 = SQRTSSr_Int
  { 2534,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1f4000401ULL, NULL, NULL, 0 },  // Inst #2534 = SQRT_F
  { 2535,	2,	1,	18,	0,	0, 0x60000ULL, NULL, NULL, OperandInfo8 },  // Inst #2535 = SQRT_Fp32
  { 2536,	2,	1,	18,	0,	0, 0x60000ULL, NULL, NULL, OperandInfo9 },  // Inst #2536 = SQRT_Fp64
  { 2537,	2,	1,	18,	0,	0, 0x60000ULL, NULL, NULL, OperandInfo10 },  // Inst #2537 = SQRT_Fp80
  { 2538,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x6c000001ULL, NULL, NULL, 0 },  // Inst #2538 = SS_PREFIX
  { 2539,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1f2000001ULL, NULL, NULL, 0 },  // Inst #2539 = STC
  { 2540,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1fa000001ULL, NULL, NULL, 0 },  // Inst #2540 = STD
  { 2541,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000134ULL, NULL, NULL, 0 },  // Inst #2541 = STGI
  { 2542,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1f6000001ULL, NULL, NULL, 0 },  // Inst #2542 = STI
  { 2543,	5,	0,	198,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x15c80011bULL, NULL, NULL, OperandInfo38 },  // Inst #2543 = STMXCSR
  { 2544,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x154000001ULL, ImplicitList64, ImplicitList34, 0 },  // Inst #2544 = STOSB
  { 2545,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x156000001ULL, ImplicitList65, ImplicitList34, 0 },  // Inst #2545 = STOSD
  { 2546,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x156002001ULL, ImplicitList66, ImplicitList57, 0 },  // Inst #2546 = STOSQ
  { 2547,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x156000041ULL, ImplicitList67, ImplicitList34, 0 },  // Inst #2547 = STOSW
  { 2548,	1,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x151ULL, NULL, NULL, OperandInfo115 },  // Inst #2548 = STR16r
  { 2549,	1,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x111ULL, NULL, NULL, OperandInfo74 },  // Inst #2549 = STR32r
  { 2550,	1,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2111ULL, NULL, NULL, OperandInfo76 },  // Inst #2550 = STR64r
  { 2551,	5,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x119ULL, NULL, NULL, OperandInfo38 },  // Inst #2551 = STRm
  { 2552,	5,	0,	18,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1b200001aULL, NULL, NULL, OperandInfo38 },  // Inst #2552 = ST_F32m
  { 2553,	5,	0,	18,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1ba00001aULL, NULL, NULL, OperandInfo38 },  // Inst #2553 = ST_F64m
  { 2554,	5,	0,	18,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1b200001bULL, NULL, NULL, OperandInfo38 },  // Inst #2554 = ST_FP32m
  { 2555,	5,	0,	18,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1ba00001bULL, NULL, NULL, OperandInfo38 },  // Inst #2555 = ST_FP64m
  { 2556,	5,	0,	18,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1b600001fULL, NULL, NULL, OperandInfo38 },  // Inst #2556 = ST_FP80m
  { 2557,	1,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1b0000802ULL, NULL, NULL, OperandInfo39 },  // Inst #2557 = ST_FPrr
  { 2558,	6,	0,	18,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, NULL, OperandInfo119 },  // Inst #2558 = ST_Fp32m
  { 2559,	6,	0,	18,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, NULL, OperandInfo120 },  // Inst #2559 = ST_Fp64m
  { 2560,	6,	0,	18,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, NULL, OperandInfo120 },  // Inst #2560 = ST_Fp64m32
  { 2561,	6,	0,	18,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, NULL, OperandInfo121 },  // Inst #2561 = ST_Fp80m32
  { 2562,	6,	0,	18,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, NULL, OperandInfo121 },  // Inst #2562 = ST_Fp80m64
  { 2563,	6,	0,	18,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, NULL, OperandInfo119 },  // Inst #2563 = ST_FpP32m
  { 2564,	6,	0,	18,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, NULL, OperandInfo120 },  // Inst #2564 = ST_FpP64m
  { 2565,	6,	0,	18,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, NULL, OperandInfo120 },  // Inst #2565 = ST_FpP64m32
  { 2566,	6,	0,	18,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, NULL, OperandInfo121 },  // Inst #2566 = ST_FpP80m
  { 2567,	6,	0,	18,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, NULL, OperandInfo121 },  // Inst #2567 = ST_FpP80m32
  { 2568,	6,	0,	18,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, NULL, OperandInfo121 },  // Inst #2568 = ST_FpP80m64
  { 2569,	1,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a0000802ULL, NULL, NULL, OperandInfo39 },  // Inst #2569 = ST_Frr
  { 2570,	1,	0,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x5a00c041ULL, ImplicitList2, ImplicitList1, OperandInfo2 },  // Inst #2570 = SUB16i16
  { 2571,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10200c05dULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #2571 = SUB16mi
  { 2572,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10600405dULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #2572 = SUB16mi8
  { 2573,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x52000044ULL, NULL, ImplicitList1, OperandInfo16 },  // Inst #2573 = SUB16mr
  { 2574,	3,	1,	3,	0,	0, 0x10200c055ULL, NULL, ImplicitList1, OperandInfo17 },  // Inst #2574 = SUB16ri
  { 2575,	3,	1,	3,	0,	0, 0x106004055ULL, NULL, ImplicitList1, OperandInfo17 },  // Inst #2575 = SUB16ri8
  { 2576,	7,	1,	3,	0,	0|(1<<MCID::MayLoad), 0x56000046ULL, NULL, ImplicitList1, OperandInfo18 },  // Inst #2576 = SUB16rm
  { 2577,	3,	1,	3,	0,	0, 0x52000043ULL, NULL, ImplicitList1, OperandInfo19 },  // Inst #2577 = SUB16rr
  { 2578,	3,	1,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x56000045ULL, NULL, ImplicitList1, OperandInfo19 },  // Inst #2578 = SUB16rr_REV
  { 2579,	1,	0,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x5a014001ULL, ImplicitList3, ImplicitList1, OperandInfo2 },  // Inst #2579 = SUB32i32
  { 2580,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10201401dULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #2580 = SUB32mi
  { 2581,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10600401dULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #2581 = SUB32mi8
  { 2582,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x52000004ULL, NULL, ImplicitList1, OperandInfo20 },  // Inst #2582 = SUB32mr
  { 2583,	3,	1,	3,	0,	0, 0x102014015ULL, NULL, ImplicitList1, OperandInfo21 },  // Inst #2583 = SUB32ri
  { 2584,	3,	1,	3,	0,	0, 0x106004015ULL, NULL, ImplicitList1, OperandInfo21 },  // Inst #2584 = SUB32ri8
  { 2585,	7,	1,	3,	0,	0|(1<<MCID::MayLoad), 0x56000006ULL, NULL, ImplicitList1, OperandInfo22 },  // Inst #2585 = SUB32rm
  { 2586,	3,	1,	3,	0,	0, 0x52000003ULL, NULL, ImplicitList1, OperandInfo23 },  // Inst #2586 = SUB32rr
  { 2587,	3,	1,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x56000005ULL, NULL, ImplicitList1, OperandInfo23 },  // Inst #2587 = SUB32rr_REV
  { 2588,	1,	0,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x5a016001ULL, ImplicitList4, ImplicitList1, OperandInfo2 },  // Inst #2588 = SUB64i32
  { 2589,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10201601dULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #2589 = SUB64mi32
  { 2590,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10600601dULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #2590 = SUB64mi8
  { 2591,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x52002004ULL, NULL, ImplicitList1, OperandInfo24 },  // Inst #2591 = SUB64mr
  { 2592,	3,	1,	3,	0,	0, 0x102016015ULL, NULL, ImplicitList1, OperandInfo25 },  // Inst #2592 = SUB64ri32
  { 2593,	3,	1,	3,	0,	0, 0x106006015ULL, NULL, ImplicitList1, OperandInfo25 },  // Inst #2593 = SUB64ri8
  { 2594,	7,	1,	3,	0,	0|(1<<MCID::MayLoad), 0x56002006ULL, NULL, ImplicitList1, OperandInfo26 },  // Inst #2594 = SUB64rm
  { 2595,	3,	1,	3,	0,	0, 0x52002003ULL, NULL, ImplicitList1, OperandInfo27 },  // Inst #2595 = SUB64rr
  { 2596,	3,	1,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x56002005ULL, NULL, ImplicitList1, OperandInfo27 },  // Inst #2596 = SUB64rr_REV
  { 2597,	1,	0,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x58004001ULL, ImplicitList5, ImplicitList1, OperandInfo2 },  // Inst #2597 = SUB8i8
  { 2598,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10000401dULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #2598 = SUB8mi
  { 2599,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x50000004ULL, NULL, ImplicitList1, OperandInfo28 },  // Inst #2599 = SUB8mr
  { 2600,	3,	1,	3,	0,	0, 0x100004015ULL, NULL, ImplicitList1, OperandInfo29 },  // Inst #2600 = SUB8ri
  { 2601,	7,	1,	3,	0,	0|(1<<MCID::MayLoad), 0x54000006ULL, NULL, ImplicitList1, OperandInfo30 },  // Inst #2601 = SUB8rm
  { 2602,	3,	1,	3,	0,	0, 0x50000003ULL, NULL, ImplicitList1, OperandInfo31 },  // Inst #2602 = SUB8rr
  { 2603,	3,	1,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x54000005ULL, NULL, ImplicitList1, OperandInfo31 },  // Inst #2603 = SUB8rr_REV
  { 2604,	7,	1,	95,	0,	0|(1<<MCID::MayLoad), 0xb9000146ULL, NULL, NULL, OperandInfo32 },  // Inst #2604 = SUBPDrm
  { 2605,	3,	1,	96,	0,	0, 0xb9000145ULL, NULL, NULL, OperandInfo33 },  // Inst #2605 = SUBPDrr
  { 2606,	7,	1,	91,	0,	0|(1<<MCID::MayLoad), 0xb8800106ULL, NULL, NULL, OperandInfo32 },  // Inst #2606 = SUBPSrm
  { 2607,	3,	1,	92,	0,	0, 0xb8800105ULL, NULL, NULL, OperandInfo33 },  // Inst #2607 = SUBPSrr
  { 2608,	5,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b000001dULL, NULL, NULL, OperandInfo38 },  // Inst #2608 = SUBR_F32m
  { 2609,	5,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b800001dULL, NULL, NULL, OperandInfo38 },  // Inst #2609 = SUBR_F64m
  { 2610,	5,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1bc00001dULL, NULL, NULL, OperandInfo38 },  // Inst #2610 = SUBR_FI16m
  { 2611,	5,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b400001dULL, NULL, NULL, OperandInfo38 },  // Inst #2611 = SUBR_FI32m
  { 2612,	1,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1c0000902ULL, NULL, NULL, OperandInfo39 },  // Inst #2612 = SUBR_FPrST0
  { 2613,	1,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1d0000302ULL, NULL, NULL, OperandInfo39 },  // Inst #2613 = SUBR_FST0r
  { 2614,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo41 },  // Inst #2614 = SUBR_Fp32m
  { 2615,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo43 },  // Inst #2615 = SUBR_Fp64m
  { 2616,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo43 },  // Inst #2616 = SUBR_Fp64m32
  { 2617,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo45 },  // Inst #2617 = SUBR_Fp80m32
  { 2618,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo45 },  // Inst #2618 = SUBR_Fp80m64
  { 2619,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo41 },  // Inst #2619 = SUBR_FpI16m32
  { 2620,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo43 },  // Inst #2620 = SUBR_FpI16m64
  { 2621,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo45 },  // Inst #2621 = SUBR_FpI16m80
  { 2622,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo41 },  // Inst #2622 = SUBR_FpI32m32
  { 2623,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo43 },  // Inst #2623 = SUBR_FpI32m64
  { 2624,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo45 },  // Inst #2624 = SUBR_FpI32m80
  { 2625,	1,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1c0000702ULL, NULL, NULL, OperandInfo39 },  // Inst #2625 = SUBR_FrST0
  { 2626,	7,	1,	97,	0,	0|(1<<MCID::MayLoad), 0xb8000b06ULL, NULL, NULL, OperandInfo34 },  // Inst #2626 = SUBSDrm
  { 2627,	7,	1,	97,	0,	0|(1<<MCID::MayLoad), 0xb8000b06ULL, NULL, NULL, OperandInfo32 },  // Inst #2627 = SUBSDrm_Int
  { 2628,	3,	1,	98,	0,	0, 0xb8000b05ULL, NULL, NULL, OperandInfo35 },  // Inst #2628 = SUBSDrr
  { 2629,	3,	1,	98,	0,	0, 0xb8000b05ULL, NULL, NULL, OperandInfo33 },  // Inst #2629 = SUBSDrr_Int
  { 2630,	7,	1,	93,	0,	0|(1<<MCID::MayLoad), 0xb8000c06ULL, NULL, NULL, OperandInfo36 },  // Inst #2630 = SUBSSrm
  { 2631,	7,	1,	93,	0,	0|(1<<MCID::MayLoad), 0xb8000c06ULL, NULL, NULL, OperandInfo32 },  // Inst #2631 = SUBSSrm_Int
  { 2632,	3,	1,	94,	0,	0, 0xb8000c05ULL, NULL, NULL, OperandInfo37 },  // Inst #2632 = SUBSSrr
  { 2633,	3,	1,	94,	0,	0, 0xb8000c05ULL, NULL, NULL, OperandInfo33 },  // Inst #2633 = SUBSSrr_Int
  { 2634,	5,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b000001cULL, NULL, NULL, OperandInfo38 },  // Inst #2634 = SUB_F32m
  { 2635,	5,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b800001cULL, NULL, NULL, OperandInfo38 },  // Inst #2635 = SUB_F64m
  { 2636,	5,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1bc00001cULL, NULL, NULL, OperandInfo38 },  // Inst #2636 = SUB_FI16m
  { 2637,	5,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b400001cULL, NULL, NULL, OperandInfo38 },  // Inst #2637 = SUB_FI32m
  { 2638,	1,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1d0000902ULL, NULL, NULL, OperandInfo39 },  // Inst #2638 = SUB_FPrST0
  { 2639,	1,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1c0000302ULL, NULL, NULL, OperandInfo39 },  // Inst #2639 = SUB_FST0r
  { 2640,	3,	1,	18,	0,	0, 0x80000ULL, NULL, NULL, OperandInfo40 },  // Inst #2640 = SUB_Fp32
  { 2641,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo41 },  // Inst #2641 = SUB_Fp32m
  { 2642,	3,	1,	18,	0,	0, 0x80000ULL, NULL, NULL, OperandInfo42 },  // Inst #2642 = SUB_Fp64
  { 2643,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo43 },  // Inst #2643 = SUB_Fp64m
  { 2644,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo43 },  // Inst #2644 = SUB_Fp64m32
  { 2645,	3,	1,	18,	0,	0, 0x80000ULL, NULL, NULL, OperandInfo44 },  // Inst #2645 = SUB_Fp80
  { 2646,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo45 },  // Inst #2646 = SUB_Fp80m32
  { 2647,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo45 },  // Inst #2647 = SUB_Fp80m64
  { 2648,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo41 },  // Inst #2648 = SUB_FpI16m32
  { 2649,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo43 },  // Inst #2649 = SUB_FpI16m64
  { 2650,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo45 },  // Inst #2650 = SUB_FpI16m80
  { 2651,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo41 },  // Inst #2651 = SUB_FpI32m32
  { 2652,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo43 },  // Inst #2652 = SUB_FpI32m64
  { 2653,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, NULL, OperandInfo45 },  // Inst #2653 = SUB_FpI32m80
  { 2654,	1,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1d0000702ULL, NULL, NULL, OperandInfo39 },  // Inst #2654 = SUB_FrST0
  { 2655,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000129ULL, NULL, NULL, 0 },  // Inst #2655 = SWAPGS
  { 2656,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xa000101ULL, NULL, NULL, 0 },  // Inst #2656 = SYSCALL
  { 2657,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x68000101ULL, NULL, NULL, 0 },  // Inst #2657 = SYSENTER
  { 2658,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x6a000101ULL, NULL, NULL, 0 },  // Inst #2658 = SYSEXIT
  { 2659,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x6a002101ULL, NULL, NULL, 0 },  // Inst #2659 = SYSEXIT64
  { 2660,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xe000101ULL, NULL, NULL, 0 },  // Inst #2660 = SYSRET
  { 2661,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xe002101ULL, NULL, NULL, 0 },  // Inst #2661 = SYSRET64
  { 2662,	1,	0,	51,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Call)|(1<<MCID::Terminator)|(1<<MCID::Variadic)|(1<<MCID::UnmodeledSideEffects), 0x1d2018001ULL, ImplicitList6, NULL, OperandInfo75 },  // Inst #2662 = TAILJMPd
  { 2663,	1,	0,	51,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Call)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter)|(1<<MCID::Variadic)|(1<<MCID::UnmodeledSideEffects), 0x1d2018001ULL, ImplicitList8, NULL, OperandInfo75 },  // Inst #2663 = TAILJMPd64
  { 2664,	5,	0,	49,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Call)|(1<<MCID::MayLoad)|(1<<MCID::Terminator)|(1<<MCID::Variadic)|(1<<MCID::UnmodeledSideEffects), 0x1fe00001cULL, ImplicitList6, NULL, OperandInfo212 },  // Inst #2664 = TAILJMPm
  { 2665,	5,	0,	49,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Call)|(1<<MCID::MayLoad)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter)|(1<<MCID::Variadic)|(1<<MCID::UnmodeledSideEffects), 0x1fe00001cULL, ImplicitList8, NULL, OperandInfo213 },  // Inst #2665 = TAILJMPm64
  { 2666,	1,	0,	50,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Call)|(1<<MCID::Terminator)|(1<<MCID::Variadic)|(1<<MCID::UnmodeledSideEffects), 0x1fe000014ULL, ImplicitList6, NULL, OperandInfo214 },  // Inst #2666 = TAILJMPr
  { 2667,	1,	0,	49,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Call)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter)|(1<<MCID::Variadic)|(1<<MCID::UnmodeledSideEffects), 0x1fe000014ULL, ImplicitList8, NULL, OperandInfo215 },  // Inst #2667 = TAILJMPr64
  { 2668,	2,	0,	204,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Call)|(1<<MCID::Terminator)|(1<<MCID::Variadic)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList6, NULL, OperandInfo216 },  // Inst #2668 = TCRETURNdi
  { 2669,	2,	0,	204,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Call)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter)|(1<<MCID::Variadic)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList8, NULL, OperandInfo216 },  // Inst #2669 = TCRETURNdi64
  { 2670,	6,	0,	204,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Call)|(1<<MCID::MayLoad)|(1<<MCID::Terminator)|(1<<MCID::Variadic)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList6, NULL, OperandInfo217 },  // Inst #2670 = TCRETURNmi
  { 2671,	6,	0,	204,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Call)|(1<<MCID::MayLoad)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter)|(1<<MCID::Variadic)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList8, NULL, OperandInfo218 },  // Inst #2671 = TCRETURNmi64
  { 2672,	2,	0,	204,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Call)|(1<<MCID::Terminator)|(1<<MCID::Variadic)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList6, NULL, OperandInfo219 },  // Inst #2672 = TCRETURNri
  { 2673,	2,	0,	204,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Call)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter)|(1<<MCID::Variadic)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList8, NULL, OperandInfo220 },  // Inst #2673 = TCRETURNri64
  { 2674,	1,	0,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x15200c041ULL, ImplicitList2, ImplicitList1, OperandInfo2 },  // Inst #2674 = TEST16i16
  { 2675,	6,	0,	2,	0,	0|(1<<MCID::MayLoad), 0x1ee00c058ULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #2675 = TEST16mi
  { 2676,	2,	0,	3,	0,	0, 0x1ee00c050ULL, NULL, ImplicitList1, OperandInfo71 },  // Inst #2676 = TEST16ri
  { 2677,	6,	0,	3,	0,	0|(1<<MCID::MayLoad), 0x10a000046ULL, NULL, ImplicitList1, OperandInfo11 },  // Inst #2677 = TEST16rm
  { 2678,	2,	0,	3,	0,	0|(1<<MCID::Commutable), 0x10a000045ULL, NULL, ImplicitList1, OperandInfo55 },  // Inst #2678 = TEST16rr
  { 2679,	1,	0,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x152014001ULL, ImplicitList3, ImplicitList1, OperandInfo2 },  // Inst #2679 = TEST32i32
  { 2680,	6,	0,	2,	0,	0|(1<<MCID::MayLoad), 0x1ee014018ULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #2680 = TEST32mi
  { 2681,	2,	0,	3,	0,	0, 0x1ee014010ULL, NULL, ImplicitList1, OperandInfo72 },  // Inst #2681 = TEST32ri
  { 2682,	6,	0,	3,	0,	0|(1<<MCID::MayLoad), 0x10a000006ULL, NULL, ImplicitList1, OperandInfo12 },  // Inst #2682 = TEST32rm
  { 2683,	2,	0,	3,	0,	0|(1<<MCID::Commutable), 0x10a000005ULL, NULL, ImplicitList1, OperandInfo67 },  // Inst #2683 = TEST32rr
  { 2684,	1,	0,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x152016001ULL, ImplicitList4, ImplicitList1, OperandInfo2 },  // Inst #2684 = TEST64i32
  { 2685,	6,	0,	2,	0,	0|(1<<MCID::MayLoad), 0x1ee016018ULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #2685 = TEST64mi32
  { 2686,	2,	0,	3,	0,	0, 0x1ee016010ULL, NULL, ImplicitList1, OperandInfo73 },  // Inst #2686 = TEST64ri32
  { 2687,	6,	0,	3,	0,	0|(1<<MCID::MayLoad), 0x10a002006ULL, NULL, ImplicitList1, OperandInfo13 },  // Inst #2687 = TEST64rm
  { 2688,	2,	0,	3,	0,	0|(1<<MCID::Commutable), 0x10a002005ULL, NULL, ImplicitList1, OperandInfo68 },  // Inst #2688 = TEST64rr
  { 2689,	1,	0,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x150004001ULL, ImplicitList5, ImplicitList1, OperandInfo2 },  // Inst #2689 = TEST8i8
  { 2690,	6,	0,	2,	0,	0|(1<<MCID::MayLoad), 0x1ec004018ULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #2690 = TEST8mi
  { 2691,	2,	0,	3,	0,	0, 0x1ec004010ULL, NULL, ImplicitList1, OperandInfo90 },  // Inst #2691 = TEST8ri
  { 2692,	2,	0,	3,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, ImplicitList1, OperandInfo221 },  // Inst #2692 = TEST8ri_NOREX
  { 2693,	6,	0,	3,	0,	0|(1<<MCID::MayLoad), 0x108000006ULL, NULL, ImplicitList1, OperandInfo14 },  // Inst #2693 = TEST8rm
  { 2694,	2,	0,	3,	0,	0|(1<<MCID::Commutable), 0x108000005ULL, NULL, ImplicitList1, OperandInfo91 },  // Inst #2694 = TEST8rr
  { 2695,	5,	0,	18,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList6, ImplicitList68, OperandInfo38 },  // Inst #2695 = TLSCall_32
  { 2696,	5,	0,	18,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList69, ImplicitList30, OperandInfo38 },  // Inst #2696 = TLSCall_64
  { 2697,	5,	0,	18,	0,	0, 0x0ULL, ImplicitList6, ImplicitList70, OperandInfo38 },  // Inst #2697 = TLS_addr32
  { 2698,	5,	0,	18,	0,	0, 0x0ULL, ImplicitList8, ImplicitList71, OperandInfo38 },  // Inst #2698 = TLS_addr64
  { 2699,	0,	0,	18,	0,	0|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x16000101ULL, NULL, NULL, 0 },  // Inst #2699 = TRAP
  { 2700,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1c8000401ULL, NULL, NULL, 0 },  // Inst #2700 = TST_F
  { 2701,	1,	0,	18,	0,	0, 0x40000ULL, NULL, NULL, OperandInfo144 },  // Inst #2701 = TST_Fp32
  { 2702,	1,	0,	18,	0,	0, 0x40000ULL, NULL, NULL, OperandInfo145 },  // Inst #2702 = TST_Fp64
  { 2703,	1,	0,	18,	0,	0, 0x40000ULL, NULL, NULL, OperandInfo122 },  // Inst #2703 = TST_Fp80
  { 2704,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x178000c46ULL, NULL, ImplicitList1, OperandInfo11 },  // Inst #2704 = TZCNT16rm
  { 2705,	2,	1,	18,	0,	0, 0x178000c45ULL, NULL, ImplicitList1, OperandInfo55 },  // Inst #2705 = TZCNT16rr
  { 2706,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x178000c06ULL, NULL, ImplicitList1, OperandInfo12 },  // Inst #2706 = TZCNT32rm
  { 2707,	2,	1,	18,	0,	0, 0x178000c05ULL, NULL, ImplicitList1, OperandInfo67 },  // Inst #2707 = TZCNT32rr
  { 2708,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x178002c06ULL, NULL, ImplicitList1, OperandInfo13 },  // Inst #2708 = TZCNT64rm
  { 2709,	2,	1,	18,	0,	0, 0x178002c05ULL, NULL, ImplicitList1, OperandInfo68 },  // Inst #2709 = TZCNT64rr
  { 2710,	6,	0,	103,	0,	0|(1<<MCID::MayLoad), 0x5d000146ULL, NULL, ImplicitList1, OperandInfo103 },  // Inst #2710 = UCOMISDrm
  { 2711,	2,	0,	104,	0,	0, 0x5d000145ULL, NULL, ImplicitList1, OperandInfo125 },  // Inst #2711 = UCOMISDrr
  { 2712,	6,	0,	103,	0,	0|(1<<MCID::MayLoad), 0x5c800106ULL, NULL, ImplicitList1, OperandInfo101 },  // Inst #2712 = UCOMISSrm
  { 2713,	2,	0,	104,	0,	0, 0x5c800105ULL, NULL, ImplicitList1, OperandInfo126 },  // Inst #2713 = UCOMISSrr
  { 2714,	1,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1d0000a02ULL, ImplicitList72, ImplicitList1, OperandInfo39 },  // Inst #2714 = UCOM_FIPr
  { 2715,	1,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1d0000602ULL, ImplicitList72, ImplicitList1, OperandInfo39 },  // Inst #2715 = UCOM_FIr
  { 2716,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1d2000501ULL, ImplicitList72, ImplicitList1, 0 },  // Inst #2716 = UCOM_FPPr
  { 2717,	1,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1d0000802ULL, ImplicitList72, ImplicitList1, OperandInfo39 },  // Inst #2717 = UCOM_FPr
  { 2718,	2,	0,	18,	0,	0, 0xa0000ULL, NULL, ImplicitList1, OperandInfo8 },  // Inst #2718 = UCOM_FpIr32
  { 2719,	2,	0,	18,	0,	0, 0xa0000ULL, NULL, ImplicitList1, OperandInfo9 },  // Inst #2719 = UCOM_FpIr64
  { 2720,	2,	0,	18,	0,	0, 0xa0000ULL, NULL, ImplicitList1, OperandInfo10 },  // Inst #2720 = UCOM_FpIr80
  { 2721,	2,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xa0000ULL, NULL, ImplicitList1, OperandInfo8 },  // Inst #2721 = UCOM_Fpr32
  { 2722,	2,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xa0000ULL, NULL, ImplicitList1, OperandInfo9 },  // Inst #2722 = UCOM_Fpr64
  { 2723,	2,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xa0000ULL, NULL, ImplicitList1, OperandInfo10 },  // Inst #2723 = UCOM_Fpr80
  { 2724,	1,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1c0000802ULL, ImplicitList72, ImplicitList1, OperandInfo39 },  // Inst #2724 = UCOM_Fr
  { 2725,	0,	0,	18,	0,	0|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x172000101ULL, NULL, NULL, 0 },  // Inst #2725 = UD2B
  { 2726,	7,	1,	199,	0,	0|(1<<MCID::MayLoad), 0x2b000146ULL, NULL, NULL, OperandInfo32 },  // Inst #2726 = UNPCKHPDrm
  { 2727,	3,	1,	199,	0,	0, 0x2b000145ULL, NULL, NULL, OperandInfo33 },  // Inst #2727 = UNPCKHPDrr
  { 2728,	7,	1,	199,	0,	0|(1<<MCID::MayLoad), 0x2a800106ULL, NULL, NULL, OperandInfo32 },  // Inst #2728 = UNPCKHPSrm
  { 2729,	3,	1,	199,	0,	0, 0x2a800105ULL, NULL, NULL, OperandInfo33 },  // Inst #2729 = UNPCKHPSrr
  { 2730,	7,	1,	199,	0,	0|(1<<MCID::MayLoad), 0x29000146ULL, NULL, NULL, OperandInfo32 },  // Inst #2730 = UNPCKLPDrm
  { 2731,	3,	1,	199,	0,	0, 0x29000145ULL, NULL, NULL, OperandInfo33 },  // Inst #2731 = UNPCKLPDrr
  { 2732,	7,	1,	199,	0,	0|(1<<MCID::MayLoad), 0x28800106ULL, NULL, NULL, OperandInfo32 },  // Inst #2732 = UNPCKLPSrm
  { 2733,	3,	1,	199,	0,	0, 0x28800105ULL, NULL, NULL, OperandInfo33 },  // Inst #2733 = UNPCKLPSrr
  { 2734,	9,	1,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList1, OperandInfo222 },  // Inst #2734 = VAARG_64
  { 2735,	7,	1,	95,	0,	0|(1<<MCID::MayLoad), 0xab1000146ULL, NULL, NULL, OperandInfo223 },  // Inst #2735 = VADDPDYrm
  { 2736,	3,	1,	96,	0,	0|(1<<MCID::Commutable), 0xab1000145ULL, NULL, NULL, OperandInfo224 },  // Inst #2736 = VADDPDYrr
  { 2737,	7,	1,	95,	0,	0|(1<<MCID::MayLoad), 0xab1000146ULL, NULL, NULL, OperandInfo139 },  // Inst #2737 = VADDPDrm
  { 2738,	3,	1,	96,	0,	0|(1<<MCID::Commutable), 0xab1000145ULL, NULL, NULL, OperandInfo140 },  // Inst #2738 = VADDPDrr
  { 2739,	7,	1,	91,	0,	0|(1<<MCID::MayLoad), 0xab0800106ULL, NULL, NULL, OperandInfo223 },  // Inst #2739 = VADDPSYrm
  { 2740,	3,	1,	92,	0,	0|(1<<MCID::Commutable), 0xab0800105ULL, NULL, NULL, OperandInfo224 },  // Inst #2740 = VADDPSYrr
  { 2741,	7,	1,	91,	0,	0|(1<<MCID::MayLoad), 0xab0800106ULL, NULL, NULL, OperandInfo139 },  // Inst #2741 = VADDPSrm
  { 2742,	3,	1,	92,	0,	0|(1<<MCID::Commutable), 0xab0800105ULL, NULL, NULL, OperandInfo140 },  // Inst #2742 = VADDPSrr
  { 2743,	7,	1,	97,	0,	0|(1<<MCID::MayLoad), 0x8ab0000b06ULL, NULL, NULL, OperandInfo225 },  // Inst #2743 = VADDSDrm
  { 2744,	7,	1,	97,	0,	0|(1<<MCID::MayLoad), 0x8ab0000b06ULL, NULL, NULL, OperandInfo139 },  // Inst #2744 = VADDSDrm_Int
  { 2745,	3,	1,	98,	0,	0|(1<<MCID::Commutable), 0x8ab0000b05ULL, NULL, NULL, OperandInfo226 },  // Inst #2745 = VADDSDrr
  { 2746,	3,	1,	98,	0,	0, 0x8ab0000b05ULL, NULL, NULL, OperandInfo140 },  // Inst #2746 = VADDSDrr_Int
  { 2747,	7,	1,	93,	0,	0|(1<<MCID::MayLoad), 0x8ab0000c06ULL, NULL, NULL, OperandInfo227 },  // Inst #2747 = VADDSSrm
  { 2748,	7,	1,	93,	0,	0|(1<<MCID::MayLoad), 0x8ab0000c06ULL, NULL, NULL, OperandInfo139 },  // Inst #2748 = VADDSSrm_Int
  { 2749,	3,	1,	94,	0,	0|(1<<MCID::Commutable), 0x8ab0000c05ULL, NULL, NULL, OperandInfo228 },  // Inst #2749 = VADDSSrr
  { 2750,	3,	1,	94,	0,	0, 0x8ab0000c05ULL, NULL, NULL, OperandInfo140 },  // Inst #2750 = VADDSSrr_Int
  { 2751,	7,	1,	96,	0,	0|(1<<MCID::MayLoad), 0xba1000146ULL, NULL, NULL, OperandInfo223 },  // Inst #2751 = VADDSUBPDYrm
  { 2752,	3,	1,	96,	0,	0, 0xba1000145ULL, NULL, NULL, OperandInfo224 },  // Inst #2752 = VADDSUBPDYrr
  { 2753,	7,	1,	96,	0,	0|(1<<MCID::MayLoad), 0xba1000146ULL, NULL, NULL, OperandInfo139 },  // Inst #2753 = VADDSUBPDrm
  { 2754,	3,	1,	96,	0,	0, 0xba1000145ULL, NULL, NULL, OperandInfo140 },  // Inst #2754 = VADDSUBPDrr
  { 2755,	7,	1,	92,	0,	0|(1<<MCID::MayLoad), 0xba0800b06ULL, NULL, NULL, OperandInfo223 },  // Inst #2755 = VADDSUBPSYrm
  { 2756,	3,	1,	92,	0,	0, 0xba0800b05ULL, NULL, NULL, OperandInfo224 },  // Inst #2756 = VADDSUBPSYrr
  { 2757,	7,	1,	92,	0,	0|(1<<MCID::MayLoad), 0xba0800b06ULL, NULL, NULL, OperandInfo139 },  // Inst #2757 = VADDSUBPSrm
  { 2758,	3,	1,	92,	0,	0, 0xba0800b05ULL, NULL, NULL, OperandInfo140 },  // Inst #2758 = VADDSUBPSrr
  { 2759,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xbbf800d46ULL, NULL, NULL, OperandInfo139 },  // Inst #2759 = VAESDECLASTrm
  { 2760,	3,	1,	18,	0,	0, 0xbbf800d45ULL, NULL, NULL, OperandInfo140 },  // Inst #2760 = VAESDECLASTrr
  { 2761,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xbbd800d46ULL, NULL, NULL, OperandInfo139 },  // Inst #2761 = VAESDECrm
  { 2762,	3,	1,	18,	0,	0, 0xbbd800d45ULL, NULL, NULL, OperandInfo140 },  // Inst #2762 = VAESDECrr
  { 2763,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xbbb800d46ULL, NULL, NULL, OperandInfo139 },  // Inst #2763 = VAESENCLASTrm
  { 2764,	3,	1,	18,	0,	0, 0xbbb800d45ULL, NULL, NULL, OperandInfo140 },  // Inst #2764 = VAESENCLASTrr
  { 2765,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xbb9800d46ULL, NULL, NULL, OperandInfo139 },  // Inst #2765 = VAESENCrm
  { 2766,	3,	1,	18,	0,	0, 0xbb9800d45ULL, NULL, NULL, OperandInfo140 },  // Inst #2766 = VAESENCrr
  { 2767,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x3b7800d46ULL, NULL, NULL, OperandInfo47 },  // Inst #2767 = VAESIMCrm
  { 2768,	2,	1,	18,	0,	0, 0x3b7800d45ULL, NULL, NULL, OperandInfo48 },  // Inst #2768 = VAESIMCrr
  { 2769,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x3bf804e46ULL, NULL, NULL, OperandInfo49 },  // Inst #2769 = VAESKEYGENASSIST128rm
  { 2770,	3,	1,	18,	0,	0, 0x3bf804e45ULL, NULL, NULL, OperandInfo50 },  // Inst #2770 = VAESKEYGENASSIST128rr
  { 2771,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xaab000146ULL, NULL, NULL, OperandInfo223 },  // Inst #2771 = VANDNPDYrm
  { 2772,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0xaab000145ULL, NULL, NULL, OperandInfo224 },  // Inst #2772 = VANDNPDYrr
  { 2773,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xaab000146ULL, NULL, NULL, OperandInfo139 },  // Inst #2773 = VANDNPDrm
  { 2774,	3,	1,	18,	0,	0, 0xaab000145ULL, NULL, NULL, OperandInfo140 },  // Inst #2774 = VANDNPDrr
  { 2775,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xaaa800106ULL, NULL, NULL, OperandInfo223 },  // Inst #2775 = VANDNPSYrm
  { 2776,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0xaaa800105ULL, NULL, NULL, OperandInfo224 },  // Inst #2776 = VANDNPSYrr
  { 2777,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xaaa800106ULL, NULL, NULL, OperandInfo139 },  // Inst #2777 = VANDNPSrm
  { 2778,	3,	1,	18,	0,	0, 0xaaa800105ULL, NULL, NULL, OperandInfo140 },  // Inst #2778 = VANDNPSrr
  { 2779,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xaa9000146ULL, NULL, NULL, OperandInfo223 },  // Inst #2779 = VANDPDYrm
  { 2780,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0xaa9000145ULL, NULL, NULL, OperandInfo224 },  // Inst #2780 = VANDPDYrr
  { 2781,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xaa9000146ULL, NULL, NULL, OperandInfo139 },  // Inst #2781 = VANDPDrm
  { 2782,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0xaa9000145ULL, NULL, NULL, OperandInfo140 },  // Inst #2782 = VANDPDrr
  { 2783,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xaa8800106ULL, NULL, NULL, OperandInfo223 },  // Inst #2783 = VANDPSYrm
  { 2784,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0xaa8800105ULL, NULL, NULL, OperandInfo224 },  // Inst #2784 = VANDPSYrr
  { 2785,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xaa8800106ULL, NULL, NULL, OperandInfo139 },  // Inst #2785 = VANDPSrm
  { 2786,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0xaa8800105ULL, NULL, NULL, OperandInfo140 },  // Inst #2786 = VANDPSrr
  { 2787,	3,	0,	18,	0,	0|(1<<MCID::UsesCustomInserter)|(1<<MCID::Variadic), 0x0ULL, NULL, NULL, OperandInfo229 },  // Inst #2787 = VASTART_SAVE_XMM_REGS
  { 2788,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa1b004e46ULL, NULL, NULL, OperandInfo230 },  // Inst #2788 = VBLENDPDYrmi
  { 2789,	4,	1,	18,	0,	0, 0xa1b004e45ULL, NULL, NULL, OperandInfo89 },  // Inst #2789 = VBLENDPDYrri
  { 2790,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa1b004e46ULL, NULL, NULL, OperandInfo138 },  // Inst #2790 = VBLENDPDrmi
  { 2791,	4,	1,	18,	0,	0, 0xa1b004e45ULL, NULL, NULL, OperandInfo88 },  // Inst #2791 = VBLENDPDrri
  { 2792,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa18804e46ULL, NULL, NULL, OperandInfo230 },  // Inst #2792 = VBLENDPSYrmi
  { 2793,	4,	1,	18,	0,	0, 0xa18804e45ULL, NULL, NULL, OperandInfo89 },  // Inst #2793 = VBLENDPSYrri
  { 2794,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa18804e46ULL, NULL, NULL, OperandInfo138 },  // Inst #2794 = VBLENDPSrmi
  { 2795,	4,	1,	18,	0,	0, 0xa18804e45ULL, NULL, NULL, OperandInfo88 },  // Inst #2795 = VBLENDPSrri
  { 2796,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x2a97004e46ULL, NULL, NULL, OperandInfo231 },  // Inst #2796 = VBLENDVPDYrm
  { 2797,	4,	1,	18,	0,	0, 0x2a97004e45ULL, NULL, NULL, OperandInfo232 },  // Inst #2797 = VBLENDVPDYrr
  { 2798,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x2a97004e46ULL, NULL, NULL, OperandInfo233 },  // Inst #2798 = VBLENDVPDrm
  { 2799,	4,	1,	18,	0,	0, 0x2a97004e45ULL, NULL, NULL, OperandInfo234 },  // Inst #2799 = VBLENDVPDrr
  { 2800,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x2a94804e46ULL, NULL, NULL, OperandInfo231 },  // Inst #2800 = VBLENDVPSYrm
  { 2801,	4,	1,	18,	0,	0, 0x2a94804e45ULL, NULL, NULL, OperandInfo232 },  // Inst #2801 = VBLENDVPSYrr
  { 2802,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x2a94804e46ULL, NULL, NULL, OperandInfo233 },  // Inst #2802 = VBLENDVPSrm
  { 2803,	4,	1,	18,	0,	0, 0x2a94804e45ULL, NULL, NULL, OperandInfo234 },  // Inst #2803 = VBLENDVPSrr
  { 2804,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x235800d46ULL, NULL, NULL, OperandInfo235 },  // Inst #2804 = VBROADCASTF128
  { 2805,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x2b5800d46ULL, NULL, NULL, OperandInfo235 },  // Inst #2805 = VBROADCASTI128
  { 2806,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x233000d46ULL, NULL, NULL, OperandInfo235 },  // Inst #2806 = VBROADCASTSDrm
  { 2807,	2,	1,	18,	0,	0, 0x233000d45ULL, NULL, NULL, OperandInfo236 },  // Inst #2807 = VBROADCASTSDrr
  { 2808,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x230800d46ULL, NULL, NULL, OperandInfo235 },  // Inst #2808 = VBROADCASTSSYrm
  { 2809,	2,	1,	18,	0,	0, 0x230800d45ULL, NULL, NULL, OperandInfo236 },  // Inst #2809 = VBROADCASTSSYrr
  { 2810,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x230800d46ULL, NULL, NULL, OperandInfo47 },  // Inst #2810 = VBROADCASTSSrm
  { 2811,	2,	1,	18,	0,	0, 0x230800d45ULL, NULL, NULL, OperandInfo48 },  // Inst #2811 = VBROADCASTSSrr
  { 2812,	8,	1,	101,	0,	0|(1<<MCID::MayLoad), 0xb85004146ULL, NULL, NULL, OperandInfo230 },  // Inst #2812 = VCMPPDYrmi
  { 2813,	8,	1,	101,	0,	0, 0xb85004146ULL, NULL, NULL, OperandInfo230 },  // Inst #2813 = VCMPPDYrmi_alt
  { 2814,	4,	1,	102,	0,	0, 0xb85004145ULL, NULL, NULL, OperandInfo89 },  // Inst #2814 = VCMPPDYrri
  { 2815,	4,	1,	102,	0,	0, 0xb85004145ULL, NULL, NULL, OperandInfo89 },  // Inst #2815 = VCMPPDYrri_alt
  { 2816,	8,	1,	101,	0,	0|(1<<MCID::MayLoad), 0xb85004146ULL, NULL, NULL, OperandInfo138 },  // Inst #2816 = VCMPPDrmi
  { 2817,	8,	1,	101,	0,	0, 0xb85004146ULL, NULL, NULL, OperandInfo138 },  // Inst #2817 = VCMPPDrmi_alt
  { 2818,	4,	1,	102,	0,	0, 0xb85004145ULL, NULL, NULL, OperandInfo88 },  // Inst #2818 = VCMPPDrri
  { 2819,	4,	1,	102,	0,	0, 0xb85004145ULL, NULL, NULL, OperandInfo88 },  // Inst #2819 = VCMPPDrri_alt
  { 2820,	8,	1,	101,	0,	0|(1<<MCID::MayLoad), 0xb84804106ULL, NULL, NULL, OperandInfo230 },  // Inst #2820 = VCMPPSYrmi
  { 2821,	8,	1,	101,	0,	0, 0xb84804106ULL, NULL, NULL, OperandInfo230 },  // Inst #2821 = VCMPPSYrmi_alt
  { 2822,	4,	1,	102,	0,	0, 0xb84804105ULL, NULL, NULL, OperandInfo89 },  // Inst #2822 = VCMPPSYrri
  { 2823,	4,	1,	102,	0,	0, 0xb84804105ULL, NULL, NULL, OperandInfo89 },  // Inst #2823 = VCMPPSYrri_alt
  { 2824,	8,	1,	101,	0,	0|(1<<MCID::MayLoad), 0xb84804106ULL, NULL, NULL, OperandInfo138 },  // Inst #2824 = VCMPPSrmi
  { 2825,	8,	1,	101,	0,	0, 0xb84804106ULL, NULL, NULL, OperandInfo138 },  // Inst #2825 = VCMPPSrmi_alt
  { 2826,	4,	1,	102,	0,	0, 0xb84804105ULL, NULL, NULL, OperandInfo88 },  // Inst #2826 = VCMPPSrri
  { 2827,	4,	1,	102,	0,	0, 0xb84804105ULL, NULL, NULL, OperandInfo88 },  // Inst #2827 = VCMPPSrri_alt
  { 2828,	8,	1,	93,	0,	0|(1<<MCID::MayLoad), 0x8b84004b06ULL, NULL, NULL, OperandInfo237 },  // Inst #2828 = VCMPSDrm
  { 2829,	8,	1,	93,	0,	0|(1<<MCID::MayLoad), 0x8b84004b06ULL, NULL, NULL, OperandInfo237 },  // Inst #2829 = VCMPSDrm_alt
  { 2830,	4,	1,	94,	0,	0, 0x8b84004b05ULL, NULL, NULL, OperandInfo81 },  // Inst #2830 = VCMPSDrr
  { 2831,	4,	1,	94,	0,	0, 0x8b84004b05ULL, NULL, NULL, OperandInfo81 },  // Inst #2831 = VCMPSDrr_alt
  { 2832,	8,	1,	93,	0,	0|(1<<MCID::MayLoad), 0x8b84004c06ULL, NULL, NULL, OperandInfo238 },  // Inst #2832 = VCMPSSrm
  { 2833,	8,	1,	93,	0,	0|(1<<MCID::MayLoad), 0x8b84004c06ULL, NULL, NULL, OperandInfo238 },  // Inst #2833 = VCMPSSrm_alt
  { 2834,	4,	1,	94,	0,	0, 0x8b84004c05ULL, NULL, NULL, OperandInfo80 },  // Inst #2834 = VCMPSSrr
  { 2835,	4,	1,	94,	0,	0, 0x8b84004c05ULL, NULL, NULL, OperandInfo80 },  // Inst #2835 = VCMPSSrr_alt
  { 2836,	6,	0,	103,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x825f000146ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #2836 = VCOMISDrm
  { 2837,	2,	0,	104,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x825f000145ULL, NULL, ImplicitList1, OperandInfo48 },  // Inst #2837 = VCOMISDrr
  { 2838,	6,	0,	103,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x825e800106ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #2838 = VCOMISSrm
  { 2839,	2,	0,	104,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x825e800105ULL, NULL, ImplicitList1, OperandInfo48 },  // Inst #2839 = VCOMISSrr
  { 2840,	6,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x3cc800c06ULL, NULL, NULL, OperandInfo235 },  // Inst #2840 = VCVTDQ2PDYrm
  { 2841,	2,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x3cc800c05ULL, NULL, NULL, OperandInfo236 },  // Inst #2841 = VCVTDQ2PDYrr
  { 2842,	6,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x3cc800c06ULL, NULL, NULL, OperandInfo47 },  // Inst #2842 = VCVTDQ2PDrm
  { 2843,	2,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x3cc800c05ULL, NULL, NULL, OperandInfo48 },  // Inst #2843 = VCVTDQ2PDrr
  { 2844,	6,	1,	109,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2b6800106ULL, NULL, NULL, OperandInfo235 },  // Inst #2844 = VCVTDQ2PSYrm
  { 2845,	2,	1,	110,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2b6800105ULL, NULL, NULL, OperandInfo239 },  // Inst #2845 = VCVTDQ2PSYrr
  { 2846,	6,	1,	109,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2b6800106ULL, NULL, NULL, OperandInfo47 },  // Inst #2846 = VCVTDQ2PSrm
  { 2847,	2,	1,	110,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2b6800105ULL, NULL, NULL, OperandInfo48 },  // Inst #2847 = VCVTDQ2PSrr
  { 2848,	2,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x3cd000b05ULL, NULL, NULL, OperandInfo240 },  // Inst #2848 = VCVTPD2DQXrYr
  { 2849,	6,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x3cd000b06ULL, NULL, NULL, OperandInfo47 },  // Inst #2849 = VCVTPD2DQXrm
  { 2850,	2,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x3cd000b05ULL, NULL, NULL, OperandInfo48 },  // Inst #2850 = VCVTPD2DQXrr
  { 2851,	6,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x43cd000b06ULL, NULL, NULL, OperandInfo47 },  // Inst #2851 = VCVTPD2DQYrm
  { 2852,	2,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x3cd000b05ULL, NULL, NULL, OperandInfo240 },  // Inst #2852 = VCVTPD2DQYrr
  { 2853,	2,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x3cd000b05ULL, NULL, NULL, OperandInfo48 },  // Inst #2853 = VCVTPD2DQrr
  { 2854,	2,	1,	106,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2b5000145ULL, NULL, NULL, OperandInfo240 },  // Inst #2854 = VCVTPD2PSXrYr
  { 2855,	6,	1,	105,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2b5000146ULL, NULL, NULL, OperandInfo47 },  // Inst #2855 = VCVTPD2PSXrm
  { 2856,	2,	1,	106,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2b5000145ULL, NULL, NULL, OperandInfo48 },  // Inst #2856 = VCVTPD2PSXrr
  { 2857,	6,	1,	105,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x42b5000146ULL, NULL, NULL, OperandInfo47 },  // Inst #2857 = VCVTPD2PSYrm
  { 2858,	2,	1,	106,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2b5000145ULL, NULL, NULL, OperandInfo240 },  // Inst #2858 = VCVTPD2PSYrr
  { 2859,	2,	1,	106,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2b5000145ULL, NULL, NULL, OperandInfo48 },  // Inst #2859 = VCVTPD2PSrr
  { 2860,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x226000d46ULL, NULL, NULL, OperandInfo235 },  // Inst #2860 = VCVTPH2PSYrm
  { 2861,	2,	1,	18,	0,	0, 0x226000d45ULL, NULL, NULL, OperandInfo236 },  // Inst #2861 = VCVTPH2PSYrr
  { 2862,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x226000d46ULL, NULL, NULL, OperandInfo47 },  // Inst #2862 = VCVTPH2PSrm
  { 2863,	2,	1,	18,	0,	0, 0x226000d45ULL, NULL, NULL, OperandInfo48 },  // Inst #2863 = VCVTPH2PSrr
  { 2864,	6,	1,	109,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2b7000146ULL, NULL, NULL, OperandInfo235 },  // Inst #2864 = VCVTPS2DQYrm
  { 2865,	2,	1,	110,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2b7000145ULL, NULL, NULL, OperandInfo239 },  // Inst #2865 = VCVTPS2DQYrr
  { 2866,	6,	1,	109,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2b7000146ULL, NULL, NULL, OperandInfo47 },  // Inst #2866 = VCVTPS2DQrm
  { 2867,	2,	1,	110,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2b7000145ULL, NULL, NULL, OperandInfo48 },  // Inst #2867 = VCVTPS2DQrr
  { 2868,	6,	1,	105,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2b4000106ULL, NULL, NULL, OperandInfo235 },  // Inst #2868 = VCVTPS2PDYrm
  { 2869,	2,	1,	106,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2b4000105ULL, NULL, NULL, OperandInfo236 },  // Inst #2869 = VCVTPS2PDYrr
  { 2870,	6,	1,	105,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2b4000106ULL, NULL, NULL, OperandInfo47 },  // Inst #2870 = VCVTPS2PDrm
  { 2871,	2,	1,	106,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2b4000105ULL, NULL, NULL, OperandInfo48 },  // Inst #2871 = VCVTPS2PDrr
  { 2872,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x23a004e44ULL, NULL, NULL, OperandInfo241 },  // Inst #2872 = VCVTPS2PHYmr
  { 2873,	3,	1,	18,	0,	0, 0x23a004e43ULL, NULL, NULL, OperandInfo242 },  // Inst #2873 = VCVTPS2PHYrr
  { 2874,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x23a004e44ULL, NULL, NULL, OperandInfo117 },  // Inst #2874 = VCVTPS2PHmr
  { 2875,	3,	1,	18,	0,	0, 0x23a004e43ULL, NULL, NULL, OperandInfo50 },  // Inst #2875 = VCVTPS2PHrr
  { 2876,	6,	1,	111,	0,	0|(1<<MCID::MayLoad), 0x865a000b06ULL, NULL, NULL, OperandInfo13 },  // Inst #2876 = VCVTSD2SI64rm
  { 2877,	2,	1,	112,	0,	0, 0x865a000b05ULL, NULL, NULL, OperandInfo99 },  // Inst #2877 = VCVTSD2SI64rr
  { 2878,	6,	1,	111,	0,	0|(1<<MCID::MayLoad), 0x825a000b06ULL, NULL, NULL, OperandInfo12 },  // Inst #2878 = VCVTSD2SIrm
  { 2879,	2,	1,	112,	0,	0, 0x825a000b05ULL, NULL, NULL, OperandInfo100 },  // Inst #2879 = VCVTSD2SIrr
  { 2880,	7,	1,	117,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x8ab4000b06ULL, NULL, NULL, OperandInfo243 },  // Inst #2880 = VCVTSD2SSrm
  { 2881,	3,	1,	118,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8ab4000b05ULL, NULL, NULL, OperandInfo244 },  // Inst #2881 = VCVTSD2SSrr
  { 2882,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x8e54000b06ULL, NULL, NULL, OperandInfo225 },  // Inst #2882 = VCVTSI2SD64rm
  { 2883,	3,	1,	18,	0,	0, 0x8e54000b05ULL, NULL, NULL, OperandInfo245 },  // Inst #2883 = VCVTSI2SD64rr
  { 2884,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x8a54000b06ULL, NULL, NULL, OperandInfo225 },  // Inst #2884 = VCVTSI2SDLrm
  { 2885,	3,	1,	18,	0,	0, 0x8a54000b05ULL, NULL, NULL, OperandInfo246 },  // Inst #2885 = VCVTSI2SDLrr
  { 2886,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x8a54000b06ULL, NULL, NULL, OperandInfo225 },  // Inst #2886 = VCVTSI2SDrm
  { 2887,	3,	1,	18,	0,	0, 0x8a54000b05ULL, NULL, NULL, OperandInfo246 },  // Inst #2887 = VCVTSI2SDrr
  { 2888,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x8e54000c06ULL, NULL, NULL, OperandInfo227 },  // Inst #2888 = VCVTSI2SS64rm
  { 2889,	3,	1,	18,	0,	0, 0x8e54000c05ULL, NULL, NULL, OperandInfo247 },  // Inst #2889 = VCVTSI2SS64rr
  { 2890,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x8a54000c06ULL, NULL, NULL, OperandInfo227 },  // Inst #2890 = VCVTSI2SSrm
  { 2891,	3,	1,	18,	0,	0, 0x8a54000c05ULL, NULL, NULL, OperandInfo248 },  // Inst #2891 = VCVTSI2SSrr
  { 2892,	7,	1,	117,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x8ab4000c06ULL, NULL, NULL, OperandInfo249 },  // Inst #2892 = VCVTSS2SDrm
  { 2893,	3,	1,	118,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8ab4000c05ULL, NULL, NULL, OperandInfo250 },  // Inst #2893 = VCVTSS2SDrr
  { 2894,	6,	1,	115,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x865a000c06ULL, NULL, NULL, OperandInfo13 },  // Inst #2894 = VCVTSS2SI64rm
  { 2895,	2,	1,	116,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x865a000c05ULL, NULL, NULL, OperandInfo109 },  // Inst #2895 = VCVTSS2SI64rr
  { 2896,	6,	1,	113,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x825a000c06ULL, NULL, NULL, OperandInfo12 },  // Inst #2896 = VCVTSS2SIrm
  { 2897,	2,	1,	114,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x825a000c05ULL, NULL, NULL, OperandInfo110 },  // Inst #2897 = VCVTSS2SIrr
  { 2898,	2,	1,	106,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x3cd000145ULL, NULL, NULL, OperandInfo240 },  // Inst #2898 = VCVTTPD2DQXrYr
  { 2899,	6,	1,	105,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x3cd000146ULL, NULL, NULL, OperandInfo47 },  // Inst #2899 = VCVTTPD2DQXrm
  { 2900,	2,	1,	106,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x3cd000145ULL, NULL, NULL, OperandInfo48 },  // Inst #2900 = VCVTTPD2DQXrr
  { 2901,	6,	1,	105,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x43cd000146ULL, NULL, NULL, OperandInfo47 },  // Inst #2901 = VCVTTPD2DQYrm
  { 2902,	2,	1,	106,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x3cd000145ULL, NULL, NULL, OperandInfo240 },  // Inst #2902 = VCVTTPD2DQYrr
  { 2903,	6,	1,	105,	0,	0|(1<<MCID::MayLoad), 0x3cd000146ULL, NULL, NULL, OperandInfo47 },  // Inst #2903 = VCVTTPD2DQrm
  { 2904,	2,	1,	106,	0,	0, 0x3cd000145ULL, NULL, NULL, OperandInfo48 },  // Inst #2904 = VCVTTPD2DQrr
  { 2905,	6,	1,	109,	0,	0|(1<<MCID::MayLoad), 0x2b6000c06ULL, NULL, NULL, OperandInfo235 },  // Inst #2905 = VCVTTPS2DQYrm
  { 2906,	2,	1,	110,	0,	0, 0x2b6000c05ULL, NULL, NULL, OperandInfo239 },  // Inst #2906 = VCVTTPS2DQYrr
  { 2907,	6,	1,	109,	0,	0|(1<<MCID::MayLoad), 0x2b6000c06ULL, NULL, NULL, OperandInfo47 },  // Inst #2907 = VCVTTPS2DQrm
  { 2908,	2,	1,	110,	0,	0, 0x2b6000c05ULL, NULL, NULL, OperandInfo48 },  // Inst #2908 = VCVTTPS2DQrr
  { 2909,	6,	1,	111,	0,	0|(1<<MCID::MayLoad), 0x8658000b06ULL, NULL, NULL, OperandInfo13 },  // Inst #2909 = VCVTTSD2SI64rm
  { 2910,	2,	1,	112,	0,	0, 0x8658000b05ULL, NULL, NULL, OperandInfo111 },  // Inst #2910 = VCVTTSD2SI64rr
  { 2911,	6,	1,	111,	0,	0|(1<<MCID::MayLoad), 0x8258000b06ULL, NULL, NULL, OperandInfo12 },  // Inst #2911 = VCVTTSD2SIrm
  { 2912,	2,	1,	112,	0,	0, 0x8258000b05ULL, NULL, NULL, OperandInfo112 },  // Inst #2912 = VCVTTSD2SIrr
  { 2913,	6,	1,	115,	0,	0|(1<<MCID::MayLoad), 0x8658000c06ULL, NULL, NULL, OperandInfo13 },  // Inst #2913 = VCVTTSS2SI64rm
  { 2914,	2,	1,	116,	0,	0, 0x8658000c05ULL, NULL, NULL, OperandInfo109 },  // Inst #2914 = VCVTTSS2SI64rr
  { 2915,	6,	1,	113,	0,	0|(1<<MCID::MayLoad), 0x8258000c06ULL, NULL, NULL, OperandInfo12 },  // Inst #2915 = VCVTTSS2SIrm
  { 2916,	2,	1,	114,	0,	0, 0x8258000c05ULL, NULL, NULL, OperandInfo110 },  // Inst #2916 = VCVTTSS2SIrr
  { 2917,	7,	1,	123,	0,	0|(1<<MCID::MayLoad), 0xabd000146ULL, NULL, NULL, OperandInfo223 },  // Inst #2917 = VDIVPDYrm
  { 2918,	3,	1,	124,	0,	0, 0xabd000145ULL, NULL, NULL, OperandInfo224 },  // Inst #2918 = VDIVPDYrr
  { 2919,	7,	1,	95,	0,	0|(1<<MCID::MayLoad), 0xabd000146ULL, NULL, NULL, OperandInfo139 },  // Inst #2919 = VDIVPDrm
  { 2920,	3,	1,	96,	0,	0, 0xabd000145ULL, NULL, NULL, OperandInfo140 },  // Inst #2920 = VDIVPDrr
  { 2921,	7,	1,	123,	0,	0|(1<<MCID::MayLoad), 0xabc800106ULL, NULL, NULL, OperandInfo223 },  // Inst #2921 = VDIVPSYrm
  { 2922,	3,	1,	120,	0,	0, 0xabc800105ULL, NULL, NULL, OperandInfo224 },  // Inst #2922 = VDIVPSYrr
  { 2923,	7,	1,	91,	0,	0|(1<<MCID::MayLoad), 0xabc800106ULL, NULL, NULL, OperandInfo139 },  // Inst #2923 = VDIVPSrm
  { 2924,	3,	1,	92,	0,	0, 0xabc800105ULL, NULL, NULL, OperandInfo140 },  // Inst #2924 = VDIVPSrr
  { 2925,	7,	1,	125,	0,	0|(1<<MCID::MayLoad), 0x8abc000b06ULL, NULL, NULL, OperandInfo225 },  // Inst #2925 = VDIVSDrm
  { 2926,	7,	1,	125,	0,	0|(1<<MCID::MayLoad), 0x8abc000b06ULL, NULL, NULL, OperandInfo139 },  // Inst #2926 = VDIVSDrm_Int
  { 2927,	3,	1,	126,	0,	0, 0x8abc000b05ULL, NULL, NULL, OperandInfo226 },  // Inst #2927 = VDIVSDrr
  { 2928,	3,	1,	126,	0,	0, 0x8abc000b05ULL, NULL, NULL, OperandInfo140 },  // Inst #2928 = VDIVSDrr_Int
  { 2929,	7,	1,	125,	0,	0|(1<<MCID::MayLoad), 0x8abc000c06ULL, NULL, NULL, OperandInfo227 },  // Inst #2929 = VDIVSSrm
  { 2930,	7,	1,	125,	0,	0|(1<<MCID::MayLoad), 0x8abc000c06ULL, NULL, NULL, OperandInfo139 },  // Inst #2930 = VDIVSSrm_Int
  { 2931,	3,	1,	122,	0,	0, 0x8abc000c05ULL, NULL, NULL, OperandInfo228 },  // Inst #2931 = VDIVSSrr
  { 2932,	3,	1,	122,	0,	0, 0x8abc000c05ULL, NULL, NULL, OperandInfo140 },  // Inst #2932 = VDIVSSrr_Int
  { 2933,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa83004e46ULL, NULL, NULL, OperandInfo138 },  // Inst #2933 = VDPPDrmi
  { 2934,	4,	1,	18,	0,	0|(1<<MCID::Commutable), 0xa83004e45ULL, NULL, NULL, OperandInfo88 },  // Inst #2934 = VDPPDrri
  { 2935,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa80804e46ULL, NULL, NULL, OperandInfo230 },  // Inst #2935 = VDPPSYrmi
  { 2936,	4,	1,	18,	0,	0|(1<<MCID::Commutable), 0xa80804e45ULL, NULL, NULL, OperandInfo89 },  // Inst #2936 = VDPPSYrri
  { 2937,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa80804e46ULL, NULL, NULL, OperandInfo138 },  // Inst #2937 = VDPPSrmi
  { 2938,	4,	1,	18,	0,	0|(1<<MCID::Commutable), 0xa80804e45ULL, NULL, NULL, OperandInfo88 },  // Inst #2938 = VDPPSrri
  { 2939,	5,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x11cULL, NULL, NULL, OperandInfo38 },  // Inst #2939 = VERRm
  { 2940,	1,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x114ULL, NULL, NULL, OperandInfo115 },  // Inst #2940 = VERRr
  { 2941,	5,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x11dULL, NULL, NULL, OperandInfo38 },  // Inst #2941 = VERWm
  { 2942,	1,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x115ULL, NULL, NULL, OperandInfo115 },  // Inst #2942 = VERWr
  { 2943,	7,	0,	18,	0,	0|(1<<MCID::MayStore), 0x232804e44ULL, NULL, NULL, OperandInfo241 },  // Inst #2943 = VEXTRACTF128mr
  { 2944,	3,	1,	18,	0,	0, 0x232804e43ULL, NULL, NULL, OperandInfo242 },  // Inst #2944 = VEXTRACTF128rr
  { 2945,	7,	0,	18,	0,	0|(1<<MCID::MayStore), 0x273804e44ULL, NULL, NULL, OperandInfo241 },  // Inst #2945 = VEXTRACTI128mr
  { 2946,	3,	1,	18,	0,	0, 0x273804e43ULL, NULL, NULL, OperandInfo242 },  // Inst #2946 = VEXTRACTI128rr
  { 2947,	7,	0,	18,	0,	0|(1<<MCID::MayStore), 0x22e804e44ULL, NULL, NULL, OperandInfo117 },  // Inst #2947 = VEXTRACTPSmr
  { 2948,	3,	1,	18,	0,	0, 0x22e804e43ULL, NULL, NULL, OperandInfo118 },  // Inst #2948 = VEXTRACTPSrr
  { 2949,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x22e804e43ULL, NULL, NULL, OperandInfo202 },  // Inst #2949 = VEXTRACTPSrr64
  { 2950,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x2ad3800e46ULL, NULL, NULL, OperandInfo233 },  // Inst #2950 = VFMADDPD4mr
  { 2951,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x2ad3800e46ULL, NULL, NULL, OperandInfo231 },  // Inst #2951 = VFMADDPD4mrY
  { 2952,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x22ed3800e46ULL, NULL, NULL, OperandInfo251 },  // Inst #2952 = VFMADDPD4rm
  { 2953,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x22ed3800e46ULL, NULL, NULL, OperandInfo252 },  // Inst #2953 = VFMADDPD4rmY
  { 2954,	4,	1,	18,	0,	0, 0x22ed3800e45ULL, NULL, NULL, OperandInfo234 },  // Inst #2954 = VFMADDPD4rr
  { 2955,	4,	1,	18,	0,	0, 0x22ed3800e45ULL, NULL, NULL, OperandInfo232 },  // Inst #2955 = VFMADDPD4rrY
  { 2956,	4,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2ad3800e45ULL, NULL, NULL, OperandInfo232 },  // Inst #2956 = VFMADDPD4rrY_REV
  { 2957,	4,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2ad3800e45ULL, NULL, NULL, OperandInfo234 },  // Inst #2957 = VFMADDPD4rr_REV
  { 2958,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf31000d46ULL, NULL, NULL, OperandInfo139 },  // Inst #2958 = VFMADDPDr132m
  { 2959,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf31000d46ULL, NULL, NULL, OperandInfo223 },  // Inst #2959 = VFMADDPDr132mY
  { 2960,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf31000d45ULL, NULL, NULL, OperandInfo140 },  // Inst #2960 = VFMADDPDr132r
  { 2961,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf31000d45ULL, NULL, NULL, OperandInfo224 },  // Inst #2961 = VFMADDPDr132rY
  { 2962,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf51000d46ULL, NULL, NULL, OperandInfo139 },  // Inst #2962 = VFMADDPDr213m
  { 2963,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf51000d46ULL, NULL, NULL, OperandInfo223 },  // Inst #2963 = VFMADDPDr213mY
  { 2964,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf51000d45ULL, NULL, NULL, OperandInfo140 },  // Inst #2964 = VFMADDPDr213r
  { 2965,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf51000d45ULL, NULL, NULL, OperandInfo224 },  // Inst #2965 = VFMADDPDr213rY
  { 2966,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf71000d46ULL, NULL, NULL, OperandInfo139 },  // Inst #2966 = VFMADDPDr231m
  { 2967,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf71000d46ULL, NULL, NULL, OperandInfo223 },  // Inst #2967 = VFMADDPDr231mY
  { 2968,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf71000d45ULL, NULL, NULL, OperandInfo140 },  // Inst #2968 = VFMADDPDr231r
  { 2969,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf71000d45ULL, NULL, NULL, OperandInfo224 },  // Inst #2969 = VFMADDPDr231rY
  { 2970,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x2ad1800e46ULL, NULL, NULL, OperandInfo233 },  // Inst #2970 = VFMADDPS4mr
  { 2971,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x2ad1800e46ULL, NULL, NULL, OperandInfo231 },  // Inst #2971 = VFMADDPS4mrY
  { 2972,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x22ed1800e46ULL, NULL, NULL, OperandInfo251 },  // Inst #2972 = VFMADDPS4rm
  { 2973,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x22ed1800e46ULL, NULL, NULL, OperandInfo252 },  // Inst #2973 = VFMADDPS4rmY
  { 2974,	4,	1,	18,	0,	0, 0x22ed1800e45ULL, NULL, NULL, OperandInfo234 },  // Inst #2974 = VFMADDPS4rr
  { 2975,	4,	1,	18,	0,	0, 0x22ed1800e45ULL, NULL, NULL, OperandInfo232 },  // Inst #2975 = VFMADDPS4rrY
  { 2976,	4,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2ad1800e45ULL, NULL, NULL, OperandInfo232 },  // Inst #2976 = VFMADDPS4rrY_REV
  { 2977,	4,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2ad1800e45ULL, NULL, NULL, OperandInfo234 },  // Inst #2977 = VFMADDPS4rr_REV
  { 2978,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb30800d46ULL, NULL, NULL, OperandInfo139 },  // Inst #2978 = VFMADDPSr132m
  { 2979,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb30800d46ULL, NULL, NULL, OperandInfo223 },  // Inst #2979 = VFMADDPSr132mY
  { 2980,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb30800d45ULL, NULL, NULL, OperandInfo140 },  // Inst #2980 = VFMADDPSr132r
  { 2981,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb30800d45ULL, NULL, NULL, OperandInfo224 },  // Inst #2981 = VFMADDPSr132rY
  { 2982,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb50800d46ULL, NULL, NULL, OperandInfo139 },  // Inst #2982 = VFMADDPSr213m
  { 2983,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb50800d46ULL, NULL, NULL, OperandInfo223 },  // Inst #2983 = VFMADDPSr213mY
  { 2984,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb50800d45ULL, NULL, NULL, OperandInfo140 },  // Inst #2984 = VFMADDPSr213r
  { 2985,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb50800d45ULL, NULL, NULL, OperandInfo224 },  // Inst #2985 = VFMADDPSr213rY
  { 2986,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb70800d46ULL, NULL, NULL, OperandInfo139 },  // Inst #2986 = VFMADDPSr231m
  { 2987,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb70800d46ULL, NULL, NULL, OperandInfo223 },  // Inst #2987 = VFMADDPSr231mY
  { 2988,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb70800d45ULL, NULL, NULL, OperandInfo140 },  // Inst #2988 = VFMADDPSr231r
  { 2989,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb70800d45ULL, NULL, NULL, OperandInfo224 },  // Inst #2989 = VFMADDPSr231rY
  { 2990,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x2ad7800e46ULL, NULL, NULL, OperandInfo233 },  // Inst #2990 = VFMADDSD4mr
  { 2991,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x22ed7800e46ULL, NULL, NULL, OperandInfo251 },  // Inst #2991 = VFMADDSD4rm
  { 2992,	4,	1,	18,	0,	0, 0x22ed7800e45ULL, NULL, NULL, OperandInfo234 },  // Inst #2992 = VFMADDSD4rr
  { 2993,	4,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2ad7800e45ULL, NULL, NULL, OperandInfo234 },  // Inst #2993 = VFMADDSD4rr_REV
  { 2994,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8f32000d46ULL, NULL, NULL, OperandInfo139 },  // Inst #2994 = VFMADDSDr132m
  { 2995,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8f32000d45ULL, NULL, NULL, OperandInfo140 },  // Inst #2995 = VFMADDSDr132r
  { 2996,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8f52000d46ULL, NULL, NULL, OperandInfo139 },  // Inst #2996 = VFMADDSDr213m
  { 2997,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8f52000d45ULL, NULL, NULL, OperandInfo140 },  // Inst #2997 = VFMADDSDr213r
  { 2998,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8f72000d46ULL, NULL, NULL, OperandInfo139 },  // Inst #2998 = VFMADDSDr231m
  { 2999,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8f72000d45ULL, NULL, NULL, OperandInfo140 },  // Inst #2999 = VFMADDSDr231r
  { 3000,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x2ad5800e46ULL, NULL, NULL, OperandInfo233 },  // Inst #3000 = VFMADDSS4mr
  { 3001,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x22ed5800e46ULL, NULL, NULL, OperandInfo251 },  // Inst #3001 = VFMADDSS4rm
  { 3002,	4,	1,	18,	0,	0, 0x22ed5800e45ULL, NULL, NULL, OperandInfo234 },  // Inst #3002 = VFMADDSS4rr
  { 3003,	4,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2ad5800e45ULL, NULL, NULL, OperandInfo234 },  // Inst #3003 = VFMADDSS4rr_REV
  { 3004,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8b32000d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3004 = VFMADDSSr132m
  { 3005,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8b32000d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3005 = VFMADDSSr132r
  { 3006,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8b52000d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3006 = VFMADDSSr213m
  { 3007,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8b52000d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3007 = VFMADDSSr213r
  { 3008,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8b72000d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3008 = VFMADDSSr231m
  { 3009,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8b72000d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3009 = VFMADDSSr231r
  { 3010,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x2abb800e46ULL, NULL, NULL, OperandInfo233 },  // Inst #3010 = VFMADDSUBPD4mr
  { 3011,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x2abb800e46ULL, NULL, NULL, OperandInfo231 },  // Inst #3011 = VFMADDSUBPD4mrY
  { 3012,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x22ebb800e46ULL, NULL, NULL, OperandInfo251 },  // Inst #3012 = VFMADDSUBPD4rm
  { 3013,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x22ebb800e46ULL, NULL, NULL, OperandInfo252 },  // Inst #3013 = VFMADDSUBPD4rmY
  { 3014,	4,	1,	18,	0,	0, 0x22ebb800e45ULL, NULL, NULL, OperandInfo234 },  // Inst #3014 = VFMADDSUBPD4rr
  { 3015,	4,	1,	18,	0,	0, 0x22ebb800e45ULL, NULL, NULL, OperandInfo232 },  // Inst #3015 = VFMADDSUBPD4rrY
  { 3016,	4,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2abb800e45ULL, NULL, NULL, OperandInfo232 },  // Inst #3016 = VFMADDSUBPD4rrY_REV
  { 3017,	4,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2abb800e45ULL, NULL, NULL, OperandInfo234 },  // Inst #3017 = VFMADDSUBPD4rr_REV
  { 3018,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf2d000d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3018 = VFMADDSUBPDr132m
  { 3019,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf2d000d46ULL, NULL, NULL, OperandInfo223 },  // Inst #3019 = VFMADDSUBPDr132mY
  { 3020,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf2d000d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3020 = VFMADDSUBPDr132r
  { 3021,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf2d000d45ULL, NULL, NULL, OperandInfo224 },  // Inst #3021 = VFMADDSUBPDr132rY
  { 3022,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf4d000d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3022 = VFMADDSUBPDr213m
  { 3023,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf4d000d46ULL, NULL, NULL, OperandInfo223 },  // Inst #3023 = VFMADDSUBPDr213mY
  { 3024,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf4d000d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3024 = VFMADDSUBPDr213r
  { 3025,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf4d000d45ULL, NULL, NULL, OperandInfo224 },  // Inst #3025 = VFMADDSUBPDr213rY
  { 3026,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf6d000d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3026 = VFMADDSUBPDr231m
  { 3027,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf6d000d46ULL, NULL, NULL, OperandInfo223 },  // Inst #3027 = VFMADDSUBPDr231mY
  { 3028,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf6d000d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3028 = VFMADDSUBPDr231r
  { 3029,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf6d000d45ULL, NULL, NULL, OperandInfo224 },  // Inst #3029 = VFMADDSUBPDr231rY
  { 3030,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x2ab9800e46ULL, NULL, NULL, OperandInfo233 },  // Inst #3030 = VFMADDSUBPS4mr
  { 3031,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x2ab9800e46ULL, NULL, NULL, OperandInfo231 },  // Inst #3031 = VFMADDSUBPS4mrY
  { 3032,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x22eb9800e46ULL, NULL, NULL, OperandInfo251 },  // Inst #3032 = VFMADDSUBPS4rm
  { 3033,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x22eb9800e46ULL, NULL, NULL, OperandInfo252 },  // Inst #3033 = VFMADDSUBPS4rmY
  { 3034,	4,	1,	18,	0,	0, 0x22eb9800e45ULL, NULL, NULL, OperandInfo234 },  // Inst #3034 = VFMADDSUBPS4rr
  { 3035,	4,	1,	18,	0,	0, 0x22eb9800e45ULL, NULL, NULL, OperandInfo232 },  // Inst #3035 = VFMADDSUBPS4rrY
  { 3036,	4,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2ab9800e45ULL, NULL, NULL, OperandInfo232 },  // Inst #3036 = VFMADDSUBPS4rrY_REV
  { 3037,	4,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2ab9800e45ULL, NULL, NULL, OperandInfo234 },  // Inst #3037 = VFMADDSUBPS4rr_REV
  { 3038,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb2c800d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3038 = VFMADDSUBPSr132m
  { 3039,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb2c800d46ULL, NULL, NULL, OperandInfo223 },  // Inst #3039 = VFMADDSUBPSr132mY
  { 3040,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb2c800d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3040 = VFMADDSUBPSr132r
  { 3041,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb2c800d45ULL, NULL, NULL, OperandInfo224 },  // Inst #3041 = VFMADDSUBPSr132rY
  { 3042,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb4c800d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3042 = VFMADDSUBPSr213m
  { 3043,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb4c800d46ULL, NULL, NULL, OperandInfo223 },  // Inst #3043 = VFMADDSUBPSr213mY
  { 3044,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb4c800d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3044 = VFMADDSUBPSr213r
  { 3045,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb4c800d45ULL, NULL, NULL, OperandInfo224 },  // Inst #3045 = VFMADDSUBPSr213rY
  { 3046,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb6c800d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3046 = VFMADDSUBPSr231m
  { 3047,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb6c800d46ULL, NULL, NULL, OperandInfo223 },  // Inst #3047 = VFMADDSUBPSr231mY
  { 3048,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb6c800d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3048 = VFMADDSUBPSr231r
  { 3049,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb6c800d45ULL, NULL, NULL, OperandInfo224 },  // Inst #3049 = VFMADDSUBPSr231rY
  { 3050,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x2abf800e46ULL, NULL, NULL, OperandInfo233 },  // Inst #3050 = VFMSUBADDPD4mr
  { 3051,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x2abf800e46ULL, NULL, NULL, OperandInfo231 },  // Inst #3051 = VFMSUBADDPD4mrY
  { 3052,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x22ebf800e46ULL, NULL, NULL, OperandInfo251 },  // Inst #3052 = VFMSUBADDPD4rm
  { 3053,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x22ebf800e46ULL, NULL, NULL, OperandInfo252 },  // Inst #3053 = VFMSUBADDPD4rmY
  { 3054,	4,	1,	18,	0,	0, 0x22ebf800e45ULL, NULL, NULL, OperandInfo234 },  // Inst #3054 = VFMSUBADDPD4rr
  { 3055,	4,	1,	18,	0,	0, 0x22ebf800e45ULL, NULL, NULL, OperandInfo232 },  // Inst #3055 = VFMSUBADDPD4rrY
  { 3056,	4,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2abf800e45ULL, NULL, NULL, OperandInfo232 },  // Inst #3056 = VFMSUBADDPD4rrY_REV
  { 3057,	4,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2abf800e45ULL, NULL, NULL, OperandInfo234 },  // Inst #3057 = VFMSUBADDPD4rr_REV
  { 3058,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf2f000d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3058 = VFMSUBADDPDr132m
  { 3059,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf2f000d46ULL, NULL, NULL, OperandInfo223 },  // Inst #3059 = VFMSUBADDPDr132mY
  { 3060,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf2f000d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3060 = VFMSUBADDPDr132r
  { 3061,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf2f000d45ULL, NULL, NULL, OperandInfo224 },  // Inst #3061 = VFMSUBADDPDr132rY
  { 3062,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf4f000d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3062 = VFMSUBADDPDr213m
  { 3063,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf4f000d46ULL, NULL, NULL, OperandInfo223 },  // Inst #3063 = VFMSUBADDPDr213mY
  { 3064,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf4f000d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3064 = VFMSUBADDPDr213r
  { 3065,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf4f000d45ULL, NULL, NULL, OperandInfo224 },  // Inst #3065 = VFMSUBADDPDr213rY
  { 3066,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf6f000d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3066 = VFMSUBADDPDr231m
  { 3067,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf6f000d46ULL, NULL, NULL, OperandInfo223 },  // Inst #3067 = VFMSUBADDPDr231mY
  { 3068,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf6f000d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3068 = VFMSUBADDPDr231r
  { 3069,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf6f000d45ULL, NULL, NULL, OperandInfo224 },  // Inst #3069 = VFMSUBADDPDr231rY
  { 3070,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x2abd800e46ULL, NULL, NULL, OperandInfo233 },  // Inst #3070 = VFMSUBADDPS4mr
  { 3071,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x2abd800e46ULL, NULL, NULL, OperandInfo231 },  // Inst #3071 = VFMSUBADDPS4mrY
  { 3072,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x22ebd800e46ULL, NULL, NULL, OperandInfo251 },  // Inst #3072 = VFMSUBADDPS4rm
  { 3073,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x22ebd800e46ULL, NULL, NULL, OperandInfo252 },  // Inst #3073 = VFMSUBADDPS4rmY
  { 3074,	4,	1,	18,	0,	0, 0x22ebd800e45ULL, NULL, NULL, OperandInfo234 },  // Inst #3074 = VFMSUBADDPS4rr
  { 3075,	4,	1,	18,	0,	0, 0x22ebd800e45ULL, NULL, NULL, OperandInfo232 },  // Inst #3075 = VFMSUBADDPS4rrY
  { 3076,	4,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2abd800e45ULL, NULL, NULL, OperandInfo232 },  // Inst #3076 = VFMSUBADDPS4rrY_REV
  { 3077,	4,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2abd800e45ULL, NULL, NULL, OperandInfo234 },  // Inst #3077 = VFMSUBADDPS4rr_REV
  { 3078,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb2e800d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3078 = VFMSUBADDPSr132m
  { 3079,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb2e800d46ULL, NULL, NULL, OperandInfo223 },  // Inst #3079 = VFMSUBADDPSr132mY
  { 3080,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb2e800d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3080 = VFMSUBADDPSr132r
  { 3081,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb2e800d45ULL, NULL, NULL, OperandInfo224 },  // Inst #3081 = VFMSUBADDPSr132rY
  { 3082,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb4e800d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3082 = VFMSUBADDPSr213m
  { 3083,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb4e800d46ULL, NULL, NULL, OperandInfo223 },  // Inst #3083 = VFMSUBADDPSr213mY
  { 3084,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb4e800d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3084 = VFMSUBADDPSr213r
  { 3085,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb4e800d45ULL, NULL, NULL, OperandInfo224 },  // Inst #3085 = VFMSUBADDPSr213rY
  { 3086,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb6e800d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3086 = VFMSUBADDPSr231m
  { 3087,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb6e800d46ULL, NULL, NULL, OperandInfo223 },  // Inst #3087 = VFMSUBADDPSr231mY
  { 3088,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb6e800d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3088 = VFMSUBADDPSr231r
  { 3089,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb6e800d45ULL, NULL, NULL, OperandInfo224 },  // Inst #3089 = VFMSUBADDPSr231rY
  { 3090,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x2adb800e46ULL, NULL, NULL, OperandInfo233 },  // Inst #3090 = VFMSUBPD4mr
  { 3091,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x2adb800e46ULL, NULL, NULL, OperandInfo231 },  // Inst #3091 = VFMSUBPD4mrY
  { 3092,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x22edb800e46ULL, NULL, NULL, OperandInfo251 },  // Inst #3092 = VFMSUBPD4rm
  { 3093,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x22edb800e46ULL, NULL, NULL, OperandInfo252 },  // Inst #3093 = VFMSUBPD4rmY
  { 3094,	4,	1,	18,	0,	0, 0x22edb800e45ULL, NULL, NULL, OperandInfo234 },  // Inst #3094 = VFMSUBPD4rr
  { 3095,	4,	1,	18,	0,	0, 0x22edb800e45ULL, NULL, NULL, OperandInfo232 },  // Inst #3095 = VFMSUBPD4rrY
  { 3096,	4,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2adb800e45ULL, NULL, NULL, OperandInfo232 },  // Inst #3096 = VFMSUBPD4rrY_REV
  { 3097,	4,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2adb800e45ULL, NULL, NULL, OperandInfo234 },  // Inst #3097 = VFMSUBPD4rr_REV
  { 3098,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf35000d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3098 = VFMSUBPDr132m
  { 3099,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf35000d46ULL, NULL, NULL, OperandInfo223 },  // Inst #3099 = VFMSUBPDr132mY
  { 3100,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf35000d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3100 = VFMSUBPDr132r
  { 3101,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf35000d45ULL, NULL, NULL, OperandInfo224 },  // Inst #3101 = VFMSUBPDr132rY
  { 3102,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf55000d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3102 = VFMSUBPDr213m
  { 3103,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf55000d46ULL, NULL, NULL, OperandInfo223 },  // Inst #3103 = VFMSUBPDr213mY
  { 3104,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf55000d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3104 = VFMSUBPDr213r
  { 3105,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf55000d45ULL, NULL, NULL, OperandInfo224 },  // Inst #3105 = VFMSUBPDr213rY
  { 3106,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf75000d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3106 = VFMSUBPDr231m
  { 3107,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf75000d46ULL, NULL, NULL, OperandInfo223 },  // Inst #3107 = VFMSUBPDr231mY
  { 3108,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf75000d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3108 = VFMSUBPDr231r
  { 3109,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf75000d45ULL, NULL, NULL, OperandInfo224 },  // Inst #3109 = VFMSUBPDr231rY
  { 3110,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x2ad9800e46ULL, NULL, NULL, OperandInfo233 },  // Inst #3110 = VFMSUBPS4mr
  { 3111,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x2ad9800e46ULL, NULL, NULL, OperandInfo231 },  // Inst #3111 = VFMSUBPS4mrY
  { 3112,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x22ed9800e46ULL, NULL, NULL, OperandInfo251 },  // Inst #3112 = VFMSUBPS4rm
  { 3113,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x22ed9800e46ULL, NULL, NULL, OperandInfo252 },  // Inst #3113 = VFMSUBPS4rmY
  { 3114,	4,	1,	18,	0,	0, 0x22ed9800e45ULL, NULL, NULL, OperandInfo234 },  // Inst #3114 = VFMSUBPS4rr
  { 3115,	4,	1,	18,	0,	0, 0x22ed9800e45ULL, NULL, NULL, OperandInfo232 },  // Inst #3115 = VFMSUBPS4rrY
  { 3116,	4,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2ad9800e45ULL, NULL, NULL, OperandInfo232 },  // Inst #3116 = VFMSUBPS4rrY_REV
  { 3117,	4,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2ad9800e45ULL, NULL, NULL, OperandInfo234 },  // Inst #3117 = VFMSUBPS4rr_REV
  { 3118,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb34800d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3118 = VFMSUBPSr132m
  { 3119,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb34800d46ULL, NULL, NULL, OperandInfo223 },  // Inst #3119 = VFMSUBPSr132mY
  { 3120,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb34800d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3120 = VFMSUBPSr132r
  { 3121,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb34800d45ULL, NULL, NULL, OperandInfo224 },  // Inst #3121 = VFMSUBPSr132rY
  { 3122,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb54800d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3122 = VFMSUBPSr213m
  { 3123,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb54800d46ULL, NULL, NULL, OperandInfo223 },  // Inst #3123 = VFMSUBPSr213mY
  { 3124,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb54800d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3124 = VFMSUBPSr213r
  { 3125,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb54800d45ULL, NULL, NULL, OperandInfo224 },  // Inst #3125 = VFMSUBPSr213rY
  { 3126,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb74800d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3126 = VFMSUBPSr231m
  { 3127,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb74800d46ULL, NULL, NULL, OperandInfo223 },  // Inst #3127 = VFMSUBPSr231mY
  { 3128,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb74800d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3128 = VFMSUBPSr231r
  { 3129,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb74800d45ULL, NULL, NULL, OperandInfo224 },  // Inst #3129 = VFMSUBPSr231rY
  { 3130,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x2adf800e46ULL, NULL, NULL, OperandInfo233 },  // Inst #3130 = VFMSUBSD4mr
  { 3131,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x22edf800e46ULL, NULL, NULL, OperandInfo251 },  // Inst #3131 = VFMSUBSD4rm
  { 3132,	4,	1,	18,	0,	0, 0x22edf800e45ULL, NULL, NULL, OperandInfo234 },  // Inst #3132 = VFMSUBSD4rr
  { 3133,	4,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2adf800e45ULL, NULL, NULL, OperandInfo234 },  // Inst #3133 = VFMSUBSD4rr_REV
  { 3134,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8f36000d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3134 = VFMSUBSDr132m
  { 3135,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8f36000d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3135 = VFMSUBSDr132r
  { 3136,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8f56000d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3136 = VFMSUBSDr213m
  { 3137,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8f56000d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3137 = VFMSUBSDr213r
  { 3138,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8f76000d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3138 = VFMSUBSDr231m
  { 3139,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8f76000d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3139 = VFMSUBSDr231r
  { 3140,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x2add800e46ULL, NULL, NULL, OperandInfo233 },  // Inst #3140 = VFMSUBSS4mr
  { 3141,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x22edd800e46ULL, NULL, NULL, OperandInfo251 },  // Inst #3141 = VFMSUBSS4rm
  { 3142,	4,	1,	18,	0,	0, 0x22edd800e45ULL, NULL, NULL, OperandInfo234 },  // Inst #3142 = VFMSUBSS4rr
  { 3143,	4,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2add800e45ULL, NULL, NULL, OperandInfo234 },  // Inst #3143 = VFMSUBSS4rr_REV
  { 3144,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8b36000d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3144 = VFMSUBSSr132m
  { 3145,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8b36000d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3145 = VFMSUBSSr132r
  { 3146,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8b56000d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3146 = VFMSUBSSr213m
  { 3147,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8b56000d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3147 = VFMSUBSSr213r
  { 3148,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8b76000d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3148 = VFMSUBSSr231m
  { 3149,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8b76000d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3149 = VFMSUBSSr231r
  { 3150,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x2af3800e46ULL, NULL, NULL, OperandInfo233 },  // Inst #3150 = VFNMADDPD4mr
  { 3151,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x2af3800e46ULL, NULL, NULL, OperandInfo231 },  // Inst #3151 = VFNMADDPD4mrY
  { 3152,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x22ef3800e46ULL, NULL, NULL, OperandInfo251 },  // Inst #3152 = VFNMADDPD4rm
  { 3153,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x22ef3800e46ULL, NULL, NULL, OperandInfo252 },  // Inst #3153 = VFNMADDPD4rmY
  { 3154,	4,	1,	18,	0,	0, 0x22ef3800e45ULL, NULL, NULL, OperandInfo234 },  // Inst #3154 = VFNMADDPD4rr
  { 3155,	4,	1,	18,	0,	0, 0x22ef3800e45ULL, NULL, NULL, OperandInfo232 },  // Inst #3155 = VFNMADDPD4rrY
  { 3156,	4,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2af3800e45ULL, NULL, NULL, OperandInfo232 },  // Inst #3156 = VFNMADDPD4rrY_REV
  { 3157,	4,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2af3800e45ULL, NULL, NULL, OperandInfo234 },  // Inst #3157 = VFNMADDPD4rr_REV
  { 3158,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf39000d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3158 = VFNMADDPDr132m
  { 3159,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf39000d46ULL, NULL, NULL, OperandInfo223 },  // Inst #3159 = VFNMADDPDr132mY
  { 3160,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf39000d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3160 = VFNMADDPDr132r
  { 3161,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf39000d45ULL, NULL, NULL, OperandInfo224 },  // Inst #3161 = VFNMADDPDr132rY
  { 3162,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf59000d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3162 = VFNMADDPDr213m
  { 3163,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf59000d46ULL, NULL, NULL, OperandInfo223 },  // Inst #3163 = VFNMADDPDr213mY
  { 3164,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf59000d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3164 = VFNMADDPDr213r
  { 3165,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf59000d45ULL, NULL, NULL, OperandInfo224 },  // Inst #3165 = VFNMADDPDr213rY
  { 3166,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf79000d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3166 = VFNMADDPDr231m
  { 3167,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf79000d46ULL, NULL, NULL, OperandInfo223 },  // Inst #3167 = VFNMADDPDr231mY
  { 3168,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf79000d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3168 = VFNMADDPDr231r
  { 3169,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf79000d45ULL, NULL, NULL, OperandInfo224 },  // Inst #3169 = VFNMADDPDr231rY
  { 3170,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x2af1800e46ULL, NULL, NULL, OperandInfo233 },  // Inst #3170 = VFNMADDPS4mr
  { 3171,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x2af1800e46ULL, NULL, NULL, OperandInfo231 },  // Inst #3171 = VFNMADDPS4mrY
  { 3172,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x22ef1800e46ULL, NULL, NULL, OperandInfo251 },  // Inst #3172 = VFNMADDPS4rm
  { 3173,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x22ef1800e46ULL, NULL, NULL, OperandInfo252 },  // Inst #3173 = VFNMADDPS4rmY
  { 3174,	4,	1,	18,	0,	0, 0x22ef1800e45ULL, NULL, NULL, OperandInfo234 },  // Inst #3174 = VFNMADDPS4rr
  { 3175,	4,	1,	18,	0,	0, 0x22ef1800e45ULL, NULL, NULL, OperandInfo232 },  // Inst #3175 = VFNMADDPS4rrY
  { 3176,	4,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2af1800e45ULL, NULL, NULL, OperandInfo232 },  // Inst #3176 = VFNMADDPS4rrY_REV
  { 3177,	4,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2af1800e45ULL, NULL, NULL, OperandInfo234 },  // Inst #3177 = VFNMADDPS4rr_REV
  { 3178,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb38800d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3178 = VFNMADDPSr132m
  { 3179,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb38800d46ULL, NULL, NULL, OperandInfo223 },  // Inst #3179 = VFNMADDPSr132mY
  { 3180,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb38800d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3180 = VFNMADDPSr132r
  { 3181,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb38800d45ULL, NULL, NULL, OperandInfo224 },  // Inst #3181 = VFNMADDPSr132rY
  { 3182,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb58800d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3182 = VFNMADDPSr213m
  { 3183,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb58800d46ULL, NULL, NULL, OperandInfo223 },  // Inst #3183 = VFNMADDPSr213mY
  { 3184,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb58800d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3184 = VFNMADDPSr213r
  { 3185,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb58800d45ULL, NULL, NULL, OperandInfo224 },  // Inst #3185 = VFNMADDPSr213rY
  { 3186,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb78800d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3186 = VFNMADDPSr231m
  { 3187,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb78800d46ULL, NULL, NULL, OperandInfo223 },  // Inst #3187 = VFNMADDPSr231mY
  { 3188,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb78800d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3188 = VFNMADDPSr231r
  { 3189,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb78800d45ULL, NULL, NULL, OperandInfo224 },  // Inst #3189 = VFNMADDPSr231rY
  { 3190,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x2af7800e46ULL, NULL, NULL, OperandInfo233 },  // Inst #3190 = VFNMADDSD4mr
  { 3191,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x22ef7800e46ULL, NULL, NULL, OperandInfo251 },  // Inst #3191 = VFNMADDSD4rm
  { 3192,	4,	1,	18,	0,	0, 0x22ef7800e45ULL, NULL, NULL, OperandInfo234 },  // Inst #3192 = VFNMADDSD4rr
  { 3193,	4,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2af7800e45ULL, NULL, NULL, OperandInfo234 },  // Inst #3193 = VFNMADDSD4rr_REV
  { 3194,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8f3a000d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3194 = VFNMADDSDr132m
  { 3195,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8f3a000d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3195 = VFNMADDSDr132r
  { 3196,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8f5a000d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3196 = VFNMADDSDr213m
  { 3197,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8f5a000d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3197 = VFNMADDSDr213r
  { 3198,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8f7a000d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3198 = VFNMADDSDr231m
  { 3199,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8f7a000d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3199 = VFNMADDSDr231r
  { 3200,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x2af5800e46ULL, NULL, NULL, OperandInfo233 },  // Inst #3200 = VFNMADDSS4mr
  { 3201,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x22ef5800e46ULL, NULL, NULL, OperandInfo251 },  // Inst #3201 = VFNMADDSS4rm
  { 3202,	4,	1,	18,	0,	0, 0x22ef5800e45ULL, NULL, NULL, OperandInfo234 },  // Inst #3202 = VFNMADDSS4rr
  { 3203,	4,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2af5800e45ULL, NULL, NULL, OperandInfo234 },  // Inst #3203 = VFNMADDSS4rr_REV
  { 3204,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8b3a000d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3204 = VFNMADDSSr132m
  { 3205,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8b3a000d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3205 = VFNMADDSSr132r
  { 3206,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8b5a000d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3206 = VFNMADDSSr213m
  { 3207,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8b5a000d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3207 = VFNMADDSSr213r
  { 3208,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8b7a000d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3208 = VFNMADDSSr231m
  { 3209,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8b7a000d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3209 = VFNMADDSSr231r
  { 3210,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x2afb800e46ULL, NULL, NULL, OperandInfo233 },  // Inst #3210 = VFNMSUBPD4mr
  { 3211,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x2afb800e46ULL, NULL, NULL, OperandInfo231 },  // Inst #3211 = VFNMSUBPD4mrY
  { 3212,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x22efb800e46ULL, NULL, NULL, OperandInfo251 },  // Inst #3212 = VFNMSUBPD4rm
  { 3213,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x22efb800e46ULL, NULL, NULL, OperandInfo252 },  // Inst #3213 = VFNMSUBPD4rmY
  { 3214,	4,	1,	18,	0,	0, 0x22efb800e45ULL, NULL, NULL, OperandInfo234 },  // Inst #3214 = VFNMSUBPD4rr
  { 3215,	4,	1,	18,	0,	0, 0x22efb800e45ULL, NULL, NULL, OperandInfo232 },  // Inst #3215 = VFNMSUBPD4rrY
  { 3216,	4,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2afb800e45ULL, NULL, NULL, OperandInfo232 },  // Inst #3216 = VFNMSUBPD4rrY_REV
  { 3217,	4,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2afb800e45ULL, NULL, NULL, OperandInfo234 },  // Inst #3217 = VFNMSUBPD4rr_REV
  { 3218,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf3d000d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3218 = VFNMSUBPDr132m
  { 3219,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf3d000d46ULL, NULL, NULL, OperandInfo223 },  // Inst #3219 = VFNMSUBPDr132mY
  { 3220,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf3d000d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3220 = VFNMSUBPDr132r
  { 3221,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf3d000d45ULL, NULL, NULL, OperandInfo224 },  // Inst #3221 = VFNMSUBPDr132rY
  { 3222,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf5d000d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3222 = VFNMSUBPDr213m
  { 3223,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf5d000d46ULL, NULL, NULL, OperandInfo223 },  // Inst #3223 = VFNMSUBPDr213mY
  { 3224,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf5d000d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3224 = VFNMSUBPDr213r
  { 3225,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf5d000d45ULL, NULL, NULL, OperandInfo224 },  // Inst #3225 = VFNMSUBPDr213rY
  { 3226,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf7d000d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3226 = VFNMSUBPDr231m
  { 3227,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf7d000d46ULL, NULL, NULL, OperandInfo223 },  // Inst #3227 = VFNMSUBPDr231mY
  { 3228,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf7d000d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3228 = VFNMSUBPDr231r
  { 3229,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf7d000d45ULL, NULL, NULL, OperandInfo224 },  // Inst #3229 = VFNMSUBPDr231rY
  { 3230,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x2af9800e46ULL, NULL, NULL, OperandInfo233 },  // Inst #3230 = VFNMSUBPS4mr
  { 3231,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x2af9800e46ULL, NULL, NULL, OperandInfo231 },  // Inst #3231 = VFNMSUBPS4mrY
  { 3232,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x22ef9800e46ULL, NULL, NULL, OperandInfo251 },  // Inst #3232 = VFNMSUBPS4rm
  { 3233,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x22ef9800e46ULL, NULL, NULL, OperandInfo252 },  // Inst #3233 = VFNMSUBPS4rmY
  { 3234,	4,	1,	18,	0,	0, 0x22ef9800e45ULL, NULL, NULL, OperandInfo234 },  // Inst #3234 = VFNMSUBPS4rr
  { 3235,	4,	1,	18,	0,	0, 0x22ef9800e45ULL, NULL, NULL, OperandInfo232 },  // Inst #3235 = VFNMSUBPS4rrY
  { 3236,	4,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2af9800e45ULL, NULL, NULL, OperandInfo232 },  // Inst #3236 = VFNMSUBPS4rrY_REV
  { 3237,	4,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2af9800e45ULL, NULL, NULL, OperandInfo234 },  // Inst #3237 = VFNMSUBPS4rr_REV
  { 3238,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb3c800d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3238 = VFNMSUBPSr132m
  { 3239,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb3c800d46ULL, NULL, NULL, OperandInfo223 },  // Inst #3239 = VFNMSUBPSr132mY
  { 3240,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb3c800d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3240 = VFNMSUBPSr132r
  { 3241,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb3c800d45ULL, NULL, NULL, OperandInfo224 },  // Inst #3241 = VFNMSUBPSr132rY
  { 3242,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb5c800d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3242 = VFNMSUBPSr213m
  { 3243,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb5c800d46ULL, NULL, NULL, OperandInfo223 },  // Inst #3243 = VFNMSUBPSr213mY
  { 3244,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb5c800d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3244 = VFNMSUBPSr213r
  { 3245,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb5c800d45ULL, NULL, NULL, OperandInfo224 },  // Inst #3245 = VFNMSUBPSr213rY
  { 3246,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb7c800d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3246 = VFNMSUBPSr231m
  { 3247,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb7c800d46ULL, NULL, NULL, OperandInfo223 },  // Inst #3247 = VFNMSUBPSr231mY
  { 3248,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb7c800d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3248 = VFNMSUBPSr231r
  { 3249,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb7c800d45ULL, NULL, NULL, OperandInfo224 },  // Inst #3249 = VFNMSUBPSr231rY
  { 3250,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x2aff800e46ULL, NULL, NULL, OperandInfo233 },  // Inst #3250 = VFNMSUBSD4mr
  { 3251,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x22eff800e46ULL, NULL, NULL, OperandInfo251 },  // Inst #3251 = VFNMSUBSD4rm
  { 3252,	4,	1,	18,	0,	0, 0x22eff800e45ULL, NULL, NULL, OperandInfo234 },  // Inst #3252 = VFNMSUBSD4rr
  { 3253,	4,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2aff800e45ULL, NULL, NULL, OperandInfo234 },  // Inst #3253 = VFNMSUBSD4rr_REV
  { 3254,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8f3e000d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3254 = VFNMSUBSDr132m
  { 3255,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8f3e000d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3255 = VFNMSUBSDr132r
  { 3256,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8f5e000d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3256 = VFNMSUBSDr213m
  { 3257,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8f5e000d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3257 = VFNMSUBSDr213r
  { 3258,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8f7e000d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3258 = VFNMSUBSDr231m
  { 3259,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8f7e000d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3259 = VFNMSUBSDr231r
  { 3260,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x2afd800e46ULL, NULL, NULL, OperandInfo233 },  // Inst #3260 = VFNMSUBSS4mr
  { 3261,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x22efd800e46ULL, NULL, NULL, OperandInfo251 },  // Inst #3261 = VFNMSUBSS4rm
  { 3262,	4,	1,	18,	0,	0, 0x22efd800e45ULL, NULL, NULL, OperandInfo234 },  // Inst #3262 = VFNMSUBSS4rr
  { 3263,	4,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2afd800e45ULL, NULL, NULL, OperandInfo234 },  // Inst #3263 = VFNMSUBSS4rr_REV
  { 3264,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8b3e000d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3264 = VFNMSUBSSr132m
  { 3265,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8b3e000d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3265 = VFNMSUBSSr132r
  { 3266,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8b5e000d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3266 = VFNMSUBSSr213m
  { 3267,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8b5e000d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3267 = VFNMSUBSSr213r
  { 3268,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8b7e000d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3268 = VFNMSUBSSr231m
  { 3269,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8b7e000d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3269 = VFNMSUBSSr231r
  { 3270,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x40303001506ULL, NULL, NULL, OperandInfo47 },  // Inst #3270 = VFRCZPDrm
  { 3271,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x40303001506ULL, NULL, NULL, OperandInfo235 },  // Inst #3271 = VFRCZPDrmY
  { 3272,	2,	1,	18,	0,	0, 0x40303001505ULL, NULL, NULL, OperandInfo48 },  // Inst #3272 = VFRCZPDrr
  { 3273,	2,	1,	18,	0,	0, 0x44303001505ULL, NULL, NULL, OperandInfo239 },  // Inst #3273 = VFRCZPDrrY
  { 3274,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x40301001506ULL, NULL, NULL, OperandInfo47 },  // Inst #3274 = VFRCZPSrm
  { 3275,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x40301001506ULL, NULL, NULL, OperandInfo235 },  // Inst #3275 = VFRCZPSrmY
  { 3276,	2,	1,	18,	0,	0, 0x40301001505ULL, NULL, NULL, OperandInfo48 },  // Inst #3276 = VFRCZPSrr
  { 3277,	2,	1,	18,	0,	0, 0x44301001505ULL, NULL, NULL, OperandInfo239 },  // Inst #3277 = VFRCZPSrrY
  { 3278,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x40307001506ULL, NULL, NULL, OperandInfo32 },  // Inst #3278 = VFRCZSDrm
  { 3279,	3,	1,	18,	0,	0, 0x40307001505ULL, NULL, NULL, OperandInfo33 },  // Inst #3279 = VFRCZSDrr
  { 3280,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x40305001506ULL, NULL, NULL, OperandInfo32 },  // Inst #3280 = VFRCZSSrm
  { 3281,	3,	1,	18,	0,	0, 0x40305001505ULL, NULL, NULL, OperandInfo33 },  // Inst #3281 = VFRCZSSrr
  { 3282,	7,	1,	99,	0,	0|(1<<MCID::MayLoad), 0xaab000146ULL, NULL, NULL, OperandInfo225 },  // Inst #3282 = VFsANDNPDrm
  { 3283,	3,	1,	100,	0,	0, 0xaab000145ULL, NULL, NULL, OperandInfo226 },  // Inst #3283 = VFsANDNPDrr
  { 3284,	7,	1,	99,	0,	0|(1<<MCID::MayLoad), 0xaaa800106ULL, NULL, NULL, OperandInfo227 },  // Inst #3284 = VFsANDNPSrm
  { 3285,	3,	1,	100,	0,	0, 0xaaa800105ULL, NULL, NULL, OperandInfo228 },  // Inst #3285 = VFsANDNPSrr
  { 3286,	7,	1,	99,	0,	0|(1<<MCID::MayLoad), 0xaa9000146ULL, NULL, NULL, OperandInfo225 },  // Inst #3286 = VFsANDPDrm
  { 3287,	3,	1,	100,	0,	0|(1<<MCID::Commutable), 0xaa9000145ULL, NULL, NULL, OperandInfo226 },  // Inst #3287 = VFsANDPDrr
  { 3288,	7,	1,	99,	0,	0|(1<<MCID::MayLoad), 0xaa8800106ULL, NULL, NULL, OperandInfo227 },  // Inst #3288 = VFsANDPSrm
  { 3289,	3,	1,	100,	0,	0|(1<<MCID::Commutable), 0xaa8800105ULL, NULL, NULL, OperandInfo228 },  // Inst #3289 = VFsANDPSrr
  { 3290,	7,	1,	99,	0,	0|(1<<MCID::MayLoad), 0xaad000146ULL, NULL, NULL, OperandInfo225 },  // Inst #3290 = VFsORPDrm
  { 3291,	3,	1,	100,	0,	0|(1<<MCID::Commutable), 0xaad000145ULL, NULL, NULL, OperandInfo226 },  // Inst #3291 = VFsORPDrr
  { 3292,	7,	1,	99,	0,	0|(1<<MCID::MayLoad), 0xaac800106ULL, NULL, NULL, OperandInfo227 },  // Inst #3292 = VFsORPSrm
  { 3293,	3,	1,	100,	0,	0|(1<<MCID::Commutable), 0xaac800105ULL, NULL, NULL, OperandInfo228 },  // Inst #3293 = VFsORPSrr
  { 3294,	7,	1,	99,	0,	0|(1<<MCID::MayLoad), 0xaaf000146ULL, NULL, NULL, OperandInfo225 },  // Inst #3294 = VFsXORPDrm
  { 3295,	3,	1,	100,	0,	0|(1<<MCID::Commutable), 0xaaf000145ULL, NULL, NULL, OperandInfo226 },  // Inst #3295 = VFsXORPDrr
  { 3296,	7,	1,	99,	0,	0|(1<<MCID::MayLoad), 0xaae800106ULL, NULL, NULL, OperandInfo227 },  // Inst #3296 = VFsXORPSrm
  { 3297,	3,	1,	100,	0,	0|(1<<MCID::Commutable), 0xaae800105ULL, NULL, NULL, OperandInfo228 },  // Inst #3297 = VFsXORPSrr
  { 3298,	7,	1,	127,	0,	0|(1<<MCID::MayLoad), 0xaf9000146ULL, NULL, NULL, OperandInfo223 },  // Inst #3298 = VHADDPDYrm
  { 3299,	3,	1,	128,	0,	0, 0xaf9000145ULL, NULL, NULL, OperandInfo224 },  // Inst #3299 = VHADDPDYrr
  { 3300,	7,	1,	127,	0,	0|(1<<MCID::MayLoad), 0xaf9000146ULL, NULL, NULL, OperandInfo139 },  // Inst #3300 = VHADDPDrm
  { 3301,	3,	1,	128,	0,	0, 0xaf9000145ULL, NULL, NULL, OperandInfo140 },  // Inst #3301 = VHADDPDrr
  { 3302,	7,	1,	127,	0,	0|(1<<MCID::MayLoad), 0xaf8800b06ULL, NULL, NULL, OperandInfo223 },  // Inst #3302 = VHADDPSYrm
  { 3303,	3,	1,	128,	0,	0, 0xaf8800b05ULL, NULL, NULL, OperandInfo224 },  // Inst #3303 = VHADDPSYrr
  { 3304,	7,	1,	127,	0,	0|(1<<MCID::MayLoad), 0xaf8800b06ULL, NULL, NULL, OperandInfo139 },  // Inst #3304 = VHADDPSrm
  { 3305,	3,	1,	128,	0,	0, 0xaf8800b05ULL, NULL, NULL, OperandInfo140 },  // Inst #3305 = VHADDPSrr
  { 3306,	7,	1,	127,	0,	0|(1<<MCID::MayLoad), 0xafb000146ULL, NULL, NULL, OperandInfo223 },  // Inst #3306 = VHSUBPDYrm
  { 3307,	3,	1,	128,	0,	0, 0xafb000145ULL, NULL, NULL, OperandInfo224 },  // Inst #3307 = VHSUBPDYrr
  { 3308,	7,	1,	127,	0,	0|(1<<MCID::MayLoad), 0xafb000146ULL, NULL, NULL, OperandInfo139 },  // Inst #3308 = VHSUBPDrm
  { 3309,	3,	1,	128,	0,	0, 0xafb000145ULL, NULL, NULL, OperandInfo140 },  // Inst #3309 = VHSUBPDrr
  { 3310,	7,	1,	127,	0,	0|(1<<MCID::MayLoad), 0xafa800b06ULL, NULL, NULL, OperandInfo223 },  // Inst #3310 = VHSUBPSYrm
  { 3311,	3,	1,	128,	0,	0, 0xafa800b05ULL, NULL, NULL, OperandInfo224 },  // Inst #3311 = VHSUBPSYrr
  { 3312,	7,	1,	127,	0,	0|(1<<MCID::MayLoad), 0xafa800b06ULL, NULL, NULL, OperandInfo139 },  // Inst #3312 = VHSUBPSrm
  { 3313,	3,	1,	128,	0,	0, 0xafa800b05ULL, NULL, NULL, OperandInfo140 },  // Inst #3313 = VHSUBPSrr
  { 3314,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa30804e46ULL, NULL, NULL, OperandInfo230 },  // Inst #3314 = VINSERTF128rm
  { 3315,	4,	1,	18,	0,	0, 0xa30804e45ULL, NULL, NULL, OperandInfo253 },  // Inst #3315 = VINSERTF128rr
  { 3316,	8,	1,	18,	0,	0, 0xa71804e46ULL, NULL, NULL, OperandInfo230 },  // Inst #3316 = VINSERTI128rm
  { 3317,	4,	1,	18,	0,	0, 0xa71804e45ULL, NULL, NULL, OperandInfo253 },  // Inst #3317 = VINSERTI128rr
  { 3318,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa42804e46ULL, NULL, NULL, OperandInfo138 },  // Inst #3318 = VINSERTPSrm
  { 3319,	4,	1,	18,	0,	0, 0xa42804e45ULL, NULL, NULL, OperandInfo88 },  // Inst #3319 = VINSERTPSrr
  { 3320,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x3e1000b06ULL, NULL, NULL, OperandInfo235 },  // Inst #3320 = VLDDQUYrm
  { 3321,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x3e1000b06ULL, NULL, NULL, OperandInfo47 },  // Inst #3321 = VLDDQUrm
  { 3322,	5,	0,	139,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x35c80011aULL, NULL, NULL, OperandInfo38 },  // Inst #3322 = VLDMXCSR
  { 3323,	2,	0,	141,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x3ef800145ULL, ImplicitList34, NULL, OperandInfo48 },  // Inst #3323 = VMASKMOVDQU
  { 3324,	2,	0,	141,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x3ef800145ULL, ImplicitList35, NULL, OperandInfo48 },  // Inst #3324 = VMASKMOVDQU64
  { 3325,	7,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0xa5f000d44ULL, NULL, NULL, OperandInfo254 },  // Inst #3325 = VMASKMOVPDYmr
  { 3326,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa5b000d46ULL, NULL, NULL, OperandInfo223 },  // Inst #3326 = VMASKMOVPDYrm
  { 3327,	7,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0xa5f000d44ULL, NULL, NULL, OperandInfo255 },  // Inst #3327 = VMASKMOVPDmr
  { 3328,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa5b000d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3328 = VMASKMOVPDrm
  { 3329,	7,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0xa5c800d44ULL, NULL, NULL, OperandInfo254 },  // Inst #3329 = VMASKMOVPSYmr
  { 3330,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa58800d46ULL, NULL, NULL, OperandInfo223 },  // Inst #3330 = VMASKMOVPSYrm
  { 3331,	7,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0xa5c800d44ULL, NULL, NULL, OperandInfo255 },  // Inst #3331 = VMASKMOVPSmr
  { 3332,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa58800d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3332 = VMASKMOVPSrm
  { 3333,	7,	1,	95,	0,	0|(1<<MCID::MayLoad), 0xabf000146ULL, NULL, NULL, OperandInfo223 },  // Inst #3333 = VMAXPDYrm
  { 3334,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xabf000146ULL, NULL, NULL, OperandInfo223 },  // Inst #3334 = VMAXPDYrm_Int
  { 3335,	3,	1,	96,	0,	0, 0xabf000145ULL, NULL, NULL, OperandInfo224 },  // Inst #3335 = VMAXPDYrr
  { 3336,	3,	1,	18,	0,	0, 0xabf000145ULL, NULL, NULL, OperandInfo224 },  // Inst #3336 = VMAXPDYrr_Int
  { 3337,	7,	1,	95,	0,	0|(1<<MCID::MayLoad), 0xabf000146ULL, NULL, NULL, OperandInfo139 },  // Inst #3337 = VMAXPDrm
  { 3338,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xabf000146ULL, NULL, NULL, OperandInfo139 },  // Inst #3338 = VMAXPDrm_Int
  { 3339,	3,	1,	96,	0,	0, 0xabf000145ULL, NULL, NULL, OperandInfo140 },  // Inst #3339 = VMAXPDrr
  { 3340,	3,	1,	18,	0,	0, 0xabf000145ULL, NULL, NULL, OperandInfo140 },  // Inst #3340 = VMAXPDrr_Int
  { 3341,	7,	1,	91,	0,	0|(1<<MCID::MayLoad), 0xabe800106ULL, NULL, NULL, OperandInfo223 },  // Inst #3341 = VMAXPSYrm
  { 3342,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xabe800106ULL, NULL, NULL, OperandInfo223 },  // Inst #3342 = VMAXPSYrm_Int
  { 3343,	3,	1,	92,	0,	0, 0xabe800105ULL, NULL, NULL, OperandInfo224 },  // Inst #3343 = VMAXPSYrr
  { 3344,	3,	1,	18,	0,	0, 0xabe800105ULL, NULL, NULL, OperandInfo224 },  // Inst #3344 = VMAXPSYrr_Int
  { 3345,	7,	1,	91,	0,	0|(1<<MCID::MayLoad), 0xabe800106ULL, NULL, NULL, OperandInfo139 },  // Inst #3345 = VMAXPSrm
  { 3346,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xabe800106ULL, NULL, NULL, OperandInfo139 },  // Inst #3346 = VMAXPSrm_Int
  { 3347,	3,	1,	92,	0,	0, 0xabe800105ULL, NULL, NULL, OperandInfo140 },  // Inst #3347 = VMAXPSrr
  { 3348,	3,	1,	18,	0,	0, 0xabe800105ULL, NULL, NULL, OperandInfo140 },  // Inst #3348 = VMAXPSrr_Int
  { 3349,	7,	1,	97,	0,	0|(1<<MCID::MayLoad), 0x8abe000b06ULL, NULL, NULL, OperandInfo225 },  // Inst #3349 = VMAXSDrm
  { 3350,	7,	1,	97,	0,	0|(1<<MCID::MayLoad), 0x8abe000b06ULL, NULL, NULL, OperandInfo139 },  // Inst #3350 = VMAXSDrm_Int
  { 3351,	3,	1,	98,	0,	0, 0x8abe000b05ULL, NULL, NULL, OperandInfo226 },  // Inst #3351 = VMAXSDrr
  { 3352,	3,	1,	98,	0,	0, 0x8abe000b05ULL, NULL, NULL, OperandInfo140 },  // Inst #3352 = VMAXSDrr_Int
  { 3353,	7,	1,	93,	0,	0|(1<<MCID::MayLoad), 0x8abe000c06ULL, NULL, NULL, OperandInfo227 },  // Inst #3353 = VMAXSSrm
  { 3354,	7,	1,	93,	0,	0|(1<<MCID::MayLoad), 0x8abe000c06ULL, NULL, NULL, OperandInfo139 },  // Inst #3354 = VMAXSSrm_Int
  { 3355,	3,	1,	94,	0,	0, 0x8abe000c05ULL, NULL, NULL, OperandInfo228 },  // Inst #3355 = VMAXSSrr
  { 3356,	3,	1,	94,	0,	0, 0x8abe000c05ULL, NULL, NULL, OperandInfo140 },  // Inst #3356 = VMAXSSrr_Int
  { 3357,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000121ULL, NULL, NULL, 0 },  // Inst #3357 = VMCALL
  { 3358,	5,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x18e00015eULL, NULL, NULL, OperandInfo38 },  // Inst #3358 = VMCLEARm
  { 3359,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x200012fULL, NULL, NULL, 0 },  // Inst #3359 = VMFUNC
  { 3360,	7,	1,	95,	0,	0|(1<<MCID::MayLoad), 0xabb000146ULL, NULL, NULL, OperandInfo223 },  // Inst #3360 = VMINPDYrm
  { 3361,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xabb000146ULL, NULL, NULL, OperandInfo223 },  // Inst #3361 = VMINPDYrm_Int
  { 3362,	3,	1,	96,	0,	0, 0xabb000145ULL, NULL, NULL, OperandInfo224 },  // Inst #3362 = VMINPDYrr
  { 3363,	3,	1,	18,	0,	0, 0xabb000145ULL, NULL, NULL, OperandInfo224 },  // Inst #3363 = VMINPDYrr_Int
  { 3364,	7,	1,	95,	0,	0|(1<<MCID::MayLoad), 0xabb000146ULL, NULL, NULL, OperandInfo139 },  // Inst #3364 = VMINPDrm
  { 3365,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xabb000146ULL, NULL, NULL, OperandInfo139 },  // Inst #3365 = VMINPDrm_Int
  { 3366,	3,	1,	96,	0,	0, 0xabb000145ULL, NULL, NULL, OperandInfo140 },  // Inst #3366 = VMINPDrr
  { 3367,	3,	1,	18,	0,	0, 0xabb000145ULL, NULL, NULL, OperandInfo140 },  // Inst #3367 = VMINPDrr_Int
  { 3368,	7,	1,	91,	0,	0|(1<<MCID::MayLoad), 0xaba800106ULL, NULL, NULL, OperandInfo223 },  // Inst #3368 = VMINPSYrm
  { 3369,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xaba800106ULL, NULL, NULL, OperandInfo223 },  // Inst #3369 = VMINPSYrm_Int
  { 3370,	3,	1,	92,	0,	0, 0xaba800105ULL, NULL, NULL, OperandInfo224 },  // Inst #3370 = VMINPSYrr
  { 3371,	3,	1,	18,	0,	0, 0xaba800105ULL, NULL, NULL, OperandInfo224 },  // Inst #3371 = VMINPSYrr_Int
  { 3372,	7,	1,	91,	0,	0|(1<<MCID::MayLoad), 0xaba800106ULL, NULL, NULL, OperandInfo139 },  // Inst #3372 = VMINPSrm
  { 3373,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xaba800106ULL, NULL, NULL, OperandInfo139 },  // Inst #3373 = VMINPSrm_Int
  { 3374,	3,	1,	92,	0,	0, 0xaba800105ULL, NULL, NULL, OperandInfo140 },  // Inst #3374 = VMINPSrr
  { 3375,	3,	1,	18,	0,	0, 0xaba800105ULL, NULL, NULL, OperandInfo140 },  // Inst #3375 = VMINPSrr_Int
  { 3376,	7,	1,	97,	0,	0|(1<<MCID::MayLoad), 0x8aba000b06ULL, NULL, NULL, OperandInfo225 },  // Inst #3376 = VMINSDrm
  { 3377,	7,	1,	97,	0,	0|(1<<MCID::MayLoad), 0x8aba000b06ULL, NULL, NULL, OperandInfo139 },  // Inst #3377 = VMINSDrm_Int
  { 3378,	3,	1,	98,	0,	0, 0x8aba000b05ULL, NULL, NULL, OperandInfo226 },  // Inst #3378 = VMINSDrr
  { 3379,	3,	1,	98,	0,	0, 0x8aba000b05ULL, NULL, NULL, OperandInfo140 },  // Inst #3379 = VMINSDrr_Int
  { 3380,	7,	1,	93,	0,	0|(1<<MCID::MayLoad), 0x8aba000c06ULL, NULL, NULL, OperandInfo227 },  // Inst #3380 = VMINSSrm
  { 3381,	7,	1,	93,	0,	0|(1<<MCID::MayLoad), 0x8aba000c06ULL, NULL, NULL, OperandInfo139 },  // Inst #3381 = VMINSSrm_Int
  { 3382,	3,	1,	94,	0,	0, 0x8aba000c05ULL, NULL, NULL, OperandInfo228 },  // Inst #3382 = VMINSSrr
  { 3383,	3,	1,	94,	0,	0, 0x8aba000c05ULL, NULL, NULL, OperandInfo140 },  // Inst #3383 = VMINSSrr_Int
  { 3384,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000122ULL, NULL, NULL, 0 },  // Inst #3384 = VMLAUNCH
  { 3385,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000132ULL, ImplicitList3, NULL, 0 },  // Inst #3385 = VMLOAD32
  { 3386,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000132ULL, ImplicitList4, NULL, 0 },  // Inst #3386 = VMLOAD64
  { 3387,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000131ULL, NULL, NULL, 0 },  // Inst #3387 = VMMCALL
  { 3388,	2,	1,	147,	0,	0, 0x6dd000145ULL, NULL, NULL, OperandInfo185 },  // Inst #3388 = VMOV64toPQIrr
  { 3389,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x2fc800c06ULL, NULL, NULL, OperandInfo103 },  // Inst #3389 = VMOV64toSDrm
  { 3390,	2,	1,	147,	0,	0|(1<<MCID::Bitcast), 0x6dd000145ULL, NULL, NULL, OperandInfo104 },  // Inst #3390 = VMOV64toSDrr
  { 3391,	6,	0,	144,	0,	0|(1<<MCID::MayStore), 0x253000144ULL, NULL, NULL, OperandInfo256 },  // Inst #3391 = VMOVAPDYmr
  { 3392,	6,	1,	145,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x251000146ULL, NULL, NULL, OperandInfo235 },  // Inst #3392 = VMOVAPDYrm
  { 3393,	2,	1,	146,	0,	0, 0x251000145ULL, NULL, NULL, OperandInfo239 },  // Inst #3393 = VMOVAPDYrr
  { 3394,	2,	1,	146,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x253000143ULL, NULL, NULL, OperandInfo239 },  // Inst #3394 = VMOVAPDYrr_REV
  { 3395,	6,	0,	144,	0,	0|(1<<MCID::MayStore), 0x253000144ULL, NULL, NULL, OperandInfo189 },  // Inst #3395 = VMOVAPDmr
  { 3396,	6,	1,	145,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x251000146ULL, NULL, NULL, OperandInfo47 },  // Inst #3396 = VMOVAPDrm
  { 3397,	2,	1,	146,	0,	0, 0x251000145ULL, NULL, NULL, OperandInfo48 },  // Inst #3397 = VMOVAPDrr
  { 3398,	2,	1,	146,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x253000143ULL, NULL, NULL, OperandInfo48 },  // Inst #3398 = VMOVAPDrr_REV
  { 3399,	6,	0,	144,	0,	0|(1<<MCID::MayStore), 0x252800104ULL, NULL, NULL, OperandInfo256 },  // Inst #3399 = VMOVAPSYmr
  { 3400,	6,	1,	145,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x250800106ULL, NULL, NULL, OperandInfo235 },  // Inst #3400 = VMOVAPSYrm
  { 3401,	2,	1,	146,	0,	0, 0x250800105ULL, NULL, NULL, OperandInfo239 },  // Inst #3401 = VMOVAPSYrr
  { 3402,	2,	1,	146,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x252800103ULL, NULL, NULL, OperandInfo239 },  // Inst #3402 = VMOVAPSYrr_REV
  { 3403,	6,	0,	144,	0,	0|(1<<MCID::MayStore), 0x252800104ULL, NULL, NULL, OperandInfo189 },  // Inst #3403 = VMOVAPSmr
  { 3404,	6,	1,	145,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x250800106ULL, NULL, NULL, OperandInfo47 },  // Inst #3404 = VMOVAPSrm
  { 3405,	2,	1,	146,	0,	0, 0x250800105ULL, NULL, NULL, OperandInfo48 },  // Inst #3405 = VMOVAPSrr
  { 3406,	2,	1,	146,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x252800103ULL, NULL, NULL, OperandInfo48 },  // Inst #3406 = VMOVAPSrr_REV
  { 3407,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x225000b06ULL, NULL, NULL, OperandInfo235 },  // Inst #3407 = VMOVDDUPYrm
  { 3408,	2,	1,	18,	0,	0, 0x225000b05ULL, NULL, NULL, OperandInfo239 },  // Inst #3408 = VMOVDDUPYrr
  { 3409,	6,	1,	155,	0,	0|(1<<MCID::MayLoad), 0x225000b06ULL, NULL, NULL, OperandInfo47 },  // Inst #3409 = VMOVDDUPrm
  { 3410,	2,	1,	155,	0,	0, 0x225000b05ULL, NULL, NULL, OperandInfo48 },  // Inst #3410 = VMOVDDUPrr
  { 3411,	6,	1,	147,	0,	0|(1<<MCID::MayLoad), 0x2dd000146ULL, NULL, NULL, OperandInfo47 },  // Inst #3411 = VMOVDI2PDIrm
  { 3412,	2,	1,	147,	0,	0, 0x2dd000145ULL, NULL, NULL, OperandInfo190 },  // Inst #3412 = VMOVDI2PDIrr
  { 3413,	6,	1,	147,	0,	0|(1<<MCID::MayLoad), 0x2dd000146ULL, NULL, NULL, OperandInfo101 },  // Inst #3413 = VMOVDI2SSrm
  { 3414,	2,	1,	147,	0,	0|(1<<MCID::Bitcast), 0x2dd000145ULL, NULL, NULL, OperandInfo107 },  // Inst #3414 = VMOVDI2SSrr
  { 3415,	6,	0,	144,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ff800144ULL, NULL, NULL, OperandInfo256 },  // Inst #3415 = VMOVDQAYmr
  { 3416,	6,	1,	145,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x2df800146ULL, NULL, NULL, OperandInfo235 },  // Inst #3416 = VMOVDQAYrm
  { 3417,	2,	1,	146,	0,	0, 0x2df800145ULL, NULL, NULL, OperandInfo239 },  // Inst #3417 = VMOVDQAYrr
  { 3418,	2,	1,	146,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2ff800143ULL, NULL, NULL, OperandInfo239 },  // Inst #3418 = VMOVDQAYrr_REV
  { 3419,	6,	0,	144,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ff800144ULL, NULL, NULL, OperandInfo189 },  // Inst #3419 = VMOVDQAmr
  { 3420,	6,	1,	145,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x2df800146ULL, NULL, NULL, OperandInfo47 },  // Inst #3420 = VMOVDQArm
  { 3421,	2,	1,	146,	0,	0, 0x2df800145ULL, NULL, NULL, OperandInfo48 },  // Inst #3421 = VMOVDQArr
  { 3422,	2,	1,	146,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2ff800143ULL, NULL, NULL, OperandInfo48 },  // Inst #3422 = VMOVDQArr_REV
  { 3423,	6,	0,	152,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ff800c04ULL, NULL, NULL, OperandInfo256 },  // Inst #3423 = VMOVDQUYmr
  { 3424,	6,	1,	153,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x2df800c06ULL, NULL, NULL, OperandInfo235 },  // Inst #3424 = VMOVDQUYrm
  { 3425,	2,	1,	154,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2df800c05ULL, NULL, NULL, OperandInfo239 },  // Inst #3425 = VMOVDQUYrr
  { 3426,	2,	1,	154,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2ff800c03ULL, NULL, NULL, OperandInfo239 },  // Inst #3426 = VMOVDQUYrr_REV
  { 3427,	6,	0,	152,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ff800c04ULL, NULL, NULL, OperandInfo189 },  // Inst #3427 = VMOVDQUmr
  { 3428,	6,	0,	152,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ff800c04ULL, NULL, NULL, OperandInfo189 },  // Inst #3428 = VMOVDQUmr_Int
  { 3429,	6,	1,	153,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x2df800c06ULL, NULL, NULL, OperandInfo47 },  // Inst #3429 = VMOVDQUrm
  { 3430,	2,	1,	154,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2df800c05ULL, NULL, NULL, OperandInfo48 },  // Inst #3430 = VMOVDQUrr
  { 3431,	2,	1,	154,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2ff800c03ULL, NULL, NULL, OperandInfo48 },  // Inst #3431 = VMOVDQUrr_REV
  { 3432,	3,	1,	155,	0,	0, 0xa24800105ULL, NULL, NULL, OperandInfo140 },  // Inst #3432 = VMOVHLPSrr
  { 3433,	6,	0,	155,	0,	0|(1<<MCID::MayStore), 0x22f000144ULL, NULL, NULL, OperandInfo189 },  // Inst #3433 = VMOVHPDmr
  { 3434,	7,	1,	155,	0,	0|(1<<MCID::MayLoad), 0xa2d000146ULL, NULL, NULL, OperandInfo139 },  // Inst #3434 = VMOVHPDrm
  { 3435,	6,	0,	155,	0,	0|(1<<MCID::MayStore), 0x22e800104ULL, NULL, NULL, OperandInfo189 },  // Inst #3435 = VMOVHPSmr
  { 3436,	7,	1,	155,	0,	0|(1<<MCID::MayLoad), 0xa2c800106ULL, NULL, NULL, OperandInfo139 },  // Inst #3436 = VMOVHPSrm
  { 3437,	3,	1,	155,	0,	0, 0xa2c800105ULL, NULL, NULL, OperandInfo140 },  // Inst #3437 = VMOVLHPSrr
  { 3438,	6,	0,	155,	0,	0|(1<<MCID::MayStore), 0x227000144ULL, NULL, NULL, OperandInfo189 },  // Inst #3438 = VMOVLPDmr
  { 3439,	7,	1,	155,	0,	0|(1<<MCID::MayLoad), 0xa25000146ULL, NULL, NULL, OperandInfo139 },  // Inst #3439 = VMOVLPDrm
  { 3440,	6,	0,	155,	0,	0|(1<<MCID::MayStore), 0x226800104ULL, NULL, NULL, OperandInfo189 },  // Inst #3440 = VMOVLPSmr
  { 3441,	7,	1,	155,	0,	0|(1<<MCID::MayLoad), 0xa24800106ULL, NULL, NULL, OperandInfo139 },  // Inst #3441 = VMOVLPSrm
  { 3442,	6,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x3ad000144ULL, NULL, NULL, OperandInfo189 },  // Inst #3442 = VMOVLQ128mr
  { 3443,	2,	1,	149,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2a1000145ULL, NULL, NULL, OperandInfo257 },  // Inst #3443 = VMOVMSKPDYr64r
  { 3444,	2,	1,	149,	0,	0, 0x2a1000145ULL, NULL, NULL, OperandInfo258 },  // Inst #3444 = VMOVMSKPDYrr32
  { 3445,	2,	1,	149,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2a1002145ULL, NULL, NULL, OperandInfo257 },  // Inst #3445 = VMOVMSKPDYrr64
  { 3446,	2,	1,	149,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2a1000145ULL, NULL, NULL, OperandInfo99 },  // Inst #3446 = VMOVMSKPDr64r
  { 3447,	2,	1,	149,	0,	0, 0x2a1000145ULL, NULL, NULL, OperandInfo100 },  // Inst #3447 = VMOVMSKPDrr32
  { 3448,	2,	1,	149,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2a1002145ULL, NULL, NULL, OperandInfo99 },  // Inst #3448 = VMOVMSKPDrr64
  { 3449,	2,	1,	149,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2a0800105ULL, NULL, NULL, OperandInfo257 },  // Inst #3449 = VMOVMSKPSYr64r
  { 3450,	2,	1,	149,	0,	0, 0x2a0800105ULL, NULL, NULL, OperandInfo258 },  // Inst #3450 = VMOVMSKPSYrr32
  { 3451,	2,	1,	149,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2a0802105ULL, NULL, NULL, OperandInfo257 },  // Inst #3451 = VMOVMSKPSYrr64
  { 3452,	2,	1,	149,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2a0800105ULL, NULL, NULL, OperandInfo99 },  // Inst #3452 = VMOVMSKPSr64r
  { 3453,	2,	1,	149,	0,	0, 0x2a0800105ULL, NULL, NULL, OperandInfo100 },  // Inst #3453 = VMOVMSKPSrr32
  { 3454,	2,	1,	149,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2a0802105ULL, NULL, NULL, OperandInfo99 },  // Inst #3454 = VMOVMSKPSrr64
  { 3455,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x255800d46ULL, NULL, NULL, OperandInfo235 },  // Inst #3455 = VMOVNTDQAYrm
  { 3456,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x255800d46ULL, NULL, NULL, OperandInfo47 },  // Inst #3456 = VMOVNTDQArm
  { 3457,	6,	0,	150,	0,	0|(1<<MCID::MayStore), 0x3cf800144ULL, NULL, NULL, OperandInfo256 },  // Inst #3457 = VMOVNTDQYmr
  { 3458,	6,	0,	150,	0,	0|(1<<MCID::MayStore), 0x3cf800144ULL, NULL, NULL, OperandInfo189 },  // Inst #3458 = VMOVNTDQmr
  { 3459,	6,	0,	150,	0,	0|(1<<MCID::MayStore), 0x257000144ULL, NULL, NULL, OperandInfo256 },  // Inst #3459 = VMOVNTPDYmr
  { 3460,	6,	0,	150,	0,	0|(1<<MCID::MayStore), 0x257000144ULL, NULL, NULL, OperandInfo189 },  // Inst #3460 = VMOVNTPDmr
  { 3461,	6,	0,	150,	0,	0|(1<<MCID::MayStore), 0x256800104ULL, NULL, NULL, OperandInfo256 },  // Inst #3461 = VMOVNTPSYmr
  { 3462,	6,	0,	150,	0,	0|(1<<MCID::MayStore), 0x256800104ULL, NULL, NULL, OperandInfo189 },  // Inst #3462 = VMOVNTPSmr
  { 3463,	6,	0,	147,	0,	0|(1<<MCID::MayStore), 0x2fd000144ULL, NULL, NULL, OperandInfo189 },  // Inst #3463 = VMOVPDI2DImr
  { 3464,	2,	1,	148,	0,	0, 0x2fd000143ULL, NULL, NULL, OperandInfo100 },  // Inst #3464 = VMOVPDI2DIrr
  { 3465,	6,	0,	147,	0,	0|(1<<MCID::MayStore), 0x3ad000144ULL, NULL, NULL, OperandInfo189 },  // Inst #3465 = VMOVPQI2QImr
  { 3466,	2,	1,	148,	0,	0, 0x6fc000143ULL, NULL, NULL, OperandInfo99 },  // Inst #3466 = VMOVPQIto64rr
  { 3467,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x2fc000c06ULL, NULL, NULL, OperandInfo47 },  // Inst #3467 = VMOVQI2PQIrm
  { 3468,	2,	1,	147,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x6fd000143ULL, NULL, NULL, OperandInfo99 },  // Inst #3468 = VMOVQd64rr
  { 3469,	2,	1,	147,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x6fd000143ULL, NULL, NULL, OperandInfo99 },  // Inst #3469 = VMOVQd64rr_alt
  { 3470,	2,	1,	147,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x6dd000145ULL, NULL, NULL, OperandInfo185 },  // Inst #3470 = VMOVQs64rr
  { 3471,	2,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2fc000c05ULL, NULL, NULL, OperandInfo48 },  // Inst #3471 = VMOVQxrxr
  { 3472,	6,	0,	156,	0,	0|(1<<MCID::MayStore), 0x8222000b04ULL, NULL, NULL, OperandInfo191 },  // Inst #3472 = VMOVSDmr
  { 3473,	6,	1,	157,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x8220000b06ULL, NULL, NULL, OperandInfo103 },  // Inst #3473 = VMOVSDrm
  { 3474,	3,	1,	158,	0,	0, 0x8a20000b05ULL, NULL, NULL, OperandInfo259 },  // Inst #3474 = VMOVSDrr
  { 3475,	3,	1,	158,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8a22000b03ULL, NULL, NULL, OperandInfo259 },  // Inst #3475 = VMOVSDrr_REV
  { 3476,	6,	0,	147,	0,	0|(1<<MCID::MayStore), 0x6fd000144ULL, NULL, NULL, OperandInfo191 },  // Inst #3476 = VMOVSDto64mr
  { 3477,	2,	1,	147,	0,	0|(1<<MCID::Bitcast), 0x6fd000143ULL, NULL, NULL, OperandInfo111 },  // Inst #3477 = VMOVSDto64rr
  { 3478,	6,	1,	155,	0,	0|(1<<MCID::MayLoad), 0x22c800c06ULL, NULL, NULL, OperandInfo235 },  // Inst #3478 = VMOVSHDUPYrm
  { 3479,	2,	1,	155,	0,	0, 0x22c800c05ULL, NULL, NULL, OperandInfo239 },  // Inst #3479 = VMOVSHDUPYrr
  { 3480,	6,	1,	155,	0,	0|(1<<MCID::MayLoad), 0x22c800c06ULL, NULL, NULL, OperandInfo47 },  // Inst #3480 = VMOVSHDUPrm
  { 3481,	2,	1,	155,	0,	0, 0x22c800c05ULL, NULL, NULL, OperandInfo48 },  // Inst #3481 = VMOVSHDUPrr
  { 3482,	6,	1,	155,	0,	0|(1<<MCID::MayLoad), 0x224800c06ULL, NULL, NULL, OperandInfo235 },  // Inst #3482 = VMOVSLDUPYrm
  { 3483,	2,	1,	155,	0,	0, 0x224800c05ULL, NULL, NULL, OperandInfo239 },  // Inst #3483 = VMOVSLDUPYrr
  { 3484,	6,	1,	155,	0,	0|(1<<MCID::MayLoad), 0x224800c06ULL, NULL, NULL, OperandInfo47 },  // Inst #3484 = VMOVSLDUPrm
  { 3485,	2,	1,	155,	0,	0, 0x224800c05ULL, NULL, NULL, OperandInfo48 },  // Inst #3485 = VMOVSLDUPrr
  { 3486,	6,	0,	147,	0,	0|(1<<MCID::MayStore), 0x2fd000144ULL, NULL, NULL, OperandInfo193 },  // Inst #3486 = VMOVSS2DImr
  { 3487,	2,	1,	148,	0,	0|(1<<MCID::Bitcast), 0x2fd000143ULL, NULL, NULL, OperandInfo110 },  // Inst #3487 = VMOVSS2DIrr
  { 3488,	6,	0,	156,	0,	0|(1<<MCID::MayStore), 0x8222000c04ULL, NULL, NULL, OperandInfo193 },  // Inst #3488 = VMOVSSmr
  { 3489,	6,	1,	157,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x8220000c06ULL, NULL, NULL, OperandInfo101 },  // Inst #3489 = VMOVSSrm
  { 3490,	3,	1,	158,	0,	0, 0x8a20000c05ULL, NULL, NULL, OperandInfo260 },  // Inst #3490 = VMOVSSrr
  { 3491,	3,	1,	158,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8a22000c03ULL, NULL, NULL, OperandInfo260 },  // Inst #3491 = VMOVSSrr_REV
  { 3492,	6,	0,	152,	0,	0|(1<<MCID::MayStore), 0x223000144ULL, NULL, NULL, OperandInfo256 },  // Inst #3492 = VMOVUPDYmr
  { 3493,	6,	1,	153,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x221000146ULL, NULL, NULL, OperandInfo235 },  // Inst #3493 = VMOVUPDYrm
  { 3494,	2,	1,	154,	0,	0, 0x221000145ULL, NULL, NULL, OperandInfo239 },  // Inst #3494 = VMOVUPDYrr
  { 3495,	2,	1,	154,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x223000143ULL, NULL, NULL, OperandInfo239 },  // Inst #3495 = VMOVUPDYrr_REV
  { 3496,	6,	0,	152,	0,	0|(1<<MCID::MayStore), 0x223000144ULL, NULL, NULL, OperandInfo189 },  // Inst #3496 = VMOVUPDmr
  { 3497,	6,	1,	153,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x221000146ULL, NULL, NULL, OperandInfo47 },  // Inst #3497 = VMOVUPDrm
  { 3498,	2,	1,	154,	0,	0, 0x221000145ULL, NULL, NULL, OperandInfo48 },  // Inst #3498 = VMOVUPDrr
  { 3499,	2,	1,	154,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x223000143ULL, NULL, NULL, OperandInfo48 },  // Inst #3499 = VMOVUPDrr_REV
  { 3500,	6,	0,	152,	0,	0|(1<<MCID::MayStore), 0x222800104ULL, NULL, NULL, OperandInfo256 },  // Inst #3500 = VMOVUPSYmr
  { 3501,	6,	1,	153,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x220800106ULL, NULL, NULL, OperandInfo235 },  // Inst #3501 = VMOVUPSYrm
  { 3502,	2,	1,	154,	0,	0, 0x220800105ULL, NULL, NULL, OperandInfo239 },  // Inst #3502 = VMOVUPSYrr
  { 3503,	2,	1,	154,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x222800103ULL, NULL, NULL, OperandInfo239 },  // Inst #3503 = VMOVUPSYrr_REV
  { 3504,	6,	0,	152,	0,	0|(1<<MCID::MayStore), 0x222800104ULL, NULL, NULL, OperandInfo189 },  // Inst #3504 = VMOVUPSmr
  { 3505,	6,	1,	153,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x220800106ULL, NULL, NULL, OperandInfo47 },  // Inst #3505 = VMOVUPSrm
  { 3506,	2,	1,	154,	0,	0, 0x220800105ULL, NULL, NULL, OperandInfo48 },  // Inst #3506 = VMOVUPSrr
  { 3507,	2,	1,	154,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x222800103ULL, NULL, NULL, OperandInfo48 },  // Inst #3507 = VMOVUPSrr_REV
  { 3508,	6,	1,	147,	0,	0|(1<<MCID::MayLoad), 0x2dd000146ULL, NULL, NULL, OperandInfo47 },  // Inst #3508 = VMOVZDI2PDIrm
  { 3509,	2,	1,	147,	0,	0, 0x2dd000145ULL, NULL, NULL, OperandInfo190 },  // Inst #3509 = VMOVZDI2PDIrr
  { 3510,	6,	1,	147,	0,	0|(1<<MCID::MayLoad), 0x2fc000c06ULL, NULL, NULL, OperandInfo47 },  // Inst #3510 = VMOVZPQILo2PQIrm
  { 3511,	2,	1,	151,	0,	0, 0x2fc000c05ULL, NULL, NULL, OperandInfo48 },  // Inst #3511 = VMOVZPQILo2PQIrr
  { 3512,	6,	1,	147,	0,	0|(1<<MCID::MayLoad), 0x2fc000c06ULL, NULL, NULL, OperandInfo47 },  // Inst #3512 = VMOVZQI2PQIrm
  { 3513,	2,	1,	147,	0,	0, 0x6dd000145ULL, NULL, NULL, OperandInfo185 },  // Inst #3513 = VMOVZQI2PQIrr
  { 3514,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa85804e46ULL, NULL, NULL, OperandInfo230 },  // Inst #3514 = VMPSADBWYrmi
  { 3515,	4,	1,	18,	0,	0, 0xa85804e45ULL, NULL, NULL, OperandInfo89 },  // Inst #3515 = VMPSADBWYrri
  { 3516,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa85804e46ULL, NULL, NULL, OperandInfo138 },  // Inst #3516 = VMPSADBWrmi
  { 3517,	4,	1,	18,	0,	0, 0xa85804e45ULL, NULL, NULL, OperandInfo88 },  // Inst #3517 = VMPSADBWrri
  { 3518,	5,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x18e00011eULL, NULL, NULL, OperandInfo38 },  // Inst #3518 = VMPTRLDm
  { 3519,	5,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x18e00011fULL, NULL, NULL, OperandInfo38 },  // Inst #3519 = VMPTRSTm
  { 3520,	6,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf0000104ULL, NULL, NULL, OperandInfo20 },  // Inst #3520 = VMREAD32rm
  { 3521,	2,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf0000103ULL, NULL, NULL, OperandInfo67 },  // Inst #3521 = VMREAD32rr
  { 3522,	6,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf0000104ULL, NULL, NULL, OperandInfo24 },  // Inst #3522 = VMREAD64rm
  { 3523,	2,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf0000103ULL, NULL, NULL, OperandInfo68 },  // Inst #3523 = VMREAD64rr
  { 3524,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000123ULL, NULL, NULL, 0 },  // Inst #3524 = VMRESUME
  { 3525,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000130ULL, ImplicitList3, NULL, 0 },  // Inst #3525 = VMRUN32
  { 3526,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000130ULL, ImplicitList4, NULL, 0 },  // Inst #3526 = VMRUN64
  { 3527,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000133ULL, ImplicitList3, NULL, 0 },  // Inst #3527 = VMSAVE32
  { 3528,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000133ULL, ImplicitList4, NULL, 0 },  // Inst #3528 = VMSAVE64
  { 3529,	7,	1,	163,	0,	0|(1<<MCID::MayLoad), 0xab3000146ULL, NULL, NULL, OperandInfo223 },  // Inst #3529 = VMULPDYrm
  { 3530,	3,	1,	164,	0,	0|(1<<MCID::Commutable), 0xab3000145ULL, NULL, NULL, OperandInfo224 },  // Inst #3530 = VMULPDYrr
  { 3531,	7,	1,	163,	0,	0|(1<<MCID::MayLoad), 0xab3000146ULL, NULL, NULL, OperandInfo139 },  // Inst #3531 = VMULPDrm
  { 3532,	3,	1,	164,	0,	0|(1<<MCID::Commutable), 0xab3000145ULL, NULL, NULL, OperandInfo140 },  // Inst #3532 = VMULPDrr
  { 3533,	7,	1,	163,	0,	0|(1<<MCID::MayLoad), 0xab2800106ULL, NULL, NULL, OperandInfo223 },  // Inst #3533 = VMULPSYrm
  { 3534,	3,	1,	160,	0,	0|(1<<MCID::Commutable), 0xab2800105ULL, NULL, NULL, OperandInfo224 },  // Inst #3534 = VMULPSYrr
  { 3535,	7,	1,	163,	0,	0|(1<<MCID::MayLoad), 0xab2800106ULL, NULL, NULL, OperandInfo139 },  // Inst #3535 = VMULPSrm
  { 3536,	3,	1,	160,	0,	0|(1<<MCID::Commutable), 0xab2800105ULL, NULL, NULL, OperandInfo140 },  // Inst #3536 = VMULPSrr
  { 3537,	7,	1,	165,	0,	0|(1<<MCID::MayLoad), 0x8ab2000b06ULL, NULL, NULL, OperandInfo225 },  // Inst #3537 = VMULSDrm
  { 3538,	7,	1,	165,	0,	0|(1<<MCID::MayLoad), 0x8ab2000b06ULL, NULL, NULL, OperandInfo139 },  // Inst #3538 = VMULSDrm_Int
  { 3539,	3,	1,	166,	0,	0|(1<<MCID::Commutable), 0x8ab2000b05ULL, NULL, NULL, OperandInfo226 },  // Inst #3539 = VMULSDrr
  { 3540,	3,	1,	166,	0,	0, 0x8ab2000b05ULL, NULL, NULL, OperandInfo140 },  // Inst #3540 = VMULSDrr_Int
  { 3541,	7,	1,	165,	0,	0|(1<<MCID::MayLoad), 0x8ab2000c06ULL, NULL, NULL, OperandInfo227 },  // Inst #3541 = VMULSSrm
  { 3542,	7,	1,	165,	0,	0|(1<<MCID::MayLoad), 0x8ab2000c06ULL, NULL, NULL, OperandInfo139 },  // Inst #3542 = VMULSSrm_Int
  { 3543,	3,	1,	162,	0,	0|(1<<MCID::Commutable), 0x8ab2000c05ULL, NULL, NULL, OperandInfo228 },  // Inst #3543 = VMULSSrr
  { 3544,	3,	1,	162,	0,	0, 0x8ab2000c05ULL, NULL, NULL, OperandInfo140 },  // Inst #3544 = VMULSSrr_Int
  { 3545,	6,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf2000106ULL, NULL, NULL, OperandInfo12 },  // Inst #3545 = VMWRITE32rm
  { 3546,	2,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf2000105ULL, NULL, NULL, OperandInfo67 },  // Inst #3546 = VMWRITE32rr
  { 3547,	6,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf2000106ULL, NULL, NULL, OperandInfo13 },  // Inst #3547 = VMWRITE64rm
  { 3548,	2,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf2000105ULL, NULL, NULL, OperandInfo68 },  // Inst #3548 = VMWRITE64rr
  { 3549,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000124ULL, NULL, NULL, 0 },  // Inst #3549 = VMXOFF
  { 3550,	5,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x18e000c1eULL, NULL, NULL, OperandInfo38 },  // Inst #3550 = VMXON
  { 3551,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xaad000146ULL, NULL, NULL, OperandInfo223 },  // Inst #3551 = VORPDYrm
  { 3552,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0xaad000145ULL, NULL, NULL, OperandInfo224 },  // Inst #3552 = VORPDYrr
  { 3553,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xaad000146ULL, NULL, NULL, OperandInfo139 },  // Inst #3553 = VORPDrm
  { 3554,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0xaad000145ULL, NULL, NULL, OperandInfo140 },  // Inst #3554 = VORPDrr
  { 3555,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xaac800106ULL, NULL, NULL, OperandInfo223 },  // Inst #3555 = VORPSYrm
  { 3556,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0xaac800105ULL, NULL, NULL, OperandInfo224 },  // Inst #3556 = VORPSYrr
  { 3557,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xaac800106ULL, NULL, NULL, OperandInfo139 },  // Inst #3557 = VORPSrm
  { 3558,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0xaac800105ULL, NULL, NULL, OperandInfo140 },  // Inst #3558 = VORPSrr
  { 3559,	6,	1,	168,	0,	0|(1<<MCID::MayLoad), 0x239800d46ULL, NULL, NULL, OperandInfo47 },  // Inst #3559 = VPABSBrm128
  { 3560,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x239800d46ULL, NULL, NULL, OperandInfo235 },  // Inst #3560 = VPABSBrm256
  { 3561,	2,	1,	169,	0,	0, 0x239800d45ULL, NULL, NULL, OperandInfo48 },  // Inst #3561 = VPABSBrr128
  { 3562,	2,	1,	18,	0,	0, 0x239800d45ULL, NULL, NULL, OperandInfo239 },  // Inst #3562 = VPABSBrr256
  { 3563,	6,	1,	168,	0,	0|(1<<MCID::MayLoad), 0x23d800d46ULL, NULL, NULL, OperandInfo47 },  // Inst #3563 = VPABSDrm128
  { 3564,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x23d800d46ULL, NULL, NULL, OperandInfo235 },  // Inst #3564 = VPABSDrm256
  { 3565,	2,	1,	169,	0,	0, 0x23d800d45ULL, NULL, NULL, OperandInfo48 },  // Inst #3565 = VPABSDrr128
  { 3566,	2,	1,	18,	0,	0, 0x23d800d45ULL, NULL, NULL, OperandInfo239 },  // Inst #3566 = VPABSDrr256
  { 3567,	6,	1,	168,	0,	0|(1<<MCID::MayLoad), 0x23b800d46ULL, NULL, NULL, OperandInfo47 },  // Inst #3567 = VPABSWrm128
  { 3568,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x23b800d46ULL, NULL, NULL, OperandInfo235 },  // Inst #3568 = VPABSWrm256
  { 3569,	2,	1,	169,	0,	0, 0x23b800d45ULL, NULL, NULL, OperandInfo48 },  // Inst #3569 = VPABSWrr128
  { 3570,	2,	1,	18,	0,	0, 0x23b800d45ULL, NULL, NULL, OperandInfo239 },  // Inst #3570 = VPABSWrr256
  { 3571,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xad7800146ULL, NULL, NULL, OperandInfo223 },  // Inst #3571 = VPACKSSDWYrm
  { 3572,	3,	1,	132,	0,	0, 0xad7800145ULL, NULL, NULL, OperandInfo224 },  // Inst #3572 = VPACKSSDWYrr
  { 3573,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xad7800146ULL, NULL, NULL, OperandInfo139 },  // Inst #3573 = VPACKSSDWrm
  { 3574,	3,	1,	132,	0,	0, 0xad7800145ULL, NULL, NULL, OperandInfo140 },  // Inst #3574 = VPACKSSDWrr
  { 3575,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xac7800146ULL, NULL, NULL, OperandInfo223 },  // Inst #3575 = VPACKSSWBYrm
  { 3576,	3,	1,	132,	0,	0, 0xac7800145ULL, NULL, NULL, OperandInfo224 },  // Inst #3576 = VPACKSSWBYrr
  { 3577,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xac7800146ULL, NULL, NULL, OperandInfo139 },  // Inst #3577 = VPACKSSWBrm
  { 3578,	3,	1,	132,	0,	0, 0xac7800145ULL, NULL, NULL, OperandInfo140 },  // Inst #3578 = VPACKSSWBrr
  { 3579,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa57800d46ULL, NULL, NULL, OperandInfo223 },  // Inst #3579 = VPACKUSDWYrm
  { 3580,	3,	1,	18,	0,	0, 0xa57800d45ULL, NULL, NULL, OperandInfo224 },  // Inst #3580 = VPACKUSDWYrr
  { 3581,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa57800d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3581 = VPACKUSDWrm
  { 3582,	3,	1,	18,	0,	0, 0xa57800d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3582 = VPACKUSDWrr
  { 3583,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xacf800146ULL, NULL, NULL, OperandInfo223 },  // Inst #3583 = VPACKUSWBYrm
  { 3584,	3,	1,	132,	0,	0, 0xacf800145ULL, NULL, NULL, OperandInfo224 },  // Inst #3584 = VPACKUSWBYrr
  { 3585,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xacf800146ULL, NULL, NULL, OperandInfo139 },  // Inst #3585 = VPACKUSWBrm
  { 3586,	3,	1,	132,	0,	0, 0xacf800145ULL, NULL, NULL, OperandInfo140 },  // Inst #3586 = VPACKUSWBrr
  { 3587,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xbf9800146ULL, NULL, NULL, OperandInfo223 },  // Inst #3587 = VPADDBYrm
  { 3588,	3,	1,	132,	0,	0|(1<<MCID::Commutable), 0xbf9800145ULL, NULL, NULL, OperandInfo224 },  // Inst #3588 = VPADDBYrr
  { 3589,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xbf9800146ULL, NULL, NULL, OperandInfo139 },  // Inst #3589 = VPADDBrm
  { 3590,	3,	1,	132,	0,	0|(1<<MCID::Commutable), 0xbf9800145ULL, NULL, NULL, OperandInfo140 },  // Inst #3590 = VPADDBrr
  { 3591,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xbfd800146ULL, NULL, NULL, OperandInfo223 },  // Inst #3591 = VPADDDYrm
  { 3592,	3,	1,	132,	0,	0|(1<<MCID::Commutable), 0xbfd800145ULL, NULL, NULL, OperandInfo224 },  // Inst #3592 = VPADDDYrr
  { 3593,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xbfd800146ULL, NULL, NULL, OperandInfo139 },  // Inst #3593 = VPADDDrm
  { 3594,	3,	1,	132,	0,	0|(1<<MCID::Commutable), 0xbfd800145ULL, NULL, NULL, OperandInfo140 },  // Inst #3594 = VPADDDrr
  { 3595,	7,	1,	129,	0,	0|(1<<MCID::MayLoad), 0xba9800146ULL, NULL, NULL, OperandInfo223 },  // Inst #3595 = VPADDQYrm
  { 3596,	3,	1,	130,	0,	0|(1<<MCID::Commutable), 0xba9800145ULL, NULL, NULL, OperandInfo224 },  // Inst #3596 = VPADDQYrr
  { 3597,	7,	1,	129,	0,	0|(1<<MCID::MayLoad), 0xba9800146ULL, NULL, NULL, OperandInfo139 },  // Inst #3597 = VPADDQrm
  { 3598,	3,	1,	130,	0,	0|(1<<MCID::Commutable), 0xba9800145ULL, NULL, NULL, OperandInfo140 },  // Inst #3598 = VPADDQrr
  { 3599,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xbd9800146ULL, NULL, NULL, OperandInfo223 },  // Inst #3599 = VPADDSBYrm
  { 3600,	3,	1,	132,	0,	0|(1<<MCID::Commutable), 0xbd9800145ULL, NULL, NULL, OperandInfo224 },  // Inst #3600 = VPADDSBYrr
  { 3601,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xbd9800146ULL, NULL, NULL, OperandInfo139 },  // Inst #3601 = VPADDSBrm
  { 3602,	3,	1,	132,	0,	0|(1<<MCID::Commutable), 0xbd9800145ULL, NULL, NULL, OperandInfo140 },  // Inst #3602 = VPADDSBrr
  { 3603,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xbdb800146ULL, NULL, NULL, OperandInfo223 },  // Inst #3603 = VPADDSWYrm
  { 3604,	3,	1,	132,	0,	0|(1<<MCID::Commutable), 0xbdb800145ULL, NULL, NULL, OperandInfo224 },  // Inst #3604 = VPADDSWYrr
  { 3605,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xbdb800146ULL, NULL, NULL, OperandInfo139 },  // Inst #3605 = VPADDSWrm
  { 3606,	3,	1,	132,	0,	0|(1<<MCID::Commutable), 0xbdb800145ULL, NULL, NULL, OperandInfo140 },  // Inst #3606 = VPADDSWrr
  { 3607,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xbb9800146ULL, NULL, NULL, OperandInfo223 },  // Inst #3607 = VPADDUSBYrm
  { 3608,	3,	1,	132,	0,	0|(1<<MCID::Commutable), 0xbb9800145ULL, NULL, NULL, OperandInfo224 },  // Inst #3608 = VPADDUSBYrr
  { 3609,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xbb9800146ULL, NULL, NULL, OperandInfo139 },  // Inst #3609 = VPADDUSBrm
  { 3610,	3,	1,	132,	0,	0|(1<<MCID::Commutable), 0xbb9800145ULL, NULL, NULL, OperandInfo140 },  // Inst #3610 = VPADDUSBrr
  { 3611,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xbbb800146ULL, NULL, NULL, OperandInfo223 },  // Inst #3611 = VPADDUSWYrm
  { 3612,	3,	1,	132,	0,	0|(1<<MCID::Commutable), 0xbbb800145ULL, NULL, NULL, OperandInfo224 },  // Inst #3612 = VPADDUSWYrr
  { 3613,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xbbb800146ULL, NULL, NULL, OperandInfo139 },  // Inst #3613 = VPADDUSWrm
  { 3614,	3,	1,	132,	0,	0|(1<<MCID::Commutable), 0xbbb800145ULL, NULL, NULL, OperandInfo140 },  // Inst #3614 = VPADDUSWrr
  { 3615,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xbfb800146ULL, NULL, NULL, OperandInfo223 },  // Inst #3615 = VPADDWYrm
  { 3616,	3,	1,	132,	0,	0|(1<<MCID::Commutable), 0xbfb800145ULL, NULL, NULL, OperandInfo224 },  // Inst #3616 = VPADDWYrr
  { 3617,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xbfb800146ULL, NULL, NULL, OperandInfo139 },  // Inst #3617 = VPADDWrm
  { 3618,	3,	1,	132,	0,	0|(1<<MCID::Commutable), 0xbfb800145ULL, NULL, NULL, OperandInfo140 },  // Inst #3618 = VPADDWrr
  { 3619,	8,	1,	170,	0,	0|(1<<MCID::MayLoad), 0xa1f804e46ULL, NULL, NULL, OperandInfo138 },  // Inst #3619 = VPALIGNR128rm
  { 3620,	4,	1,	170,	0,	0, 0xa1f804e45ULL, NULL, NULL, OperandInfo88 },  // Inst #3620 = VPALIGNR128rr
  { 3621,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa1f804e46ULL, NULL, NULL, OperandInfo230 },  // Inst #3621 = VPALIGNR256rm
  { 3622,	4,	1,	18,	0,	0, 0xa1f804e45ULL, NULL, NULL, OperandInfo89 },  // Inst #3622 = VPALIGNR256rr
  { 3623,	7,	1,	99,	0,	0|(1<<MCID::MayLoad), 0xbbf800146ULL, NULL, NULL, OperandInfo223 },  // Inst #3623 = VPANDNYrm
  { 3624,	3,	1,	100,	0,	0, 0xbbf800145ULL, NULL, NULL, OperandInfo224 },  // Inst #3624 = VPANDNYrr
  { 3625,	7,	1,	99,	0,	0|(1<<MCID::MayLoad), 0xbbf800146ULL, NULL, NULL, OperandInfo139 },  // Inst #3625 = VPANDNrm
  { 3626,	3,	1,	100,	0,	0, 0xbbf800145ULL, NULL, NULL, OperandInfo140 },  // Inst #3626 = VPANDNrr
  { 3627,	7,	1,	99,	0,	0|(1<<MCID::MayLoad), 0xbb7800146ULL, NULL, NULL, OperandInfo223 },  // Inst #3627 = VPANDYrm
  { 3628,	3,	1,	100,	0,	0|(1<<MCID::Commutable), 0xbb7800145ULL, NULL, NULL, OperandInfo224 },  // Inst #3628 = VPANDYrr
  { 3629,	7,	1,	99,	0,	0|(1<<MCID::MayLoad), 0xbb7800146ULL, NULL, NULL, OperandInfo139 },  // Inst #3629 = VPANDrm
  { 3630,	3,	1,	100,	0,	0|(1<<MCID::Commutable), 0xbb7800145ULL, NULL, NULL, OperandInfo140 },  // Inst #3630 = VPANDrr
  { 3631,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xbc1800146ULL, NULL, NULL, OperandInfo223 },  // Inst #3631 = VPAVGBYrm
  { 3632,	3,	1,	132,	0,	0|(1<<MCID::Commutable), 0xbc1800145ULL, NULL, NULL, OperandInfo224 },  // Inst #3632 = VPAVGBYrr
  { 3633,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xbc1800146ULL, NULL, NULL, OperandInfo139 },  // Inst #3633 = VPAVGBrm
  { 3634,	3,	1,	132,	0,	0|(1<<MCID::Commutable), 0xbc1800145ULL, NULL, NULL, OperandInfo140 },  // Inst #3634 = VPAVGBrr
  { 3635,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xbc7800146ULL, NULL, NULL, OperandInfo223 },  // Inst #3635 = VPAVGWYrm
  { 3636,	3,	1,	132,	0,	0|(1<<MCID::Commutable), 0xbc7800145ULL, NULL, NULL, OperandInfo224 },  // Inst #3636 = VPAVGWYrr
  { 3637,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xbc7800146ULL, NULL, NULL, OperandInfo139 },  // Inst #3637 = VPAVGWrm
  { 3638,	3,	1,	132,	0,	0|(1<<MCID::Commutable), 0xbc7800145ULL, NULL, NULL, OperandInfo140 },  // Inst #3638 = VPAVGWrr
  { 3639,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa05804e46ULL, NULL, NULL, OperandInfo230 },  // Inst #3639 = VPBLENDDYrmi
  { 3640,	4,	1,	18,	0,	0, 0xa05804e45ULL, NULL, NULL, OperandInfo89 },  // Inst #3640 = VPBLENDDYrri
  { 3641,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa05804e46ULL, NULL, NULL, OperandInfo138 },  // Inst #3641 = VPBLENDDrmi
  { 3642,	4,	1,	18,	0,	0, 0xa05804e45ULL, NULL, NULL, OperandInfo88 },  // Inst #3642 = VPBLENDDrri
  { 3643,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x2a99804e46ULL, NULL, NULL, OperandInfo231 },  // Inst #3643 = VPBLENDVBYrm
  { 3644,	4,	1,	18,	0,	0, 0x2a99804e45ULL, NULL, NULL, OperandInfo232 },  // Inst #3644 = VPBLENDVBYrr
  { 3645,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x2a99804e46ULL, NULL, NULL, OperandInfo233 },  // Inst #3645 = VPBLENDVBrm
  { 3646,	4,	1,	18,	0,	0, 0x2a99804e45ULL, NULL, NULL, OperandInfo234 },  // Inst #3646 = VPBLENDVBrr
  { 3647,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa1d804e46ULL, NULL, NULL, OperandInfo230 },  // Inst #3647 = VPBLENDWYrmi
  { 3648,	4,	1,	18,	0,	0, 0xa1d804e45ULL, NULL, NULL, OperandInfo89 },  // Inst #3648 = VPBLENDWYrri
  { 3649,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa1d804e46ULL, NULL, NULL, OperandInfo138 },  // Inst #3649 = VPBLENDWrmi
  { 3650,	4,	1,	18,	0,	0, 0xa1d804e45ULL, NULL, NULL, OperandInfo88 },  // Inst #3650 = VPBLENDWrri
  { 3651,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x2f1800d46ULL, NULL, NULL, OperandInfo235 },  // Inst #3651 = VPBROADCASTBYrm
  { 3652,	2,	1,	18,	0,	0, 0x2f1800d45ULL, NULL, NULL, OperandInfo236 },  // Inst #3652 = VPBROADCASTBYrr
  { 3653,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x2f1800d46ULL, NULL, NULL, OperandInfo47 },  // Inst #3653 = VPBROADCASTBrm
  { 3654,	2,	1,	18,	0,	0, 0x2f1800d45ULL, NULL, NULL, OperandInfo48 },  // Inst #3654 = VPBROADCASTBrr
  { 3655,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x2b1800d46ULL, NULL, NULL, OperandInfo235 },  // Inst #3655 = VPBROADCASTDYrm
  { 3656,	2,	1,	18,	0,	0, 0x2b1800d45ULL, NULL, NULL, OperandInfo236 },  // Inst #3656 = VPBROADCASTDYrr
  { 3657,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x2b1800d46ULL, NULL, NULL, OperandInfo47 },  // Inst #3657 = VPBROADCASTDrm
  { 3658,	2,	1,	18,	0,	0, 0x2b1800d45ULL, NULL, NULL, OperandInfo48 },  // Inst #3658 = VPBROADCASTDrr
  { 3659,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x2b3800d46ULL, NULL, NULL, OperandInfo235 },  // Inst #3659 = VPBROADCASTQYrm
  { 3660,	2,	1,	18,	0,	0, 0x2b3800d45ULL, NULL, NULL, OperandInfo236 },  // Inst #3660 = VPBROADCASTQYrr
  { 3661,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x2b3800d46ULL, NULL, NULL, OperandInfo47 },  // Inst #3661 = VPBROADCASTQrm
  { 3662,	2,	1,	18,	0,	0, 0x2b3800d45ULL, NULL, NULL, OperandInfo48 },  // Inst #3662 = VPBROADCASTQrr
  { 3663,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x2f3800d46ULL, NULL, NULL, OperandInfo235 },  // Inst #3663 = VPBROADCASTWYrm
  { 3664,	2,	1,	18,	0,	0, 0x2f3800d45ULL, NULL, NULL, OperandInfo236 },  // Inst #3664 = VPBROADCASTWYrr
  { 3665,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x2f3800d46ULL, NULL, NULL, OperandInfo47 },  // Inst #3665 = VPBROADCASTWrm
  { 3666,	2,	1,	18,	0,	0, 0x2f3800d45ULL, NULL, NULL, OperandInfo48 },  // Inst #3666 = VPBROADCASTWrr
  { 3667,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa89804e46ULL, NULL, NULL, OperandInfo138 },  // Inst #3667 = VPCLMULQDQrm
  { 3668,	4,	1,	18,	0,	0, 0xa89804e45ULL, NULL, NULL, OperandInfo88 },  // Inst #3668 = VPCLMULQDQrr
  { 3669,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x42b45005406ULL, NULL, NULL, OperandInfo233 },  // Inst #3669 = VPCMOVmr
  { 3670,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x42b45005406ULL, NULL, NULL, OperandInfo231 },  // Inst #3670 = VPCMOVmrY
  { 3671,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x62f45005406ULL, NULL, NULL, OperandInfo251 },  // Inst #3671 = VPCMOVrm
  { 3672,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x62f45005406ULL, NULL, NULL, OperandInfo252 },  // Inst #3672 = VPCMOVrmY
  { 3673,	4,	1,	18,	0,	0, 0x42b45005405ULL, NULL, NULL, OperandInfo234 },  // Inst #3673 = VPCMOVrr
  { 3674,	4,	1,	18,	0,	0, 0x42b45005405ULL, NULL, NULL, OperandInfo232 },  // Inst #3674 = VPCMOVrrY
  { 3675,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xae9800146ULL, NULL, NULL, OperandInfo223 },  // Inst #3675 = VPCMPEQBYrm
  { 3676,	3,	1,	132,	0,	0|(1<<MCID::Commutable), 0xae9800145ULL, NULL, NULL, OperandInfo224 },  // Inst #3676 = VPCMPEQBYrr
  { 3677,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xae9800146ULL, NULL, NULL, OperandInfo139 },  // Inst #3677 = VPCMPEQBrm
  { 3678,	3,	1,	132,	0,	0|(1<<MCID::Commutable), 0xae9800145ULL, NULL, NULL, OperandInfo140 },  // Inst #3678 = VPCMPEQBrr
  { 3679,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xaed800146ULL, NULL, NULL, OperandInfo223 },  // Inst #3679 = VPCMPEQDYrm
  { 3680,	3,	1,	132,	0,	0|(1<<MCID::Commutable), 0xaed800145ULL, NULL, NULL, OperandInfo224 },  // Inst #3680 = VPCMPEQDYrr
  { 3681,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xaed800146ULL, NULL, NULL, OperandInfo139 },  // Inst #3681 = VPCMPEQDrm
  { 3682,	3,	1,	132,	0,	0|(1<<MCID::Commutable), 0xaed800145ULL, NULL, NULL, OperandInfo140 },  // Inst #3682 = VPCMPEQDrr
  { 3683,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa53800d46ULL, NULL, NULL, OperandInfo223 },  // Inst #3683 = VPCMPEQQYrm
  { 3684,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0xa53800d45ULL, NULL, NULL, OperandInfo224 },  // Inst #3684 = VPCMPEQQYrr
  { 3685,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa53800d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3685 = VPCMPEQQrm
  { 3686,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0xa53800d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3686 = VPCMPEQQrr
  { 3687,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xaeb800146ULL, NULL, NULL, OperandInfo223 },  // Inst #3687 = VPCMPEQWYrm
  { 3688,	3,	1,	132,	0,	0|(1<<MCID::Commutable), 0xaeb800145ULL, NULL, NULL, OperandInfo224 },  // Inst #3688 = VPCMPEQWYrr
  { 3689,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xaeb800146ULL, NULL, NULL, OperandInfo139 },  // Inst #3689 = VPCMPEQWrm
  { 3690,	3,	1,	132,	0,	0|(1<<MCID::Commutable), 0xaeb800145ULL, NULL, NULL, OperandInfo140 },  // Inst #3690 = VPCMPEQWrr
  { 3691,	7,	0,	18,	0,	0|(1<<MCID::MayLoad), 0x2c3804e46ULL, ImplicitList13, ImplicitList47, OperandInfo49 },  // Inst #3691 = VPCMPESTRIArm
  { 3692,	3,	0,	18,	0,	0, 0x2c3804e45ULL, ImplicitList13, ImplicitList47, OperandInfo50 },  // Inst #3692 = VPCMPESTRIArr
  { 3693,	7,	0,	18,	0,	0|(1<<MCID::MayLoad), 0x2c3804e46ULL, ImplicitList13, ImplicitList47, OperandInfo49 },  // Inst #3693 = VPCMPESTRICrm
  { 3694,	3,	0,	18,	0,	0, 0x2c3804e45ULL, ImplicitList13, ImplicitList47, OperandInfo50 },  // Inst #3694 = VPCMPESTRICrr
  { 3695,	7,	0,	18,	0,	0|(1<<MCID::MayLoad), 0x2c3804e46ULL, ImplicitList13, ImplicitList47, OperandInfo49 },  // Inst #3695 = VPCMPESTRIOrm
  { 3696,	3,	0,	18,	0,	0, 0x2c3804e45ULL, ImplicitList13, ImplicitList47, OperandInfo50 },  // Inst #3696 = VPCMPESTRIOrr
  { 3697,	7,	0,	18,	0,	0|(1<<MCID::MayLoad), 0x2c3804e46ULL, ImplicitList13, ImplicitList47, OperandInfo49 },  // Inst #3697 = VPCMPESTRISrm
  { 3698,	3,	0,	18,	0,	0, 0x2c3804e45ULL, ImplicitList13, ImplicitList47, OperandInfo50 },  // Inst #3698 = VPCMPESTRISrr
  { 3699,	7,	0,	18,	0,	0|(1<<MCID::MayLoad), 0x2c3804e46ULL, ImplicitList13, ImplicitList47, OperandInfo49 },  // Inst #3699 = VPCMPESTRIZrm
  { 3700,	3,	0,	18,	0,	0, 0x2c3804e45ULL, ImplicitList13, ImplicitList47, OperandInfo50 },  // Inst #3700 = VPCMPESTRIZrr
  { 3701,	7,	0,	18,	0,	0|(1<<MCID::MayLoad), 0x2c3804e46ULL, ImplicitList13, ImplicitList47, OperandInfo49 },  // Inst #3701 = VPCMPESTRIrm
  { 3702,	3,	0,	18,	0,	0, 0x2c3804e45ULL, ImplicitList13, ImplicitList47, OperandInfo50 },  // Inst #3702 = VPCMPESTRIrr
  { 3703,	8,	1,	204,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList13, ImplicitList1, OperandInfo138 },  // Inst #3703 = VPCMPESTRM128MEM
  { 3704,	4,	1,	204,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList13, ImplicitList1, OperandInfo88 },  // Inst #3704 = VPCMPESTRM128REG
  { 3705,	7,	0,	18,	0,	0|(1<<MCID::MayLoad), 0x2c1804e46ULL, ImplicitList13, ImplicitList48, OperandInfo49 },  // Inst #3705 = VPCMPESTRM128rm
  { 3706,	3,	0,	18,	0,	0, 0x2c1804e45ULL, ImplicitList13, ImplicitList48, OperandInfo50 },  // Inst #3706 = VPCMPESTRM128rr
  { 3707,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xac9800146ULL, NULL, NULL, OperandInfo223 },  // Inst #3707 = VPCMPGTBYrm
  { 3708,	3,	1,	132,	0,	0, 0xac9800145ULL, NULL, NULL, OperandInfo224 },  // Inst #3708 = VPCMPGTBYrr
  { 3709,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xac9800146ULL, NULL, NULL, OperandInfo139 },  // Inst #3709 = VPCMPGTBrm
  { 3710,	3,	1,	132,	0,	0, 0xac9800145ULL, NULL, NULL, OperandInfo140 },  // Inst #3710 = VPCMPGTBrr
  { 3711,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xacd800146ULL, NULL, NULL, OperandInfo223 },  // Inst #3711 = VPCMPGTDYrm
  { 3712,	3,	1,	132,	0,	0, 0xacd800145ULL, NULL, NULL, OperandInfo224 },  // Inst #3712 = VPCMPGTDYrr
  { 3713,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xacd800146ULL, NULL, NULL, OperandInfo139 },  // Inst #3713 = VPCMPGTDrm
  { 3714,	3,	1,	132,	0,	0, 0xacd800145ULL, NULL, NULL, OperandInfo140 },  // Inst #3714 = VPCMPGTDrr
  { 3715,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa6f800d46ULL, NULL, NULL, OperandInfo223 },  // Inst #3715 = VPCMPGTQYrm
  { 3716,	3,	1,	18,	0,	0, 0xa6f800d45ULL, NULL, NULL, OperandInfo224 },  // Inst #3716 = VPCMPGTQYrr
  { 3717,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa6f800d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3717 = VPCMPGTQrm
  { 3718,	3,	1,	18,	0,	0, 0xa6f800d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3718 = VPCMPGTQrr
  { 3719,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xacb800146ULL, NULL, NULL, OperandInfo223 },  // Inst #3719 = VPCMPGTWYrm
  { 3720,	3,	1,	132,	0,	0, 0xacb800145ULL, NULL, NULL, OperandInfo224 },  // Inst #3720 = VPCMPGTWYrr
  { 3721,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xacb800146ULL, NULL, NULL, OperandInfo139 },  // Inst #3721 = VPCMPGTWrm
  { 3722,	3,	1,	132,	0,	0, 0xacb800145ULL, NULL, NULL, OperandInfo140 },  // Inst #3722 = VPCMPGTWrr
  { 3723,	7,	0,	18,	0,	0|(1<<MCID::MayLoad), 0x2c7804e46ULL, NULL, ImplicitList47, OperandInfo49 },  // Inst #3723 = VPCMPISTRIArm
  { 3724,	3,	0,	18,	0,	0, 0x2c7804e45ULL, NULL, ImplicitList47, OperandInfo50 },  // Inst #3724 = VPCMPISTRIArr
  { 3725,	7,	0,	18,	0,	0|(1<<MCID::MayLoad), 0x2c7804e46ULL, NULL, ImplicitList47, OperandInfo49 },  // Inst #3725 = VPCMPISTRICrm
  { 3726,	3,	0,	18,	0,	0, 0x2c7804e45ULL, NULL, ImplicitList47, OperandInfo50 },  // Inst #3726 = VPCMPISTRICrr
  { 3727,	7,	0,	18,	0,	0|(1<<MCID::MayLoad), 0x2c7804e46ULL, NULL, ImplicitList47, OperandInfo49 },  // Inst #3727 = VPCMPISTRIOrm
  { 3728,	3,	0,	18,	0,	0, 0x2c7804e45ULL, NULL, ImplicitList47, OperandInfo50 },  // Inst #3728 = VPCMPISTRIOrr
  { 3729,	7,	0,	18,	0,	0|(1<<MCID::MayLoad), 0x2c7804e46ULL, NULL, ImplicitList47, OperandInfo49 },  // Inst #3729 = VPCMPISTRISrm
  { 3730,	3,	0,	18,	0,	0, 0x2c7804e45ULL, NULL, ImplicitList47, OperandInfo50 },  // Inst #3730 = VPCMPISTRISrr
  { 3731,	7,	0,	18,	0,	0|(1<<MCID::MayLoad), 0x2c7804e46ULL, NULL, ImplicitList47, OperandInfo49 },  // Inst #3731 = VPCMPISTRIZrm
  { 3732,	3,	0,	18,	0,	0, 0x2c7804e45ULL, NULL, ImplicitList47, OperandInfo50 },  // Inst #3732 = VPCMPISTRIZrr
  { 3733,	7,	0,	18,	0,	0|(1<<MCID::MayLoad), 0x2c7804e46ULL, NULL, ImplicitList47, OperandInfo49 },  // Inst #3733 = VPCMPISTRIrm
  { 3734,	3,	0,	18,	0,	0, 0x2c7804e45ULL, NULL, ImplicitList47, OperandInfo50 },  // Inst #3734 = VPCMPISTRIrr
  { 3735,	8,	1,	204,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList1, OperandInfo138 },  // Inst #3735 = VPCMPISTRM128MEM
  { 3736,	4,	1,	204,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList1, OperandInfo88 },  // Inst #3736 = VPCMPISTRM128REG
  { 3737,	7,	0,	18,	0,	0|(1<<MCID::MayLoad), 0x2c5804e46ULL, NULL, ImplicitList48, OperandInfo49 },  // Inst #3737 = VPCMPISTRM128rm
  { 3738,	3,	0,	18,	0,	0, 0x2c5804e45ULL, NULL, ImplicitList48, OperandInfo50 },  // Inst #3738 = VPCMPISTRM128rr
  { 3739,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x40b99005406ULL, NULL, NULL, OperandInfo138 },  // Inst #3739 = VPCOMBmi
  { 3740,	4,	1,	18,	0,	0, 0x40b99005405ULL, NULL, NULL, OperandInfo88 },  // Inst #3740 = VPCOMBri
  { 3741,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x40b9d005406ULL, NULL, NULL, OperandInfo138 },  // Inst #3741 = VPCOMDmi
  { 3742,	4,	1,	18,	0,	0, 0x40b9d005405ULL, NULL, NULL, OperandInfo88 },  // Inst #3742 = VPCOMDri
  { 3743,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x40b9f005406ULL, NULL, NULL, OperandInfo138 },  // Inst #3743 = VPCOMQmi
  { 3744,	4,	1,	18,	0,	0, 0x40b9f005405ULL, NULL, NULL, OperandInfo88 },  // Inst #3744 = VPCOMQri
  { 3745,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x40bd9005406ULL, NULL, NULL, OperandInfo138 },  // Inst #3745 = VPCOMUBmi
  { 3746,	4,	1,	18,	0,	0, 0x40bd9005405ULL, NULL, NULL, OperandInfo88 },  // Inst #3746 = VPCOMUBri
  { 3747,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x40bdd005406ULL, NULL, NULL, OperandInfo138 },  // Inst #3747 = VPCOMUDmi
  { 3748,	4,	1,	18,	0,	0, 0x40bdd005405ULL, NULL, NULL, OperandInfo88 },  // Inst #3748 = VPCOMUDri
  { 3749,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x40bdf005406ULL, NULL, NULL, OperandInfo138 },  // Inst #3749 = VPCOMUQmi
  { 3750,	4,	1,	18,	0,	0, 0x40bdf005405ULL, NULL, NULL, OperandInfo88 },  // Inst #3750 = VPCOMUQri
  { 3751,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x40bdb005406ULL, NULL, NULL, OperandInfo138 },  // Inst #3751 = VPCOMUWmi
  { 3752,	4,	1,	18,	0,	0, 0x40bdb005405ULL, NULL, NULL, OperandInfo88 },  // Inst #3752 = VPCOMUWri
  { 3753,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x40b9b005406ULL, NULL, NULL, OperandInfo138 },  // Inst #3753 = VPCOMWmi
  { 3754,	4,	1,	18,	0,	0, 0x40b9b005405ULL, NULL, NULL, OperandInfo88 },  // Inst #3754 = VPCOMWri
  { 3755,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa0c804e46ULL, NULL, NULL, OperandInfo230 },  // Inst #3755 = VPERM2F128rm
  { 3756,	4,	1,	18,	0,	0, 0xa0c804e45ULL, NULL, NULL, OperandInfo89 },  // Inst #3756 = VPERM2F128rr
  { 3757,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa8d804e46ULL, NULL, NULL, OperandInfo230 },  // Inst #3757 = VPERM2I128rm
  { 3758,	4,	1,	18,	0,	0, 0xa8d804e45ULL, NULL, NULL, OperandInfo89 },  // Inst #3758 = VPERM2I128rr
  { 3759,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa6d800d46ULL, NULL, NULL, OperandInfo223 },  // Inst #3759 = VPERMDYrm
  { 3760,	3,	1,	18,	0,	0, 0xa6d800d45ULL, NULL, NULL, OperandInfo224 },  // Inst #3760 = VPERMDYrr
  { 3761,	9,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x2a93804e46ULL, NULL, NULL, OperandInfo261 },  // Inst #3761 = VPERMIL2PDmr
  { 3762,	9,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x2a93804e46ULL, NULL, NULL, OperandInfo262 },  // Inst #3762 = VPERMIL2PDmrY
  { 3763,	9,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x22e93804e46ULL, NULL, NULL, OperandInfo263 },  // Inst #3763 = VPERMIL2PDrm
  { 3764,	9,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x22e93804e46ULL, NULL, NULL, OperandInfo264 },  // Inst #3764 = VPERMIL2PDrmY
  { 3765,	5,	1,	18,	0,	0, 0x2a93804e45ULL, NULL, NULL, OperandInfo265 },  // Inst #3765 = VPERMIL2PDrr
  { 3766,	5,	1,	18,	0,	0, 0x2a93804e45ULL, NULL, NULL, OperandInfo266 },  // Inst #3766 = VPERMIL2PDrrY
  { 3767,	9,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x2a91804e46ULL, NULL, NULL, OperandInfo261 },  // Inst #3767 = VPERMIL2PSmr
  { 3768,	9,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x2a91804e46ULL, NULL, NULL, OperandInfo262 },  // Inst #3768 = VPERMIL2PSmrY
  { 3769,	9,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x22e91804e46ULL, NULL, NULL, OperandInfo263 },  // Inst #3769 = VPERMIL2PSrm
  { 3770,	9,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x22e91804e46ULL, NULL, NULL, OperandInfo264 },  // Inst #3770 = VPERMIL2PSrmY
  { 3771,	5,	1,	18,	0,	0, 0x2a91804e45ULL, NULL, NULL, OperandInfo265 },  // Inst #3771 = VPERMIL2PSrr
  { 3772,	5,	1,	18,	0,	0, 0x2a91804e45ULL, NULL, NULL, OperandInfo266 },  // Inst #3772 = VPERMIL2PSrrY
  { 3773,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x20b004e46ULL, NULL, NULL, OperandInfo267 },  // Inst #3773 = VPERMILPDYmi
  { 3774,	3,	1,	18,	0,	0, 0x20b004e45ULL, NULL, NULL, OperandInfo268 },  // Inst #3774 = VPERMILPDYri
  { 3775,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa1b000d46ULL, NULL, NULL, OperandInfo223 },  // Inst #3775 = VPERMILPDYrm
  { 3776,	3,	1,	18,	0,	0, 0xa1b000d45ULL, NULL, NULL, OperandInfo224 },  // Inst #3776 = VPERMILPDYrr
  { 3777,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x20b004e46ULL, NULL, NULL, OperandInfo49 },  // Inst #3777 = VPERMILPDmi
  { 3778,	3,	1,	18,	0,	0, 0x20b004e45ULL, NULL, NULL, OperandInfo50 },  // Inst #3778 = VPERMILPDri
  { 3779,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa1b000d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3779 = VPERMILPDrm
  { 3780,	3,	1,	18,	0,	0, 0xa1b000d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3780 = VPERMILPDrr
  { 3781,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x208804e46ULL, NULL, NULL, OperandInfo267 },  // Inst #3781 = VPERMILPSYmi
  { 3782,	3,	1,	18,	0,	0, 0x208804e45ULL, NULL, NULL, OperandInfo268 },  // Inst #3782 = VPERMILPSYri
  { 3783,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa18800d46ULL, NULL, NULL, OperandInfo223 },  // Inst #3783 = VPERMILPSYrm
  { 3784,	3,	1,	18,	0,	0, 0xa18800d45ULL, NULL, NULL, OperandInfo224 },  // Inst #3784 = VPERMILPSYrr
  { 3785,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x208804e46ULL, NULL, NULL, OperandInfo49 },  // Inst #3785 = VPERMILPSmi
  { 3786,	3,	1,	18,	0,	0, 0x208804e45ULL, NULL, NULL, OperandInfo50 },  // Inst #3786 = VPERMILPSri
  { 3787,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa18800d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3787 = VPERMILPSrm
  { 3788,	3,	1,	18,	0,	0, 0xa18800d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3788 = VPERMILPSrr
  { 3789,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x603004e46ULL, NULL, NULL, OperandInfo267 },  // Inst #3789 = VPERMPDYmi
  { 3790,	3,	1,	18,	0,	0, 0x603004e45ULL, NULL, NULL, OperandInfo268 },  // Inst #3790 = VPERMPDYri
  { 3791,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa2c800d46ULL, NULL, NULL, OperandInfo223 },  // Inst #3791 = VPERMPSYrm
  { 3792,	3,	1,	18,	0,	0, 0xa2c800d45ULL, NULL, NULL, OperandInfo224 },  // Inst #3792 = VPERMPSYrr
  { 3793,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x601804e46ULL, NULL, NULL, OperandInfo267 },  // Inst #3793 = VPERMQYmi
  { 3794,	3,	1,	18,	0,	0, 0x601804e45ULL, NULL, NULL, OperandInfo268 },  // Inst #3794 = VPERMQYri
  { 3795,	7,	0,	18,	0,	0|(1<<MCID::MayStore), 0x229804e44ULL, NULL, NULL, OperandInfo117 },  // Inst #3795 = VPEXTRBmr
  { 3796,	3,	1,	18,	0,	0, 0x229804e43ULL, NULL, NULL, OperandInfo118 },  // Inst #3796 = VPEXTRBrr
  { 3797,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x229804e43ULL, NULL, NULL, OperandInfo202 },  // Inst #3797 = VPEXTRBrr64
  { 3798,	7,	0,	18,	0,	0|(1<<MCID::MayStore), 0x22d804e44ULL, NULL, NULL, OperandInfo117 },  // Inst #3798 = VPEXTRDmr
  { 3799,	3,	1,	18,	0,	0, 0x22d804e43ULL, NULL, NULL, OperandInfo118 },  // Inst #3799 = VPEXTRDrr
  { 3800,	7,	0,	18,	0,	0|(1<<MCID::MayStore), 0x62d806e44ULL, NULL, NULL, OperandInfo117 },  // Inst #3800 = VPEXTRQmr
  { 3801,	3,	1,	18,	0,	0, 0x62d806e43ULL, NULL, NULL, OperandInfo202 },  // Inst #3801 = VPEXTRQrr
  { 3802,	7,	0,	18,	0,	0|(1<<MCID::MayStore), 0x22b804e44ULL, NULL, NULL, OperandInfo117 },  // Inst #3802 = VPEXTRWmr
  { 3803,	3,	1,	18,	0,	0, 0x38b804145ULL, NULL, NULL, OperandInfo118 },  // Inst #3803 = VPEXTRWri
  { 3804,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x40385001506ULL, NULL, NULL, OperandInfo47 },  // Inst #3804 = VPHADDBDrm
  { 3805,	2,	1,	18,	0,	0, 0x40385001505ULL, NULL, NULL, OperandInfo48 },  // Inst #3805 = VPHADDBDrr
  { 3806,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x40387001506ULL, NULL, NULL, OperandInfo47 },  // Inst #3806 = VPHADDBQrm
  { 3807,	2,	1,	18,	0,	0, 0x40387001505ULL, NULL, NULL, OperandInfo48 },  // Inst #3807 = VPHADDBQrr
  { 3808,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x40383001506ULL, NULL, NULL, OperandInfo47 },  // Inst #3808 = VPHADDBWrm
  { 3809,	2,	1,	18,	0,	0, 0x40383001505ULL, NULL, NULL, OperandInfo48 },  // Inst #3809 = VPHADDBWrr
  { 3810,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x40397001506ULL, NULL, NULL, OperandInfo47 },  // Inst #3810 = VPHADDDQrm
  { 3811,	2,	1,	18,	0,	0, 0x40397001505ULL, NULL, NULL, OperandInfo48 },  // Inst #3811 = VPHADDDQrr
  { 3812,	7,	1,	177,	0,	0|(1<<MCID::MayLoad), 0xa05800d46ULL, NULL, NULL, OperandInfo223 },  // Inst #3812 = VPHADDDYrm
  { 3813,	3,	1,	178,	0,	0, 0xa05800d45ULL, NULL, NULL, OperandInfo224 },  // Inst #3813 = VPHADDDYrr
  { 3814,	7,	1,	173,	0,	0|(1<<MCID::MayLoad), 0xa05800d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3814 = VPHADDDrm
  { 3815,	3,	1,	174,	0,	0, 0xa05800d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3815 = VPHADDDrr
  { 3816,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa07800d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3816 = VPHADDSWrm128
  { 3817,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa07800d46ULL, NULL, NULL, OperandInfo223 },  // Inst #3817 = VPHADDSWrm256
  { 3818,	3,	1,	18,	0,	0, 0xa07800d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3818 = VPHADDSWrr128
  { 3819,	3,	1,	18,	0,	0, 0xa07800d45ULL, NULL, NULL, OperandInfo224 },  // Inst #3819 = VPHADDSWrr256
  { 3820,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x403a5001506ULL, NULL, NULL, OperandInfo47 },  // Inst #3820 = VPHADDUBDrm
  { 3821,	2,	1,	18,	0,	0, 0x403a5001505ULL, NULL, NULL, OperandInfo48 },  // Inst #3821 = VPHADDUBDrr
  { 3822,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x403a7001506ULL, NULL, NULL, OperandInfo47 },  // Inst #3822 = VPHADDUBQrm
  { 3823,	2,	1,	18,	0,	0, 0x403a7001505ULL, NULL, NULL, OperandInfo48 },  // Inst #3823 = VPHADDUBQrr
  { 3824,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x403a3001506ULL, NULL, NULL, OperandInfo47 },  // Inst #3824 = VPHADDUBWrm
  { 3825,	2,	1,	18,	0,	0, 0x403a3001505ULL, NULL, NULL, OperandInfo48 },  // Inst #3825 = VPHADDUBWrr
  { 3826,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x403b7001506ULL, NULL, NULL, OperandInfo47 },  // Inst #3826 = VPHADDUDQrm
  { 3827,	2,	1,	18,	0,	0, 0x403b7001505ULL, NULL, NULL, OperandInfo48 },  // Inst #3827 = VPHADDUDQrr
  { 3828,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x403ad001506ULL, NULL, NULL, OperandInfo47 },  // Inst #3828 = VPHADDUWDrm
  { 3829,	2,	1,	18,	0,	0, 0x403ad001505ULL, NULL, NULL, OperandInfo48 },  // Inst #3829 = VPHADDUWDrr
  { 3830,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x403af001506ULL, NULL, NULL, OperandInfo47 },  // Inst #3830 = VPHADDUWQrm
  { 3831,	2,	1,	18,	0,	0, 0x403af001505ULL, NULL, NULL, OperandInfo48 },  // Inst #3831 = VPHADDUWQrr
  { 3832,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x4038d001506ULL, NULL, NULL, OperandInfo47 },  // Inst #3832 = VPHADDWDrm
  { 3833,	2,	1,	18,	0,	0, 0x4038d001505ULL, NULL, NULL, OperandInfo48 },  // Inst #3833 = VPHADDWDrr
  { 3834,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x4038f001506ULL, NULL, NULL, OperandInfo47 },  // Inst #3834 = VPHADDWQrm
  { 3835,	2,	1,	18,	0,	0, 0x4038f001505ULL, NULL, NULL, OperandInfo48 },  // Inst #3835 = VPHADDWQrr
  { 3836,	7,	1,	177,	0,	0|(1<<MCID::MayLoad), 0xa03800d46ULL, NULL, NULL, OperandInfo223 },  // Inst #3836 = VPHADDWYrm
  { 3837,	3,	1,	178,	0,	0, 0xa03800d45ULL, NULL, NULL, OperandInfo224 },  // Inst #3837 = VPHADDWYrr
  { 3838,	7,	1,	177,	0,	0|(1<<MCID::MayLoad), 0xa03800d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3838 = VPHADDWrm
  { 3839,	3,	1,	178,	0,	0, 0xa03800d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3839 = VPHADDWrr
  { 3840,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x283800d46ULL, NULL, NULL, OperandInfo47 },  // Inst #3840 = VPHMINPOSUWrm128
  { 3841,	2,	1,	18,	0,	0, 0x283800d45ULL, NULL, NULL, OperandInfo48 },  // Inst #3841 = VPHMINPOSUWrr128
  { 3842,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x403c3001506ULL, NULL, NULL, OperandInfo47 },  // Inst #3842 = VPHSUBBWrm
  { 3843,	2,	1,	18,	0,	0, 0x403c3001505ULL, NULL, NULL, OperandInfo48 },  // Inst #3843 = VPHSUBBWrr
  { 3844,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x403c7001506ULL, NULL, NULL, OperandInfo47 },  // Inst #3844 = VPHSUBDQrm
  { 3845,	2,	1,	18,	0,	0, 0x403c7001505ULL, NULL, NULL, OperandInfo48 },  // Inst #3845 = VPHSUBDQrr
  { 3846,	7,	1,	177,	0,	0|(1<<MCID::MayLoad), 0xa0d800d46ULL, NULL, NULL, OperandInfo223 },  // Inst #3846 = VPHSUBDYrm
  { 3847,	3,	1,	178,	0,	0, 0xa0d800d45ULL, NULL, NULL, OperandInfo224 },  // Inst #3847 = VPHSUBDYrr
  { 3848,	7,	1,	173,	0,	0|(1<<MCID::MayLoad), 0xa0d800d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3848 = VPHSUBDrm
  { 3849,	3,	1,	174,	0,	0, 0xa0d800d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3849 = VPHSUBDrr
  { 3850,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa0f800d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3850 = VPHSUBSWrm128
  { 3851,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa0f800d46ULL, NULL, NULL, OperandInfo223 },  // Inst #3851 = VPHSUBSWrm256
  { 3852,	3,	1,	18,	0,	0, 0xa0f800d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3852 = VPHSUBSWrr128
  { 3853,	3,	1,	18,	0,	0, 0xa0f800d45ULL, NULL, NULL, OperandInfo224 },  // Inst #3853 = VPHSUBSWrr256
  { 3854,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x403c5001506ULL, NULL, NULL, OperandInfo47 },  // Inst #3854 = VPHSUBWDrm
  { 3855,	2,	1,	18,	0,	0, 0x403c5001505ULL, NULL, NULL, OperandInfo48 },  // Inst #3855 = VPHSUBWDrr
  { 3856,	7,	1,	177,	0,	0|(1<<MCID::MayLoad), 0xa0b800d46ULL, NULL, NULL, OperandInfo223 },  // Inst #3856 = VPHSUBWYrm
  { 3857,	3,	1,	178,	0,	0, 0xa0b800d45ULL, NULL, NULL, OperandInfo224 },  // Inst #3857 = VPHSUBWYrr
  { 3858,	7,	1,	177,	0,	0|(1<<MCID::MayLoad), 0xa0b800d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3858 = VPHSUBWrm
  { 3859,	3,	1,	178,	0,	0, 0xa0b800d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3859 = VPHSUBWrr
  { 3860,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa41804e46ULL, NULL, NULL, OperandInfo138 },  // Inst #3860 = VPINSRBrm
  { 3861,	4,	1,	18,	0,	0, 0xa41804e45ULL, NULL, NULL, OperandInfo269 },  // Inst #3861 = VPINSRBrr
  { 3862,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa45804e46ULL, NULL, NULL, OperandInfo138 },  // Inst #3862 = VPINSRDrm
  { 3863,	4,	1,	18,	0,	0, 0xa45804e45ULL, NULL, NULL, OperandInfo269 },  // Inst #3863 = VPINSRDrr
  { 3864,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xe45804e46ULL, NULL, NULL, OperandInfo138 },  // Inst #3864 = VPINSRQrm
  { 3865,	4,	1,	18,	0,	0, 0xe45804e45ULL, NULL, NULL, OperandInfo270 },  // Inst #3865 = VPINSRQrr
  { 3866,	8,	1,	179,	0,	0|(1<<MCID::MayLoad), 0xb89804146ULL, NULL, NULL, OperandInfo138 },  // Inst #3866 = VPINSRWrmi
  { 3867,	4,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb89804145ULL, NULL, NULL, OperandInfo270 },  // Inst #3867 = VPINSRWrr64i
  { 3868,	4,	1,	179,	0,	0, 0xb89804145ULL, NULL, NULL, OperandInfo269 },  // Inst #3868 = VPINSRWrri
  { 3869,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x42b3d005406ULL, NULL, NULL, OperandInfo233 },  // Inst #3869 = VPMACSDDrm
  { 3870,	4,	1,	18,	0,	0, 0x42b3d005405ULL, NULL, NULL, OperandInfo234 },  // Inst #3870 = VPMACSDDrr
  { 3871,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x42b3f005406ULL, NULL, NULL, OperandInfo233 },  // Inst #3871 = VPMACSDQHrm
  { 3872,	4,	1,	18,	0,	0, 0x42b3f005405ULL, NULL, NULL, OperandInfo234 },  // Inst #3872 = VPMACSDQHrr
  { 3873,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x42b2f005406ULL, NULL, NULL, OperandInfo233 },  // Inst #3873 = VPMACSDQLrm
  { 3874,	4,	1,	18,	0,	0, 0x42b2f005405ULL, NULL, NULL, OperandInfo234 },  // Inst #3874 = VPMACSDQLrr
  { 3875,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x42b1d005406ULL, NULL, NULL, OperandInfo233 },  // Inst #3875 = VPMACSSDDrm
  { 3876,	4,	1,	18,	0,	0, 0x42b1d005405ULL, NULL, NULL, OperandInfo234 },  // Inst #3876 = VPMACSSDDrr
  { 3877,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x42b1f005406ULL, NULL, NULL, OperandInfo233 },  // Inst #3877 = VPMACSSDQHrm
  { 3878,	4,	1,	18,	0,	0, 0x42b1f005405ULL, NULL, NULL, OperandInfo234 },  // Inst #3878 = VPMACSSDQHrr
  { 3879,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x42b0f005406ULL, NULL, NULL, OperandInfo233 },  // Inst #3879 = VPMACSSDQLrm
  { 3880,	4,	1,	18,	0,	0, 0x42b0f005405ULL, NULL, NULL, OperandInfo234 },  // Inst #3880 = VPMACSSDQLrr
  { 3881,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x42b0d005406ULL, NULL, NULL, OperandInfo233 },  // Inst #3881 = VPMACSSWDrm
  { 3882,	4,	1,	18,	0,	0, 0x42b0d005405ULL, NULL, NULL, OperandInfo234 },  // Inst #3882 = VPMACSSWDrr
  { 3883,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x42b0b005406ULL, NULL, NULL, OperandInfo233 },  // Inst #3883 = VPMACSSWWrm
  { 3884,	4,	1,	18,	0,	0, 0x42b0b005405ULL, NULL, NULL, OperandInfo234 },  // Inst #3884 = VPMACSSWWrr
  { 3885,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x42b2d005406ULL, NULL, NULL, OperandInfo233 },  // Inst #3885 = VPMACSWDrm
  { 3886,	4,	1,	18,	0,	0, 0x42b2d005405ULL, NULL, NULL, OperandInfo234 },  // Inst #3886 = VPMACSWDrr
  { 3887,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x42b2b005406ULL, NULL, NULL, OperandInfo233 },  // Inst #3887 = VPMACSWWrm
  { 3888,	4,	1,	18,	0,	0, 0x42b2b005405ULL, NULL, NULL, OperandInfo234 },  // Inst #3888 = VPMACSWWrr
  { 3889,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x42b4d005406ULL, NULL, NULL, OperandInfo233 },  // Inst #3889 = VPMADCSSWDrm
  { 3890,	4,	1,	18,	0,	0, 0x42b4d005405ULL, NULL, NULL, OperandInfo234 },  // Inst #3890 = VPMADCSSWDrr
  { 3891,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x42b6d005406ULL, NULL, NULL, OperandInfo233 },  // Inst #3891 = VPMADCSWDrm
  { 3892,	4,	1,	18,	0,	0, 0x42b6d005405ULL, NULL, NULL, OperandInfo234 },  // Inst #3892 = VPMADCSWDrr
  { 3893,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa09800d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3893 = VPMADDUBSWrm128
  { 3894,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa09800d46ULL, NULL, NULL, OperandInfo223 },  // Inst #3894 = VPMADDUBSWrm256
  { 3895,	3,	1,	18,	0,	0, 0xa09800d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3895 = VPMADDUBSWrr128
  { 3896,	3,	1,	18,	0,	0, 0xa09800d45ULL, NULL, NULL, OperandInfo224 },  // Inst #3896 = VPMADDUBSWrr256
  { 3897,	7,	1,	180,	0,	0|(1<<MCID::MayLoad), 0xbeb800146ULL, NULL, NULL, OperandInfo223 },  // Inst #3897 = VPMADDWDYrm
  { 3898,	3,	1,	180,	0,	0|(1<<MCID::Commutable), 0xbeb800145ULL, NULL, NULL, OperandInfo224 },  // Inst #3898 = VPMADDWDYrr
  { 3899,	7,	1,	180,	0,	0|(1<<MCID::MayLoad), 0xbeb800146ULL, NULL, NULL, OperandInfo139 },  // Inst #3899 = VPMADDWDrm
  { 3900,	3,	1,	180,	0,	0|(1<<MCID::Commutable), 0xbeb800145ULL, NULL, NULL, OperandInfo140 },  // Inst #3900 = VPMADDWDrr
  { 3901,	7,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0xb1d800d44ULL, NULL, NULL, OperandInfo254 },  // Inst #3901 = VPMASKMOVDYmr
  { 3902,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xb19800d46ULL, NULL, NULL, OperandInfo223 },  // Inst #3902 = VPMASKMOVDYrm
  { 3903,	7,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0xb1d800d44ULL, NULL, NULL, OperandInfo255 },  // Inst #3903 = VPMASKMOVDmr
  { 3904,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xb19800d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3904 = VPMASKMOVDrm
  { 3905,	7,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0xf1d800d44ULL, NULL, NULL, OperandInfo254 },  // Inst #3905 = VPMASKMOVQYmr
  { 3906,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xf19800d46ULL, NULL, NULL, OperandInfo223 },  // Inst #3906 = VPMASKMOVQYrm
  { 3907,	7,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0xf1d800d44ULL, NULL, NULL, OperandInfo255 },  // Inst #3907 = VPMASKMOVQmr
  { 3908,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xf19800d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3908 = VPMASKMOVQrm
  { 3909,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa79800d46ULL, NULL, NULL, OperandInfo223 },  // Inst #3909 = VPMAXSBYrm
  { 3910,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0xa79800d45ULL, NULL, NULL, OperandInfo224 },  // Inst #3910 = VPMAXSBYrr
  { 3911,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa79800d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3911 = VPMAXSBrm
  { 3912,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0xa79800d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3912 = VPMAXSBrr
  { 3913,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa7b800d46ULL, NULL, NULL, OperandInfo223 },  // Inst #3913 = VPMAXSDYrm
  { 3914,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0xa7b800d45ULL, NULL, NULL, OperandInfo224 },  // Inst #3914 = VPMAXSDYrr
  { 3915,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa7b800d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3915 = VPMAXSDrm
  { 3916,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0xa7b800d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3916 = VPMAXSDrr
  { 3917,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xbdd800146ULL, NULL, NULL, OperandInfo223 },  // Inst #3917 = VPMAXSWYrm
  { 3918,	3,	1,	132,	0,	0|(1<<MCID::Commutable), 0xbdd800145ULL, NULL, NULL, OperandInfo224 },  // Inst #3918 = VPMAXSWYrr
  { 3919,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xbdd800146ULL, NULL, NULL, OperandInfo139 },  // Inst #3919 = VPMAXSWrm
  { 3920,	3,	1,	132,	0,	0|(1<<MCID::Commutable), 0xbdd800145ULL, NULL, NULL, OperandInfo140 },  // Inst #3920 = VPMAXSWrr
  { 3921,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xbbd800146ULL, NULL, NULL, OperandInfo223 },  // Inst #3921 = VPMAXUBYrm
  { 3922,	3,	1,	132,	0,	0|(1<<MCID::Commutable), 0xbbd800145ULL, NULL, NULL, OperandInfo224 },  // Inst #3922 = VPMAXUBYrr
  { 3923,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xbbd800146ULL, NULL, NULL, OperandInfo139 },  // Inst #3923 = VPMAXUBrm
  { 3924,	3,	1,	132,	0,	0|(1<<MCID::Commutable), 0xbbd800145ULL, NULL, NULL, OperandInfo140 },  // Inst #3924 = VPMAXUBrr
  { 3925,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa7f800d46ULL, NULL, NULL, OperandInfo223 },  // Inst #3925 = VPMAXUDYrm
  { 3926,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0xa7f800d45ULL, NULL, NULL, OperandInfo224 },  // Inst #3926 = VPMAXUDYrr
  { 3927,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa7f800d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3927 = VPMAXUDrm
  { 3928,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0xa7f800d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3928 = VPMAXUDrr
  { 3929,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa7d800d46ULL, NULL, NULL, OperandInfo223 },  // Inst #3929 = VPMAXUWYrm
  { 3930,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0xa7d800d45ULL, NULL, NULL, OperandInfo224 },  // Inst #3930 = VPMAXUWYrr
  { 3931,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa7d800d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3931 = VPMAXUWrm
  { 3932,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0xa7d800d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3932 = VPMAXUWrr
  { 3933,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa71800d46ULL, NULL, NULL, OperandInfo223 },  // Inst #3933 = VPMINSBYrm
  { 3934,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0xa71800d45ULL, NULL, NULL, OperandInfo224 },  // Inst #3934 = VPMINSBYrr
  { 3935,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa71800d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3935 = VPMINSBrm
  { 3936,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0xa71800d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3936 = VPMINSBrr
  { 3937,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa73800d46ULL, NULL, NULL, OperandInfo223 },  // Inst #3937 = VPMINSDYrm
  { 3938,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0xa73800d45ULL, NULL, NULL, OperandInfo224 },  // Inst #3938 = VPMINSDYrr
  { 3939,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa73800d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3939 = VPMINSDrm
  { 3940,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0xa73800d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3940 = VPMINSDrr
  { 3941,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xbd5800146ULL, NULL, NULL, OperandInfo223 },  // Inst #3941 = VPMINSWYrm
  { 3942,	3,	1,	132,	0,	0|(1<<MCID::Commutable), 0xbd5800145ULL, NULL, NULL, OperandInfo224 },  // Inst #3942 = VPMINSWYrr
  { 3943,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xbd5800146ULL, NULL, NULL, OperandInfo139 },  // Inst #3943 = VPMINSWrm
  { 3944,	3,	1,	132,	0,	0|(1<<MCID::Commutable), 0xbd5800145ULL, NULL, NULL, OperandInfo140 },  // Inst #3944 = VPMINSWrr
  { 3945,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xbb5800146ULL, NULL, NULL, OperandInfo223 },  // Inst #3945 = VPMINUBYrm
  { 3946,	3,	1,	132,	0,	0|(1<<MCID::Commutable), 0xbb5800145ULL, NULL, NULL, OperandInfo224 },  // Inst #3946 = VPMINUBYrr
  { 3947,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xbb5800146ULL, NULL, NULL, OperandInfo139 },  // Inst #3947 = VPMINUBrm
  { 3948,	3,	1,	132,	0,	0|(1<<MCID::Commutable), 0xbb5800145ULL, NULL, NULL, OperandInfo140 },  // Inst #3948 = VPMINUBrr
  { 3949,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa77800d46ULL, NULL, NULL, OperandInfo223 },  // Inst #3949 = VPMINUDYrm
  { 3950,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0xa77800d45ULL, NULL, NULL, OperandInfo224 },  // Inst #3950 = VPMINUDYrr
  { 3951,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa77800d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3951 = VPMINUDrm
  { 3952,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0xa77800d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3952 = VPMINUDrr
  { 3953,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa75800d46ULL, NULL, NULL, OperandInfo223 },  // Inst #3953 = VPMINUWYrm
  { 3954,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0xa75800d45ULL, NULL, NULL, OperandInfo224 },  // Inst #3954 = VPMINUWYrr
  { 3955,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa75800d46ULL, NULL, NULL, OperandInfo139 },  // Inst #3955 = VPMINUWrm
  { 3956,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0xa75800d45ULL, NULL, NULL, OperandInfo140 },  // Inst #3956 = VPMINUWrr
  { 3957,	2,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x3af800145ULL, NULL, NULL, OperandInfo257 },  // Inst #3957 = VPMOVMSKBYr64r
  { 3958,	2,	1,	18,	0,	0, 0x3af800145ULL, NULL, NULL, OperandInfo258 },  // Inst #3958 = VPMOVMSKBYrr
  { 3959,	2,	1,	149,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x3af800145ULL, NULL, NULL, OperandInfo99 },  // Inst #3959 = VPMOVMSKBr64r
  { 3960,	2,	1,	149,	0,	0, 0x3af800145ULL, NULL, NULL, OperandInfo100 },  // Inst #3960 = VPMOVMSKBrr
  { 3961,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x243800d46ULL, NULL, NULL, OperandInfo235 },  // Inst #3961 = VPMOVSXBDYrm
  { 3962,	2,	1,	18,	0,	0, 0x243800d45ULL, NULL, NULL, OperandInfo236 },  // Inst #3962 = VPMOVSXBDYrr
  { 3963,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x243800d46ULL, NULL, NULL, OperandInfo47 },  // Inst #3963 = VPMOVSXBDrm
  { 3964,	2,	1,	18,	0,	0, 0x243800d45ULL, NULL, NULL, OperandInfo48 },  // Inst #3964 = VPMOVSXBDrr
  { 3965,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x245800d46ULL, NULL, NULL, OperandInfo235 },  // Inst #3965 = VPMOVSXBQYrm
  { 3966,	2,	1,	18,	0,	0, 0x245800d45ULL, NULL, NULL, OperandInfo236 },  // Inst #3966 = VPMOVSXBQYrr
  { 3967,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x245800d46ULL, NULL, NULL, OperandInfo47 },  // Inst #3967 = VPMOVSXBQrm
  { 3968,	2,	1,	18,	0,	0, 0x245800d45ULL, NULL, NULL, OperandInfo48 },  // Inst #3968 = VPMOVSXBQrr
  { 3969,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x241800d46ULL, NULL, NULL, OperandInfo235 },  // Inst #3969 = VPMOVSXBWYrm
  { 3970,	2,	1,	18,	0,	0, 0x241800d45ULL, NULL, NULL, OperandInfo236 },  // Inst #3970 = VPMOVSXBWYrr
  { 3971,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x241800d46ULL, NULL, NULL, OperandInfo47 },  // Inst #3971 = VPMOVSXBWrm
  { 3972,	2,	1,	18,	0,	0, 0x241800d45ULL, NULL, NULL, OperandInfo48 },  // Inst #3972 = VPMOVSXBWrr
  { 3973,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x24b800d46ULL, NULL, NULL, OperandInfo235 },  // Inst #3973 = VPMOVSXDQYrm
  { 3974,	2,	1,	18,	0,	0, 0x24b800d45ULL, NULL, NULL, OperandInfo236 },  // Inst #3974 = VPMOVSXDQYrr
  { 3975,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x24b800d46ULL, NULL, NULL, OperandInfo47 },  // Inst #3975 = VPMOVSXDQrm
  { 3976,	2,	1,	18,	0,	0, 0x24b800d45ULL, NULL, NULL, OperandInfo48 },  // Inst #3976 = VPMOVSXDQrr
  { 3977,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x247800d46ULL, NULL, NULL, OperandInfo235 },  // Inst #3977 = VPMOVSXWDYrm
  { 3978,	2,	1,	18,	0,	0, 0x247800d45ULL, NULL, NULL, OperandInfo236 },  // Inst #3978 = VPMOVSXWDYrr
  { 3979,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x247800d46ULL, NULL, NULL, OperandInfo47 },  // Inst #3979 = VPMOVSXWDrm
  { 3980,	2,	1,	18,	0,	0, 0x247800d45ULL, NULL, NULL, OperandInfo48 },  // Inst #3980 = VPMOVSXWDrr
  { 3981,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x249800d46ULL, NULL, NULL, OperandInfo235 },  // Inst #3981 = VPMOVSXWQYrm
  { 3982,	2,	1,	18,	0,	0, 0x249800d45ULL, NULL, NULL, OperandInfo236 },  // Inst #3982 = VPMOVSXWQYrr
  { 3983,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x249800d46ULL, NULL, NULL, OperandInfo47 },  // Inst #3983 = VPMOVSXWQrm
  { 3984,	2,	1,	18,	0,	0, 0x249800d45ULL, NULL, NULL, OperandInfo48 },  // Inst #3984 = VPMOVSXWQrr
  { 3985,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x263800d46ULL, NULL, NULL, OperandInfo235 },  // Inst #3985 = VPMOVZXBDYrm
  { 3986,	2,	1,	18,	0,	0, 0x263800d45ULL, NULL, NULL, OperandInfo236 },  // Inst #3986 = VPMOVZXBDYrr
  { 3987,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x263800d46ULL, NULL, NULL, OperandInfo47 },  // Inst #3987 = VPMOVZXBDrm
  { 3988,	2,	1,	18,	0,	0, 0x263800d45ULL, NULL, NULL, OperandInfo48 },  // Inst #3988 = VPMOVZXBDrr
  { 3989,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x265800d46ULL, NULL, NULL, OperandInfo235 },  // Inst #3989 = VPMOVZXBQYrm
  { 3990,	2,	1,	18,	0,	0, 0x265800d45ULL, NULL, NULL, OperandInfo236 },  // Inst #3990 = VPMOVZXBQYrr
  { 3991,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x265800d46ULL, NULL, NULL, OperandInfo47 },  // Inst #3991 = VPMOVZXBQrm
  { 3992,	2,	1,	18,	0,	0, 0x265800d45ULL, NULL, NULL, OperandInfo48 },  // Inst #3992 = VPMOVZXBQrr
  { 3993,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x261800d46ULL, NULL, NULL, OperandInfo235 },  // Inst #3993 = VPMOVZXBWYrm
  { 3994,	2,	1,	18,	0,	0, 0x261800d45ULL, NULL, NULL, OperandInfo236 },  // Inst #3994 = VPMOVZXBWYrr
  { 3995,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x261800d46ULL, NULL, NULL, OperandInfo47 },  // Inst #3995 = VPMOVZXBWrm
  { 3996,	2,	1,	18,	0,	0, 0x261800d45ULL, NULL, NULL, OperandInfo48 },  // Inst #3996 = VPMOVZXBWrr
  { 3997,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x26b800d46ULL, NULL, NULL, OperandInfo235 },  // Inst #3997 = VPMOVZXDQYrm
  { 3998,	2,	1,	18,	0,	0, 0x26b800d45ULL, NULL, NULL, OperandInfo236 },  // Inst #3998 = VPMOVZXDQYrr
  { 3999,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x26b800d46ULL, NULL, NULL, OperandInfo47 },  // Inst #3999 = VPMOVZXDQrm
  { 4000,	2,	1,	18,	0,	0, 0x26b800d45ULL, NULL, NULL, OperandInfo48 },  // Inst #4000 = VPMOVZXDQrr
  { 4001,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x267800d46ULL, NULL, NULL, OperandInfo235 },  // Inst #4001 = VPMOVZXWDYrm
  { 4002,	2,	1,	18,	0,	0, 0x267800d45ULL, NULL, NULL, OperandInfo236 },  // Inst #4002 = VPMOVZXWDYrr
  { 4003,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x267800d46ULL, NULL, NULL, OperandInfo47 },  // Inst #4003 = VPMOVZXWDrm
  { 4004,	2,	1,	18,	0,	0, 0x267800d45ULL, NULL, NULL, OperandInfo48 },  // Inst #4004 = VPMOVZXWDrr
  { 4005,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x269800d46ULL, NULL, NULL, OperandInfo235 },  // Inst #4005 = VPMOVZXWQYrm
  { 4006,	2,	1,	18,	0,	0, 0x269800d45ULL, NULL, NULL, OperandInfo236 },  // Inst #4006 = VPMOVZXWQYrr
  { 4007,	6,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x269800d46ULL, NULL, NULL, OperandInfo47 },  // Inst #4007 = VPMOVZXWQrm
  { 4008,	2,	1,	18,	0,	0, 0x269800d45ULL, NULL, NULL, OperandInfo48 },  // Inst #4008 = VPMOVZXWQrr
  { 4009,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa51800d46ULL, NULL, NULL, OperandInfo223 },  // Inst #4009 = VPMULDQYrm
  { 4010,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0xa51800d45ULL, NULL, NULL, OperandInfo224 },  // Inst #4010 = VPMULDQYrr
  { 4011,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa51800d46ULL, NULL, NULL, OperandInfo139 },  // Inst #4011 = VPMULDQrm
  { 4012,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0xa51800d45ULL, NULL, NULL, OperandInfo140 },  // Inst #4012 = VPMULDQrr
  { 4013,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa17800d46ULL, NULL, NULL, OperandInfo139 },  // Inst #4013 = VPMULHRSWrm128
  { 4014,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa17800d46ULL, NULL, NULL, OperandInfo223 },  // Inst #4014 = VPMULHRSWrm256
  { 4015,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0xa17800d45ULL, NULL, NULL, OperandInfo140 },  // Inst #4015 = VPMULHRSWrr128
  { 4016,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0xa17800d45ULL, NULL, NULL, OperandInfo224 },  // Inst #4016 = VPMULHRSWrr256
  { 4017,	7,	1,	133,	0,	0|(1<<MCID::MayLoad), 0xbc9800146ULL, NULL, NULL, OperandInfo223 },  // Inst #4017 = VPMULHUWYrm
  { 4018,	3,	1,	134,	0,	0|(1<<MCID::Commutable), 0xbc9800145ULL, NULL, NULL, OperandInfo224 },  // Inst #4018 = VPMULHUWYrr
  { 4019,	7,	1,	133,	0,	0|(1<<MCID::MayLoad), 0xbc9800146ULL, NULL, NULL, OperandInfo139 },  // Inst #4019 = VPMULHUWrm
  { 4020,	3,	1,	134,	0,	0|(1<<MCID::Commutable), 0xbc9800145ULL, NULL, NULL, OperandInfo140 },  // Inst #4020 = VPMULHUWrr
  { 4021,	7,	1,	133,	0,	0|(1<<MCID::MayLoad), 0xbcb800146ULL, NULL, NULL, OperandInfo223 },  // Inst #4021 = VPMULHWYrm
  { 4022,	3,	1,	134,	0,	0|(1<<MCID::Commutable), 0xbcb800145ULL, NULL, NULL, OperandInfo224 },  // Inst #4022 = VPMULHWYrr
  { 4023,	7,	1,	133,	0,	0|(1<<MCID::MayLoad), 0xbcb800146ULL, NULL, NULL, OperandInfo139 },  // Inst #4023 = VPMULHWrm
  { 4024,	3,	1,	134,	0,	0|(1<<MCID::Commutable), 0xbcb800145ULL, NULL, NULL, OperandInfo140 },  // Inst #4024 = VPMULHWrr
  { 4025,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa81800d46ULL, NULL, NULL, OperandInfo223 },  // Inst #4025 = VPMULLDYrm
  { 4026,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0xa81800d45ULL, NULL, NULL, OperandInfo224 },  // Inst #4026 = VPMULLDYrr
  { 4027,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa81800d46ULL, NULL, NULL, OperandInfo139 },  // Inst #4027 = VPMULLDrm
  { 4028,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0xa81800d45ULL, NULL, NULL, OperandInfo140 },  // Inst #4028 = VPMULLDrr
  { 4029,	7,	1,	133,	0,	0|(1<<MCID::MayLoad), 0xbab800146ULL, NULL, NULL, OperandInfo223 },  // Inst #4029 = VPMULLWYrm
  { 4030,	3,	1,	134,	0,	0|(1<<MCID::Commutable), 0xbab800145ULL, NULL, NULL, OperandInfo224 },  // Inst #4030 = VPMULLWYrr
  { 4031,	7,	1,	133,	0,	0|(1<<MCID::MayLoad), 0xbab800146ULL, NULL, NULL, OperandInfo139 },  // Inst #4031 = VPMULLWrm
  { 4032,	3,	1,	134,	0,	0|(1<<MCID::Commutable), 0xbab800145ULL, NULL, NULL, OperandInfo140 },  // Inst #4032 = VPMULLWrr
  { 4033,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xbe9800146ULL, NULL, NULL, OperandInfo223 },  // Inst #4033 = VPMULUDQYrm
  { 4034,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0xbe9800145ULL, NULL, NULL, OperandInfo224 },  // Inst #4034 = VPMULUDQYrr
  { 4035,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xbe9800146ULL, NULL, NULL, OperandInfo139 },  // Inst #4035 = VPMULUDQrm
  { 4036,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0xbe9800145ULL, NULL, NULL, OperandInfo140 },  // Inst #4036 = VPMULUDQrr
  { 4037,	7,	1,	99,	0,	0|(1<<MCID::MayLoad), 0xbd7800146ULL, NULL, NULL, OperandInfo223 },  // Inst #4037 = VPORYrm
  { 4038,	3,	1,	100,	0,	0|(1<<MCID::Commutable), 0xbd7800145ULL, NULL, NULL, OperandInfo224 },  // Inst #4038 = VPORYrr
  { 4039,	7,	1,	99,	0,	0|(1<<MCID::MayLoad), 0xbd7800146ULL, NULL, NULL, OperandInfo139 },  // Inst #4039 = VPORrm
  { 4040,	3,	1,	100,	0,	0|(1<<MCID::Commutable), 0xbd7800145ULL, NULL, NULL, OperandInfo140 },  // Inst #4040 = VPORrr
  { 4041,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x42b47005406ULL, NULL, NULL, OperandInfo233 },  // Inst #4041 = VPPERMmr
  { 4042,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x62f47005406ULL, NULL, NULL, OperandInfo251 },  // Inst #4042 = VPPERMrm
  { 4043,	4,	1,	18,	0,	0, 0x42b47005405ULL, NULL, NULL, OperandInfo234 },  // Inst #4043 = VPPERMrr
  { 4044,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x40381005406ULL, NULL, NULL, OperandInfo49 },  // Inst #4044 = VPROTBmi
  { 4045,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x41321001506ULL, NULL, NULL, OperandInfo271 },  // Inst #4045 = VPROTBmr
  { 4046,	3,	1,	18,	0,	0, 0x40381005405ULL, NULL, NULL, OperandInfo50 },  // Inst #4046 = VPROTBri
  { 4047,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x40f21001506ULL, NULL, NULL, OperandInfo139 },  // Inst #4047 = VPROTBrm
  { 4048,	3,	1,	18,	0,	0, 0x41321001505ULL, NULL, NULL, OperandInfo140 },  // Inst #4048 = VPROTBrr
  { 4049,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x40385005406ULL, NULL, NULL, OperandInfo49 },  // Inst #4049 = VPROTDmi
  { 4050,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x41325001506ULL, NULL, NULL, OperandInfo271 },  // Inst #4050 = VPROTDmr
  { 4051,	3,	1,	18,	0,	0, 0x40385005405ULL, NULL, NULL, OperandInfo50 },  // Inst #4051 = VPROTDri
  { 4052,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x40f25001506ULL, NULL, NULL, OperandInfo139 },  // Inst #4052 = VPROTDrm
  { 4053,	3,	1,	18,	0,	0, 0x41325001505ULL, NULL, NULL, OperandInfo140 },  // Inst #4053 = VPROTDrr
  { 4054,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x40387005406ULL, NULL, NULL, OperandInfo49 },  // Inst #4054 = VPROTQmi
  { 4055,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x41327001506ULL, NULL, NULL, OperandInfo271 },  // Inst #4055 = VPROTQmr
  { 4056,	3,	1,	18,	0,	0, 0x40387005405ULL, NULL, NULL, OperandInfo50 },  // Inst #4056 = VPROTQri
  { 4057,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x40f27001506ULL, NULL, NULL, OperandInfo139 },  // Inst #4057 = VPROTQrm
  { 4058,	3,	1,	18,	0,	0, 0x41327001505ULL, NULL, NULL, OperandInfo140 },  // Inst #4058 = VPROTQrr
  { 4059,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x40383005406ULL, NULL, NULL, OperandInfo49 },  // Inst #4059 = VPROTWmi
  { 4060,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x41323001506ULL, NULL, NULL, OperandInfo271 },  // Inst #4060 = VPROTWmr
  { 4061,	3,	1,	18,	0,	0, 0x40383005405ULL, NULL, NULL, OperandInfo50 },  // Inst #4061 = VPROTWri
  { 4062,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x40f23001506ULL, NULL, NULL, OperandInfo139 },  // Inst #4062 = VPROTWrm
  { 4063,	3,	1,	18,	0,	0, 0x41323001505ULL, NULL, NULL, OperandInfo140 },  // Inst #4063 = VPROTWrr
  { 4064,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xbed800146ULL, NULL, NULL, OperandInfo223 },  // Inst #4064 = VPSADBWYrm
  { 4065,	3,	1,	132,	0,	0|(1<<MCID::Commutable), 0xbed800145ULL, NULL, NULL, OperandInfo224 },  // Inst #4065 = VPSADBWYrr
  { 4066,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xbed800146ULL, NULL, NULL, OperandInfo139 },  // Inst #4066 = VPSADBWrm
  { 4067,	3,	1,	132,	0,	0|(1<<MCID::Commutable), 0xbed800145ULL, NULL, NULL, OperandInfo140 },  // Inst #4067 = VPSADBWrr
  { 4068,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x41331001506ULL, NULL, NULL, OperandInfo271 },  // Inst #4068 = VPSHABmr
  { 4069,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x40f31001506ULL, NULL, NULL, OperandInfo139 },  // Inst #4069 = VPSHABrm
  { 4070,	3,	1,	18,	0,	0, 0x41331001505ULL, NULL, NULL, OperandInfo140 },  // Inst #4070 = VPSHABrr
  { 4071,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x41335001506ULL, NULL, NULL, OperandInfo271 },  // Inst #4071 = VPSHADmr
  { 4072,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x40f35001506ULL, NULL, NULL, OperandInfo139 },  // Inst #4072 = VPSHADrm
  { 4073,	3,	1,	18,	0,	0, 0x41335001505ULL, NULL, NULL, OperandInfo140 },  // Inst #4073 = VPSHADrr
  { 4074,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x41337001506ULL, NULL, NULL, OperandInfo271 },  // Inst #4074 = VPSHAQmr
  { 4075,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x40f37001506ULL, NULL, NULL, OperandInfo139 },  // Inst #4075 = VPSHAQrm
  { 4076,	3,	1,	18,	0,	0, 0x41337001505ULL, NULL, NULL, OperandInfo140 },  // Inst #4076 = VPSHAQrr
  { 4077,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x41333001506ULL, NULL, NULL, OperandInfo271 },  // Inst #4077 = VPSHAWmr
  { 4078,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x40f33001506ULL, NULL, NULL, OperandInfo139 },  // Inst #4078 = VPSHAWrm
  { 4079,	3,	1,	18,	0,	0, 0x41333001505ULL, NULL, NULL, OperandInfo140 },  // Inst #4079 = VPSHAWrr
  { 4080,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x41329001506ULL, NULL, NULL, OperandInfo271 },  // Inst #4080 = VPSHLBmr
  { 4081,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x40f29001506ULL, NULL, NULL, OperandInfo139 },  // Inst #4081 = VPSHLBrm
  { 4082,	3,	1,	18,	0,	0, 0x41329001505ULL, NULL, NULL, OperandInfo140 },  // Inst #4082 = VPSHLBrr
  { 4083,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x4132d001506ULL, NULL, NULL, OperandInfo271 },  // Inst #4083 = VPSHLDmr
  { 4084,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x40f2d001506ULL, NULL, NULL, OperandInfo139 },  // Inst #4084 = VPSHLDrm
  { 4085,	3,	1,	18,	0,	0, 0x4132d001505ULL, NULL, NULL, OperandInfo140 },  // Inst #4085 = VPSHLDrr
  { 4086,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x4132f001506ULL, NULL, NULL, OperandInfo271 },  // Inst #4086 = VPSHLQmr
  { 4087,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x40f2f001506ULL, NULL, NULL, OperandInfo139 },  // Inst #4087 = VPSHLQrm
  { 4088,	3,	1,	18,	0,	0, 0x4132f001505ULL, NULL, NULL, OperandInfo140 },  // Inst #4088 = VPSHLQrr
  { 4089,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x4132b001506ULL, NULL, NULL, OperandInfo271 },  // Inst #4089 = VPSHLWmr
  { 4090,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x40f2b001506ULL, NULL, NULL, OperandInfo139 },  // Inst #4090 = VPSHLWrm
  { 4091,	3,	1,	18,	0,	0, 0x4132b001505ULL, NULL, NULL, OperandInfo140 },  // Inst #4091 = VPSHLWrr
  { 4092,	7,	1,	177,	0,	0|(1<<MCID::MayLoad), 0xa01800d46ULL, NULL, NULL, OperandInfo223 },  // Inst #4092 = VPSHUFBYrm
  { 4093,	3,	1,	178,	0,	0, 0xa01800d45ULL, NULL, NULL, OperandInfo224 },  // Inst #4093 = VPSHUFBYrr
  { 4094,	7,	1,	184,	0,	0|(1<<MCID::MayLoad), 0xa01800d46ULL, NULL, NULL, OperandInfo139 },  // Inst #4094 = VPSHUFBrm
  { 4095,	3,	1,	185,	0,	0, 0xa01800d45ULL, NULL, NULL, OperandInfo140 },  // Inst #4095 = VPSHUFBrr
  { 4096,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x2e1804146ULL, NULL, NULL, OperandInfo267 },  // Inst #4096 = VPSHUFDYmi
  { 4097,	3,	1,	18,	0,	0, 0x2e1804145ULL, NULL, NULL, OperandInfo268 },  // Inst #4097 = VPSHUFDYri
  { 4098,	7,	1,	183,	0,	0|(1<<MCID::MayLoad), 0x2e1804146ULL, NULL, NULL, OperandInfo49 },  // Inst #4098 = VPSHUFDmi
  { 4099,	3,	1,	183,	0,	0, 0x2e1804145ULL, NULL, NULL, OperandInfo50 },  // Inst #4099 = VPSHUFDri
  { 4100,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x2e1804c06ULL, NULL, NULL, OperandInfo267 },  // Inst #4100 = VPSHUFHWYmi
  { 4101,	3,	1,	18,	0,	0, 0x2e1804c05ULL, NULL, NULL, OperandInfo268 },  // Inst #4101 = VPSHUFHWYri
  { 4102,	7,	1,	183,	0,	0|(1<<MCID::MayLoad), 0x2e1804c06ULL, NULL, NULL, OperandInfo49 },  // Inst #4102 = VPSHUFHWmi
  { 4103,	3,	1,	183,	0,	0, 0x2e1804c05ULL, NULL, NULL, OperandInfo50 },  // Inst #4103 = VPSHUFHWri
  { 4104,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x2e1804b06ULL, NULL, NULL, OperandInfo267 },  // Inst #4104 = VPSHUFLWYmi
  { 4105,	3,	1,	18,	0,	0, 0x2e1804b05ULL, NULL, NULL, OperandInfo268 },  // Inst #4105 = VPSHUFLWYri
  { 4106,	7,	1,	183,	0,	0|(1<<MCID::MayLoad), 0x2e1804b06ULL, NULL, NULL, OperandInfo49 },  // Inst #4106 = VPSHUFLWmi
  { 4107,	3,	1,	183,	0,	0, 0x2e1804b05ULL, NULL, NULL, OperandInfo50 },  // Inst #4107 = VPSHUFLWri
  { 4108,	7,	1,	177,	0,	0|(1<<MCID::MayLoad), 0xa11800d46ULL, NULL, NULL, OperandInfo223 },  // Inst #4108 = VPSIGNBYrm
  { 4109,	3,	1,	178,	0,	0, 0xa11800d45ULL, NULL, NULL, OperandInfo224 },  // Inst #4109 = VPSIGNBYrr
  { 4110,	7,	1,	186,	0,	0|(1<<MCID::MayLoad), 0xa11800d46ULL, NULL, NULL, OperandInfo139 },  // Inst #4110 = VPSIGNBrm
  { 4111,	3,	1,	187,	0,	0, 0xa11800d45ULL, NULL, NULL, OperandInfo140 },  // Inst #4111 = VPSIGNBrr
  { 4112,	7,	1,	177,	0,	0|(1<<MCID::MayLoad), 0xa15800d46ULL, NULL, NULL, OperandInfo223 },  // Inst #4112 = VPSIGNDYrm
  { 4113,	3,	1,	178,	0,	0, 0xa15800d45ULL, NULL, NULL, OperandInfo224 },  // Inst #4113 = VPSIGNDYrr
  { 4114,	7,	1,	186,	0,	0|(1<<MCID::MayLoad), 0xa15800d46ULL, NULL, NULL, OperandInfo139 },  // Inst #4114 = VPSIGNDrm
  { 4115,	3,	1,	187,	0,	0, 0xa15800d45ULL, NULL, NULL, OperandInfo140 },  // Inst #4115 = VPSIGNDrr
  { 4116,	7,	1,	177,	0,	0|(1<<MCID::MayLoad), 0xa13800d46ULL, NULL, NULL, OperandInfo223 },  // Inst #4116 = VPSIGNWYrm
  { 4117,	3,	1,	178,	0,	0, 0xa13800d45ULL, NULL, NULL, OperandInfo224 },  // Inst #4117 = VPSIGNWYrr
  { 4118,	7,	1,	186,	0,	0|(1<<MCID::MayLoad), 0xa13800d46ULL, NULL, NULL, OperandInfo139 },  // Inst #4118 = VPSIGNWrm
  { 4119,	3,	1,	187,	0,	0, 0xa13800d45ULL, NULL, NULL, OperandInfo140 },  // Inst #4119 = VPSIGNWrr
  { 4120,	3,	1,	18,	0,	0, 0xae7804157ULL, NULL, NULL, OperandInfo268 },  // Inst #4120 = VPSLLDQYri
  { 4121,	3,	1,	18,	0,	0, 0xae7804157ULL, NULL, NULL, OperandInfo50 },  // Inst #4121 = VPSLLDQri
  { 4122,	3,	1,	135,	0,	0, 0xae5804156ULL, NULL, NULL, OperandInfo268 },  // Inst #4122 = VPSLLDYri
  { 4123,	7,	1,	136,	0,	0|(1<<MCID::MayLoad), 0xbe5800146ULL, NULL, NULL, OperandInfo223 },  // Inst #4123 = VPSLLDYrm
  { 4124,	3,	1,	137,	0,	0, 0xbe5800145ULL, NULL, NULL, OperandInfo272 },  // Inst #4124 = VPSLLDYrr
  { 4125,	3,	1,	135,	0,	0, 0xae5804156ULL, NULL, NULL, OperandInfo50 },  // Inst #4125 = VPSLLDri
  { 4126,	7,	1,	136,	0,	0|(1<<MCID::MayLoad), 0xbe5800146ULL, NULL, NULL, OperandInfo139 },  // Inst #4126 = VPSLLDrm
  { 4127,	3,	1,	137,	0,	0, 0xbe5800145ULL, NULL, NULL, OperandInfo140 },  // Inst #4127 = VPSLLDrr
  { 4128,	3,	1,	135,	0,	0, 0xae7804156ULL, NULL, NULL, OperandInfo268 },  // Inst #4128 = VPSLLQYri
  { 4129,	7,	1,	136,	0,	0|(1<<MCID::MayLoad), 0xbe7800146ULL, NULL, NULL, OperandInfo223 },  // Inst #4129 = VPSLLQYrm
  { 4130,	3,	1,	137,	0,	0, 0xbe7800145ULL, NULL, NULL, OperandInfo272 },  // Inst #4130 = VPSLLQYrr
  { 4131,	3,	1,	135,	0,	0, 0xae7804156ULL, NULL, NULL, OperandInfo50 },  // Inst #4131 = VPSLLQri
  { 4132,	7,	1,	136,	0,	0|(1<<MCID::MayLoad), 0xbe7800146ULL, NULL, NULL, OperandInfo139 },  // Inst #4132 = VPSLLQrm
  { 4133,	3,	1,	137,	0,	0, 0xbe7800145ULL, NULL, NULL, OperandInfo140 },  // Inst #4133 = VPSLLQrr
  { 4134,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa8f800d46ULL, NULL, NULL, OperandInfo223 },  // Inst #4134 = VPSLLVDYrm
  { 4135,	3,	1,	18,	0,	0, 0xa8f800d45ULL, NULL, NULL, OperandInfo224 },  // Inst #4135 = VPSLLVDYrr
  { 4136,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa8f800d46ULL, NULL, NULL, OperandInfo139 },  // Inst #4136 = VPSLLVDrm
  { 4137,	3,	1,	18,	0,	0, 0xa8f800d45ULL, NULL, NULL, OperandInfo140 },  // Inst #4137 = VPSLLVDrr
  { 4138,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xe8f800d46ULL, NULL, NULL, OperandInfo223 },  // Inst #4138 = VPSLLVQYrm
  { 4139,	3,	1,	18,	0,	0, 0xe8f800d45ULL, NULL, NULL, OperandInfo224 },  // Inst #4139 = VPSLLVQYrr
  { 4140,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xe8f800d46ULL, NULL, NULL, OperandInfo139 },  // Inst #4140 = VPSLLVQrm
  { 4141,	3,	1,	18,	0,	0, 0xe8f800d45ULL, NULL, NULL, OperandInfo140 },  // Inst #4141 = VPSLLVQrr
  { 4142,	3,	1,	135,	0,	0, 0xae3804156ULL, NULL, NULL, OperandInfo268 },  // Inst #4142 = VPSLLWYri
  { 4143,	7,	1,	136,	0,	0|(1<<MCID::MayLoad), 0xbe3800146ULL, NULL, NULL, OperandInfo223 },  // Inst #4143 = VPSLLWYrm
  { 4144,	3,	1,	137,	0,	0, 0xbe3800145ULL, NULL, NULL, OperandInfo272 },  // Inst #4144 = VPSLLWYrr
  { 4145,	3,	1,	135,	0,	0, 0xae3804156ULL, NULL, NULL, OperandInfo50 },  // Inst #4145 = VPSLLWri
  { 4146,	7,	1,	136,	0,	0|(1<<MCID::MayLoad), 0xbe3800146ULL, NULL, NULL, OperandInfo139 },  // Inst #4146 = VPSLLWrm
  { 4147,	3,	1,	137,	0,	0, 0xbe3800145ULL, NULL, NULL, OperandInfo140 },  // Inst #4147 = VPSLLWrr
  { 4148,	3,	1,	135,	0,	0, 0xae5804154ULL, NULL, NULL, OperandInfo268 },  // Inst #4148 = VPSRADYri
  { 4149,	7,	1,	136,	0,	0|(1<<MCID::MayLoad), 0xbc5800146ULL, NULL, NULL, OperandInfo223 },  // Inst #4149 = VPSRADYrm
  { 4150,	3,	1,	137,	0,	0, 0xbc5800145ULL, NULL, NULL, OperandInfo272 },  // Inst #4150 = VPSRADYrr
  { 4151,	3,	1,	135,	0,	0, 0xae5804154ULL, NULL, NULL, OperandInfo50 },  // Inst #4151 = VPSRADri
  { 4152,	7,	1,	136,	0,	0|(1<<MCID::MayLoad), 0xbc5800146ULL, NULL, NULL, OperandInfo139 },  // Inst #4152 = VPSRADrm
  { 4153,	3,	1,	137,	0,	0, 0xbc5800145ULL, NULL, NULL, OperandInfo140 },  // Inst #4153 = VPSRADrr
  { 4154,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa8d800d46ULL, NULL, NULL, OperandInfo223 },  // Inst #4154 = VPSRAVDYrm
  { 4155,	3,	1,	18,	0,	0, 0xa8d800d45ULL, NULL, NULL, OperandInfo224 },  // Inst #4155 = VPSRAVDYrr
  { 4156,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa8d800d46ULL, NULL, NULL, OperandInfo139 },  // Inst #4156 = VPSRAVDrm
  { 4157,	3,	1,	18,	0,	0, 0xa8d800d45ULL, NULL, NULL, OperandInfo140 },  // Inst #4157 = VPSRAVDrr
  { 4158,	3,	1,	135,	0,	0, 0xae3804154ULL, NULL, NULL, OperandInfo268 },  // Inst #4158 = VPSRAWYri
  { 4159,	7,	1,	136,	0,	0|(1<<MCID::MayLoad), 0xbc3800146ULL, NULL, NULL, OperandInfo223 },  // Inst #4159 = VPSRAWYrm
  { 4160,	3,	1,	137,	0,	0, 0xbc3800145ULL, NULL, NULL, OperandInfo272 },  // Inst #4160 = VPSRAWYrr
  { 4161,	3,	1,	135,	0,	0, 0xae3804154ULL, NULL, NULL, OperandInfo50 },  // Inst #4161 = VPSRAWri
  { 4162,	7,	1,	136,	0,	0|(1<<MCID::MayLoad), 0xbc3800146ULL, NULL, NULL, OperandInfo139 },  // Inst #4162 = VPSRAWrm
  { 4163,	3,	1,	137,	0,	0, 0xbc3800145ULL, NULL, NULL, OperandInfo140 },  // Inst #4163 = VPSRAWrr
  { 4164,	3,	1,	18,	0,	0, 0xae7804153ULL, NULL, NULL, OperandInfo268 },  // Inst #4164 = VPSRLDQYri
  { 4165,	3,	1,	18,	0,	0, 0xae7804153ULL, NULL, NULL, OperandInfo50 },  // Inst #4165 = VPSRLDQri
  { 4166,	3,	1,	135,	0,	0, 0xae5804152ULL, NULL, NULL, OperandInfo268 },  // Inst #4166 = VPSRLDYri
  { 4167,	7,	1,	136,	0,	0|(1<<MCID::MayLoad), 0xba5800146ULL, NULL, NULL, OperandInfo223 },  // Inst #4167 = VPSRLDYrm
  { 4168,	3,	1,	137,	0,	0, 0xba5800145ULL, NULL, NULL, OperandInfo272 },  // Inst #4168 = VPSRLDYrr
  { 4169,	3,	1,	135,	0,	0, 0xae5804152ULL, NULL, NULL, OperandInfo50 },  // Inst #4169 = VPSRLDri
  { 4170,	7,	1,	136,	0,	0|(1<<MCID::MayLoad), 0xba5800146ULL, NULL, NULL, OperandInfo139 },  // Inst #4170 = VPSRLDrm
  { 4171,	3,	1,	137,	0,	0, 0xba5800145ULL, NULL, NULL, OperandInfo140 },  // Inst #4171 = VPSRLDrr
  { 4172,	3,	1,	135,	0,	0, 0xae7804152ULL, NULL, NULL, OperandInfo268 },  // Inst #4172 = VPSRLQYri
  { 4173,	7,	1,	136,	0,	0|(1<<MCID::MayLoad), 0xba7800146ULL, NULL, NULL, OperandInfo223 },  // Inst #4173 = VPSRLQYrm
  { 4174,	3,	1,	137,	0,	0, 0xba7800145ULL, NULL, NULL, OperandInfo272 },  // Inst #4174 = VPSRLQYrr
  { 4175,	3,	1,	135,	0,	0, 0xae7804152ULL, NULL, NULL, OperandInfo50 },  // Inst #4175 = VPSRLQri
  { 4176,	7,	1,	136,	0,	0|(1<<MCID::MayLoad), 0xba7800146ULL, NULL, NULL, OperandInfo139 },  // Inst #4176 = VPSRLQrm
  { 4177,	3,	1,	137,	0,	0, 0xba7800145ULL, NULL, NULL, OperandInfo140 },  // Inst #4177 = VPSRLQrr
  { 4178,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa8b800d46ULL, NULL, NULL, OperandInfo223 },  // Inst #4178 = VPSRLVDYrm
  { 4179,	3,	1,	18,	0,	0, 0xa8b800d45ULL, NULL, NULL, OperandInfo224 },  // Inst #4179 = VPSRLVDYrr
  { 4180,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xa8b800d46ULL, NULL, NULL, OperandInfo139 },  // Inst #4180 = VPSRLVDrm
  { 4181,	3,	1,	18,	0,	0, 0xa8b800d45ULL, NULL, NULL, OperandInfo140 },  // Inst #4181 = VPSRLVDrr
  { 4182,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xe8b800d46ULL, NULL, NULL, OperandInfo223 },  // Inst #4182 = VPSRLVQYrm
  { 4183,	3,	1,	18,	0,	0, 0xe8b800d45ULL, NULL, NULL, OperandInfo224 },  // Inst #4183 = VPSRLVQYrr
  { 4184,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xe8b800d46ULL, NULL, NULL, OperandInfo139 },  // Inst #4184 = VPSRLVQrm
  { 4185,	3,	1,	18,	0,	0, 0xe8b800d45ULL, NULL, NULL, OperandInfo140 },  // Inst #4185 = VPSRLVQrr
  { 4186,	3,	1,	135,	0,	0, 0xae3804152ULL, NULL, NULL, OperandInfo268 },  // Inst #4186 = VPSRLWYri
  { 4187,	7,	1,	136,	0,	0|(1<<MCID::MayLoad), 0xba3800146ULL, NULL, NULL, OperandInfo223 },  // Inst #4187 = VPSRLWYrm
  { 4188,	3,	1,	137,	0,	0, 0xba3800145ULL, NULL, NULL, OperandInfo272 },  // Inst #4188 = VPSRLWYrr
  { 4189,	3,	1,	135,	0,	0, 0xae3804152ULL, NULL, NULL, OperandInfo50 },  // Inst #4189 = VPSRLWri
  { 4190,	7,	1,	136,	0,	0|(1<<MCID::MayLoad), 0xba3800146ULL, NULL, NULL, OperandInfo139 },  // Inst #4190 = VPSRLWrm
  { 4191,	3,	1,	137,	0,	0, 0xba3800145ULL, NULL, NULL, OperandInfo140 },  // Inst #4191 = VPSRLWrr
  { 4192,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xbf1800146ULL, NULL, NULL, OperandInfo223 },  // Inst #4192 = VPSUBBYrm
  { 4193,	3,	1,	132,	0,	0, 0xbf1800145ULL, NULL, NULL, OperandInfo224 },  // Inst #4193 = VPSUBBYrr
  { 4194,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xbf1800146ULL, NULL, NULL, OperandInfo139 },  // Inst #4194 = VPSUBBrm
  { 4195,	3,	1,	132,	0,	0, 0xbf1800145ULL, NULL, NULL, OperandInfo140 },  // Inst #4195 = VPSUBBrr
  { 4196,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xbf5800146ULL, NULL, NULL, OperandInfo223 },  // Inst #4196 = VPSUBDYrm
  { 4197,	3,	1,	132,	0,	0, 0xbf5800145ULL, NULL, NULL, OperandInfo224 },  // Inst #4197 = VPSUBDYrr
  { 4198,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xbf5800146ULL, NULL, NULL, OperandInfo139 },  // Inst #4198 = VPSUBDrm
  { 4199,	3,	1,	132,	0,	0, 0xbf5800145ULL, NULL, NULL, OperandInfo140 },  // Inst #4199 = VPSUBDrr
  { 4200,	7,	1,	129,	0,	0|(1<<MCID::MayLoad), 0xbf7800146ULL, NULL, NULL, OperandInfo223 },  // Inst #4200 = VPSUBQYrm
  { 4201,	3,	1,	130,	0,	0, 0xbf7800145ULL, NULL, NULL, OperandInfo224 },  // Inst #4201 = VPSUBQYrr
  { 4202,	7,	1,	129,	0,	0|(1<<MCID::MayLoad), 0xbf7800146ULL, NULL, NULL, OperandInfo139 },  // Inst #4202 = VPSUBQrm
  { 4203,	3,	1,	130,	0,	0, 0xbf7800145ULL, NULL, NULL, OperandInfo140 },  // Inst #4203 = VPSUBQrr
  { 4204,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xbd1800146ULL, NULL, NULL, OperandInfo223 },  // Inst #4204 = VPSUBSBYrm
  { 4205,	3,	1,	132,	0,	0, 0xbd1800145ULL, NULL, NULL, OperandInfo224 },  // Inst #4205 = VPSUBSBYrr
  { 4206,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xbd1800146ULL, NULL, NULL, OperandInfo139 },  // Inst #4206 = VPSUBSBrm
  { 4207,	3,	1,	132,	0,	0, 0xbd1800145ULL, NULL, NULL, OperandInfo140 },  // Inst #4207 = VPSUBSBrr
  { 4208,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xbd3800146ULL, NULL, NULL, OperandInfo223 },  // Inst #4208 = VPSUBSWYrm
  { 4209,	3,	1,	132,	0,	0, 0xbd3800145ULL, NULL, NULL, OperandInfo224 },  // Inst #4209 = VPSUBSWYrr
  { 4210,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xbd3800146ULL, NULL, NULL, OperandInfo139 },  // Inst #4210 = VPSUBSWrm
  { 4211,	3,	1,	132,	0,	0, 0xbd3800145ULL, NULL, NULL, OperandInfo140 },  // Inst #4211 = VPSUBSWrr
  { 4212,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xbb1800146ULL, NULL, NULL, OperandInfo223 },  // Inst #4212 = VPSUBUSBYrm
  { 4213,	3,	1,	132,	0,	0, 0xbb1800145ULL, NULL, NULL, OperandInfo224 },  // Inst #4213 = VPSUBUSBYrr
  { 4214,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xbb1800146ULL, NULL, NULL, OperandInfo139 },  // Inst #4214 = VPSUBUSBrm
  { 4215,	3,	1,	132,	0,	0, 0xbb1800145ULL, NULL, NULL, OperandInfo140 },  // Inst #4215 = VPSUBUSBrr
  { 4216,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xbb3800146ULL, NULL, NULL, OperandInfo223 },  // Inst #4216 = VPSUBUSWYrm
  { 4217,	3,	1,	132,	0,	0, 0xbb3800145ULL, NULL, NULL, OperandInfo224 },  // Inst #4217 = VPSUBUSWYrr
  { 4218,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xbb3800146ULL, NULL, NULL, OperandInfo139 },  // Inst #4218 = VPSUBUSWrm
  { 4219,	3,	1,	132,	0,	0, 0xbb3800145ULL, NULL, NULL, OperandInfo140 },  // Inst #4219 = VPSUBUSWrr
  { 4220,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xbf3800146ULL, NULL, NULL, OperandInfo223 },  // Inst #4220 = VPSUBWYrm
  { 4221,	3,	1,	132,	0,	0, 0xbf3800145ULL, NULL, NULL, OperandInfo224 },  // Inst #4221 = VPSUBWYrr
  { 4222,	7,	1,	131,	0,	0|(1<<MCID::MayLoad), 0xbf3800146ULL, NULL, NULL, OperandInfo139 },  // Inst #4222 = VPSUBWrm
  { 4223,	3,	1,	132,	0,	0, 0xbf3800145ULL, NULL, NULL, OperandInfo140 },  // Inst #4223 = VPSUBWrr
  { 4224,	6,	0,	18,	0,	0|(1<<MCID::MayLoad), 0x22f800d46ULL, NULL, ImplicitList1, OperandInfo235 },  // Inst #4224 = VPTESTYrm
  { 4225,	2,	0,	18,	0,	0, 0x22f800d45ULL, NULL, ImplicitList1, OperandInfo239 },  // Inst #4225 = VPTESTYrr
  { 4226,	6,	0,	18,	0,	0|(1<<MCID::MayLoad), 0x22f800d46ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #4226 = VPTESTrm
  { 4227,	2,	0,	18,	0,	0, 0x22f800d45ULL, NULL, ImplicitList1, OperandInfo48 },  // Inst #4227 = VPTESTrr
  { 4228,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xad1800146ULL, NULL, NULL, OperandInfo223 },  // Inst #4228 = VPUNPCKHBWYrm
  { 4229,	3,	1,	18,	0,	0, 0xad1800145ULL, NULL, NULL, OperandInfo224 },  // Inst #4229 = VPUNPCKHBWYrr
  { 4230,	7,	1,	199,	0,	0|(1<<MCID::MayLoad), 0xad1800146ULL, NULL, NULL, OperandInfo139 },  // Inst #4230 = VPUNPCKHBWrm
  { 4231,	3,	1,	199,	0,	0, 0xad1800145ULL, NULL, NULL, OperandInfo140 },  // Inst #4231 = VPUNPCKHBWrr
  { 4232,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xad5800146ULL, NULL, NULL, OperandInfo223 },  // Inst #4232 = VPUNPCKHDQYrm
  { 4233,	3,	1,	18,	0,	0, 0xad5800145ULL, NULL, NULL, OperandInfo224 },  // Inst #4233 = VPUNPCKHDQYrr
  { 4234,	7,	1,	199,	0,	0|(1<<MCID::MayLoad), 0xad5800146ULL, NULL, NULL, OperandInfo139 },  // Inst #4234 = VPUNPCKHDQrm
  { 4235,	3,	1,	199,	0,	0, 0xad5800145ULL, NULL, NULL, OperandInfo140 },  // Inst #4235 = VPUNPCKHDQrr
  { 4236,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xadb800146ULL, NULL, NULL, OperandInfo223 },  // Inst #4236 = VPUNPCKHQDQYrm
  { 4237,	3,	1,	18,	0,	0, 0xadb800145ULL, NULL, NULL, OperandInfo224 },  // Inst #4237 = VPUNPCKHQDQYrr
  { 4238,	7,	1,	199,	0,	0|(1<<MCID::MayLoad), 0xadb800146ULL, NULL, NULL, OperandInfo139 },  // Inst #4238 = VPUNPCKHQDQrm
  { 4239,	3,	1,	199,	0,	0, 0xadb800145ULL, NULL, NULL, OperandInfo140 },  // Inst #4239 = VPUNPCKHQDQrr
  { 4240,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xad3800146ULL, NULL, NULL, OperandInfo223 },  // Inst #4240 = VPUNPCKHWDYrm
  { 4241,	3,	1,	18,	0,	0, 0xad3800145ULL, NULL, NULL, OperandInfo224 },  // Inst #4241 = VPUNPCKHWDYrr
  { 4242,	7,	1,	199,	0,	0|(1<<MCID::MayLoad), 0xad3800146ULL, NULL, NULL, OperandInfo139 },  // Inst #4242 = VPUNPCKHWDrm
  { 4243,	3,	1,	199,	0,	0, 0xad3800145ULL, NULL, NULL, OperandInfo140 },  // Inst #4243 = VPUNPCKHWDrr
  { 4244,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xac1800146ULL, NULL, NULL, OperandInfo223 },  // Inst #4244 = VPUNPCKLBWYrm
  { 4245,	3,	1,	18,	0,	0, 0xac1800145ULL, NULL, NULL, OperandInfo224 },  // Inst #4245 = VPUNPCKLBWYrr
  { 4246,	7,	1,	199,	0,	0|(1<<MCID::MayLoad), 0xac1800146ULL, NULL, NULL, OperandInfo139 },  // Inst #4246 = VPUNPCKLBWrm
  { 4247,	3,	1,	199,	0,	0, 0xac1800145ULL, NULL, NULL, OperandInfo140 },  // Inst #4247 = VPUNPCKLBWrr
  { 4248,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xac5800146ULL, NULL, NULL, OperandInfo223 },  // Inst #4248 = VPUNPCKLDQYrm
  { 4249,	3,	1,	18,	0,	0, 0xac5800145ULL, NULL, NULL, OperandInfo224 },  // Inst #4249 = VPUNPCKLDQYrr
  { 4250,	7,	1,	199,	0,	0|(1<<MCID::MayLoad), 0xac5800146ULL, NULL, NULL, OperandInfo139 },  // Inst #4250 = VPUNPCKLDQrm
  { 4251,	3,	1,	199,	0,	0, 0xac5800145ULL, NULL, NULL, OperandInfo140 },  // Inst #4251 = VPUNPCKLDQrr
  { 4252,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xad9800146ULL, NULL, NULL, OperandInfo223 },  // Inst #4252 = VPUNPCKLQDQYrm
  { 4253,	3,	1,	18,	0,	0, 0xad9800145ULL, NULL, NULL, OperandInfo224 },  // Inst #4253 = VPUNPCKLQDQYrr
  { 4254,	7,	1,	199,	0,	0|(1<<MCID::MayLoad), 0xad9800146ULL, NULL, NULL, OperandInfo139 },  // Inst #4254 = VPUNPCKLQDQrm
  { 4255,	3,	1,	199,	0,	0, 0xad9800145ULL, NULL, NULL, OperandInfo140 },  // Inst #4255 = VPUNPCKLQDQrr
  { 4256,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xac3800146ULL, NULL, NULL, OperandInfo223 },  // Inst #4256 = VPUNPCKLWDYrm
  { 4257,	3,	1,	18,	0,	0, 0xac3800145ULL, NULL, NULL, OperandInfo224 },  // Inst #4257 = VPUNPCKLWDYrr
  { 4258,	7,	1,	199,	0,	0|(1<<MCID::MayLoad), 0xac3800146ULL, NULL, NULL, OperandInfo139 },  // Inst #4258 = VPUNPCKLWDrm
  { 4259,	3,	1,	199,	0,	0, 0xac3800145ULL, NULL, NULL, OperandInfo140 },  // Inst #4259 = VPUNPCKLWDrr
  { 4260,	7,	1,	99,	0,	0|(1<<MCID::MayLoad), 0xbdf800146ULL, NULL, NULL, OperandInfo223 },  // Inst #4260 = VPXORYrm
  { 4261,	3,	1,	100,	0,	0|(1<<MCID::Commutable), 0xbdf800145ULL, NULL, NULL, OperandInfo224 },  // Inst #4261 = VPXORYrr
  { 4262,	7,	1,	99,	0,	0|(1<<MCID::MayLoad), 0xbdf800146ULL, NULL, NULL, OperandInfo139 },  // Inst #4262 = VPXORrm
  { 4263,	3,	1,	100,	0,	0|(1<<MCID::Commutable), 0xbdf800145ULL, NULL, NULL, OperandInfo140 },  // Inst #4263 = VPXORrr
  { 4264,	6,	1,	188,	0,	0|(1<<MCID::MayLoad), 0x2a6800106ULL, NULL, NULL, OperandInfo235 },  // Inst #4264 = VRCPPSYm
  { 4265,	6,	1,	188,	0,	0|(1<<MCID::MayLoad), 0x2a6800106ULL, NULL, NULL, OperandInfo235 },  // Inst #4265 = VRCPPSYm_Int
  { 4266,	2,	1,	189,	0,	0, 0x2a6800105ULL, NULL, NULL, OperandInfo239 },  // Inst #4266 = VRCPPSYr
  { 4267,	2,	1,	189,	0,	0, 0x2a6800105ULL, NULL, NULL, OperandInfo239 },  // Inst #4267 = VRCPPSYr_Int
  { 4268,	6,	1,	188,	0,	0|(1<<MCID::MayLoad), 0x2a6800106ULL, NULL, NULL, OperandInfo47 },  // Inst #4268 = VRCPPSm
  { 4269,	6,	1,	188,	0,	0|(1<<MCID::MayLoad), 0x2a6800106ULL, NULL, NULL, OperandInfo47 },  // Inst #4269 = VRCPPSm_Int
  { 4270,	2,	1,	189,	0,	0, 0x2a6800105ULL, NULL, NULL, OperandInfo48 },  // Inst #4270 = VRCPPSr
  { 4271,	2,	1,	189,	0,	0, 0x2a6800105ULL, NULL, NULL, OperandInfo48 },  // Inst #4271 = VRCPPSr_Int
  { 4272,	7,	1,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x8aa6000c06ULL, NULL, NULL, OperandInfo227 },  // Inst #4272 = VRCPSSm
  { 4273,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8aa6000c06ULL, NULL, NULL, OperandInfo139 },  // Inst #4273 = VRCPSSm_Int
  { 4274,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8aa6000c05ULL, NULL, NULL, OperandInfo228 },  // Inst #4274 = VRCPSSr
  { 4275,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x213004e46ULL, NULL, NULL, OperandInfo49 },  // Inst #4275 = VROUNDPDm
  { 4276,	3,	1,	18,	0,	0, 0x213004e45ULL, NULL, NULL, OperandInfo50 },  // Inst #4276 = VROUNDPDr
  { 4277,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x210804e46ULL, NULL, NULL, OperandInfo49 },  // Inst #4277 = VROUNDPSm
  { 4278,	3,	1,	18,	0,	0, 0x210804e45ULL, NULL, NULL, OperandInfo50 },  // Inst #4278 = VROUNDPSr
  { 4279,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x8a16004e46ULL, NULL, NULL, OperandInfo138 },  // Inst #4279 = VROUNDSDm
  { 4280,	4,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8a16004e45ULL, NULL, NULL, OperandInfo81 },  // Inst #4280 = VROUNDSDr
  { 4281,	4,	1,	18,	0,	0, 0x8a16004e45ULL, NULL, NULL, OperandInfo88 },  // Inst #4281 = VROUNDSDr_Int
  { 4282,	8,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x8a14004e46ULL, NULL, NULL, OperandInfo138 },  // Inst #4282 = VROUNDSSm
  { 4283,	4,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8a14004e45ULL, NULL, NULL, OperandInfo80 },  // Inst #4283 = VROUNDSSr
  { 4284,	4,	1,	18,	0,	0, 0x8a14004e45ULL, NULL, NULL, OperandInfo88 },  // Inst #4284 = VROUNDSSr_Int
  { 4285,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x213004e46ULL, NULL, NULL, OperandInfo267 },  // Inst #4285 = VROUNDYPDm
  { 4286,	3,	1,	18,	0,	0, 0x213004e45ULL, NULL, NULL, OperandInfo268 },  // Inst #4286 = VROUNDYPDr
  { 4287,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x210804e46ULL, NULL, NULL, OperandInfo267 },  // Inst #4287 = VROUNDYPSm
  { 4288,	3,	1,	18,	0,	0, 0x210804e45ULL, NULL, NULL, OperandInfo268 },  // Inst #4288 = VROUNDYPSr
  { 4289,	6,	1,	194,	0,	0|(1<<MCID::MayLoad), 0x2a4800106ULL, NULL, NULL, OperandInfo235 },  // Inst #4289 = VRSQRTPSYm
  { 4290,	6,	1,	194,	0,	0|(1<<MCID::MayLoad), 0x2a4800106ULL, NULL, NULL, OperandInfo235 },  // Inst #4290 = VRSQRTPSYm_Int
  { 4291,	2,	1,	195,	0,	0, 0x2a4800105ULL, NULL, NULL, OperandInfo239 },  // Inst #4291 = VRSQRTPSYr
  { 4292,	2,	1,	195,	0,	0, 0x2a4800105ULL, NULL, NULL, OperandInfo239 },  // Inst #4292 = VRSQRTPSYr_Int
  { 4293,	6,	1,	194,	0,	0|(1<<MCID::MayLoad), 0x2a4800106ULL, NULL, NULL, OperandInfo47 },  // Inst #4293 = VRSQRTPSm
  { 4294,	6,	1,	194,	0,	0|(1<<MCID::MayLoad), 0x2a4800106ULL, NULL, NULL, OperandInfo47 },  // Inst #4294 = VRSQRTPSm_Int
  { 4295,	2,	1,	195,	0,	0, 0x2a4800105ULL, NULL, NULL, OperandInfo48 },  // Inst #4295 = VRSQRTPSr
  { 4296,	2,	1,	195,	0,	0, 0x2a4800105ULL, NULL, NULL, OperandInfo48 },  // Inst #4296 = VRSQRTPSr_Int
  { 4297,	7,	1,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x8aa4000c06ULL, NULL, NULL, OperandInfo227 },  // Inst #4297 = VRSQRTSSm
  { 4298,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8aa4000c06ULL, NULL, NULL, OperandInfo139 },  // Inst #4298 = VRSQRTSSm_Int
  { 4299,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8aa4000c05ULL, NULL, NULL, OperandInfo228 },  // Inst #4299 = VRSQRTSSr
  { 4300,	8,	1,	193,	0,	0|(1<<MCID::MayLoad), 0xb8d004146ULL, NULL, NULL, OperandInfo230 },  // Inst #4300 = VSHUFPDYrmi
  { 4301,	4,	1,	193,	0,	0, 0xb8d004145ULL, NULL, NULL, OperandInfo89 },  // Inst #4301 = VSHUFPDYrri
  { 4302,	8,	1,	193,	0,	0|(1<<MCID::MayLoad), 0xb8d004146ULL, NULL, NULL, OperandInfo138 },  // Inst #4302 = VSHUFPDrmi
  { 4303,	4,	1,	193,	0,	0, 0xb8d004145ULL, NULL, NULL, OperandInfo88 },  // Inst #4303 = VSHUFPDrri
  { 4304,	8,	1,	193,	0,	0|(1<<MCID::MayLoad), 0xb8c804106ULL, NULL, NULL, OperandInfo230 },  // Inst #4304 = VSHUFPSYrmi
  { 4305,	4,	1,	193,	0,	0, 0xb8c804105ULL, NULL, NULL, OperandInfo89 },  // Inst #4305 = VSHUFPSYrri
  { 4306,	8,	1,	193,	0,	0|(1<<MCID::MayLoad), 0xb8c804106ULL, NULL, NULL, OperandInfo138 },  // Inst #4306 = VSHUFPSrmi
  { 4307,	4,	1,	193,	0,	0, 0xb8c804105ULL, NULL, NULL, OperandInfo88 },  // Inst #4307 = VSHUFPSrri
  { 4308,	6,	1,	194,	0,	0|(1<<MCID::MayLoad), 0x2a3000146ULL, NULL, NULL, OperandInfo235 },  // Inst #4308 = VSQRTPDYm
  { 4309,	6,	1,	194,	0,	0|(1<<MCID::MayLoad), 0x2a3000146ULL, NULL, NULL, OperandInfo235 },  // Inst #4309 = VSQRTPDYm_Int
  { 4310,	2,	1,	195,	0,	0, 0x2a3000145ULL, NULL, NULL, OperandInfo239 },  // Inst #4310 = VSQRTPDYr
  { 4311,	2,	1,	195,	0,	0, 0x2a3000145ULL, NULL, NULL, OperandInfo239 },  // Inst #4311 = VSQRTPDYr_Int
  { 4312,	6,	1,	194,	0,	0|(1<<MCID::MayLoad), 0x2a3000146ULL, NULL, NULL, OperandInfo47 },  // Inst #4312 = VSQRTPDm
  { 4313,	6,	1,	194,	0,	0|(1<<MCID::MayLoad), 0x2a3000146ULL, NULL, NULL, OperandInfo47 },  // Inst #4313 = VSQRTPDm_Int
  { 4314,	2,	1,	195,	0,	0, 0x2a3000145ULL, NULL, NULL, OperandInfo48 },  // Inst #4314 = VSQRTPDr
  { 4315,	2,	1,	195,	0,	0, 0x2a3000145ULL, NULL, NULL, OperandInfo48 },  // Inst #4315 = VSQRTPDr_Int
  { 4316,	6,	1,	194,	0,	0|(1<<MCID::MayLoad), 0x2a2800106ULL, NULL, NULL, OperandInfo235 },  // Inst #4316 = VSQRTPSYm
  { 4317,	6,	1,	194,	0,	0|(1<<MCID::MayLoad), 0x2a2800106ULL, NULL, NULL, OperandInfo235 },  // Inst #4317 = VSQRTPSYm_Int
  { 4318,	2,	1,	195,	0,	0, 0x2a2800105ULL, NULL, NULL, OperandInfo239 },  // Inst #4318 = VSQRTPSYr
  { 4319,	2,	1,	195,	0,	0, 0x2a2800105ULL, NULL, NULL, OperandInfo239 },  // Inst #4319 = VSQRTPSYr_Int
  { 4320,	6,	1,	194,	0,	0|(1<<MCID::MayLoad), 0x2a2800106ULL, NULL, NULL, OperandInfo47 },  // Inst #4320 = VSQRTPSm
  { 4321,	6,	1,	194,	0,	0|(1<<MCID::MayLoad), 0x2a2800106ULL, NULL, NULL, OperandInfo47 },  // Inst #4321 = VSQRTPSm_Int
  { 4322,	2,	1,	195,	0,	0, 0x2a2800105ULL, NULL, NULL, OperandInfo48 },  // Inst #4322 = VSQRTPSr
  { 4323,	2,	1,	195,	0,	0, 0x2a2800105ULL, NULL, NULL, OperandInfo48 },  // Inst #4323 = VSQRTPSr_Int
  { 4324,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x8aa2000b06ULL, NULL, NULL, OperandInfo225 },  // Inst #4324 = VSQRTSDm
  { 4325,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8aa2000b06ULL, NULL, NULL, OperandInfo139 },  // Inst #4325 = VSQRTSDm_Int
  { 4326,	3,	1,	18,	0,	0, 0x8aa2000b05ULL, NULL, NULL, OperandInfo226 },  // Inst #4326 = VSQRTSDr
  { 4327,	7,	1,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x8aa2000c06ULL, NULL, NULL, OperandInfo227 },  // Inst #4327 = VSQRTSSm
  { 4328,	7,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8aa2000c06ULL, NULL, NULL, OperandInfo139 },  // Inst #4328 = VSQRTSSm_Int
  { 4329,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x8aa2000c05ULL, NULL, NULL, OperandInfo228 },  // Inst #4329 = VSQRTSSr
  { 4330,	5,	0,	198,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x35c80011bULL, NULL, NULL, OperandInfo38 },  // Inst #4330 = VSTMXCSR
  { 4331,	7,	1,	95,	0,	0|(1<<MCID::MayLoad), 0xab9000146ULL, NULL, NULL, OperandInfo223 },  // Inst #4331 = VSUBPDYrm
  { 4332,	3,	1,	96,	0,	0, 0xab9000145ULL, NULL, NULL, OperandInfo224 },  // Inst #4332 = VSUBPDYrr
  { 4333,	7,	1,	95,	0,	0|(1<<MCID::MayLoad), 0xab9000146ULL, NULL, NULL, OperandInfo139 },  // Inst #4333 = VSUBPDrm
  { 4334,	3,	1,	96,	0,	0, 0xab9000145ULL, NULL, NULL, OperandInfo140 },  // Inst #4334 = VSUBPDrr
  { 4335,	7,	1,	91,	0,	0|(1<<MCID::MayLoad), 0xab8800106ULL, NULL, NULL, OperandInfo223 },  // Inst #4335 = VSUBPSYrm
  { 4336,	3,	1,	92,	0,	0, 0xab8800105ULL, NULL, NULL, OperandInfo224 },  // Inst #4336 = VSUBPSYrr
  { 4337,	7,	1,	91,	0,	0|(1<<MCID::MayLoad), 0xab8800106ULL, NULL, NULL, OperandInfo139 },  // Inst #4337 = VSUBPSrm
  { 4338,	3,	1,	92,	0,	0, 0xab8800105ULL, NULL, NULL, OperandInfo140 },  // Inst #4338 = VSUBPSrr
  { 4339,	7,	1,	97,	0,	0|(1<<MCID::MayLoad), 0x8ab8000b06ULL, NULL, NULL, OperandInfo225 },  // Inst #4339 = VSUBSDrm
  { 4340,	7,	1,	97,	0,	0|(1<<MCID::MayLoad), 0x8ab8000b06ULL, NULL, NULL, OperandInfo139 },  // Inst #4340 = VSUBSDrm_Int
  { 4341,	3,	1,	98,	0,	0, 0x8ab8000b05ULL, NULL, NULL, OperandInfo226 },  // Inst #4341 = VSUBSDrr
  { 4342,	3,	1,	98,	0,	0, 0x8ab8000b05ULL, NULL, NULL, OperandInfo140 },  // Inst #4342 = VSUBSDrr_Int
  { 4343,	7,	1,	93,	0,	0|(1<<MCID::MayLoad), 0x8ab8000c06ULL, NULL, NULL, OperandInfo227 },  // Inst #4343 = VSUBSSrm
  { 4344,	7,	1,	93,	0,	0|(1<<MCID::MayLoad), 0x8ab8000c06ULL, NULL, NULL, OperandInfo139 },  // Inst #4344 = VSUBSSrm_Int
  { 4345,	3,	1,	94,	0,	0, 0x8ab8000c05ULL, NULL, NULL, OperandInfo228 },  // Inst #4345 = VSUBSSrr
  { 4346,	3,	1,	94,	0,	0, 0x8ab8000c05ULL, NULL, NULL, OperandInfo140 },  // Inst #4346 = VSUBSSrr_Int
  { 4347,	6,	0,	18,	0,	0|(1<<MCID::MayLoad), 0x21f000d46ULL, NULL, ImplicitList1, OperandInfo235 },  // Inst #4347 = VTESTPDYrm
  { 4348,	2,	0,	18,	0,	0, 0x21f000d45ULL, NULL, ImplicitList1, OperandInfo239 },  // Inst #4348 = VTESTPDYrr
  { 4349,	6,	0,	18,	0,	0|(1<<MCID::MayLoad), 0x21f000d46ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #4349 = VTESTPDrm
  { 4350,	2,	0,	18,	0,	0, 0x21f000d45ULL, NULL, ImplicitList1, OperandInfo48 },  // Inst #4350 = VTESTPDrr
  { 4351,	6,	0,	18,	0,	0|(1<<MCID::MayLoad), 0x21c800d46ULL, NULL, ImplicitList1, OperandInfo235 },  // Inst #4351 = VTESTPSYrm
  { 4352,	2,	0,	18,	0,	0, 0x21c800d45ULL, NULL, ImplicitList1, OperandInfo239 },  // Inst #4352 = VTESTPSYrr
  { 4353,	6,	0,	18,	0,	0|(1<<MCID::MayLoad), 0x21c800d46ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #4353 = VTESTPSrm
  { 4354,	2,	0,	18,	0,	0, 0x21c800d45ULL, NULL, ImplicitList1, OperandInfo48 },  // Inst #4354 = VTESTPSrr
  { 4355,	6,	0,	103,	0,	0|(1<<MCID::MayLoad), 0x825d000146ULL, NULL, ImplicitList1, OperandInfo103 },  // Inst #4355 = VUCOMISDrm
  { 4356,	2,	0,	104,	0,	0, 0x825d000145ULL, NULL, ImplicitList1, OperandInfo125 },  // Inst #4356 = VUCOMISDrr
  { 4357,	6,	0,	103,	0,	0|(1<<MCID::MayLoad), 0x825c800106ULL, NULL, ImplicitList1, OperandInfo101 },  // Inst #4357 = VUCOMISSrm
  { 4358,	2,	0,	104,	0,	0, 0x825c800105ULL, NULL, ImplicitList1, OperandInfo126 },  // Inst #4358 = VUCOMISSrr
  { 4359,	7,	1,	199,	0,	0|(1<<MCID::MayLoad), 0xa2b000146ULL, NULL, NULL, OperandInfo223 },  // Inst #4359 = VUNPCKHPDYrm
  { 4360,	3,	1,	199,	0,	0, 0xa2b000145ULL, NULL, NULL, OperandInfo224 },  // Inst #4360 = VUNPCKHPDYrr
  { 4361,	7,	1,	199,	0,	0|(1<<MCID::MayLoad), 0xa2b000146ULL, NULL, NULL, OperandInfo139 },  // Inst #4361 = VUNPCKHPDrm
  { 4362,	3,	1,	199,	0,	0, 0xa2b000145ULL, NULL, NULL, OperandInfo140 },  // Inst #4362 = VUNPCKHPDrr
  { 4363,	7,	1,	199,	0,	0|(1<<MCID::MayLoad), 0xa2a800106ULL, NULL, NULL, OperandInfo223 },  // Inst #4363 = VUNPCKHPSYrm
  { 4364,	3,	1,	199,	0,	0, 0xa2a800105ULL, NULL, NULL, OperandInfo224 },  // Inst #4364 = VUNPCKHPSYrr
  { 4365,	7,	1,	199,	0,	0|(1<<MCID::MayLoad), 0xa2a800106ULL, NULL, NULL, OperandInfo139 },  // Inst #4365 = VUNPCKHPSrm
  { 4366,	3,	1,	199,	0,	0, 0xa2a800105ULL, NULL, NULL, OperandInfo140 },  // Inst #4366 = VUNPCKHPSrr
  { 4367,	7,	1,	199,	0,	0|(1<<MCID::MayLoad), 0xa29000146ULL, NULL, NULL, OperandInfo223 },  // Inst #4367 = VUNPCKLPDYrm
  { 4368,	3,	1,	199,	0,	0, 0xa29000145ULL, NULL, NULL, OperandInfo224 },  // Inst #4368 = VUNPCKLPDYrr
  { 4369,	7,	1,	199,	0,	0|(1<<MCID::MayLoad), 0xa29000146ULL, NULL, NULL, OperandInfo139 },  // Inst #4369 = VUNPCKLPDrm
  { 4370,	3,	1,	199,	0,	0, 0xa29000145ULL, NULL, NULL, OperandInfo140 },  // Inst #4370 = VUNPCKLPDrr
  { 4371,	7,	1,	199,	0,	0|(1<<MCID::MayLoad), 0xa28800106ULL, NULL, NULL, OperandInfo223 },  // Inst #4371 = VUNPCKLPSYrm
  { 4372,	3,	1,	199,	0,	0, 0xa28800105ULL, NULL, NULL, OperandInfo224 },  // Inst #4372 = VUNPCKLPSYrr
  { 4373,	7,	1,	199,	0,	0|(1<<MCID::MayLoad), 0xa28800106ULL, NULL, NULL, OperandInfo139 },  // Inst #4373 = VUNPCKLPSrm
  { 4374,	3,	1,	199,	0,	0, 0xa28800105ULL, NULL, NULL, OperandInfo140 },  // Inst #4374 = VUNPCKLPSrr
  { 4375,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xaaf000146ULL, NULL, NULL, OperandInfo223 },  // Inst #4375 = VXORPDYrm
  { 4376,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0xaaf000145ULL, NULL, NULL, OperandInfo224 },  // Inst #4376 = VXORPDYrr
  { 4377,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xaaf000146ULL, NULL, NULL, OperandInfo139 },  // Inst #4377 = VXORPDrm
  { 4378,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0xaaf000145ULL, NULL, NULL, OperandInfo140 },  // Inst #4378 = VXORPDrr
  { 4379,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xaae800106ULL, NULL, NULL, OperandInfo223 },  // Inst #4379 = VXORPSYrm
  { 4380,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0xaae800105ULL, NULL, NULL, OperandInfo224 },  // Inst #4380 = VXORPSYrr
  { 4381,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xaae800106ULL, NULL, NULL, OperandInfo139 },  // Inst #4381 = VXORPSrm
  { 4382,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0xaae800105ULL, NULL, NULL, OperandInfo140 },  // Inst #4382 = VXORPSrr
  { 4383,	0,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x42ee000101ULL, NULL, ImplicitList73, 0 },  // Inst #4383 = VZEROALL
  { 4384,	0,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ee000101ULL, NULL, ImplicitList73, 0 },  // Inst #4384 = VZEROUPPER
  { 4385,	1,	1,	18,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::FoldableAsLoad)|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo62 },  // Inst #4385 = V_SET0
  { 4386,	1,	1,	18,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0xed800160ULL, NULL, NULL, OperandInfo62 },  // Inst #4386 = V_SETALLONES
  { 4387,	1,	0,	7,	0,	0|(1<<MCID::Call)|(1<<MCID::Variadic)|(1<<MCID::UnmodeledSideEffects), 0x1d0018001ULL, ImplicitList8, ImplicitList74, OperandInfo75 },  // Inst #4387 = W64ALLOCA
  { 4388,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x136000001ULL, NULL, NULL, 0 },  // Inst #4388 = WAIT
  { 4389,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x12000101ULL, NULL, NULL, 0 },  // Inst #4389 = WBINVD
  { 4390,	0,	0,	18,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList6, ImplicitList62, 0 },  // Inst #4390 = WIN_ALLOCA
  { 4391,	1,	0,	18,	0,	0, 0xe0000ULL, NULL, ImplicitList16, OperandInfo144 },  // Inst #4391 = WIN_FTOL_32
  { 4392,	1,	0,	18,	0,	0, 0xe0000ULL, NULL, ImplicitList16, OperandInfo145 },  // Inst #4392 = WIN_FTOL_64
  { 4393,	1,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x15c000c12ULL, NULL, NULL, OperandInfo74 },  // Inst #4393 = WRFSBASE
  { 4394,	1,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x15c002c12ULL, NULL, NULL, OperandInfo76 },  // Inst #4394 = WRFSBASE64
  { 4395,	1,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x15c000c13ULL, NULL, NULL, OperandInfo74 },  // Inst #4395 = WRGSBASE
  { 4396,	1,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x15c002c13ULL, NULL, NULL, OperandInfo76 },  // Inst #4396 = WRGSBASE64
  { 4397,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x60000101ULL, NULL, NULL, 0 },  // Inst #4397 = WRMSR
  { 4398,	6,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x182000144ULL, NULL, NULL, OperandInfo16 },  // Inst #4398 = XADD16rm
  { 4399,	2,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x182000143ULL, NULL, NULL, OperandInfo55 },  // Inst #4399 = XADD16rr
  { 4400,	6,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x182000104ULL, NULL, NULL, OperandInfo20 },  // Inst #4400 = XADD32rm
  { 4401,	2,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x182000103ULL, NULL, NULL, OperandInfo67 },  // Inst #4401 = XADD32rr
  { 4402,	6,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x182002104ULL, NULL, NULL, OperandInfo24 },  // Inst #4402 = XADD64rm
  { 4403,	2,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x182002103ULL, NULL, NULL, OperandInfo68 },  // Inst #4403 = XADD64rr
  { 4404,	6,	0,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x180000104ULL, NULL, NULL, OperandInfo28 },  // Inst #4404 = XADD8rm
  { 4405,	2,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x180000103ULL, NULL, NULL, OperandInfo91 },  // Inst #4405 = XADD8rr
  { 4406,	1,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x120000042ULL, NULL, NULL, OperandInfo115 },  // Inst #4406 = XCHG16ar
  { 4407,	7,	1,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10e000046ULL, NULL, NULL, OperandInfo18 },  // Inst #4407 = XCHG16rm
  { 4408,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x10e000045ULL, NULL, NULL, OperandInfo19 },  // Inst #4408 = XCHG16rr
  { 4409,	1,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x120000002ULL, NULL, NULL, OperandInfo74 },  // Inst #4409 = XCHG32ar
  { 4410,	1,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x120000002ULL, NULL, NULL, OperandInfo273 },  // Inst #4410 = XCHG32ar64
  { 4411,	7,	1,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10e000006ULL, NULL, NULL, OperandInfo22 },  // Inst #4411 = XCHG32rm
  { 4412,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x10e000005ULL, NULL, NULL, OperandInfo23 },  // Inst #4412 = XCHG32rr
  { 4413,	1,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x120002002ULL, NULL, NULL, OperandInfo76 },  // Inst #4413 = XCHG64ar
  { 4414,	7,	1,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10e002006ULL, NULL, NULL, OperandInfo26 },  // Inst #4414 = XCHG64rm
  { 4415,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x10e002005ULL, NULL, NULL, OperandInfo27 },  // Inst #4415 = XCHG64rr
  { 4416,	7,	1,	18,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10c000006ULL, NULL, NULL, OperandInfo30 },  // Inst #4416 = XCHG8rm
  { 4417,	3,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x10c000005ULL, NULL, NULL, OperandInfo31 },  // Inst #4417 = XCHG8rr
  { 4418,	1,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x190000402ULL, NULL, NULL, OperandInfo39 },  // Inst #4418 = XCH_F
  { 4419,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a0001001ULL, ImplicitList75, ImplicitList76, 0 },  // Inst #4419 = XCRYPTCBC
  { 4420,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1c0001001ULL, ImplicitList75, ImplicitList76, 0 },  // Inst #4420 = XCRYPTCFB
  { 4421,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1b0001001ULL, ImplicitList75, ImplicitList76, 0 },  // Inst #4421 = XCRYPTCTR
  { 4422,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x190001001ULL, ImplicitList75, ImplicitList76, 0 },  // Inst #4422 = XCRYPTECB
  { 4423,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1d0001001ULL, ImplicitList75, ImplicitList76, 0 },  // Inst #4423 = XCRYPTOFB
  { 4424,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x200012dULL, ImplicitList26, ImplicitList77, 0 },  // Inst #4424 = XGETBV
  { 4425,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ae000001ULL, NULL, NULL, 0 },  // Inst #4425 = XLAT
  { 4426,	1,	0,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x6a00c041ULL, ImplicitList2, ImplicitList1, OperandInfo2 },  // Inst #4426 = XOR16i16
  { 4427,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10200c05eULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #4427 = XOR16mi
  { 4428,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10600405eULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #4428 = XOR16mi8
  { 4429,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x62000044ULL, NULL, ImplicitList1, OperandInfo16 },  // Inst #4429 = XOR16mr
  { 4430,	3,	1,	3,	0,	0, 0x10200c056ULL, NULL, ImplicitList1, OperandInfo17 },  // Inst #4430 = XOR16ri
  { 4431,	3,	1,	3,	0,	0, 0x106004056ULL, NULL, ImplicitList1, OperandInfo17 },  // Inst #4431 = XOR16ri8
  { 4432,	7,	1,	3,	0,	0|(1<<MCID::MayLoad), 0x66000046ULL, NULL, ImplicitList1, OperandInfo18 },  // Inst #4432 = XOR16rm
  { 4433,	3,	1,	3,	0,	0|(1<<MCID::Commutable), 0x62000043ULL, NULL, ImplicitList1, OperandInfo19 },  // Inst #4433 = XOR16rr
  { 4434,	3,	1,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x66000045ULL, NULL, ImplicitList1, OperandInfo19 },  // Inst #4434 = XOR16rr_REV
  { 4435,	1,	0,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x6a014001ULL, ImplicitList3, ImplicitList1, OperandInfo2 },  // Inst #4435 = XOR32i32
  { 4436,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10201401eULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #4436 = XOR32mi
  { 4437,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10600401eULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #4437 = XOR32mi8
  { 4438,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x62000004ULL, NULL, ImplicitList1, OperandInfo20 },  // Inst #4438 = XOR32mr
  { 4439,	3,	1,	3,	0,	0, 0x102014016ULL, NULL, ImplicitList1, OperandInfo21 },  // Inst #4439 = XOR32ri
  { 4440,	3,	1,	3,	0,	0, 0x106004016ULL, NULL, ImplicitList1, OperandInfo21 },  // Inst #4440 = XOR32ri8
  { 4441,	7,	1,	3,	0,	0|(1<<MCID::MayLoad), 0x66000006ULL, NULL, ImplicitList1, OperandInfo22 },  // Inst #4441 = XOR32rm
  { 4442,	3,	1,	3,	0,	0|(1<<MCID::Commutable), 0x62000003ULL, NULL, ImplicitList1, OperandInfo23 },  // Inst #4442 = XOR32rr
  { 4443,	3,	1,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x66000005ULL, NULL, ImplicitList1, OperandInfo23 },  // Inst #4443 = XOR32rr_REV
  { 4444,	1,	0,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x6a016001ULL, ImplicitList4, ImplicitList1, OperandInfo2 },  // Inst #4444 = XOR64i32
  { 4445,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10201601eULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #4445 = XOR64mi32
  { 4446,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10600601eULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #4446 = XOR64mi8
  { 4447,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x62002004ULL, NULL, ImplicitList1, OperandInfo24 },  // Inst #4447 = XOR64mr
  { 4448,	3,	1,	3,	0,	0, 0x102016016ULL, NULL, ImplicitList1, OperandInfo25 },  // Inst #4448 = XOR64ri32
  { 4449,	3,	1,	3,	0,	0, 0x106006016ULL, NULL, ImplicitList1, OperandInfo25 },  // Inst #4449 = XOR64ri8
  { 4450,	7,	1,	3,	0,	0|(1<<MCID::MayLoad), 0x66002006ULL, NULL, ImplicitList1, OperandInfo26 },  // Inst #4450 = XOR64rm
  { 4451,	3,	1,	3,	0,	0|(1<<MCID::Commutable), 0x62002003ULL, NULL, ImplicitList1, OperandInfo27 },  // Inst #4451 = XOR64rr
  { 4452,	3,	1,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x66002005ULL, NULL, ImplicitList1, OperandInfo27 },  // Inst #4452 = XOR64rr_REV
  { 4453,	1,	0,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x68004001ULL, ImplicitList5, ImplicitList1, OperandInfo2 },  // Inst #4453 = XOR8i8
  { 4454,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10000401eULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #4454 = XOR8mi
  { 4455,	6,	0,	2,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x60000004ULL, NULL, ImplicitList1, OperandInfo28 },  // Inst #4455 = XOR8mr
  { 4456,	3,	1,	3,	0,	0, 0x100004016ULL, NULL, ImplicitList1, OperandInfo29 },  // Inst #4456 = XOR8ri
  { 4457,	7,	1,	3,	0,	0|(1<<MCID::MayLoad), 0x64000006ULL, NULL, ImplicitList1, OperandInfo30 },  // Inst #4457 = XOR8rm
  { 4458,	3,	1,	3,	0,	0|(1<<MCID::Commutable), 0x60000003ULL, NULL, ImplicitList1, OperandInfo31 },  // Inst #4458 = XOR8rr
  { 4459,	3,	1,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x64000005ULL, NULL, ImplicitList1, OperandInfo31 },  // Inst #4459 = XOR8rr_REV
  { 4460,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xaf000146ULL, NULL, NULL, OperandInfo32 },  // Inst #4460 = XORPDrm
  { 4461,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0xaf000145ULL, NULL, NULL, OperandInfo33 },  // Inst #4461 = XORPDrr
  { 4462,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xae800106ULL, NULL, NULL, OperandInfo32 },  // Inst #4462 = XORPSrm
  { 4463,	3,	1,	18,	0,	0|(1<<MCID::Commutable), 0xae800105ULL, NULL, NULL, OperandInfo33 },  // Inst #4463 = XORPSrr
  { 4464,	5,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x15c00011dULL, ImplicitList77, NULL, OperandInfo38 },  // Inst #4464 = XRSTOR
  { 4465,	5,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x15c00211dULL, ImplicitList77, NULL, OperandInfo38 },  // Inst #4465 = XRSTOR64
  { 4466,	5,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x15c00011cULL, ImplicitList77, NULL, OperandInfo38 },  // Inst #4466 = XSAVE
  { 4467,	5,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x15c00211cULL, ImplicitList77, NULL, OperandInfo38 },  // Inst #4467 = XSAVE64
  { 4468,	5,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x15c00011eULL, ImplicitList77, NULL, OperandInfo38 },  // Inst #4468 = XSAVEOPT
  { 4469,	5,	1,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x15c00211eULL, ImplicitList77, NULL, OperandInfo38 },  // Inst #4469 = XSAVEOPT64
  { 4470,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x200012eULL, ImplicitList78, NULL, 0 },  // Inst #4470 = XSETBV
  { 4471,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x190000f01ULL, ImplicitList79, ImplicitList79, 0 },  // Inst #4471 = XSHA1
  { 4472,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a0000f01ULL, ImplicitList79, ImplicitList79, 0 },  // Inst #4472 = XSHA256
  { 4473,	0,	0,	18,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x180001001ULL, ImplicitList80, ImplicitList81, 0 },  // Inst #4473 = XSTORE
};

extern const char X86InstrNameData[] = {
  /* 0 */ 'M', 'O', 'R', 'E', 'S', 'T', 'A', 'C', 'K', '_', 'R', 'E', 'T', '_', 'R', 'E', 'S', 'T', 'O', 'R', 'E', '_', 'R', '1', '0', 0,
  /* 26 */ 'L', 'D', '_', 'F', 'p', '0', '8', '0', 0,
  /* 35 */ 'L', 'D', '_', 'F', 'p', '1', '8', '0', 0,
  /* 44 */ 'C', 'M', 'O', 'V', '_', 'R', 'F', 'P', '8', '0', 0,
  /* 55 */ 'S', 'U', 'B', '_', 'F', 'p', 'I', '3', '2', 'm', '8', '0', 0,
  /* 68 */ 'A', 'D', 'D', '_', 'F', 'p', 'I', '3', '2', 'm', '8', '0', 0,
  /* 81 */ 'M', 'U', 'L', '_', 'F', 'p', 'I', '3', '2', 'm', '8', '0', 0,
  /* 94 */ 'S', 'U', 'B', 'R', '_', 'F', 'p', 'I', '3', '2', 'm', '8', '0', 0,
  /* 108 */ 'D', 'I', 'V', 'R', '_', 'F', 'p', 'I', '3', '2', 'm', '8', '0', 0,
  /* 122 */ 'D', 'I', 'V', '_', 'F', 'p', 'I', '3', '2', 'm', '8', '0', 0,
  /* 135 */ 'I', 'L', 'D', '_', 'F', 'p', '3', '2', 'm', '8', '0', 0,
  /* 147 */ 'I', 'S', 'T', '_', 'F', 'p', '3', '2', 'm', '8', '0', 0,
  /* 159 */ 'I', 'S', 'T', 'T', '_', 'F', 'p', '3', '2', 'm', '8', '0', 0,
  /* 172 */ 'I', 'L', 'D', '_', 'F', 'p', '6', '4', 'm', '8', '0', 0,
  /* 184 */ 'I', 'S', 'T', '_', 'F', 'p', '6', '4', 'm', '8', '0', 0,
  /* 196 */ 'I', 'S', 'T', 'T', '_', 'F', 'p', '6', '4', 'm', '8', '0', 0,
  /* 209 */ 'S', 'U', 'B', '_', 'F', 'p', 'I', '1', '6', 'm', '8', '0', 0,
  /* 222 */ 'A', 'D', 'D', '_', 'F', 'p', 'I', '1', '6', 'm', '8', '0', 0,
  /* 235 */ 'M', 'U', 'L', '_', 'F', 'p', 'I', '1', '6', 'm', '8', '0', 0,
  /* 248 */ 'S', 'U', 'B', 'R', '_', 'F', 'p', 'I', '1', '6', 'm', '8', '0', 0,
  /* 262 */ 'D', 'I', 'V', 'R', '_', 'F', 'p', 'I', '1', '6', 'm', '8', '0', 0,
  /* 276 */ 'D', 'I', 'V', '_', 'F', 'p', 'I', '1', '6', 'm', '8', '0', 0,
  /* 289 */ 'I', 'L', 'D', '_', 'F', 'p', '1', '6', 'm', '8', '0', 0,
  /* 301 */ 'I', 'S', 'T', '_', 'F', 'p', '1', '6', 'm', '8', '0', 0,
  /* 313 */ 'I', 'S', 'T', 'T', '_', 'F', 'p', '1', '6', 'm', '8', '0', 0,
  /* 326 */ 'C', 'M', 'O', 'V', 'N', 'B', '_', 'F', 'p', '8', '0', 0,
  /* 338 */ 'S', 'U', 'B', '_', 'F', 'p', '8', '0', 0,
  /* 347 */ 'C', 'M', 'O', 'V', 'B', '_', 'F', 'p', '8', '0', 0,
  /* 358 */ 'A', 'D', 'D', '_', 'F', 'p', '8', '0', 0,
  /* 367 */ 'C', 'M', 'O', 'V', 'N', 'B', 'E', '_', 'F', 'p', '8', '0', 0,
  /* 380 */ 'C', 'M', 'O', 'V', 'B', 'E', '_', 'F', 'p', '8', '0', 0,
  /* 392 */ 'C', 'M', 'O', 'V', 'N', 'E', '_', 'F', 'p', '8', '0', 0,
  /* 404 */ 'C', 'M', 'O', 'V', 'E', '_', 'F', 'p', '8', '0', 0,
  /* 415 */ 'M', 'U', 'L', '_', 'F', 'p', '8', '0', 0,
  /* 424 */ 'S', 'I', 'N', '_', 'F', 'p', '8', '0', 0,
  /* 433 */ 'C', 'M', 'O', 'V', 'N', 'P', '_', 'F', 'p', '8', '0', 0,
  /* 445 */ 'C', 'M', 'O', 'V', 'P', '_', 'F', 'p', '8', '0', 0,
  /* 456 */ 'A', 'B', 'S', '_', 'F', 'p', '8', '0', 0,
  /* 465 */ 'C', 'H', 'S', '_', 'F', 'p', '8', '0', 0,
  /* 474 */ 'C', 'O', 'S', '_', 'F', 'p', '8', '0', 0,
  /* 483 */ 'S', 'Q', 'R', 'T', '_', 'F', 'p', '8', '0', 0,
  /* 493 */ 'T', 'S', 'T', '_', 'F', 'p', '8', '0', 0,
  /* 502 */ 'D', 'I', 'V', '_', 'F', 'p', '8', '0', 0,
  /* 511 */ 'U', 'C', 'O', 'M', '_', 'F', 'p', 'I', 'r', '8', '0', 0,
  /* 523 */ 'U', 'C', 'O', 'M', '_', 'F', 'p', 'r', '8', '0', 0,
  /* 534 */ 'L', 'D', '_', 'F', '0', 0,
  /* 540 */ 'A', 'V', 'X', '2', '_', 'S', 'E', 'T', '0', 0,
  /* 550 */ 'V', '_', 'S', 'E', 'T', '0', 0,
  /* 557 */ 'P', 'R', 'E', 'F', 'E', 'T', 'C', 'H', 'T', '0', 0,
  /* 568 */ 'S', 'U', 'B', '_', 'F', 'r', 'S', 'T', '0', 0,
  /* 578 */ 'A', 'D', 'D', '_', 'F', 'r', 'S', 'T', '0', 0,
  /* 588 */ 'M', 'U', 'L', '_', 'F', 'r', 'S', 'T', '0', 0,
  /* 598 */ 'S', 'U', 'B', 'R', '_', 'F', 'r', 'S', 'T', '0', 0,
  /* 609 */ 'D', 'I', 'V', 'R', '_', 'F', 'r', 'S', 'T', '0', 0,
  /* 620 */ 'D', 'I', 'V', '_', 'F', 'r', 'S', 'T', '0', 0,
  /* 630 */ 'S', 'U', 'B', '_', 'F', 'P', 'r', 'S', 'T', '0', 0,
  /* 641 */ 'A', 'D', 'D', '_', 'F', 'P', 'r', 'S', 'T', '0', 0,
  /* 652 */ 'M', 'U', 'L', '_', 'F', 'P', 'r', 'S', 'T', '0', 0,
  /* 663 */ 'S', 'U', 'B', 'R', '_', 'F', 'P', 'r', 'S', 'T', '0', 0,
  /* 675 */ 'D', 'I', 'V', 'R', '_', 'F', 'P', 'r', 'S', 'T', '0', 0,
  /* 687 */ 'D', 'I', 'V', '_', 'F', 'P', 'r', 'S', 'T', '0', 0,
  /* 698 */ 'P', 'B', 'L', 'E', 'N', 'D', 'V', 'B', 'r', 'm', '0', 0,
  /* 710 */ 'B', 'L', 'E', 'N', 'D', 'V', 'P', 'D', 'r', 'm', '0', 0,
  /* 722 */ 'B', 'L', 'E', 'N', 'D', 'V', 'P', 'S', 'r', 'm', '0', 0,
  /* 734 */ 'M', 'O', 'V', '3', '2', 'r', '0', 0,
  /* 742 */ 'M', 'O', 'V', '6', '4', 'r', '0', 0,
  /* 750 */ 'M', 'O', 'V', '1', '6', 'r', '0', 0,
  /* 758 */ 'M', 'O', 'V', '8', 'r', '0', 0,
  /* 765 */ 'P', 'B', 'L', 'E', 'N', 'D', 'V', 'B', 'r', 'r', '0', 0,
  /* 777 */ 'B', 'L', 'E', 'N', 'D', 'V', 'P', 'D', 'r', 'r', '0', 0,
  /* 789 */ 'B', 'L', 'E', 'N', 'D', 'V', 'P', 'S', 'r', 'r', '0', 0,
  /* 801 */ 'X', 'S', 'H', 'A', '1', 0,
  /* 807 */ 'L', 'D', '_', 'F', '1', 0,
  /* 813 */ 'F', 'P', 'R', 'E', 'M', '1', 0,
  /* 820 */ 'F', '2', 'X', 'M', '1', 0,
  /* 826 */ 'F', 'Y', 'L', '2', 'X', 'P', '1', 0,
  /* 834 */ 'P', 'R', 'E', 'F', 'E', 'T', 'C', 'H', 'T', '1', 0,
  /* 845 */ 'J', 'A', '_', '1', 0,
  /* 850 */ 'J', 'B', '_', '1', 0,
  /* 855 */ 'J', 'A', 'E', '_', '1', 0,
  /* 861 */ 'J', 'B', 'E', '_', '1', 0,
  /* 867 */ 'J', 'G', 'E', '_', '1', 0,
  /* 873 */ 'J', 'E', '_', '1', 0,
  /* 878 */ 'J', 'L', 'E', '_', '1', 0,
  /* 884 */ 'J', 'N', 'E', '_', '1', 0,
  /* 890 */ 'J', 'G', '_', '1', 0,
  /* 895 */ 'J', 'L', '_', '1', 0,
  /* 900 */ 'J', 'O', '_', '1', 0,
  /* 905 */ 'J', 'N', 'O', '_', '1', 0,
  /* 911 */ 'J', 'P', '_', '1', 0,
  /* 916 */ 'J', 'M', 'P', '_', '1', 0,
  /* 922 */ 'J', 'N', 'P', '_', '1', 0,
  /* 928 */ 'J', 'S', '_', '1', 0,
  /* 933 */ 'J', 'N', 'S', '_', '1', 0,
  /* 939 */ 'R', 'C', 'L', '3', '2', 'm', '1', 0,
  /* 947 */ 'S', 'H', 'L', '3', '2', 'm', '1', 0,
  /* 955 */ 'R', 'O', 'L', '3', '2', 'm', '1', 0,
  /* 963 */ 'S', 'A', 'R', '3', '2', 'm', '1', 0,
  /* 971 */ 'R', 'C', 'R', '3', '2', 'm', '1', 0,
  /* 979 */ 'S', 'H', 'R', '3', '2', 'm', '1', 0,
  /* 987 */ 'R', 'O', 'R', '3', '2', 'm', '1', 0,
  /* 995 */ 'R', 'C', 'L', '6', '4', 'm', '1', 0,
  /* 1003 */ 'S', 'H', 'L', '6', '4', 'm', '1', 0,
  /* 1011 */ 'R', 'O', 'L', '6', '4', 'm', '1', 0,
  /* 1019 */ 'S', 'A', 'R', '6', '4', 'm', '1', 0,
  /* 1027 */ 'R', 'C', 'R', '6', '4', 'm', '1', 0,
  /* 1035 */ 'S', 'H', 'R', '6', '4', 'm', '1', 0,
  /* 1043 */ 'R', 'O', 'R', '6', '4', 'm', '1', 0,
  /* 1051 */ 'R', 'C', 'L', '1', '6', 'm', '1', 0,
  /* 1059 */ 'S', 'H', 'L', '1', '6', 'm', '1', 0,
  /* 1067 */ 'R', 'O', 'L', '1', '6', 'm', '1', 0,
  /* 1075 */ 'S', 'A', 'R', '1', '6', 'm', '1', 0,
  /* 1083 */ 'R', 'C', 'R', '1', '6', 'm', '1', 0,
  /* 1091 */ 'S', 'H', 'R', '1', '6', 'm', '1', 0,
  /* 1099 */ 'R', 'O', 'R', '1', '6', 'm', '1', 0,
  /* 1107 */ 'R', 'C', 'L', '8', 'm', '1', 0,
  /* 1114 */ 'S', 'H', 'L', '8', 'm', '1', 0,
  /* 1121 */ 'R', 'O', 'L', '8', 'm', '1', 0,
  /* 1128 */ 'S', 'A', 'R', '8', 'm', '1', 0,
  /* 1135 */ 'R', 'C', 'R', '8', 'm', '1', 0,
  /* 1142 */ 'S', 'H', 'R', '8', 'm', '1', 0,
  /* 1149 */ 'R', 'O', 'R', '8', 'm', '1', 0,
  /* 1156 */ 'R', 'C', 'L', '3', '2', 'r', '1', 0,
  /* 1164 */ 'S', 'H', 'L', '3', '2', 'r', '1', 0,
  /* 1172 */ 'R', 'O', 'L', '3', '2', 'r', '1', 0,
  /* 1180 */ 'S', 'A', 'R', '3', '2', 'r', '1', 0,
  /* 1188 */ 'R', 'C', 'R', '3', '2', 'r', '1', 0,
  /* 1196 */ 'S', 'H', 'R', '3', '2', 'r', '1', 0,
  /* 1204 */ 'R', 'O', 'R', '3', '2', 'r', '1', 0,
  /* 1212 */ 'R', 'C', 'L', '6', '4', 'r', '1', 0,
  /* 1220 */ 'S', 'H', 'L', '6', '4', 'r', '1', 0,
  /* 1228 */ 'R', 'O', 'L', '6', '4', 'r', '1', 0,
  /* 1236 */ 'S', 'A', 'R', '6', '4', 'r', '1', 0,
  /* 1244 */ 'R', 'C', 'R', '6', '4', 'r', '1', 0,
  /* 1252 */ 'S', 'H', 'R', '6', '4', 'r', '1', 0,
  /* 1260 */ 'R', 'O', 'R', '6', '4', 'r', '1', 0,
  /* 1268 */ 'R', 'C', 'L', '1', '6', 'r', '1', 0,
  /* 1276 */ 'S', 'H', 'L', '1', '6', 'r', '1', 0,
  /* 1284 */ 'R', 'O', 'L', '1', '6', 'r', '1', 0,
  /* 1292 */ 'S', 'A', 'R', '1', '6', 'r', '1', 0,
  /* 1300 */ 'R', 'C', 'R', '1', '6', 'r', '1', 0,
  /* 1308 */ 'S', 'H', 'R', '1', '6', 'r', '1', 0,
  /* 1316 */ 'R', 'O', 'R', '1', '6', 'r', '1', 0,
  /* 1324 */ 'R', 'C', 'L', '8', 'r', '1', 0,
  /* 1331 */ 'S', 'H', 'L', '8', 'r', '1', 0,
  /* 1338 */ 'R', 'O', 'L', '8', 'r', '1', 0,
  /* 1345 */ 'S', 'A', 'R', '8', 'r', '1', 0,
  /* 1352 */ 'R', 'C', 'R', '8', 'r', '1', 0,
  /* 1359 */ 'S', 'H', 'R', '8', 'r', '1', 0,
  /* 1366 */ 'R', 'O', 'R', '8', 'r', '1', 0,
  /* 1373 */ 'L', 'D', '_', 'F', 'p', '0', '3', '2', 0,
  /* 1382 */ 'L', 'D', '_', 'F', 'p', '1', '3', '2', 0,
  /* 1391 */ 'A', 'T', 'O', 'M', 'S', 'U', 'B', '6', '4', '3', '2', 0,
  /* 1403 */ 'A', 'T', 'O', 'M', 'A', 'D', 'D', '6', '4', '3', '2', 0,
  /* 1415 */ 'A', 'T', 'O', 'M', 'A', 'N', 'D', '6', '4', '3', '2', 0,
  /* 1427 */ 'A', 'T', 'O', 'M', 'N', 'A', 'N', 'D', '6', '4', '3', '2', 0,
  /* 1440 */ 'A', 'T', 'O', 'M', 'S', 'W', 'A', 'P', '6', '4', '3', '2', 0,
  /* 1453 */ 'A', 'T', 'O', 'M', 'O', 'R', '6', '4', '3', '2', 0,
  /* 1464 */ 'A', 'T', 'O', 'M', 'X', 'O', 'R', '6', '4', '3', '2', 0,
  /* 1476 */ 'I', 'N', 'V', 'L', 'P', 'G', 'A', '3', '2', 0,
  /* 1486 */ 'P', 'U', 'S', 'H', 'A', '3', '2', 0,
  /* 1494 */ 'P', 'O', 'P', 'A', '3', '2', 0,
  /* 1501 */ 'V', 'M', 'L', 'O', 'A', 'D', '3', '2', 0,
  /* 1510 */ 'L', 'X', 'A', 'D', 'D', '3', '2', 0,
  /* 1518 */ 'I', 'N', 'V', 'P', 'C', 'I', 'D', '3', '2', 0,
  /* 1528 */ 'I', 'N', 'V', 'V', 'P', 'I', 'D', '3', '2', 0,
  /* 1538 */ 'A', 'T', 'O', 'M', 'A', 'N', 'D', '3', '2', 0,
  /* 1548 */ 'A', 'T', 'O', 'M', 'N', 'A', 'N', 'D', '3', '2', 0,
  /* 1559 */ 'V', 'M', 'S', 'A', 'V', 'E', '3', '2', 0,
  /* 1568 */ 'C', 'M', 'O', 'V', '_', 'V', '4', 'F', '3', '2', 0,
  /* 1579 */ 'C', 'M', 'O', 'V', '_', 'V', '8', 'F', '3', '2', 0,
  /* 1590 */ 'P', 'U', 'S', 'H', 'F', '3', '2', 0,
  /* 1598 */ 'P', 'O', 'P', 'F', '3', '2', 0,
  /* 1605 */ 'L', 'C', 'M', 'P', 'X', 'C', 'H', 'G', '3', '2', 0,
  /* 1616 */ 'A', 'T', 'O', 'M', 'M', 'I', 'N', '3', '2', 0,
  /* 1626 */ 'A', 'T', 'O', 'M', 'U', 'M', 'I', 'N', '3', '2', 0,
  /* 1637 */ 'V', 'M', 'R', 'U', 'N', '3', '2', 0,
  /* 1645 */ 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'D', 'O', 'W', 'N', '3', '2', 0,
  /* 1664 */ 'C', 'M', 'O', 'V', '_', 'R', 'F', 'P', '3', '2', 0,
  /* 1675 */ 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'U', 'P', '3', '2', 0,
  /* 1692 */ 'C', 'M', 'O', 'V', '_', 'F', 'R', '3', '2', 0,
  /* 1702 */ 'C', 'M', 'O', 'V', '_', 'G', 'R', '3', '2', 0,
  /* 1712 */ 'A', 'T', 'O', 'M', 'O', 'R', '3', '2', 0,
  /* 1721 */ 'A', 'T', 'O', 'M', 'X', 'O', 'R', '3', '2', 0,
  /* 1731 */ 'S', 'C', 'A', 'S', '3', '2', 0,
  /* 1738 */ 'P', 'U', 'S', 'H', 'C', 'S', '3', '2', 0,
  /* 1747 */ 'P', 'U', 'S', 'H', 'D', 'S', '3', '2', 0,
  /* 1756 */ 'P', 'O', 'P', 'D', 'S', '3', '2', 0,
  /* 1764 */ 'P', 'U', 'S', 'H', 'E', 'S', '3', '2', 0,
  /* 1773 */ 'P', 'O', 'P', 'E', 'S', '3', '2', 0,
  /* 1781 */ 'P', 'U', 'S', 'H', 'F', 'S', '3', '2', 0,
  /* 1790 */ 'P', 'O', 'P', 'F', 'S', '3', '2', 0,
  /* 1798 */ 'P', 'U', 'S', 'H', 'G', 'S', '3', '2', 0,
  /* 1807 */ 'P', 'O', 'P', 'G', 'S', '3', '2', 0,
  /* 1815 */ 'C', 'M', 'P', 'S', '3', '2', 0,
  /* 1822 */ 'P', 'U', 'S', 'H', 'S', 'S', '3', '2', 0,
  /* 1831 */ 'P', 'O', 'P', 'S', 'S', '3', '2', 0,
  /* 1839 */ 'I', 'R', 'E', 'T', '3', '2', 0,
  /* 1846 */ 'I', 'N', 'V', 'E', 'P', 'T', '3', '2', 0,
  /* 1855 */ 'A', 'T', 'O', 'M', 'M', 'A', 'X', '3', '2', 0,
  /* 1865 */ 'A', 'T', 'O', 'M', 'U', 'M', 'A', 'X', '3', '2', 0,
  /* 1876 */ 'S', 'E', 'G', '_', 'A', 'L', 'L', 'O', 'C', 'A', '_', '3', '2', 0,
  /* 1890 */ 'R', 'E', 'P', '_', 'S', 'T', 'O', 'S', 'B', '_', '3', '2', 0,
  /* 1903 */ 'R', 'E', 'P', '_', 'M', 'O', 'V', 'S', 'B', '_', '3', '2', 0,
  /* 1916 */ 'R', 'E', 'P', '_', 'S', 'T', 'O', 'S', 'D', '_', '3', '2', 0,
  /* 1929 */ 'R', 'E', 'P', '_', 'M', 'O', 'V', 'S', 'D', '_', '3', '2', 0,
  /* 1942 */ 'W', 'I', 'N', '_', 'F', 'T', 'O', 'L', '_', '3', '2', 0,
  /* 1954 */ 'R', 'E', 'P', '_', 'S', 'T', 'O', 'S', 'W', '_', '3', '2', 0,
  /* 1967 */ 'R', 'E', 'P', '_', 'M', 'O', 'V', 'S', 'W', '_', '3', '2', 0,
  /* 1980 */ 'J', 'E', 'C', 'X', 'Z', '_', '3', '2', 0,
  /* 1989 */ 'T', 'L', 'S', 'C', 'a', 'l', 'l', '_', '3', '2', 0,
  /* 2000 */ 'S', 'B', 'B', '3', '2', 'i', '3', '2', 0,
  /* 2009 */ 'S', 'U', 'B', '3', '2', 'i', '3', '2', 0,
  /* 2018 */ 'A', 'D', 'C', '3', '2', 'i', '3', '2', 0,
  /* 2027 */ 'A', 'D', 'D', '3', '2', 'i', '3', '2', 0,
  /* 2036 */ 'A', 'N', 'D', '3', '2', 'i', '3', '2', 0,
  /* 2045 */ 'C', 'M', 'P', '3', '2', 'i', '3', '2', 0,
  /* 2054 */ 'X', 'O', 'R', '3', '2', 'i', '3', '2', 0,
  /* 2063 */ 'T', 'E', 'S', 'T', '3', '2', 'i', '3', '2', 0,
  /* 2073 */ 'S', 'B', 'B', '6', '4', 'i', '3', '2', 0,
  /* 2082 */ 'S', 'U', 'B', '6', '4', 'i', '3', '2', 0,
  /* 2091 */ 'A', 'D', 'C', '6', '4', 'i', '3', '2', 0,
  /* 2100 */ 'A', 'D', 'D', '6', '4', 'i', '3', '2', 0,
  /* 2109 */ 'A', 'N', 'D', '6', '4', 'i', '3', '2', 0,
  /* 2118 */ 'P', 'U', 'S', 'H', '6', '4', 'i', '3', '2', 0,
  /* 2128 */ 'C', 'M', 'P', '6', '4', 'i', '3', '2', 0,
  /* 2137 */ 'X', 'O', 'R', '6', '4', 'i', '3', '2', 0,
  /* 2146 */ 'T', 'E', 'S', 'T', '6', '4', 'i', '3', '2', 0,
  /* 2156 */ 'M', 'O', 'V', '6', '4', 'r', 'i', '6', '4', 'i', '3', '2', 0,
  /* 2169 */ 'P', 'U', 'S', 'H', 'i', '3', '2', 0,
  /* 2177 */ 'S', 'B', 'B', '6', '4', 'm', 'i', '3', '2', 0,
  /* 2187 */ 'L', 'O', 'C', 'K', '_', 'S', 'U', 'B', '6', '4', 'm', 'i', '3', '2', 0,
  /* 2202 */ 'A', 'D', 'C', '6', '4', 'm', 'i', '3', '2', 0,
  /* 2212 */ 'L', 'O', 'C', 'K', '_', 'A', 'D', 'D', '6', '4', 'm', 'i', '3', '2', 0,
  /* 2227 */ 'L', 'O', 'C', 'K', '_', 'A', 'N', 'D', '6', '4', 'm', 'i', '3', '2', 0,
  /* 2242 */ 'C', 'M', 'P', '6', '4', 'm', 'i', '3', '2', 0,
  /* 2252 */ 'L', 'O', 'C', 'K', '_', 'X', 'O', 'R', '6', '4', 'm', 'i', '3', '2', 0,
  /* 2267 */ 'L', 'O', 'C', 'K', '_', 'O', 'R', '6', '4', 'm', 'i', '3', '2', 0,
  /* 2281 */ 'T', 'E', 'S', 'T', '6', '4', 'm', 'i', '3', '2', 0,
  /* 2292 */ 'M', 'O', 'V', '6', '4', 'm', 'i', '3', '2', 0,
  /* 2302 */ 'I', 'M', 'U', 'L', '6', '4', 'r', 'm', 'i', '3', '2', 0,
  /* 2314 */ 'S', 'B', 'B', '6', '4', 'r', 'i', '3', '2', 0,
  /* 2324 */ 'S', 'U', 'B', '6', '4', 'r', 'i', '3', '2', 0,
  /* 2334 */ 'A', 'D', 'C', '6', '4', 'r', 'i', '3', '2', 0,
  /* 2344 */ 'A', 'D', 'D', '6', '4', 'r', 'i', '3', '2', 0,
  /* 2354 */ 'A', 'N', 'D', '6', '4', 'r', 'i', '3', '2', 0,
  /* 2364 */ 'C', 'M', 'P', '6', '4', 'r', 'i', '3', '2', 0,
  /* 2374 */ 'X', 'O', 'R', '6', '4', 'r', 'i', '3', '2', 0,
  /* 2384 */ 'T', 'E', 'S', 'T', '6', '4', 'r', 'i', '3', '2', 0,
  /* 2395 */ 'M', 'O', 'V', '6', '4', 'r', 'i', '3', '2', 0,
  /* 2405 */ 'I', 'M', 'U', 'L', '6', '4', 'r', 'r', 'i', '3', '2', 0,
  /* 2417 */ 'C', 'A', 'L', 'L', '6', '4', 'p', 'c', 'r', 'e', 'l', '3', '2', 0,
  /* 2431 */ 'J', 'M', 'P', '6', '4', 'p', 'c', 'r', 'e', 'l', '3', '2', 0,
  /* 2444 */ 'C', 'A', 'L', 'L', 'p', 'c', 'r', 'e', 'l', '3', '2', 0,
  /* 2456 */ 'S', 'T', '_', 'F', 'p', 'P', '8', '0', 'm', '3', '2', 0,
  /* 2468 */ 'S', 'U', 'B', '_', 'F', 'p', '8', '0', 'm', '3', '2', 0,
  /* 2480 */ 'A', 'D', 'D', '_', 'F', 'p', '8', '0', 'm', '3', '2', 0,
  /* 2492 */ 'M', 'U', 'L', '_', 'F', 'p', '8', '0', 'm', '3', '2', 0,
  /* 2504 */ 'S', 'U', 'B', 'R', '_', 'F', 'p', '8', '0', 'm', '3', '2', 0,
  /* 2517 */ 'D', 'I', 'V', 'R', '_', 'F', 'p', '8', '0', 'm', '3', '2', 0,
  /* 2530 */ 'S', 'T', '_', 'F', 'p', '8', '0', 'm', '3', '2', 0,
  /* 2541 */ 'D', 'I', 'V', '_', 'F', 'p', '8', '0', 'm', '3', '2', 0,
  /* 2553 */ 'S', 'U', 'B', '_', 'F', 'p', 'I', '3', '2', 'm', '3', '2', 0,
  /* 2566 */ 'A', 'D', 'D', '_', 'F', 'p', 'I', '3', '2', 'm', '3', '2', 0,
  /* 2579 */ 'M', 'U', 'L', '_', 'F', 'p', 'I', '3', '2', 'm', '3', '2', 0,
  /* 2592 */ 'S', 'U', 'B', 'R', '_', 'F', 'p', 'I', '3', '2', 'm', '3', '2', 0,
  /* 2606 */ 'D', 'I', 'V', 'R', '_', 'F', 'p', 'I', '3', '2', 'm', '3', '2', 0,
  /* 2620 */ 'D', 'I', 'V', '_', 'F', 'p', 'I', '3', '2', 'm', '3', '2', 0,
  /* 2633 */ 'I', 'L', 'D', '_', 'F', 'p', '3', '2', 'm', '3', '2', 0,
  /* 2645 */ 'I', 'S', 'T', '_', 'F', 'p', '3', '2', 'm', '3', '2', 0,
  /* 2657 */ 'I', 'S', 'T', 'T', '_', 'F', 'p', '3', '2', 'm', '3', '2', 0,
  /* 2670 */ 'C', 'R', 'C', '3', '2', 'r', '3', '2', 'm', '3', '2', 0,
  /* 2682 */ 'S', 'T', '_', 'F', 'p', 'P', '6', '4', 'm', '3', '2', 0,
  /* 2694 */ 'S', 'U', 'B', '_', 'F', 'p', '6', '4', 'm', '3', '2', 0,
  /* 2706 */ 'A', 'D', 'D', '_', 'F', 'p', '6', '4', 'm', '3', '2', 0,
  /* 2718 */ 'I', 'L', 'D', '_', 'F', 'p', '6', '4', 'm', '3', '2', 0,
  /* 2730 */ 'M', 'U', 'L', '_', 'F', 'p', '6', '4', 'm', '3', '2', 0,
  /* 2742 */ 'S', 'U', 'B', 'R', '_', 'F', 'p', '6', '4', 'm', '3', '2', 0,
  /* 2755 */ 'D', 'I', 'V', 'R', '_', 'F', 'p', '6', '4', 'm', '3', '2', 0,
  /* 2768 */ 'I', 'S', 'T', '_', 'F', 'p', '6', '4', 'm', '3', '2', 0,
  /* 2780 */ 'I', 'S', 'T', 'T', '_', 'F', 'p', '6', '4', 'm', '3', '2', 0,
  /* 2793 */ 'D', 'I', 'V', '_', 'F', 'p', '6', '4', 'm', '3', '2', 0,
  /* 2805 */ 'S', 'U', 'B', '_', 'F', 'p', 'I', '1', '6', 'm', '3', '2', 0,
  /* 2818 */ 'A', 'D', 'D', '_', 'F', 'p', 'I', '1', '6', 'm', '3', '2', 0,
  /* 2831 */ 'M', 'U', 'L', '_', 'F', 'p', 'I', '1', '6', 'm', '3', '2', 0,
  /* 2844 */ 'S', 'U', 'B', 'R', '_', 'F', 'p', 'I', '1', '6', 'm', '3', '2', 0,
  /* 2858 */ 'D', 'I', 'V', 'R', '_', 'F', 'p', 'I', '1', '6', 'm', '3', '2', 0,
  /* 2872 */ 'D', 'I', 'V', '_', 'F', 'p', 'I', '1', '6', 'm', '3', '2', 0,
  /* 2885 */ 'I', 'L', 'D', '_', 'F', 'p', '1', '6', 'm', '3', '2', 0,
  /* 2897 */ 'I', 'S', 'T', '_', 'F', 'p', '1', '6', 'm', '3', '2', 0,
  /* 2909 */ 'I', 'S', 'T', 'T', '_', 'F', 'p', '1', '6', 'm', '3', '2', 0,
  /* 2922 */ 'M', 'O', 'V', 'S', 'X', '6', '4', 'r', 'm', '3', '2', 0,
  /* 2934 */ 'M', 'O', 'V', 'Z', 'X', '6', '4', 'r', 'm', '3', '2', 0,
  /* 2946 */ 'M', 'O', 'V', '3', '2', 'a', 'o', '3', '2', 0,
  /* 2956 */ 'C', 'M', 'O', 'V', 'N', 'B', '_', 'F', 'p', '3', '2', 0,
  /* 2968 */ 'S', 'U', 'B', '_', 'F', 'p', '3', '2', 0,
  /* 2977 */ 'C', 'M', 'O', 'V', 'B', '_', 'F', 'p', '3', '2', 0,
  /* 2988 */ 'A', 'D', 'D', '_', 'F', 'p', '3', '2', 0,
  /* 2997 */ 'C', 'M', 'O', 'V', 'N', 'B', 'E', '_', 'F', 'p', '3', '2', 0,
  /* 3010 */ 'C', 'M', 'O', 'V', 'B', 'E', '_', 'F', 'p', '3', '2', 0,
  /* 3022 */ 'C', 'M', 'O', 'V', 'N', 'E', '_', 'F', 'p', '3', '2', 0,
  /* 3034 */ 'C', 'M', 'O', 'V', 'E', '_', 'F', 'p', '3', '2', 0,
  /* 3045 */ 'M', 'U', 'L', '_', 'F', 'p', '3', '2', 0,
  /* 3054 */ 'S', 'I', 'N', '_', 'F', 'p', '3', '2', 0,
  /* 3063 */ 'C', 'M', 'O', 'V', 'N', 'P', '_', 'F', 'p', '3', '2', 0,
  /* 3075 */ 'C', 'M', 'O', 'V', 'P', '_', 'F', 'p', '3', '2', 0,
  /* 3086 */ 'A', 'B', 'S', '_', 'F', 'p', '3', '2', 0,
  /* 3095 */ 'C', 'H', 'S', '_', 'F', 'p', '3', '2', 0,
  /* 3104 */ 'C', 'O', 'S', '_', 'F', 'p', '3', '2', 0,
  /* 3113 */ 'S', 'Q', 'R', 'T', '_', 'F', 'p', '3', '2', 0,
  /* 3123 */ 'T', 'S', 'T', '_', 'F', 'p', '3', '2', 0,
  /* 3132 */ 'D', 'I', 'V', '_', 'F', 'p', '3', '2', 0,
  /* 3141 */ 'C', 'R', 'C', '3', '2', 'r', '3', '2', 'r', '3', '2', 0,
  /* 3153 */ 'U', 'C', 'O', 'M', '_', 'F', 'p', 'I', 'r', '3', '2', 0,
  /* 3165 */ 'T', 'L', 'S', '_', 'a', 'd', 'd', 'r', '3', '2', 0,
  /* 3176 */ 'U', 'C', 'O', 'M', '_', 'F', 'p', 'r', '3', '2', 0,
  /* 3187 */ 'M', 'O', 'V', 'S', 'X', '6', '4', 'r', 'r', '3', '2', 0,
  /* 3199 */ 'M', 'O', 'V', 'Z', 'X', '6', '4', 'r', 'r', '3', '2', 0,
  /* 3211 */ 'V', 'M', 'O', 'V', 'M', 'S', 'K', 'P', 'D', 'r', 'r', '3', '2', 0,
  /* 3225 */ 'V', 'M', 'O', 'V', 'M', 'S', 'K', 'P', 'S', 'r', 'r', '3', '2', 0,
  /* 3239 */ 'V', 'M', 'O', 'V', 'M', 'S', 'K', 'P', 'D', 'Y', 'r', 'r', '3', '2', 0,
  /* 3254 */ 'V', 'M', 'O', 'V', 'M', 'S', 'K', 'P', 'S', 'Y', 'r', 'r', '3', '2', 0,
  /* 3269 */ 'F', 'L', 'D', 'L', 'G', '2', 0,
  /* 3276 */ 'F', 'L', 'D', 'L', 'N', '2', 0,
  /* 3283 */ 'P', 'R', 'E', 'F', 'E', 'T', 'C', 'H', 'T', '2', 0,
  /* 3294 */ 'I', 'N', 'T', '3', 0,
  /* 3299 */ 'L', 'D', '_', 'F', 'p', '0', '6', '4', 0,
  /* 3308 */ 'L', 'D', '_', 'F', 'p', '1', '6', '4', 0,
  /* 3317 */ 'M', 'M', 'X', '_', 'M', 'O', 'V', 'D', '6', '4', 'r', 'r', 'v', '1', '6', '4', 0,
  /* 3334 */ 'I', 'N', 'V', 'L', 'P', 'G', 'A', '6', '4', 0,
  /* 3344 */ 'V', 'M', 'L', 'O', 'A', 'D', '6', '4', 0,
  /* 3353 */ 'L', 'X', 'A', 'D', 'D', '6', '4', 0,
  /* 3361 */ 'I', 'N', 'V', 'P', 'C', 'I', 'D', '6', '4', 0,
  /* 3371 */ 'I', 'N', 'V', 'V', 'P', 'I', 'D', '6', '4', 0,
  /* 3381 */ 'A', 'T', 'O', 'M', 'A', 'N', 'D', '6', '4', 0,
  /* 3391 */ 'A', 'T', 'O', 'M', 'N', 'A', 'N', 'D', '6', '4', 0,
  /* 3402 */ 'R', 'D', 'F', 'S', 'B', 'A', 'S', 'E', '6', '4', 0,
  /* 3413 */ 'W', 'R', 'F', 'S', 'B', 'A', 'S', 'E', '6', '4', 0,
  /* 3424 */ 'R', 'D', 'G', 'S', 'B', 'A', 'S', 'E', '6', '4', 0,
  /* 3435 */ 'W', 'R', 'G', 'S', 'B', 'A', 'S', 'E', '6', '4', 0,
  /* 3446 */ 'L', 'E', 'A', 'V', 'E', '6', '4', 0,
  /* 3454 */ 'V', 'M', 'S', 'A', 'V', 'E', '6', '4', 0,
  /* 3463 */ 'F', 'X', 'S', 'A', 'V', 'E', '6', '4', 0,
  /* 3472 */ 'C', 'M', 'O', 'V', '_', 'V', '2', 'F', '6', '4', 0,
  /* 3483 */ 'C', 'M', 'O', 'V', '_', 'V', '4', 'F', '6', '4', 0,
  /* 3494 */ 'P', 'U', 'S', 'H', 'F', '6', '4', 0,
  /* 3502 */ 'P', 'O', 'P', 'F', '6', '4', 0,
  /* 3509 */ 'L', 'C', 'M', 'P', 'X', 'C', 'H', 'G', '6', '4', 0,
  /* 3520 */ 'C', 'M', 'O', 'V', '_', 'V', '2', 'I', '6', '4', 0,
  /* 3531 */ 'C', 'M', 'O', 'V', '_', 'V', '4', 'I', '6', '4', 0,
  /* 3542 */ 'F', 'A', 'R', 'C', 'A', 'L', 'L', '6', '4', 0,
  /* 3552 */ 'A', 'T', 'O', 'M', 'M', 'I', 'N', '6', '4', 0,
  /* 3562 */ 'A', 'T', 'O', 'M', 'U', 'M', 'I', 'N', '6', '4', 0,
  /* 3573 */ 'E', 'H', '_', 'R', 'E', 'T', 'U', 'R', 'N', '6', '4', 0,
  /* 3585 */ 'V', 'M', 'R', 'U', 'N', '6', '4', 0,
  /* 3593 */ 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'D', 'O', 'W', 'N', '6', '4', 0,
  /* 3612 */ 'C', 'M', 'O', 'V', '_', 'R', 'F', 'P', '6', '4', 0,
  /* 3623 */ 'F', 'A', 'R', 'J', 'M', 'P', '6', '4', 0,
  /* 3632 */ 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'U', 'P', '6', '4', 0,
  /* 3649 */ 'M', 'M', 'X', '_', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'Q', '6', '4', 0,
  /* 3664 */ 'C', 'M', 'O', 'V', '_', 'F', 'R', '6', '4', 0,
  /* 3674 */ 'A', 'T', 'O', 'M', 'O', 'R', '6', '4', 0,
  /* 3683 */ 'F', 'X', 'R', 'S', 'T', 'O', 'R', '6', '4', 0,
  /* 3693 */ 'A', 'T', 'O', 'M', 'X', 'O', 'R', '6', '4', 0,
  /* 3703 */ 'S', 'C', 'A', 'S', '6', '4', 0,
  /* 3710 */ 'P', 'U', 'S', 'H', 'F', 'S', '6', '4', 0,
  /* 3719 */ 'P', 'O', 'P', 'F', 'S', '6', '4', 0,
  /* 3727 */ 'P', 'U', 'S', 'H', 'G', 'S', '6', '4', 0,
  /* 3736 */ 'P', 'O', 'P', 'G', 'S', '6', '4', 0,
  /* 3744 */ 'C', 'M', 'P', 'S', '6', '4', 0,
  /* 3751 */ 'I', 'R', 'E', 'T', '6', '4', 0,
  /* 3758 */ 'S', 'Y', 'S', 'R', 'E', 'T', '6', '4', 0,
  /* 3767 */ 'S', 'Y', 'S', 'E', 'X', 'I', 'T', '6', '4', 0,
  /* 3777 */ 'I', 'N', 'V', 'E', 'P', 'T', '6', '4', 0,
  /* 3786 */ 'X', 'S', 'A', 'V', 'E', 'O', 'P', 'T', '6', '4', 0,
  /* 3797 */ 'V', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'D', 'Q', 'U', '6', '4', 0,
  /* 3811 */ 'A', 'T', 'O', 'M', 'M', 'A', 'X', '6', '4', 0,
  /* 3821 */ 'A', 'T', 'O', 'M', 'U', 'M', 'A', 'X', '6', '4', 0,
  /* 3832 */ 'S', 'E', 'G', '_', 'A', 'L', 'L', 'O', 'C', 'A', '_', '6', '4', 0,
  /* 3846 */ 'R', 'E', 'P', '_', 'S', 'T', 'O', 'S', 'B', '_', '6', '4', 0,
  /* 3859 */ 'R', 'E', 'P', '_', 'M', 'O', 'V', 'S', 'B', '_', '6', '4', 0,
  /* 3872 */ 'R', 'E', 'P', '_', 'S', 'T', 'O', 'S', 'D', '_', '6', '4', 0,
  /* 3885 */ 'R', 'E', 'P', '_', 'M', 'O', 'V', 'S', 'D', '_', '6', '4', 0,
  /* 3898 */ 'V', 'A', 'A', 'R', 'G', '_', '6', '4', 0,
  /* 3907 */ 'W', 'I', 'N', '_', 'F', 'T', 'O', 'L', '_', '6', '4', 0,
  /* 3919 */ 'R', 'E', 'P', '_', 'S', 'T', 'O', 'S', 'Q', '_', '6', '4', 0,
  /* 3932 */ 'R', 'E', 'P', '_', 'M', 'O', 'V', 'S', 'Q', '_', '6', '4', 0,
  /* 3945 */ 'R', 'E', 'P', '_', 'S', 'T', 'O', 'S', 'W', '_', '6', '4', 0,
  /* 3958 */ 'R', 'E', 'P', '_', 'M', 'O', 'V', 'S', 'W', '_', '6', '4', 0,
  /* 3971 */ 'J', 'E', 'C', 'X', 'Z', '_', '6', '4', 0,
  /* 3980 */ 'T', 'L', 'S', 'C', 'a', 'l', 'l', '_', '6', '4', 0,
  /* 3991 */ 'T', 'A', 'I', 'L', 'J', 'M', 'P', 'd', '6', '4', 0,
  /* 4002 */ 'T', 'C', 'R', 'E', 'T', 'U', 'R', 'N', 'd', 'i', '6', '4', 0,
  /* 4015 */ 'T', 'C', 'R', 'E', 'T', 'U', 'R', 'N', 'm', 'i', '6', '4', 0,
  /* 4028 */ 'T', 'C', 'R', 'E', 'T', 'U', 'R', 'N', 'r', 'i', '6', '4', 0,
  /* 4041 */ 'S', 'T', '_', 'F', 'p', 'P', '8', '0', 'm', '6', '4', 0,
  /* 4053 */ 'S', 'U', 'B', '_', 'F', 'p', '8', '0', 'm', '6', '4', 0,
  /* 4065 */ 'A', 'D', 'D', '_', 'F', 'p', '8', '0', 'm', '6', '4', 0,
  /* 4077 */ 'M', 'U', 'L', '_', 'F', 'p', '8', '0', 'm', '6', '4', 0,
  /* 4089 */ 'S', 'U', 'B', 'R', '_', 'F', 'p', '8', '0', 'm', '6', '4', 0,
  /* 4102 */ 'D', 'I', 'V', 'R', '_', 'F', 'p', '8', '0', 'm', '6', '4', 0,
  /* 4115 */ 'S', 'T', '_', 'F', 'p', '8', '0', 'm', '6', '4', 0,
  /* 4126 */ 'D', 'I', 'V', '_', 'F', 'p', '8', '0', 'm', '6', '4', 0,
  /* 4138 */ 'S', 'U', 'B', '_', 'F', 'p', 'I', '3', '2', 'm', '6', '4', 0,
  /* 4151 */ 'A', 'D', 'D', '_', 'F', 'p', 'I', '3', '2', 'm', '6', '4', 0,
  /* 4164 */ 'M', 'U', 'L', '_', 'F', 'p', 'I', '3', '2', 'm', '6', '4', 0,
  /* 4177 */ 'S', 'U', 'B', 'R', '_', 'F', 'p', 'I', '3', '2', 'm', '6', '4', 0,
  /* 4191 */ 'D', 'I', 'V', 'R', '_', 'F', 'p', 'I', '3', '2', 'm', '6', '4', 0,
  /* 4205 */ 'D', 'I', 'V', '_', 'F', 'p', 'I', '3', '2', 'm', '6', '4', 0,
  /* 4218 */ 'I', 'L', 'D', '_', 'F', 'p', '3', '2', 'm', '6', '4', 0,
  /* 4230 */ 'I', 'S', 'T', '_', 'F', 'p', '3', '2', 'm', '6', '4', 0,
  /* 4242 */ 'I', 'S', 'T', 'T', '_', 'F', 'p', '3', '2', 'm', '6', '4', 0,
  /* 4255 */ 'I', 'L', 'D', '_', 'F', 'p', '6', '4', 'm', '6', '4', 0,
  /* 4267 */ 'I', 'S', 'T', '_', 'F', 'p', '6', '4', 'm', '6', '4', 0,
  /* 4279 */ 'I', 'S', 'T', 'T', '_', 'F', 'p', '6', '4', 'm', '6', '4', 0,
  /* 4292 */ 'C', 'R', 'C', '3', '2', 'r', '6', '4', 'm', '6', '4', 0,
  /* 4304 */ 'S', 'U', 'B', '_', 'F', 'p', 'I', '1', '6', 'm', '6', '4', 0,
  /* 4317 */ 'A', 'D', 'D', '_', 'F', 'p', 'I', '1', '6', 'm', '6', '4', 0,
  /* 4330 */ 'M', 'U', 'L', '_', 'F', 'p', 'I', '1', '6', 'm', '6', '4', 0,
  /* 4343 */ 'S', 'U', 'B', 'R', '_', 'F', 'p', 'I', '1', '6', 'm', '6', '4', 0,
  /* 4357 */ 'D', 'I', 'V', 'R', '_', 'F', 'p', 'I', '1', '6', 'm', '6', '4', 0,
  /* 4371 */ 'D', 'I', 'V', '_', 'F', 'p', 'I', '1', '6', 'm', '6', '4', 0,
  /* 4384 */ 'I', 'L', 'D', '_', 'F', 'p', '1', '6', 'm', '6', '4', 0,
  /* 4396 */ 'I', 'S', 'T', '_', 'F', 'p', '1', '6', 'm', '6', '4', 0,
  /* 4408 */ 'I', 'S', 'T', 'T', '_', 'F', 'p', '1', '6', 'm', '6', '4', 0,
  /* 4421 */ 'T', 'A', 'I', 'L', 'J', 'M', 'P', 'm', '6', '4', 0,
  /* 4432 */ 'M', 'M', 'X', '_', 'P', 'S', 'H', 'U', 'F', 'B', 'r', 'm', '6', '4', 0,
  /* 4447 */ 'M', 'M', 'X', '_', 'P', 'S', 'I', 'G', 'N', 'B', 'r', 'm', '6', '4', 0,
  /* 4462 */ 'M', 'M', 'X', '_', 'P', 'A', 'B', 'S', 'B', 'r', 'm', '6', '4', 0,
  /* 4476 */ 'M', 'M', 'X', '_', 'P', 'H', 'S', 'U', 'B', 'D', 'r', 'm', '6', '4', 0,
  /* 4491 */ 'M', 'M', 'X', '_', 'P', 'H', 'A', 'D', 'D', 'r', 'm', '6', '4', 0,
  /* 4505 */ 'M', 'M', 'X', '_', 'P', 'S', 'I', 'G', 'N', 'D', 'r', 'm', '6', '4', 0,
  /* 4520 */ 'M', 'M', 'X', '_', 'P', 'A', 'B', 'S', 'D', 'r', 'm', '6', '4', 0,
  /* 4534 */ 'M', 'M', 'X', '_', 'P', 'H', 'S', 'U', 'B', 'W', 'r', 'm', '6', '4', 0,
  /* 4549 */ 'M', 'M', 'X', '_', 'P', 'H', 'A', 'D', 'D', 'W', 'r', 'm', '6', '4', 0,
  /* 4564 */ 'M', 'M', 'X', '_', 'P', 'S', 'I', 'G', 'N', 'W', 'r', 'm', '6', '4', 0,
  /* 4579 */ 'M', 'M', 'X', '_', 'P', 'A', 'B', 'S', 'W', 'r', 'm', '6', '4', 0,
  /* 4593 */ 'M', 'M', 'X', '_', 'P', 'M', 'A', 'D', 'D', 'U', 'B', 'S', 'W', 'r', 'm', '6', '4', 0,
  /* 4611 */ 'M', 'M', 'X', '_', 'P', 'H', 'S', 'U', 'B', 'S', 'W', 'r', 'm', '6', '4', 0,
  /* 4627 */ 'M', 'M', 'X', '_', 'P', 'H', 'A', 'D', 'D', 'S', 'W', 'r', 'm', '6', '4', 0,
  /* 4643 */ 'M', 'M', 'X', '_', 'P', 'M', 'U', 'L', 'H', 'R', 'S', 'W', 'r', 'm', '6', '4', 0,
  /* 4660 */ 'C', 'M', 'O', 'V', 'N', 'B', '_', 'F', 'p', '6', '4', 0,
  /* 4672 */ 'S', 'U', 'B', '_', 'F', 'p', '6', '4', 0,
  /* 4681 */ 'C', 'M', 'O', 'V', 'B', '_', 'F', 'p', '6', '4', 0,
  /* 4692 */ 'A', 'D', 'D', '_', 'F', 'p', '6', '4', 0,
  /* 4701 */ 'C', 'M', 'O', 'V', 'N', 'B', 'E', '_', 'F', 'p', '6', '4', 0,
  /* 4714 */ 'C', 'M', 'O', 'V', 'B', 'E', '_', 'F', 'p', '6', '4', 0,
  /* 4726 */ 'C', 'M', 'O', 'V', 'N', 'E', '_', 'F', 'p', '6', '4', 0,
  /* 4738 */ 'C', 'M', 'O', 'V', 'E', '_', 'F', 'p', '6', '4', 0,
  /* 4749 */ 'M', 'U', 'L', '_', 'F', 'p', '6', '4', 0,
  /* 4758 */ 'S', 'I', 'N', '_', 'F', 'p', '6', '4', 0,
  /* 4767 */ 'C', 'M', 'O', 'V', 'N', 'P', '_', 'F', 'p', '6', '4', 0,
  /* 4779 */ 'C', 'M', 'O', 'V', 'P', '_', 'F', 'p', '6', '4', 0,
  /* 4790 */ 'A', 'B', 'S', '_', 'F', 'p', '6', '4', 0,
  /* 4799 */ 'C', 'H', 'S', '_', 'F', 'p', '6', '4', 0,
  /* 4808 */ 'C', 'O', 'S', '_', 'F', 'p', '6', '4', 0,
  /* 4817 */ 'S', 'Q', 'R', 'T', '_', 'F', 'p', '6', '4', 0,
  /* 4827 */ 'T', 'S', 'T', '_', 'F', 'p', '6', '4', 0,
  /* 4836 */ 'D', 'I', 'V', '_', 'F', 'p', '6', '4', 0,
  /* 4845 */ 'C', 'R', 'C', '3', '2', 'r', '6', '4', 'r', '6', '4', 0,
  /* 4857 */ 'U', 'C', 'O', 'M', '_', 'F', 'p', 'I', 'r', '6', '4', 0,
  /* 4869 */ 'T', 'A', 'I', 'L', 'J', 'M', 'P', 'r', '6', '4', 0,
  /* 4880 */ 'X', 'C', 'H', 'G', '3', '2', 'a', 'r', '6', '4', 0,
  /* 4891 */ 'T', 'L', 'S', '_', 'a', 'd', 'd', 'r', '6', '4', 0,
  /* 4902 */ 'U', 'C', 'O', 'M', '_', 'F', 'p', 'r', '6', '4', 0,
  /* 4913 */ 'M', 'M', 'X', '_', 'P', 'S', 'H', 'U', 'F', 'B', 'r', 'r', '6', '4', 0,
  /* 4928 */ 'M', 'M', 'X', '_', 'P', 'S', 'I', 'G', 'N', 'B', 'r', 'r', '6', '4', 0,
  /* 4943 */ 'V', 'P', 'E', 'X', 'T', 'R', 'B', 'r', 'r', '6', '4', 0,
  /* 4955 */ 'M', 'M', 'X', '_', 'P', 'A', 'B', 'S', 'B', 'r', 'r', '6', '4', 0,
  /* 4969 */ 'M', 'M', 'X', '_', 'P', 'H', 'S', 'U', 'B', 'D', 'r', 'r', '6', '4', 0,
  /* 4984 */ 'M', 'M', 'X', '_', 'P', 'H', 'A', 'D', 'D', 'r', 'r', '6', '4', 0,
  /* 4998 */ 'M', 'M', 'X', '_', 'P', 'S', 'I', 'G', 'N', 'D', 'r', 'r', '6', '4', 0,
  /* 5013 */ 'V', 'M', 'O', 'V', 'M', 'S', 'K', 'P', 'D', 'r', 'r', '6', '4', 0,
  /* 5027 */ 'M', 'M', 'X', '_', 'P', 'A', 'B', 'S', 'D', 'r', 'r', '6', '4', 0,
  /* 5041 */ 'V', 'M', 'O', 'V', 'M', 'S', 'K', 'P', 'S', 'r', 'r', '6', '4', 0,
  /* 5055 */ 'V', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'P', 'S', 'r', 'r', '6', '4', 0,
  /* 5070 */ 'M', 'M', 'X', '_', 'P', 'H', 'S', 'U', 'B', 'W', 'r', 'r', '6', '4', 0,
  /* 5085 */ 'M', 'M', 'X', '_', 'P', 'H', 'A', 'D', 'D', 'W', 'r', 'r', '6', '4', 0,
  /* 5100 */ 'M', 'M', 'X', '_', 'P', 'S', 'I', 'G', 'N', 'W', 'r', 'r', '6', '4', 0,
  /* 5115 */ 'M', 'M', 'X', '_', 'P', 'A', 'B', 'S', 'W', 'r', 'r', '6', '4', 0,
  /* 5129 */ 'M', 'M', 'X', '_', 'P', 'M', 'A', 'D', 'D', 'U', 'B', 'S', 'W', 'r', 'r', '6', '4', 0,
  /* 5147 */ 'M', 'M', 'X', '_', 'P', 'H', 'S', 'U', 'B', 'S', 'W', 'r', 'r', '6', '4', 0,
  /* 5163 */ 'M', 'M', 'X', '_', 'P', 'H', 'A', 'D', 'D', 'S', 'W', 'r', 'r', '6', '4', 0,
  /* 5179 */ 'M', 'M', 'X', '_', 'P', 'M', 'U', 'L', 'H', 'R', 'S', 'W', 'r', 'r', '6', '4', 0,
  /* 5196 */ 'V', 'M', 'O', 'V', 'M', 'S', 'K', 'P', 'D', 'Y', 'r', 'r', '6', '4', 0,
  /* 5211 */ 'V', 'M', 'O', 'V', 'M', 'S', 'K', 'P', 'S', 'Y', 'r', 'r', '6', '4', 0,
  /* 5226 */ 'J', 'A', '_', '4', 0,
  /* 5231 */ 'J', 'B', '_', '4', 0,
  /* 5236 */ 'J', 'A', 'E', '_', '4', 0,
  /* 5242 */ 'J', 'B', 'E', '_', '4', 0,
  /* 5248 */ 'J', 'G', 'E', '_', '4', 0,
  /* 5254 */ 'J', 'E', '_', '4', 0,
  /* 5259 */ 'J', 'L', 'E', '_', '4', 0,
  /* 5265 */ 'J', 'N', 'E', '_', '4', 0,
  /* 5271 */ 'J', 'G', '_', '4', 0,
  /* 5276 */ 'J', 'L', '_', '4', 0,
  /* 5281 */ 'J', 'O', '_', '4', 0,
  /* 5286 */ 'J', 'N', 'O', '_', '4', 0,
  /* 5292 */ 'J', 'P', '_', '4', 0,
  /* 5297 */ 'J', 'M', 'P', '_', '4', 0,
  /* 5303 */ 'J', 'N', 'P', '_', '4', 0,
  /* 5309 */ 'J', 'S', '_', '4', 0,
  /* 5314 */ 'J', 'N', 'S', '_', '4', 0,
  /* 5320 */ 'L', 'X', 'A', 'D', 'D', '1', '6', 0,
  /* 5328 */ 'A', 'T', 'O', 'M', 'A', 'N', 'D', '1', '6', 0,
  /* 5338 */ 'A', 'T', 'O', 'M', 'N', 'A', 'N', 'D', '1', '6', 0,
  /* 5349 */ 'P', 'U', 'S', 'H', 'F', '1', '6', 0,
  /* 5357 */ 'P', 'O', 'P', 'F', '1', '6', 0,
  /* 5364 */ 'L', 'C', 'M', 'P', 'X', 'C', 'H', 'G', '1', '6', 0,
  /* 5375 */ 'A', 'T', 'O', 'M', 'M', 'I', 'N', '1', '6', 0,
  /* 5385 */ 'A', 'T', 'O', 'M', 'U', 'M', 'I', 'N', '1', '6', 0,
  /* 5396 */ 'C', 'M', 'O', 'V', '_', 'G', 'R', '1', '6', 0,
  /* 5406 */ 'A', 'T', 'O', 'M', 'O', 'R', '1', '6', 0,
  /* 5415 */ 'A', 'T', 'O', 'M', 'X', 'O', 'R', '1', '6', 0,
  /* 5425 */ 'S', 'C', 'A', 'S', '1', '6', 0,
  /* 5432 */ 'P', 'U', 'S', 'H', 'C', 'S', '1', '6', 0,
  /* 5441 */ 'P', 'U', 'S', 'H', 'D', 'S', '1', '6', 0,
  /* 5450 */ 'P', 'O', 'P', 'D', 'S', '1', '6', 0,
  /* 5458 */ 'P', 'U', 'S', 'H', 'E', 'S', '1', '6', 0,
  /* 5467 */ 'P', 'O', 'P', 'E', 'S', '1', '6', 0,
  /* 5475 */ 'P', 'U', 'S', 'H', 'F', 'S', '1', '6', 0,
  /* 5484 */ 'P', 'O', 'P', 'F', 'S', '1', '6', 0,
  /* 5492 */ 'P', 'U', 'S', 'H', 'G', 'S', '1', '6', 0,
  /* 5501 */ 'P', 'O', 'P', 'G', 'S', '1', '6', 0,
  /* 5509 */ 'C', 'M', 'P', 'S', '1', '6', 0,
  /* 5516 */ 'P', 'U', 'S', 'H', 'S', 'S', '1', '6', 0,
  /* 5525 */ 'P', 'O', 'P', 'S', 'S', '1', '6', 0,
  /* 5533 */ 'I', 'R', 'E', 'T', '1', '6', 0,
  /* 5540 */ 'A', 'T', 'O', 'M', 'M', 'A', 'X', '1', '6', 0,
  /* 5550 */ 'A', 'T', 'O', 'M', 'U', 'M', 'A', 'X', '1', '6', 0,
  /* 5561 */ 'P', 'U', 'S', 'H', '6', '4', 'i', '1', '6', 0,
  /* 5571 */ 'S', 'B', 'B', '1', '6', 'i', '1', '6', 0,
  /* 5580 */ 'S', 'U', 'B', '1', '6', 'i', '1', '6', 0,
  /* 5589 */ 'A', 'D', 'C', '1', '6', 'i', '1', '6', 0,
  /* 5598 */ 'A', 'D', 'D', '1', '6', 'i', '1', '6', 0,
  /* 5607 */ 'A', 'N', 'D', '1', '6', 'i', '1', '6', 0,
  /* 5616 */ 'C', 'M', 'P', '1', '6', 'i', '1', '6', 0,
  /* 5625 */ 'X', 'O', 'R', '1', '6', 'i', '1', '6', 0,
  /* 5634 */ 'T', 'E', 'S', 'T', '1', '6', 'i', '1', '6', 0,
  /* 5644 */ 'P', 'U', 'S', 'H', 'i', '1', '6', 0,
  /* 5652 */ 'C', 'A', 'L', 'L', 'p', 'c', 'r', 'e', 'l', '1', '6', 0,
  /* 5664 */ 'C', 'R', 'C', '3', '2', 'r', '3', '2', 'm', '1', '6', 0,
  /* 5676 */ 'M', 'O', 'V', 'S', 'X', '3', '2', 'r', 'm', '1', '6', 0,
  /* 5688 */ 'M', 'O', 'V', 'Z', 'X', '3', '2', 'r', 'm', '1', '6', 0,
  /* 5700 */ 'M', 'O', 'V', 'S', 'X', '6', '4', 'r', 'm', '1', '6', 0,
  /* 5712 */ 'M', 'O', 'V', 'Z', 'X', '6', '4', 'r', 'm', '1', '6', 0,
  /* 5724 */ 'M', 'O', 'V', '1', '6', 'a', 'o', '1', '6', 0,
  /* 5734 */ 'C', 'R', 'C', '3', '2', 'r', '3', '2', 'r', '1', '6', 0,
  /* 5746 */ 'M', 'O', 'V', 'S', 'X', '3', '2', 'r', 'r', '1', '6', 0,
  /* 5758 */ 'M', 'O', 'V', 'Z', 'X', '3', '2', 'r', 'r', '1', '6', 0,
  /* 5770 */ 'M', 'O', 'V', 'S', 'X', '6', '4', 'r', 'r', '1', '6', 0,
  /* 5782 */ 'M', 'O', 'V', 'Z', 'X', '6', '4', 'r', 'r', '1', '6', 0,
  /* 5794 */ 'X', 'S', 'H', 'A', '2', '5', '6', 0,
  /* 5802 */ 'V', 'P', 'A', 'B', 'S', 'B', 'r', 'm', '2', '5', '6', 0,
  /* 5814 */ 'V', 'P', 'A', 'B', 'S', 'D', 'r', 'm', '2', '5', '6', 0,
  /* 5826 */ 'V', 'P', 'A', 'B', 'S', 'W', 'r', 'm', '2', '5', '6', 0,
  /* 5838 */ 'V', 'P', 'M', 'A', 'D', 'D', 'U', 'B', 'S', 'W', 'r', 'm', '2', '5', '6', 0,
  /* 5854 */ 'V', 'P', 'H', 'S', 'U', 'B', 'S', 'W', 'r', 'm', '2', '5', '6', 0,
  /* 5868 */ 'V', 'P', 'H', 'A', 'D', 'D', 'S', 'W', 'r', 'm', '2', '5', '6', 0,
  /* 5882 */ 'V', 'P', 'M', 'U', 'L', 'H', 'R', 'S', 'W', 'r', 'm', '2', '5', '6', 0,
  /* 5897 */ 'V', 'P', 'A', 'B', 'S', 'B', 'r', 'r', '2', '5', '6', 0,
  /* 5909 */ 'V', 'P', 'A', 'B', 'S', 'D', 'r', 'r', '2', '5', '6', 0,
  /* 5921 */ 'V', 'P', 'A', 'B', 'S', 'W', 'r', 'r', '2', '5', '6', 0,
  /* 5933 */ 'V', 'P', 'M', 'A', 'D', 'D', 'U', 'B', 'S', 'W', 'r', 'r', '2', '5', '6', 0,
  /* 5949 */ 'V', 'P', 'H', 'S', 'U', 'B', 'S', 'W', 'r', 'r', '2', '5', '6', 0,
  /* 5963 */ 'V', 'P', 'H', 'A', 'D', 'D', 'S', 'W', 'r', 'r', '2', '5', '6', 0,
  /* 5977 */ 'V', 'P', 'M', 'U', 'L', 'H', 'R', 'S', 'W', 'r', 'r', '2', '5', '6', 0,
  /* 5992 */ 'V', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'F', '1', '2', '8', 0,
  /* 6007 */ 'V', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'I', '1', '2', '8', 0,
  /* 6022 */ 'V', 'P', 'A', 'B', 'S', 'B', 'r', 'm', '1', '2', '8', 0,
  /* 6034 */ 'V', 'P', 'A', 'B', 'S', 'D', 'r', 'm', '1', '2', '8', 0,
  /* 6046 */ 'V', 'P', 'A', 'B', 'S', 'W', 'r', 'm', '1', '2', '8', 0,
  /* 6058 */ 'V', 'P', 'M', 'A', 'D', 'D', 'U', 'B', 'S', 'W', 'r', 'm', '1', '2', '8', 0,
  /* 6074 */ 'V', 'P', 'H', 'S', 'U', 'B', 'S', 'W', 'r', 'm', '1', '2', '8', 0,
  /* 6088 */ 'V', 'P', 'H', 'A', 'D', 'D', 'S', 'W', 'r', 'm', '1', '2', '8', 0,
  /* 6102 */ 'V', 'P', 'M', 'U', 'L', 'H', 'R', 'S', 'W', 'r', 'm', '1', '2', '8', 0,
  /* 6117 */ 'V', 'P', 'H', 'M', 'I', 'N', 'P', 'O', 'S', 'U', 'W', 'r', 'm', '1', '2', '8', 0,
  /* 6134 */ 'V', 'P', 'A', 'B', 'S', 'B', 'r', 'r', '1', '2', '8', 0,
  /* 6146 */ 'V', 'P', 'A', 'B', 'S', 'D', 'r', 'r', '1', '2', '8', 0,
  /* 6158 */ 'V', 'P', 'A', 'B', 'S', 'W', 'r', 'r', '1', '2', '8', 0,
  /* 6170 */ 'V', 'P', 'M', 'A', 'D', 'D', 'U', 'B', 'S', 'W', 'r', 'r', '1', '2', '8', 0,
  /* 6186 */ 'V', 'P', 'H', 'S', 'U', 'B', 'S', 'W', 'r', 'r', '1', '2', '8', 0,
  /* 6200 */ 'V', 'P', 'H', 'A', 'D', 'D', 'S', 'W', 'r', 'r', '1', '2', '8', 0,
  /* 6214 */ 'V', 'P', 'M', 'U', 'L', 'H', 'R', 'S', 'W', 'r', 'r', '1', '2', '8', 0,
  /* 6229 */ 'V', 'P', 'H', 'M', 'I', 'N', 'P', 'O', 'S', 'U', 'W', 'r', 'r', '1', '2', '8', 0,
  /* 6246 */ 'L', 'X', 'A', 'D', 'D', '8', 0,
  /* 6253 */ 'A', 'T', 'O', 'M', 'A', 'N', 'D', '8', 0,
  /* 6262 */ 'A', 'T', 'O', 'M', 'N', 'A', 'N', 'D', '8', 0,
  /* 6272 */ 'L', 'C', 'M', 'P', 'X', 'C', 'H', 'G', '8', 0,
  /* 6282 */ 'I', 'N', '8', 0,
  /* 6286 */ 'C', 'M', 'O', 'V', '_', 'G', 'R', '8', 0,
  /* 6295 */ 'A', 'T', 'O', 'M', 'O', 'R', '8', 0,
  /* 6303 */ 'A', 'T', 'O', 'M', 'X', 'O', 'R', '8', 0,
  /* 6312 */ 'S', 'C', 'A', 'S', '8', 0,
  /* 6318 */ 'C', 'M', 'P', 'S', '8', 0,
  /* 6324 */ 'P', 'U', 'S', 'H', '6', '4', 'i', '8', 0,
  /* 6333 */ 'S', 'B', 'B', '8', 'i', '8', 0,
  /* 6340 */ 'S', 'U', 'B', '8', 'i', '8', 0,
  /* 6347 */ 'A', 'D', 'C', '8', 'i', '8', 0,
  /* 6354 */ 'A', 'A', 'D', '8', 'i', '8', 0,
  /* 6361 */ 'A', 'D', 'D', '8', 'i', '8', 0,
  /* 6368 */ 'A', 'N', 'D', '8', 'i', '8', 0,
  /* 6375 */ 'A', 'A', 'M', '8', 'i', '8', 0,
  /* 6382 */ 'C', 'M', 'P', '8', 'i', '8', 0,
  /* 6389 */ 'X', 'O', 'R', '8', 'i', '8', 0,
  /* 6396 */ 'T', 'E', 'S', 'T', '8', 'i', '8', 0,
  /* 6404 */ 'P', 'U', 'S', 'H', 'i', '8', 0,
  /* 6411 */ 'S', 'B', 'B', '3', '2', 'm', 'i', '8', 0,
  /* 6420 */ 'L', 'O', 'C', 'K', '_', 'S', 'U', 'B', '3', '2', 'm', 'i', '8', 0,
  /* 6434 */ 'A', 'D', 'C', '3', '2', 'm', 'i', '8', 0,
  /* 6443 */ 'B', 'T', 'C', '3', '2', 'm', 'i', '8', 0,
  /* 6452 */ 'L', 'O', 'C', 'K', '_', 'A', 'D', 'D', '3', '2', 'm', 'i', '8', 0,
  /* 6466 */ 'L', 'O', 'C', 'K', '_', 'A', 'N', 'D', '3', '2', 'm', 'i', '8', 0,
  /* 6480 */ 'C', 'M', 'P', '3', '2', 'm', 'i', '8', 0,
  /* 6489 */ 'L', 'O', 'C', 'K', '_', 'X', 'O', 'R', '3', '2', 'm', 'i', '8', 0,
  /* 6503 */ 'L', 'O', 'C', 'K', '_', 'O', 'R', '3', '2', 'm', 'i', '8', 0,
  /* 6516 */ 'B', 'T', 'R', '3', '2', 'm', 'i', '8', 0,
  /* 6525 */ 'B', 'T', 'S', '3', '2', 'm', 'i', '8', 0,
  /* 6534 */ 'B', 'T', '3', '2', 'm', 'i', '8', 0,
  /* 6542 */ 'S', 'B', 'B', '6', '4', 'm', 'i', '8', 0,
  /* 6551 */ 'L', 'O', 'C', 'K', '_', 'S', 'U', 'B', '6', '4', 'm', 'i', '8', 0,
  /* 6565 */ 'A', 'D', 'C', '6', '4', 'm', 'i', '8', 0,
  /* 6574 */ 'B', 'T', 'C', '6', '4', 'm', 'i', '8', 0,
  /* 6583 */ 'L', 'O', 'C', 'K', '_', 'A', 'D', 'D', '6', '4', 'm', 'i', '8', 0,
  /* 6597 */ 'L', 'O', 'C', 'K', '_', 'A', 'N', 'D', '6', '4', 'm', 'i', '8', 0,
  /* 6611 */ 'C', 'M', 'P', '6', '4', 'm', 'i', '8', 0,
  /* 6620 */ 'L', 'O', 'C', 'K', '_', 'X', 'O', 'R', '6', '4', 'm', 'i', '8', 0,
  /* 6634 */ 'L', 'O', 'C', 'K', '_', 'O', 'R', '6', '4', 'm', 'i', '8', 0,
  /* 6647 */ 'B', 'T', 'R', '6', '4', 'm', 'i', '8', 0,
  /* 6656 */ 'B', 'T', 'S', '6', '4', 'm', 'i', '8', 0,
  /* 6665 */ 'B', 'T', '6', '4', 'm', 'i', '8', 0,
  /* 6673 */ 'S', 'B', 'B', '1', '6', 'm', 'i', '8', 0,
  /* 6682 */ 'L', 'O', 'C', 'K', '_', 'S', 'U', 'B', '1', '6', 'm', 'i', '8', 0,
  /* 6696 */ 'A', 'D', 'C', '1', '6', 'm', 'i', '8', 0,
  /* 6705 */ 'B', 'T', 'C', '1', '6', 'm', 'i', '8', 0,
  /* 6714 */ 'L', 'O', 'C', 'K', '_', 'A', 'D', 'D', '1', '6', 'm', 'i', '8', 0,
  /* 6728 */ 'L', 'O', 'C', 'K', '_', 'A', 'N', 'D', '1', '6', 'm', 'i', '8', 0,
  /* 6742 */ 'C', 'M', 'P', '1', '6', 'm', 'i', '8', 0,
  /* 6751 */ 'L', 'O', 'C', 'K', '_', 'X', 'O', 'R', '1', '6', 'm', 'i', '8', 0,
  /* 6765 */ 'L', 'O', 'C', 'K', '_', 'O', 'R', '1', '6', 'm', 'i', '8', 0,
  /* 6778 */ 'B', 'T', 'R', '1', '6', 'm', 'i', '8', 0,
  /* 6787 */ 'B', 'T', 'S', '1', '6', 'm', 'i', '8', 0,
  /* 6796 */ 'B', 'T', '1', '6', 'm', 'i', '8', 0,
  /* 6804 */ 'I', 'M', 'U', 'L', '3', '2', 'r', 'm', 'i', '8', 0,
  /* 6815 */ 'I', 'M', 'U', 'L', '6', '4', 'r', 'm', 'i', '8', 0,
  /* 6826 */ 'I', 'M', 'U', 'L', '1', '6', 'r', 'm', 'i', '8', 0,
  /* 6837 */ 'S', 'B', 'B', '3', '2', 'r', 'i', '8', 0,
  /* 6846 */ 'S', 'U', 'B', '3', '2', 'r', 'i', '8', 0,
  /* 6855 */ 'A', 'D', 'C', '3', '2', 'r', 'i', '8', 0,
  /* 6864 */ 'B', 'T', 'C', '3', '2', 'r', 'i', '8', 0,
  /* 6873 */ 'A', 'D', 'D', '3', '2', 'r', 'i', '8', 0,
  /* 6882 */ 'A', 'N', 'D', '3', '2', 'r', 'i', '8', 0,
  /* 6891 */ 'C', 'M', 'P', '3', '2', 'r', 'i', '8', 0,
  /* 6900 */ 'X', 'O', 'R', '3', '2', 'r', 'i', '8', 0,
  /* 6909 */ 'B', 'T', 'R', '3', '2', 'r', 'i', '8', 0,
  /* 6918 */ 'B', 'T', 'S', '3', '2', 'r', 'i', '8', 0,
  /* 6927 */ 'B', 'T', '3', '2', 'r', 'i', '8', 0,
  /* 6935 */ 'S', 'B', 'B', '6', '4', 'r', 'i', '8', 0,
  /* 6944 */ 'S', 'U', 'B', '6', '4', 'r', 'i', '8', 0,
  /* 6953 */ 'A', 'D', 'C', '6', '4', 'r', 'i', '8', 0,
  /* 6962 */ 'B', 'T', 'C', '6', '4', 'r', 'i', '8', 0,
  /* 6971 */ 'A', 'D', 'D', '6', '4', 'r', 'i', '8', 0,
  /* 6980 */ 'A', 'N', 'D', '6', '4', 'r', 'i', '8', 0,
  /* 6989 */ 'C', 'M', 'P', '6', '4', 'r', 'i', '8', 0,
  /* 6998 */ 'X', 'O', 'R', '6', '4', 'r', 'i', '8', 0,
  /* 7007 */ 'B', 'T', 'R', '6', '4', 'r', 'i', '8', 0,
  /* 7016 */ 'B', 'T', 'S', '6', '4', 'r', 'i', '8', 0,
  /* 7025 */ 'B', 'T', '6', '4', 'r', 'i', '8', 0,
  /* 7033 */ 'S', 'B', 'B', '1', '6', 'r', 'i', '8', 0,
  /* 7042 */ 'S', 'U', 'B', '1', '6', 'r', 'i', '8', 0,
  /* 7051 */ 'A', 'D', 'C', '1', '6', 'r', 'i', '8', 0,
  /* 7060 */ 'B', 'T', 'C', '1', '6', 'r', 'i', '8', 0,
  /* 7069 */ 'A', 'D', 'D', '1', '6', 'r', 'i', '8', 0,
  /* 7078 */ 'A', 'N', 'D', '1', '6', 'r', 'i', '8', 0,
  /* 7087 */ 'C', 'M', 'P', '1', '6', 'r', 'i', '8', 0,
  /* 7096 */ 'X', 'O', 'R', '1', '6', 'r', 'i', '8', 0,
  /* 7105 */ 'B', 'T', 'R', '1', '6', 'r', 'i', '8', 0,
  /* 7114 */ 'B', 'T', 'S', '1', '6', 'r', 'i', '8', 0,
  /* 7123 */ 'B', 'T', '1', '6', 'r', 'i', '8', 0,
  /* 7131 */ 'S', 'H', 'L', 'D', '3', '2', 'm', 'r', 'i', '8', 0,
  /* 7142 */ 'S', 'H', 'R', 'D', '3', '2', 'm', 'r', 'i', '8', 0,
  /* 7153 */ 'S', 'H', 'L', 'D', '6', '4', 'm', 'r', 'i', '8', 0,
  /* 7164 */ 'S', 'H', 'R', 'D', '6', '4', 'm', 'r', 'i', '8', 0,
  /* 7175 */ 'S', 'H', 'L', 'D', '1', '6', 'm', 'r', 'i', '8', 0,
  /* 7186 */ 'S', 'H', 'R', 'D', '1', '6', 'm', 'r', 'i', '8', 0,
  /* 7197 */ 'S', 'H', 'L', 'D', '3', '2', 'r', 'r', 'i', '8', 0,
  /* 7208 */ 'S', 'H', 'R', 'D', '3', '2', 'r', 'r', 'i', '8', 0,
  /* 7219 */ 'I', 'M', 'U', 'L', '3', '2', 'r', 'r', 'i', '8', 0,
  /* 7230 */ 'S', 'H', 'L', 'D', '6', '4', 'r', 'r', 'i', '8', 0,
  /* 7241 */ 'S', 'H', 'R', 'D', '6', '4', 'r', 'r', 'i', '8', 0,
  /* 7252 */ 'I', 'M', 'U', 'L', '6', '4', 'r', 'r', 'i', '8', 0,
  /* 7263 */ 'S', 'H', 'L', 'D', '1', '6', 'r', 'r', 'i', '8', 0,
  /* 7274 */ 'S', 'H', 'R', 'D', '1', '6', 'r', 'r', 'i', '8', 0,
  /* 7285 */ 'I', 'M', 'U', 'L', '1', '6', 'r', 'r', 'i', '8', 0,
  /* 7296 */ 'C', 'R', 'C', '3', '2', 'r', '3', '2', 'm', '8', 0,
  /* 7307 */ 'C', 'R', 'C', '3', '2', 'r', '6', '4', 'm', '8', 0,
  /* 7318 */ 'M', 'O', 'V', 'S', 'X', '3', '2', 'r', 'm', '8', 0,
  /* 7329 */ 'M', 'O', 'V', 'Z', 'X', '3', '2', 'r', 'm', '8', 0,
  /* 7340 */ 'M', 'O', 'V', 'S', 'X', '6', '4', 'r', 'm', '8', 0,
  /* 7351 */ 'M', 'O', 'V', 'Z', 'X', '6', '4', 'r', 'm', '8', 0,
  /* 7362 */ 'M', 'O', 'V', 'S', 'X', '1', '6', 'r', 'm', '8', 0,
  /* 7373 */ 'M', 'O', 'V', 'Z', 'X', '1', '6', 'r', 'm', '8', 0,
  /* 7384 */ 'M', 'O', 'V', 'Z', 'X', '3', '2', '_', 'N', 'O', 'R', 'E', 'X', 'r', 'm', '8', 0,
  /* 7401 */ 'M', 'O', 'V', '8', 'a', 'o', '8', 0,
  /* 7409 */ 'C', 'R', 'C', '3', '2', 'r', '3', '2', 'r', '8', 0,
  /* 7420 */ 'C', 'R', 'C', '3', '2', 'r', '6', '4', 'r', '8', 0,
  /* 7431 */ 'M', 'O', 'V', 'S', 'X', '3', '2', 'r', 'r', '8', 0,
  /* 7442 */ 'M', 'O', 'V', 'Z', 'X', '3', '2', 'r', 'r', '8', 0,
  /* 7453 */ 'M', 'O', 'V', 'S', 'X', '6', '4', 'r', 'r', '8', 0,
  /* 7464 */ 'M', 'O', 'V', 'Z', 'X', '6', '4', 'r', 'r', '8', 0,
  /* 7475 */ 'M', 'O', 'V', 'S', 'X', '1', '6', 'r', 'r', '8', 0,
  /* 7486 */ 'M', 'O', 'V', 'Z', 'X', '1', '6', 'r', 'r', '8', 0,
  /* 7497 */ 'M', 'O', 'V', 'Z', 'X', '3', '2', '_', 'N', 'O', 'R', 'E', 'X', 'r', 'r', '8', 0,
  /* 7514 */ 'A', 'A', 'A', 0,
  /* 7518 */ 'D', 'A', 'A', 0,
  /* 7522 */ 'W', '6', '4', 'A', 'L', 'L', 'O', 'C', 'A', 0,
  /* 7532 */ 'W', 'I', 'N', '_', 'A', 'L', 'L', 'O', 'C', 'A', 0,
  /* 7543 */ 'P', 'R', 'E', 'F', 'E', 'T', 'C', 'H', 'N', 'T', 'A', 0,
  /* 7555 */ 'U', 'D', '2', 'B', 0,
  /* 7560 */ 'L', 'C', 'M', 'P', 'X', 'C', 'H', 'G', '1', '6', 'B', 0,
  /* 7572 */ 'L', 'C', 'M', 'P', 'X', 'C', 'H', 'G', '8', 'B', 0,
  /* 7583 */ 'X', 'C', 'R', 'Y', 'P', 'T', 'E', 'C', 'B', 0,
  /* 7593 */ 'A', 'D', 'D', '6', '4', 'r', 'i', '3', '2', '_', 'D', 'B', 0,
  /* 7606 */ 'A', 'D', 'D', '3', '2', 'r', 'i', '8', '_', 'D', 'B', 0,
  /* 7618 */ 'A', 'D', 'D', '6', '4', 'r', 'i', '8', '_', 'D', 'B', 0,
  /* 7630 */ 'A', 'D', 'D', '1', '6', 'r', 'i', '8', '_', 'D', 'B', 0,
  /* 7642 */ 'A', 'D', 'D', '3', '2', 'r', 'i', '_', 'D', 'B', 0,
  /* 7653 */ 'A', 'D', 'D', '1', '6', 'r', 'i', '_', 'D', 'B', 0,
  /* 7664 */ 'A', 'D', 'D', '3', '2', 'r', 'r', '_', 'D', 'B', 0,
  /* 7675 */ 'A', 'D', 'D', '6', '4', 'r', 'r', '_', 'D', 'B', 0,
  /* 7686 */ 'A', 'D', 'D', '1', '6', 'r', 'r', '_', 'D', 'B', 0,
  /* 7697 */ 'X', 'C', 'R', 'Y', 'P', 'T', 'C', 'F', 'B', 0,
  /* 7707 */ 'X', 'C', 'R', 'Y', 'P', 'T', 'O', 'F', 'B', 0,
  /* 7717 */ 'L', 'O', 'D', 'S', 'B', 0,
  /* 7723 */ 'S', 'T', 'O', 'S', 'B', 0,
  /* 7729 */ 'O', 'U', 'T', 'S', 'B', 0,
  /* 7735 */ 'M', 'O', 'V', 'S', 'B', 0,
  /* 7741 */ 'X', 'C', 'R', 'Y', 'P', 'T', 'C', 'B', 'C', 0,
  /* 7751 */ 'C', 'L', 'C', 0,
  /* 7755 */ 'C', 'M', 'C', 0,
  /* 7759 */ 'R', 'D', 'P', 'M', 'C', 0,
  /* 7765 */ 'V', 'M', 'F', 'U', 'N', 'C', 0,
  /* 7772 */ 'R', 'D', 'T', 'S', 'C', 0,
  /* 7778 */ 'S', 'T', 'C', 0,
  /* 7782 */ 'C', 'P', 'U', 'I', 'D', 0,
  /* 7788 */ 'C', 'L', 'D', 0,
  /* 7792 */ 'F', 's', 'F', 'L', 'D', '0', 'S', 'D', 0,
  /* 7801 */ 'L', 'O', 'D', 'S', 'D', 0,
  /* 7807 */ 'S', 'T', 'O', 'S', 'D', 0,
  /* 7813 */ 'O', 'U', 'T', 'S', 'D', 0,
  /* 7819 */ 'M', 'O', 'V', 'S', 'D', 0,
  /* 7825 */ 'S', 'T', 'D', 0,
  /* 7829 */ 'W', 'B', 'I', 'N', 'V', 'D', 0,
  /* 7836 */ 'C', 'W', 'D', 0,
  /* 7840 */ 'F', 'L', 'D', 'L', '2', 'E', 0,
  /* 7847 */ 'L', 'F', 'E', 'N', 'C', 'E', 0,
  /* 7854 */ 'M', 'F', 'E', 'N', 'C', 'E', 0,
  /* 7861 */ 'S', 'F', 'E', 'N', 'C', 'E', 0,
  /* 7868 */ 'R', 'E', 'G', '_', 'S', 'E', 'Q', 'U', 'E', 'N', 'C', 'E', 0,
  /* 7881 */ 'C', 'W', 'D', 'E', 0,
  /* 7886 */ 'F', 'F', 'R', 'E', 'E', 0,
  /* 7892 */ 'F', 'S', 'C', 'A', 'L', 'E', 0,
  /* 7899 */ 'B', 'U', 'N', 'D', 'L', 'E', 0,
  /* 7906 */ 'V', 'M', 'R', 'E', 'S', 'U', 'M', 'E', 0,
  /* 7915 */ 'L', 'O', 'O', 'P', 'N', 'E', 0,
  /* 7922 */ 'L', 'O', 'O', 'P', 'E', 0,
  /* 7928 */ 'C', 'D', 'Q', 'E', 0,
  /* 7933 */ 'X', 'S', 'T', 'O', 'R', 'E', 0,
  /* 7940 */ 'R', 'D', 'F', 'S', 'B', 'A', 'S', 'E', 0,
  /* 7949 */ 'W', 'R', 'F', 'S', 'B', 'A', 'S', 'E', 0,
  /* 7958 */ 'R', 'D', 'G', 'S', 'B', 'A', 'S', 'E', 0,
  /* 7967 */ 'W', 'R', 'G', 'S', 'B', 'A', 'S', 'E', 0,
  /* 7976 */ 'P', 'A', 'U', 'S', 'E', 0,
  /* 7982 */ 'D', 'B', 'G', '_', 'V', 'A', 'L', 'U', 'E', 0,
  /* 7992 */ 'L', 'E', 'A', 'V', 'E', 0,
  /* 7998 */ 'F', 'X', 'S', 'A', 'V', 'E', 0,
  /* 8005 */ 'I', 'M', 'P', 'L', 'I', 'C', 'I', 'T', '_', 'D', 'E', 'F', 0,
  /* 8018 */ 'V', 'M', 'X', 'O', 'F', 'F', 0,
  /* 8025 */ 'L', 'A', 'H', 'F', 0,
  /* 8030 */ 'S', 'A', 'H', 'F', 0,
  /* 8035 */ 'C', 'M', 'O', 'V', 'N', 'B', '_', 'F', 0,
  /* 8044 */ 'C', 'M', 'O', 'V', 'B', '_', 'F', 0,
  /* 8052 */ 'C', 'M', 'O', 'V', 'N', 'B', 'E', '_', 'F', 0,
  /* 8062 */ 'C', 'M', 'O', 'V', 'B', 'E', '_', 'F', 0,
  /* 8071 */ 'C', 'M', 'O', 'V', 'N', 'E', '_', 'F', 0,
  /* 8080 */ 'C', 'M', 'O', 'V', 'E', '_', 'F', 0,
  /* 8088 */ 'X', 'C', 'H', '_', 'F', 0,
  /* 8094 */ 'S', 'I', 'N', '_', 'F', 0,
  /* 8100 */ 'C', 'M', 'O', 'V', 'N', 'P', '_', 'F', 0,
  /* 8109 */ 'C', 'M', 'O', 'V', 'P', '_', 'F', 0,
  /* 8117 */ 'A', 'B', 'S', '_', 'F', 0,
  /* 8123 */ 'C', 'H', 'S', '_', 'F', 0,
  /* 8129 */ 'C', 'O', 'S', '_', 'F', 0,
  /* 8135 */ 'S', 'Q', 'R', 'T', '_', 'F', 0,
  /* 8142 */ 'T', 'S', 'T', '_', 'F', 0,
  /* 8148 */ 'V', 'P', 'C', 'M', 'P', 'E', 'S', 'T', 'R', 'M', '1', '2', '8', 'R', 'E', 'G', 0,
  /* 8165 */ 'V', 'P', 'C', 'M', 'P', 'I', 'S', 'T', 'R', 'M', '1', '2', '8', 'R', 'E', 'G', 0,
  /* 8182 */ 'E', 'X', 'T', 'R', 'A', 'C', 'T', '_', 'S', 'U', 'B', 'R', 'E', 'G', 0,
  /* 8197 */ 'I', 'N', 'S', 'E', 'R', 'T', '_', 'S', 'U', 'B', 'R', 'E', 'G', 0,
  /* 8211 */ 'S', 'U', 'B', 'R', 'E', 'G', '_', 'T', 'O', '_', 'R', 'E', 'G', 0,
  /* 8225 */ 'I', 'N', 'V', 'L', 'P', 'G', 0,
  /* 8232 */ 'V', 'M', 'L', 'A', 'U', 'N', 'C', 'H', 0,
  /* 8241 */ 'P', 'R', 'E', 'F', 'E', 'T', 'C', 'H', 0,
  /* 8250 */ 'C', 'L', 'F', 'L', 'U', 'S', 'H', 0,
  /* 8258 */ 'C', 'L', 'G', 'I', 0,
  /* 8263 */ 'S', 'T', 'G', 'I', 0,
  /* 8268 */ 'P', 'H', 'I', 0,
  /* 8272 */ 'C', 'L', 'I', 0,
  /* 8276 */ 'F', 'L', 'D', 'P', 'I', 0,
  /* 8282 */ 'L', 'R', 'E', 'T', 'I', 0,
  /* 8288 */ 'S', 'T', 'I', 0,
  /* 8292 */ 'F', 'p', 'P', 'O', 'P', '_', 'R', 'E', 'T', 'V', 'A', 'L', 0,
  /* 8305 */ 'R', 'C', 'L', '3', '2', 'm', 'C', 'L', 0,
  /* 8314 */ 'S', 'H', 'L', '3', '2', 'm', 'C', 'L', 0,
  /* 8323 */ 'R', 'O', 'L', '3', '2', 'm', 'C', 'L', 0,
  /* 8332 */ 'S', 'A', 'R', '3', '2', 'm', 'C', 'L', 0,
  /* 8341 */ 'R', 'C', 'R', '3', '2', 'm', 'C', 'L', 0,
  /* 8350 */ 'S', 'H', 'R', '3', '2', 'm', 'C', 'L', 0,
  /* 8359 */ 'R', 'O', 'R', '3', '2', 'm', 'C', 'L', 0,
  /* 8368 */ 'R', 'C', 'L', '6', '4', 'm', 'C', 'L', 0,
  /* 8377 */ 'S', 'H', 'L', '6', '4', 'm', 'C', 'L', 0,
  /* 8386 */ 'R', 'O', 'L', '6', '4', 'm', 'C', 'L', 0,
  /* 8395 */ 'S', 'A', 'R', '6', '4', 'm', 'C', 'L', 0,
  /* 8404 */ 'R', 'C', 'R', '6', '4', 'm', 'C', 'L', 0,
  /* 8413 */ 'S', 'H', 'R', '6', '4', 'm', 'C', 'L', 0,
  /* 8422 */ 'R', 'O', 'R', '6', '4', 'm', 'C', 'L', 0,
  /* 8431 */ 'R', 'C', 'L', '1', '6', 'm', 'C', 'L', 0,
  /* 8440 */ 'S', 'H', 'L', '1', '6', 'm', 'C', 'L', 0,
  /* 8449 */ 'R', 'O', 'L', '1', '6', 'm', 'C', 'L', 0,
  /* 8458 */ 'S', 'A', 'R', '1', '6', 'm', 'C', 'L', 0,
  /* 8467 */ 'R', 'C', 'R', '1', '6', 'm', 'C', 'L', 0,
  /* 8476 */ 'S', 'H', 'R', '1', '6', 'm', 'C', 'L', 0,
  /* 8485 */ 'R', 'O', 'R', '1', '6', 'm', 'C', 'L', 0,
  /* 8494 */ 'R', 'C', 'L', '8', 'm', 'C', 'L', 0,
  /* 8502 */ 'S', 'H', 'L', '8', 'm', 'C', 'L', 0,
  /* 8510 */ 'R', 'O', 'L', '8', 'm', 'C', 'L', 0,
  /* 8518 */ 'S', 'A', 'R', '8', 'm', 'C', 'L', 0,
  /* 8526 */ 'R', 'C', 'R', '8', 'm', 'C', 'L', 0,
  /* 8534 */ 'S', 'H', 'R', '8', 'm', 'C', 'L', 0,
  /* 8542 */ 'R', 'O', 'R', '8', 'm', 'C', 'L', 0,
  /* 8550 */ 'R', 'C', 'L', '3', '2', 'r', 'C', 'L', 0,
  /* 8559 */ 'S', 'H', 'L', '3', '2', 'r', 'C', 'L', 0,
  /* 8568 */ 'R', 'O', 'L', '3', '2', 'r', 'C', 'L', 0,
  /* 8577 */ 'S', 'A', 'R', '3', '2', 'r', 'C', 'L', 0,
  /* 8586 */ 'R', 'C', 'R', '3', '2', 'r', 'C', 'L', 0,
  /* 8595 */ 'S', 'H', 'R', '3', '2', 'r', 'C', 'L', 0,
  /* 8604 */ 'R', 'O', 'R', '3', '2', 'r', 'C', 'L', 0,
  /* 8613 */ 'R', 'C', 'L', '6', '4', 'r', 'C', 'L', 0,
  /* 8622 */ 'S', 'H', 'L', '6', '4', 'r', 'C', 'L', 0,
  /* 8631 */ 'R', 'O', 'L', '6', '4', 'r', 'C', 'L', 0,
  /* 8640 */ 'S', 'A', 'R', '6', '4', 'r', 'C', 'L', 0,
  /* 8649 */ 'R', 'C', 'R', '6', '4', 'r', 'C', 'L', 0,
  /* 8658 */ 'S', 'H', 'R', '6', '4', 'r', 'C', 'L', 0,
  /* 8667 */ 'R', 'O', 'R', '6', '4', 'r', 'C', 'L', 0,
  /* 8676 */ 'R', 'C', 'L', '1', '6', 'r', 'C', 'L', 0,
  /* 8685 */ 'S', 'H', 'L', '1', '6', 'r', 'C', 'L', 0,
  /* 8694 */ 'R', 'O', 'L', '1', '6', 'r', 'C', 'L', 0,
  /* 8703 */ 'S', 'A', 'R', '1', '6', 'r', 'C', 'L', 0,
  /* 8712 */ 'R', 'C', 'R', '1', '6', 'r', 'C', 'L', 0,
  /* 8721 */ 'S', 'H', 'R', '1', '6', 'r', 'C', 'L', 0,
  /* 8730 */ 'R', 'O', 'R', '1', '6', 'r', 'C', 'L', 0,
  /* 8739 */ 'R', 'C', 'L', '8', 'r', 'C', 'L', 0,
  /* 8747 */ 'S', 'H', 'L', '8', 'r', 'C', 'L', 0,
  /* 8755 */ 'R', 'O', 'L', '8', 'r', 'C', 'L', 0,
  /* 8763 */ 'S', 'A', 'R', '8', 'r', 'C', 'L', 0,
  /* 8771 */ 'R', 'C', 'R', '8', 'r', 'C', 'L', 0,
  /* 8779 */ 'S', 'H', 'R', '8', 'r', 'C', 'L', 0,
  /* 8787 */ 'R', 'O', 'R', '8', 'r', 'C', 'L', 0,
  /* 8795 */ 'S', 'H', 'L', 'D', '3', '2', 'm', 'r', 'C', 'L', 0,
  /* 8806 */ 'S', 'H', 'R', 'D', '3', '2', 'm', 'r', 'C', 'L', 0,
  /* 8817 */ 'S', 'H', 'L', 'D', '6', '4', 'm', 'r', 'C', 'L', 0,
  /* 8828 */ 'S', 'H', 'R', 'D', '6', '4', 'm', 'r', 'C', 'L', 0,
  /* 8839 */ 'S', 'H', 'L', 'D', '1', '6', 'm', 'r', 'C', 'L', 0,
  /* 8850 */ 'S', 'H', 'R', 'D', '1', '6', 'm', 'r', 'C', 'L', 0,
  /* 8861 */ 'S', 'H', 'L', 'D', '3', '2', 'r', 'r', 'C', 'L', 0,
  /* 8872 */ 'S', 'H', 'R', 'D', '3', '2', 'r', 'r', 'C', 'L', 0,
  /* 8883 */ 'S', 'H', 'L', 'D', '6', '4', 'r', 'r', 'C', 'L', 0,
  /* 8894 */ 'S', 'H', 'R', 'D', '6', '4', 'r', 'r', 'C', 'L', 0,
  /* 8905 */ 'S', 'H', 'L', 'D', '1', '6', 'r', 'r', 'C', 'L', 0,
  /* 8916 */ 'S', 'H', 'R', 'D', '1', '6', 'r', 'r', 'C', 'L', 0,
  /* 8927 */ 'G', 'C', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 8936 */ 'P', 'R', 'O', 'L', 'O', 'G', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 8949 */ 'E', 'H', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 8958 */ 'V', 'M', 'M', 'C', 'A', 'L', 'L', 0,
  /* 8966 */ 'V', 'M', 'C', 'A', 'L', 'L', 0,
  /* 8973 */ 'S', 'Y', 'S', 'C', 'A', 'L', 'L', 0,
  /* 8981 */ 'V', 'Z', 'E', 'R', 'O', 'A', 'L', 'L', 0,
  /* 8990 */ 'K', 'I', 'L', 'L', 0,
  /* 8995 */ 'N', 'O', 'O', 'P', 'L', 0,
  /* 9001 */ 'L', 'R', 'E', 'T', 'L', 0,
  /* 9007 */ 'M', 'O', 'N', 'T', 'M', 'U', 'L', 0,
  /* 9015 */ 'F', 'X', 'A', 'M', 0,
  /* 9020 */ 'V', 'P', 'C', 'M', 'P', 'E', 'S', 'T', 'R', 'M', '1', '2', '8', 'M', 'E', 'M', 0,
  /* 9037 */ 'V', 'P', 'C', 'M', 'P', 'I', 'S', 'T', 'R', 'M', '1', '2', '8', 'M', 'E', 'M', 0,
  /* 9054 */ 'F', 'P', '8', '0', '_', 'T', 'O', '_', 'I', 'N', 'T', '3', '2', '_', 'I', 'N', '_', 'M', 'E', 'M', 0,
  /* 9075 */ 'F', 'P', '3', '2', '_', 'T', 'O', '_', 'I', 'N', 'T', '3', '2', '_', 'I', 'N', '_', 'M', 'E', 'M', 0,
  /* 9096 */ 'F', 'P', '6', '4', '_', 'T', 'O', '_', 'I', 'N', 'T', '3', '2', '_', 'I', 'N', '_', 'M', 'E', 'M', 0,
  /* 9117 */ 'F', 'P', '8', '0', '_', 'T', 'O', '_', 'I', 'N', 'T', '6', '4', '_', 'I', 'N', '_', 'M', 'E', 'M', 0,
  /* 9138 */ 'F', 'P', '3', '2', '_', 'T', 'O', '_', 'I', 'N', 'T', '6', '4', '_', 'I', 'N', '_', 'M', 'E', 'M', 0,
  /* 9159 */ 'F', 'P', '6', '4', '_', 'T', 'O', '_', 'I', 'N', 'T', '6', '4', '_', 'I', 'N', '_', 'M', 'E', 'M', 0,
  /* 9180 */ 'F', 'P', '8', '0', '_', 'T', 'O', '_', 'I', 'N', 'T', '1', '6', '_', 'I', 'N', '_', 'M', 'E', 'M', 0,
  /* 9201 */ 'F', 'P', '3', '2', '_', 'T', 'O', '_', 'I', 'N', 'T', '1', '6', '_', 'I', 'N', '_', 'M', 'E', 'M', 0,
  /* 9222 */ 'F', 'P', '6', '4', '_', 'T', 'O', '_', 'I', 'N', 'T', '1', '6', '_', 'I', 'N', '_', 'M', 'E', 'M', 0,
  /* 9243 */ 'F', 'P', 'R', 'E', 'M', 0,
  /* 9249 */ 'I', 'N', 'L', 'I', 'N', 'E', 'A', 'S', 'M', 0,
  /* 9259 */ 'R', 'S', 'M', 0,
  /* 9263 */ 'F', 'P', 'A', 'T', 'A', 'N', 0,
  /* 9270 */ 'F', 'P', 'T', 'A', 'N', 0,
  /* 9276 */ 'V', 'M', 'X', 'O', 'N', 0,
  /* 9282 */ 'E', 'H', '_', 'R', 'E', 'T', 'U', 'R', 'N', 0,
  /* 9292 */ 'C', 'Q', 'O', 0,
  /* 9296 */ 'I', 'N', 'T', 'O', 0,
  /* 9301 */ 'T', 'R', 'A', 'P', 0,
  /* 9306 */ 'R', 'D', 'T', 'S', 'C', 'P', 0,
  /* 9313 */ 'F', 'N', 'O', 'P', 0,
  /* 9318 */ 'L', 'O', 'O', 'P', 0,
  /* 9323 */ 'N', 'O', 'O', 'P', 0,
  /* 9328 */ 'F', 'C', 'O', 'M', 'P', 'P', 0,
  /* 9335 */ 'F', 'D', 'E', 'C', 'S', 'T', 'P', 0,
  /* 9343 */ 'F', 'I', 'N', 'C', 'S', 'T', 'P', 0,
  /* 9351 */ 'C', 'D', 'Q', 0,
  /* 9355 */ 'L', 'O', 'D', 'S', 'Q', 0,
  /* 9361 */ 'S', 'T', 'O', 'S', 'Q', 0,
  /* 9367 */ 'M', 'O', 'V', 'S', 'Q', 0,
  /* 9373 */ 'L', 'R', 'E', 'T', 'Q', 0,
  /* 9379 */ 'M', 'M', 'X', '_', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'Q', 0,
  /* 9392 */ 'M', 'O', 'V', 'Z', 'X', '6', '4', 'r', 'm', '1', '6', '_', 'Q', 0,
  /* 9406 */ 'M', 'O', 'V', 'Z', 'X', '6', '4', 'r', 'r', '1', '6', '_', 'Q', 0,
  /* 9420 */ 'M', 'O', 'V', 'Z', 'X', '6', '4', 'r', 'm', '8', '_', 'Q', 0,
  /* 9433 */ 'M', 'O', 'V', 'Z', 'X', '6', '4', 'r', 'r', '8', '_', 'Q', 0,
  /* 9446 */ 'V', 'Z', 'E', 'R', 'O', 'U', 'P', 'P', 'E', 'R', 0,
  /* 9457 */ 'S', 'Y', 'S', 'E', 'N', 'T', 'E', 'R', 0,
  /* 9466 */ 'M', 'O', 'N', 'I', 'T', 'O', 'R', 0,
  /* 9474 */ 'F', 'X', 'R', 'S', 'T', 'O', 'R', 0,
  /* 9482 */ 'V', 'L', 'D', 'M', 'X', 'C', 'S', 'R', 0,
  /* 9491 */ 'V', 'S', 'T', 'M', 'X', 'C', 'S', 'R', 0,
  /* 9500 */ 'R', 'D', 'M', 'S', 'R', 0,
  /* 9506 */ 'W', 'R', 'M', 'S', 'R', 0,
  /* 9512 */ 'X', 'C', 'R', 'Y', 'P', 'T', 'C', 'T', 'R', 0,
  /* 9522 */ 'A', 'A', 'S', 0,
  /* 9526 */ 'D', 'A', 'S', 0,
  /* 9530 */ 'A', 'V', 'X', '2', '_', 'S', 'E', 'T', 'A', 'L', 'L', 'O', 'N', 'E', 'S', 0,
  /* 9546 */ 'V', '_', 'S', 'E', 'T', 'A', 'L', 'L', 'O', 'N', 'E', 'S', 0,
  /* 9559 */ 'A', 'V', 'X', '_', 'S', 'E', 'T', 'A', 'L', 'L', 'O', 'N', 'E', 'S', 0,
  /* 9574 */ 'V', 'A', 'S', 'T', 'A', 'R', 'T', '_', 'S', 'A', 'V', 'E', '_', 'X', 'M', 'M', '_', 'R', 'E', 'G', 'S', 0,
  /* 9596 */ 'S', 'W', 'A', 'P', 'G', 'S', 0,
  /* 9603 */ 'F', 'E', 'M', 'M', 'S', 0,
  /* 9609 */ 'M', 'M', 'X', '_', 'E', 'M', 'M', 'S', 0,
  /* 9618 */ 'F', 'S', 'I', 'N', 'C', 'O', 'S', 0,
  /* 9626 */ 'F', 's', 'F', 'L', 'D', '0', 'S', 'S', 0,
  /* 9635 */ 'C', 'O', 'P', 'Y', '_', 'T', 'O', '_', 'R', 'E', 'G', 'C', 'L', 'A', 'S', 'S', 0,
  /* 9652 */ 'C', 'L', 'T', 'S', 0,
  /* 9657 */ 'F', 'L', 'D', 'L', '2', 'T', 0,
  /* 9664 */ 'X', 'L', 'A', 'T', 0,
  /* 9669 */ 'F', 'X', 'T', 'R', 'A', 'C', 'T', 0,
  /* 9677 */ 'S', 'Y', 'S', 'R', 'E', 'T', 0,
  /* 9684 */ 'M', 'O', 'R', 'E', 'S', 'T', 'A', 'C', 'K', '_', 'R', 'E', 'T', 0,
  /* 9698 */ 'M', 'W', 'A', 'I', 'T', 0,
  /* 9704 */ 'S', 'K', 'I', 'N', 'I', 'T', 0,
  /* 9711 */ 'F', 'N', 'I', 'N', 'I', 'T', 0,
  /* 9718 */ 'S', 'Y', 'S', 'E', 'X', 'I', 'T', 0,
  /* 9726 */ 'H', 'L', 'T', 0,
  /* 9730 */ 'F', 'R', 'N', 'D', 'I', 'N', 'T', 0,
  /* 9738 */ 'X', 'S', 'A', 'V', 'E', 'O', 'P', 'T', 0,
  /* 9747 */ 'V', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'D', 'Q', 'U', 0,
  /* 9759 */ 'X', 'G', 'E', 'T', 'B', 'V', 0,
  /* 9766 */ 'X', 'S', 'E', 'T', 'B', 'V', 0,
  /* 9773 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', '4', 'r', 'r', 'Y', '_', 'R', 'E', 'V', 0,
  /* 9793 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', '4', 'r', 'r', 'Y', '_', 'R', 'E', 'V', 0,
  /* 9810 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', '4', 'r', 'r', 'Y', '_', 'R', 'E', 'V', 0,
  /* 9828 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', '4', 'r', 'r', 'Y', '_', 'R', 'E', 'V', 0,
  /* 9848 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', '4', 'r', 'r', 'Y', '_', 'R', 'E', 'V', 0,
  /* 9865 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', '4', 'r', 'r', 'Y', '_', 'R', 'E', 'V', 0,
  /* 9883 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', '4', 'r', 'r', 'Y', '_', 'R', 'E', 'V', 0,
  /* 9903 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', '4', 'r', 'r', 'Y', '_', 'R', 'E', 'V', 0,
  /* 9920 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', '4', 'r', 'r', 'Y', '_', 'R', 'E', 'V', 0,
  /* 9938 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', '4', 'r', 'r', 'Y', '_', 'R', 'E', 'V', 0,
  /* 9958 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', '4', 'r', 'r', 'Y', '_', 'R', 'E', 'V', 0,
  /* 9975 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', '4', 'r', 'r', 'Y', '_', 'R', 'E', 'V', 0,
  /* 9993 */ 'S', 'B', 'B', '3', '2', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10005 */ 'S', 'U', 'B', '3', '2', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10017 */ 'A', 'D', 'C', '3', '2', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10029 */ 'A', 'D', 'D', '3', '2', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10041 */ 'A', 'N', 'D', '3', '2', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10053 */ 'C', 'M', 'P', '3', '2', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10065 */ 'X', 'O', 'R', '3', '2', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10077 */ 'M', 'O', 'V', '3', '2', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10089 */ 'S', 'B', 'B', '6', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10101 */ 'S', 'U', 'B', '6', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10113 */ 'A', 'D', 'C', '6', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10125 */ 'A', 'D', 'D', '6', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10137 */ 'A', 'N', 'D', '6', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10149 */ 'C', 'M', 'P', '6', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10161 */ 'X', 'O', 'R', '6', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10173 */ 'M', 'O', 'V', '6', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10185 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10204 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10220 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10237 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10256 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10272 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10289 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'D', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10305 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'D', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10322 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'D', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10338 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'D', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10355 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10374 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10390 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10407 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10426 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10442 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10459 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'S', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10475 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'S', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10492 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'S', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10508 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'S', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10525 */ 'S', 'B', 'B', '1', '6', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10537 */ 'S', 'U', 'B', '1', '6', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10549 */ 'A', 'D', 'C', '1', '6', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10561 */ 'A', 'D', 'D', '1', '6', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10573 */ 'A', 'N', 'D', '1', '6', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10585 */ 'C', 'M', 'P', '1', '6', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10597 */ 'X', 'O', 'R', '1', '6', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10609 */ 'M', 'O', 'V', '1', '6', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10621 */ 'S', 'B', 'B', '8', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10632 */ 'S', 'U', 'B', '8', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10643 */ 'A', 'D', 'C', '8', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10654 */ 'A', 'D', 'D', '8', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10665 */ 'A', 'N', 'D', '8', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10676 */ 'C', 'M', 'P', '8', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10687 */ 'X', 'O', 'R', '8', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10698 */ 'M', 'O', 'V', '8', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10709 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'A', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10723 */ 'V', 'M', 'O', 'V', 'A', 'P', 'D', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10737 */ 'V', 'M', 'O', 'V', 'U', 'P', 'D', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10751 */ 'V', 'M', 'O', 'V', 'S', 'D', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10764 */ 'V', 'M', 'O', 'V', 'A', 'P', 'S', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10778 */ 'V', 'M', 'O', 'V', 'U', 'P', 'S', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10792 */ 'V', 'M', 'O', 'V', 'S', 'S', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10805 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'U', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10819 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'A', 'Y', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10834 */ 'V', 'M', 'O', 'V', 'A', 'P', 'D', 'Y', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10849 */ 'V', 'M', 'O', 'V', 'U', 'P', 'D', 'Y', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10864 */ 'V', 'M', 'O', 'V', 'A', 'P', 'S', 'Y', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10879 */ 'V', 'M', 'O', 'V', 'U', 'P', 'S', 'Y', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10894 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'U', 'Y', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10909 */ 'C', 'B', 'W', 0,
  /* 10913 */ 'P', 'R', 'E', 'F', 'E', 'T', 'C', 'H', 'W', 0,
  /* 10923 */ 'L', 'R', 'E', 'T', 'I', 'W', 0,
  /* 10930 */ 'N', 'O', 'O', 'P', 'W', 0,
  /* 10936 */ 'L', 'O', 'D', 'S', 'W', 0,
  /* 10942 */ 'S', 'T', 'O', 'S', 'W', 0,
  /* 10948 */ 'O', 'U', 'T', 'S', 'W', 0,
  /* 10954 */ 'M', 'O', 'V', 'S', 'W', 0,
  /* 10960 */ 'L', 'R', 'E', 'T', 'W', 0,
  /* 10966 */ 'F', 'Y', 'L', '2', 'X', 0,
  /* 10972 */ 'F', 'N', 'C', 'L', 'E', 'X', 0,
  /* 10979 */ 'T', 'E', 'S', 'T', '8', 'r', 'i', '_', 'N', 'O', 'R', 'E', 'X', 0,
  /* 10993 */ 'M', 'O', 'V', '8', 'r', 'm', '_', 'N', 'O', 'R', 'E', 'X', 0,
  /* 11006 */ 'M', 'O', 'V', '8', 'm', 'r', '_', 'N', 'O', 'R', 'E', 'X', 0,
  /* 11019 */ 'M', 'O', 'V', '8', 'r', 'r', '_', 'N', 'O', 'R', 'E', 'X', 0,
  /* 11032 */ 'R', 'E', 'X', '6', '4', '_', 'P', 'R', 'E', 'F', 'I', 'X', 0,
  /* 11045 */ 'D', 'A', 'T', 'A', '1', '6', '_', 'P', 'R', 'E', 'F', 'I', 'X', 0,
  /* 11059 */ 'R', 'E', 'P', 'N', 'E', '_', 'P', 'R', 'E', 'F', 'I', 'X', 0,
  /* 11072 */ 'L', 'O', 'C', 'K', '_', 'P', 'R', 'E', 'F', 'I', 'X', 0,
  /* 11084 */ 'R', 'E', 'P', '_', 'P', 'R', 'E', 'F', 'I', 'X', 0,
  /* 11095 */ 'C', 'S', '_', 'P', 'R', 'E', 'F', 'I', 'X', 0,
  /* 11105 */ 'D', 'S', '_', 'P', 'R', 'E', 'F', 'I', 'X', 0,
  /* 11115 */ 'E', 'S', '_', 'P', 'R', 'E', 'F', 'I', 'X', 0,
  /* 11125 */ 'F', 'S', '_', 'P', 'R', 'E', 'F', 'I', 'X', 0,
  /* 11135 */ 'G', 'S', '_', 'P', 'R', 'E', 'F', 'I', 'X', 0,
  /* 11145 */ 'S', 'S', '_', 'P', 'R', 'E', 'F', 'I', 'X', 0,
  /* 11155 */ 'A', 'V', 'X', '_', 'S', 'E', 'T', '0', 'P', 'D', 'Y', 0,
  /* 11167 */ 'C', 'O', 'P', 'Y', 0,
  /* 11172 */ 'A', 'V', 'X', '_', 'S', 'E', 'T', '0', 'P', 'S', 'Y', 0,
  /* 11184 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', 'r', '2', '3', '1', 'm', 'Y', 0,
  /* 11202 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '2', '3', '1', 'm', 'Y', 0,
  /* 11217 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '2', '3', '1', 'm', 'Y', 0,
  /* 11233 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', 'r', '2', '3', '1', 'm', 'Y', 0,
  /* 11251 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '2', '3', '1', 'm', 'Y', 0,
  /* 11266 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '2', '3', '1', 'm', 'Y', 0,
  /* 11282 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', 'r', '2', '3', '1', 'm', 'Y', 0,
  /* 11300 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '2', '3', '1', 'm', 'Y', 0,
  /* 11315 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '2', '3', '1', 'm', 'Y', 0,
  /* 11331 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', 'r', '2', '3', '1', 'm', 'Y', 0,
  /* 11349 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '2', '3', '1', 'm', 'Y', 0,
  /* 11364 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '2', '3', '1', 'm', 'Y', 0,
  /* 11380 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', 'r', '1', '3', '2', 'm', 'Y', 0,
  /* 11398 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '1', '3', '2', 'm', 'Y', 0,
  /* 11413 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '1', '3', '2', 'm', 'Y', 0,
  /* 11429 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', 'r', '1', '3', '2', 'm', 'Y', 0,
  /* 11447 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '1', '3', '2', 'm', 'Y', 0,
  /* 11462 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '1', '3', '2', 'm', 'Y', 0,
  /* 11478 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', 'r', '1', '3', '2', 'm', 'Y', 0,
  /* 11496 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '1', '3', '2', 'm', 'Y', 0,
  /* 11511 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '1', '3', '2', 'm', 'Y', 0,
  /* 11527 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', 'r', '1', '3', '2', 'm', 'Y', 0,
  /* 11545 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '1', '3', '2', 'm', 'Y', 0,
  /* 11560 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '1', '3', '2', 'm', 'Y', 0,
  /* 11576 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', 'r', '2', '1', '3', 'm', 'Y', 0,
  /* 11594 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '2', '1', '3', 'm', 'Y', 0,
  /* 11609 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '2', '1', '3', 'm', 'Y', 0,
  /* 11625 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', 'r', '2', '1', '3', 'm', 'Y', 0,
  /* 11643 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '2', '1', '3', 'm', 'Y', 0,
  /* 11658 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '2', '1', '3', 'm', 'Y', 0,
  /* 11674 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', 'r', '2', '1', '3', 'm', 'Y', 0,
  /* 11692 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '2', '1', '3', 'm', 'Y', 0,
  /* 11707 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '2', '1', '3', 'm', 'Y', 0,
  /* 11723 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', 'r', '2', '1', '3', 'm', 'Y', 0,
  /* 11741 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '2', '1', '3', 'm', 'Y', 0,
  /* 11756 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '2', '1', '3', 'm', 'Y', 0,
  /* 11772 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', '4', 'r', 'm', 'Y', 0,
  /* 11788 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', '4', 'r', 'm', 'Y', 0,
  /* 11801 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', '4', 'r', 'm', 'Y', 0,
  /* 11815 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', '4', 'r', 'm', 'Y', 0,
  /* 11831 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', '4', 'r', 'm', 'Y', 0,
  /* 11844 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', '4', 'r', 'm', 'Y', 0,
  /* 11858 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', '4', 'r', 'm', 'Y', 0,
  /* 11874 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', '4', 'r', 'm', 'Y', 0,
  /* 11887 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', '4', 'r', 'm', 'Y', 0,
  /* 11901 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', '4', 'r', 'm', 'Y', 0,
  /* 11917 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', '4', 'r', 'm', 'Y', 0,
  /* 11930 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', '4', 'r', 'm', 'Y', 0,
  /* 11944 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', '2', 'P', 'D', 'r', 'm', 'Y', 0,
  /* 11958 */ 'V', 'F', 'R', 'C', 'Z', 'P', 'D', 'r', 'm', 'Y', 0,
  /* 11969 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', '2', 'P', 'S', 'r', 'm', 'Y', 0,
  /* 11983 */ 'V', 'F', 'R', 'C', 'Z', 'P', 'S', 'r', 'm', 'Y', 0,
  /* 11994 */ 'V', 'P', 'C', 'M', 'O', 'V', 'r', 'm', 'Y', 0,
  /* 12004 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', 'r', '2', '3', '1', 'r', 'Y', 0,
  /* 12022 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '2', '3', '1', 'r', 'Y', 0,
  /* 12037 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '2', '3', '1', 'r', 'Y', 0,
  /* 12053 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', 'r', '2', '3', '1', 'r', 'Y', 0,
  /* 12071 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '2', '3', '1', 'r', 'Y', 0,
  /* 12086 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '2', '3', '1', 'r', 'Y', 0,
  /* 12102 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', 'r', '2', '3', '1', 'r', 'Y', 0,
  /* 12120 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '2', '3', '1', 'r', 'Y', 0,
  /* 12135 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '2', '3', '1', 'r', 'Y', 0,
  /* 12151 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', 'r', '2', '3', '1', 'r', 'Y', 0,
  /* 12169 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '2', '3', '1', 'r', 'Y', 0,
  /* 12184 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '2', '3', '1', 'r', 'Y', 0,
  /* 12200 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', 'r', '1', '3', '2', 'r', 'Y', 0,
  /* 12218 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '1', '3', '2', 'r', 'Y', 0,
  /* 12233 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '1', '3', '2', 'r', 'Y', 0,
  /* 12249 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', 'r', '1', '3', '2', 'r', 'Y', 0,
  /* 12267 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '1', '3', '2', 'r', 'Y', 0,
  /* 12282 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '1', '3', '2', 'r', 'Y', 0,
  /* 12298 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', 'r', '1', '3', '2', 'r', 'Y', 0,
  /* 12316 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '1', '3', '2', 'r', 'Y', 0,
  /* 12331 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '1', '3', '2', 'r', 'Y', 0,
  /* 12347 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', 'r', '1', '3', '2', 'r', 'Y', 0,
  /* 12365 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '1', '3', '2', 'r', 'Y', 0,
  /* 12380 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '1', '3', '2', 'r', 'Y', 0,
  /* 12396 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', 'r', '2', '1', '3', 'r', 'Y', 0,
  /* 12414 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '2', '1', '3', 'r', 'Y', 0,
  /* 12429 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '2', '1', '3', 'r', 'Y', 0,
  /* 12445 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', 'r', '2', '1', '3', 'r', 'Y', 0,
  /* 12463 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '2', '1', '3', 'r', 'Y', 0,
  /* 12478 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '2', '1', '3', 'r', 'Y', 0,
  /* 12494 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', 'r', '2', '1', '3', 'r', 'Y', 0,
  /* 12512 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '2', '1', '3', 'r', 'Y', 0,
  /* 12527 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '2', '1', '3', 'r', 'Y', 0,
  /* 12543 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', 'r', '2', '1', '3', 'r', 'Y', 0,
  /* 12561 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '2', '1', '3', 'r', 'Y', 0,
  /* 12576 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '2', '1', '3', 'r', 'Y', 0,
  /* 12592 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', '4', 'm', 'r', 'Y', 0,
  /* 12608 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', '4', 'm', 'r', 'Y', 0,
  /* 12621 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', '4', 'm', 'r', 'Y', 0,
  /* 12635 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', '4', 'm', 'r', 'Y', 0,
  /* 12651 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', '4', 'm', 'r', 'Y', 0,
  /* 12664 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', '4', 'm', 'r', 'Y', 0,
  /* 12678 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', '4', 'm', 'r', 'Y', 0,
  /* 12694 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', '4', 'm', 'r', 'Y', 0,
  /* 12707 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', '4', 'm', 'r', 'Y', 0,
  /* 12721 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', '4', 'm', 'r', 'Y', 0,
  /* 12737 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', '4', 'm', 'r', 'Y', 0,
  /* 12750 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', '4', 'm', 'r', 'Y', 0,
  /* 12764 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', '2', 'P', 'D', 'm', 'r', 'Y', 0,
  /* 12778 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', '2', 'P', 'S', 'm', 'r', 'Y', 0,
  /* 12792 */ 'V', 'P', 'C', 'M', 'O', 'V', 'm', 'r', 'Y', 0,
  /* 12802 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', '4', 'r', 'r', 'Y', 0,
  /* 12818 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', '4', 'r', 'r', 'Y', 0,
  /* 12831 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', '4', 'r', 'r', 'Y', 0,
  /* 12845 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', '4', 'r', 'r', 'Y', 0,
  /* 12861 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', '4', 'r', 'r', 'Y', 0,
  /* 12874 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', '4', 'r', 'r', 'Y', 0,
  /* 12888 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', '4', 'r', 'r', 'Y', 0,
  /* 12904 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', '4', 'r', 'r', 'Y', 0,
  /* 12917 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', '4', 'r', 'r', 'Y', 0,
  /* 12931 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', '4', 'r', 'r', 'Y', 0,
  /* 12947 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', '4', 'r', 'r', 'Y', 0,
  /* 12960 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', '4', 'r', 'r', 'Y', 0,
  /* 12974 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', '2', 'P', 'D', 'r', 'r', 'Y', 0,
  /* 12988 */ 'V', 'F', 'R', 'C', 'Z', 'P', 'D', 'r', 'r', 'Y', 0,
  /* 12999 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', '2', 'P', 'S', 'r', 'r', 'Y', 0,
  /* 13013 */ 'V', 'F', 'R', 'C', 'Z', 'P', 'S', 'r', 'r', 'Y', 0,
  /* 13024 */ 'V', 'P', 'C', 'M', 'O', 'V', 'r', 'r', 'Y', 0,
  /* 13034 */ 'J', 'C', 'X', 'Z', 0,
  /* 13039 */ 'J', 'R', 'C', 'X', 'Z', 0,
  /* 13045 */ 'M', 'O', 'V', '3', '2', 'o', '3', '2', 'a', 0,
  /* 13055 */ 'M', 'O', 'V', '1', '6', 'o', '1', '6', 'a', 0,
  /* 13065 */ 'M', 'O', 'V', '8', 'o', '8', 'a', 0,
  /* 13073 */ 'M', 'O', 'V', '3', '2', 'r', 'c', 0,
  /* 13081 */ 'M', 'O', 'V', '6', '4', 'r', 'c', 0,
  /* 13089 */ 'T', 'A', 'I', 'L', 'J', 'M', 'P', 'd', 0,
  /* 13098 */ 'O', 'R', '3', '2', 'm', 'r', 'L', 'o', 'c', 'k', 'e', 'd', 0,
  /* 13111 */ 'M', 'O', 'V', '3', '2', 'r', 'd', 0,
  /* 13119 */ 'M', 'O', 'V', '6', '4', 'r', 'd', 0,
  /* 13127 */ 'F', 'A', 'R', 'C', 'A', 'L', 'L', '3', '2', 'i', 0,
  /* 13138 */ 'F', 'A', 'R', 'J', 'M', 'P', '3', '2', 'i', 0,
  /* 13148 */ 'V', 'P', 'I', 'N', 'S', 'R', 'W', 'r', 'r', '6', '4', 'i', 0,
  /* 13161 */ 'F', 'A', 'R', 'C', 'A', 'L', 'L', '1', '6', 'i', 0,
  /* 13172 */ 'F', 'A', 'R', 'J', 'M', 'P', '1', '6', 'i', 0,
  /* 13182 */ 'T', 'C', 'R', 'E', 'T', 'U', 'R', 'N', 'd', 'i', 0,
  /* 13193 */ 'S', 'B', 'B', '3', '2', 'm', 'i', 0,
  /* 13201 */ 'L', 'O', 'C', 'K', '_', 'S', 'U', 'B', '3', '2', 'm', 'i', 0,
  /* 13214 */ 'A', 'D', 'C', '3', '2', 'm', 'i', 0,
  /* 13222 */ 'L', 'O', 'C', 'K', '_', 'A', 'D', 'D', '3', '2', 'm', 'i', 0,
  /* 13235 */ 'L', 'O', 'C', 'K', '_', 'A', 'N', 'D', '3', '2', 'm', 'i', 0,
  /* 13248 */ 'R', 'C', 'L', '3', '2', 'm', 'i', 0,
  /* 13256 */ 'S', 'H', 'L', '3', '2', 'm', 'i', 0,
  /* 13264 */ 'R', 'O', 'L', '3', '2', 'm', 'i', 0,
  /* 13272 */ 'C', 'M', 'P', '3', '2', 'm', 'i', 0,
  /* 13280 */ 'S', 'A', 'R', '3', '2', 'm', 'i', 0,
  /* 13288 */ 'R', 'C', 'R', '3', '2', 'm', 'i', 0,
  /* 13296 */ 'S', 'H', 'R', '3', '2', 'm', 'i', 0,
  /* 13304 */ 'R', 'O', 'R', '3', '2', 'm', 'i', 0,
  /* 13312 */ 'L', 'O', 'C', 'K', '_', 'X', 'O', 'R', '3', '2', 'm', 'i', 0,
  /* 13325 */ 'L', 'O', 'C', 'K', '_', 'O', 'R', '3', '2', 'm', 'i', 0,
  /* 13337 */ 'T', 'E', 'S', 'T', '3', '2', 'm', 'i', 0,
  /* 13346 */ 'M', 'O', 'V', '3', '2', 'm', 'i', 0,
  /* 13354 */ 'R', 'O', 'R', 'X', '3', '2', 'm', 'i', 0,
  /* 13363 */ 'R', 'C', 'L', '6', '4', 'm', 'i', 0,
  /* 13371 */ 'S', 'H', 'L', '6', '4', 'm', 'i', 0,
  /* 13379 */ 'R', 'O', 'L', '6', '4', 'm', 'i', 0,
  /* 13387 */ 'S', 'A', 'R', '6', '4', 'm', 'i', 0,
  /* 13395 */ 'R', 'C', 'R', '6', '4', 'm', 'i', 0,
  /* 13403 */ 'S', 'H', 'R', '6', '4', 'm', 'i', 0,
  /* 13411 */ 'R', 'O', 'R', '6', '4', 'm', 'i', 0,
  /* 13419 */ 'R', 'O', 'R', 'X', '6', '4', 'm', 'i', 0,
  /* 13428 */ 'S', 'B', 'B', '1', '6', 'm', 'i', 0,
  /* 13436 */ 'L', 'O', 'C', 'K', '_', 'S', 'U', 'B', '1', '6', 'm', 'i', 0,
  /* 13449 */ 'A', 'D', 'C', '1', '6', 'm', 'i', 0,
  /* 13457 */ 'L', 'O', 'C', 'K', '_', 'A', 'D', 'D', '1', '6', 'm', 'i', 0,
  /* 13470 */ 'L', 'O', 'C', 'K', '_', 'A', 'N', 'D', '1', '6', 'm', 'i', 0,
  /* 13483 */ 'R', 'C', 'L', '1', '6', 'm', 'i', 0,
  /* 13491 */ 'S', 'H', 'L', '1', '6', 'm', 'i', 0,
  /* 13499 */ 'R', 'O', 'L', '1', '6', 'm', 'i', 0,
  /* 13507 */ 'C', 'M', 'P', '1', '6', 'm', 'i', 0,
  /* 13515 */ 'S', 'A', 'R', '1', '6', 'm', 'i', 0,
  /* 13523 */ 'R', 'C', 'R', '1', '6', 'm', 'i', 0,
  /* 13531 */ 'S', 'H', 'R', '1', '6', 'm', 'i', 0,
  /* 13539 */ 'R', 'O', 'R', '1', '6', 'm', 'i', 0,
  /* 13547 */ 'L', 'O', 'C', 'K', '_', 'X', 'O', 'R', '1', '6', 'm', 'i', 0,
  /* 13560 */ 'L', 'O', 'C', 'K', '_', 'O', 'R', '1', '6', 'm', 'i', 0,
  /* 13572 */ 'T', 'E', 'S', 'T', '1', '6', 'm', 'i', 0,
  /* 13581 */ 'M', 'O', 'V', '1', '6', 'm', 'i', 0,
  /* 13589 */ 'S', 'B', 'B', '8', 'm', 'i', 0,
  /* 13596 */ 'L', 'O', 'C', 'K', '_', 'S', 'U', 'B', '8', 'm', 'i', 0,
  /* 13608 */ 'A', 'D', 'C', '8', 'm', 'i', 0,
  /* 13615 */ 'L', 'O', 'C', 'K', '_', 'A', 'D', 'D', '8', 'm', 'i', 0,
  /* 13627 */ 'L', 'O', 'C', 'K', '_', 'A', 'N', 'D', '8', 'm', 'i', 0,
  /* 13639 */ 'R', 'C', 'L', '8', 'm', 'i', 0,
  /* 13646 */ 'S', 'H', 'L', '8', 'm', 'i', 0,
  /* 13653 */ 'R', 'O', 'L', '8', 'm', 'i', 0,
  /* 13660 */ 'C', 'M', 'P', '8', 'm', 'i', 0,
  /* 13667 */ 'S', 'A', 'R', '8', 'm', 'i', 0,
  /* 13674 */ 'R', 'C', 'R', '8', 'm', 'i', 0,
  /* 13681 */ 'S', 'H', 'R', '8', 'm', 'i', 0,
  /* 13688 */ 'R', 'O', 'R', '8', 'm', 'i', 0,
  /* 13695 */ 'L', 'O', 'C', 'K', '_', 'X', 'O', 'R', '8', 'm', 'i', 0,
  /* 13707 */ 'L', 'O', 'C', 'K', '_', 'O', 'R', '8', 'm', 'i', 0,
  /* 13718 */ 'T', 'E', 'S', 'T', '8', 'm', 'i', 0,
  /* 13726 */ 'M', 'O', 'V', '8', 'm', 'i', 0,
  /* 13733 */ 'V', 'P', 'C', 'O', 'M', 'B', 'm', 'i', 0,
  /* 13742 */ 'V', 'P', 'R', 'O', 'T', 'B', 'm', 'i', 0,
  /* 13751 */ 'V', 'P', 'C', 'O', 'M', 'U', 'B', 'm', 'i', 0,
  /* 13761 */ 'V', 'P', 'S', 'H', 'U', 'F', 'D', 'm', 'i', 0,
  /* 13771 */ 'V', 'P', 'C', 'O', 'M', 'D', 'm', 'i', 0,
  /* 13780 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', 'P', 'D', 'm', 'i', 0,
  /* 13792 */ 'V', 'P', 'R', 'O', 'T', 'D', 'm', 'i', 0,
  /* 13801 */ 'V', 'P', 'C', 'O', 'M', 'U', 'D', 'm', 'i', 0,
  /* 13811 */ 'T', 'C', 'R', 'E', 'T', 'U', 'R', 'N', 'm', 'i', 0,
  /* 13822 */ 'V', 'P', 'C', 'O', 'M', 'Q', 'm', 'i', 0,
  /* 13831 */ 'V', 'P', 'R', 'O', 'T', 'Q', 'm', 'i', 0,
  /* 13840 */ 'V', 'P', 'C', 'O', 'M', 'U', 'Q', 'm', 'i', 0,
  /* 13850 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', 'P', 'S', 'm', 'i', 0,
  /* 13862 */ 'M', 'M', 'X', '_', 'P', 'S', 'H', 'U', 'F', 'W', 'm', 'i', 0,
  /* 13875 */ 'V', 'P', 'S', 'H', 'U', 'F', 'H', 'W', 'm', 'i', 0,
  /* 13886 */ 'V', 'P', 'S', 'H', 'U', 'F', 'L', 'W', 'm', 'i', 0,
  /* 13897 */ 'V', 'P', 'C', 'O', 'M', 'W', 'm', 'i', 0,
  /* 13906 */ 'V', 'P', 'R', 'O', 'T', 'W', 'm', 'i', 0,
  /* 13915 */ 'V', 'P', 'C', 'O', 'M', 'U', 'W', 'm', 'i', 0,
  /* 13925 */ 'V', 'P', 'S', 'H', 'U', 'F', 'D', 'Y', 'm', 'i', 0,
  /* 13936 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', 'P', 'D', 'Y', 'm', 'i', 0,
  /* 13949 */ 'V', 'P', 'E', 'R', 'M', 'P', 'D', 'Y', 'm', 'i', 0,
  /* 13960 */ 'V', 'P', 'E', 'R', 'M', 'Q', 'Y', 'm', 'i', 0,
  /* 13970 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', 'P', 'S', 'Y', 'm', 'i', 0,
  /* 13983 */ 'V', 'P', 'S', 'H', 'U', 'F', 'H', 'W', 'Y', 'm', 'i', 0,
  /* 13995 */ 'V', 'P', 'S', 'H', 'U', 'F', 'L', 'W', 'Y', 'm', 'i', 0,
  /* 14007 */ 'I', 'M', 'U', 'L', '3', '2', 'r', 'm', 'i', 0,
  /* 14017 */ 'I', 'M', 'U', 'L', '1', '6', 'r', 'm', 'i', 0,
  /* 14027 */ 'V', 'P', 'B', 'L', 'E', 'N', 'D', 'D', 'r', 'm', 'i', 0,
  /* 14039 */ 'V', 'B', 'L', 'E', 'N', 'D', 'P', 'D', 'r', 'm', 'i', 0,
  /* 14051 */ 'V', 'S', 'H', 'U', 'F', 'P', 'D', 'r', 'm', 'i', 0,
  /* 14062 */ 'V', 'D', 'P', 'P', 'D', 'r', 'm', 'i', 0,
  /* 14071 */ 'V', 'C', 'M', 'P', 'P', 'D', 'r', 'm', 'i', 0,
  /* 14081 */ 'V', 'B', 'L', 'E', 'N', 'D', 'P', 'S', 'r', 'm', 'i', 0,
  /* 14093 */ 'V', 'S', 'H', 'U', 'F', 'P', 'S', 'r', 'm', 'i', 0,
  /* 14104 */ 'V', 'D', 'P', 'P', 'S', 'r', 'm', 'i', 0,
  /* 14113 */ 'V', 'C', 'M', 'P', 'P', 'S', 'r', 'm', 'i', 0,
  /* 14123 */ 'V', 'M', 'P', 'S', 'A', 'D', 'B', 'W', 'r', 'm', 'i', 0,
  /* 14135 */ 'V', 'P', 'B', 'L', 'E', 'N', 'D', 'W', 'r', 'm', 'i', 0,
  /* 14147 */ 'V', 'P', 'I', 'N', 'S', 'R', 'W', 'r', 'm', 'i', 0,
  /* 14158 */ 'V', 'P', 'B', 'L', 'E', 'N', 'D', 'D', 'Y', 'r', 'm', 'i', 0,
  /* 14171 */ 'V', 'B', 'L', 'E', 'N', 'D', 'P', 'D', 'Y', 'r', 'm', 'i', 0,
  /* 14184 */ 'V', 'S', 'H', 'U', 'F', 'P', 'D', 'Y', 'r', 'm', 'i', 0,
  /* 14196 */ 'V', 'C', 'M', 'P', 'P', 'D', 'Y', 'r', 'm', 'i', 0,
  /* 14207 */ 'V', 'B', 'L', 'E', 'N', 'D', 'P', 'S', 'Y', 'r', 'm', 'i', 0,
  /* 14220 */ 'V', 'S', 'H', 'U', 'F', 'P', 'S', 'Y', 'r', 'm', 'i', 0,
  /* 14232 */ 'V', 'D', 'P', 'P', 'S', 'Y', 'r', 'm', 'i', 0,
  /* 14242 */ 'V', 'C', 'M', 'P', 'P', 'S', 'Y', 'r', 'm', 'i', 0,
  /* 14253 */ 'V', 'M', 'P', 'S', 'A', 'D', 'B', 'W', 'Y', 'r', 'm', 'i', 0,
  /* 14266 */ 'V', 'P', 'B', 'L', 'E', 'N', 'D', 'W', 'Y', 'r', 'm', 'i', 0,
  /* 14279 */ 'M', 'M', 'X', '_', 'P', 'I', 'N', 'S', 'R', 'W', 'i', 'r', 'm', 'i', 0,
  /* 14294 */ 'S', 'B', 'B', '3', '2', 'r', 'i', 0,
  /* 14302 */ 'S', 'U', 'B', '3', '2', 'r', 'i', 0,
  /* 14310 */ 'A', 'D', 'C', '3', '2', 'r', 'i', 0,
  /* 14318 */ 'A', 'D', 'D', '3', '2', 'r', 'i', 0,
  /* 14326 */ 'A', 'N', 'D', '3', '2', 'r', 'i', 0,
  /* 14334 */ 'R', 'C', 'L', '3', '2', 'r', 'i', 0,
  /* 14342 */ 'S', 'H', 'L', '3', '2', 'r', 'i', 0,
  /* 14350 */ 'R', 'O', 'L', '3', '2', 'r', 'i', 0,
  /* 14358 */ 'I', 'N', '3', '2', 'r', 'i', 0,
  /* 14365 */ 'C', 'M', 'P', '3', '2', 'r', 'i', 0,
  /* 14373 */ 'S', 'A', 'R', '3', '2', 'r', 'i', 0,
  /* 14381 */ 'R', 'C', 'R', '3', '2', 'r', 'i', 0,
  /* 14389 */ 'S', 'H', 'R', '3', '2', 'r', 'i', 0,
  /* 14397 */ 'R', 'O', 'R', '3', '2', 'r', 'i', 0,
  /* 14405 */ 'X', 'O', 'R', '3', '2', 'r', 'i', 0,
  /* 14413 */ 'T', 'E', 'S', 'T', '3', '2', 'r', 'i', 0,
  /* 14422 */ 'M', 'O', 'V', '3', '2', 'r', 'i', 0,
  /* 14430 */ 'R', 'O', 'R', 'X', '3', '2', 'r', 'i', 0,
  /* 14439 */ 'R', 'C', 'L', '6', '4', 'r', 'i', 0,
  /* 14447 */ 'S', 'H', 'L', '6', '4', 'r', 'i', 0,
  /* 14455 */ 'R', 'O', 'L', '6', '4', 'r', 'i', 0,
  /* 14463 */ 'S', 'A', 'R', '6', '4', 'r', 'i', 0,
  /* 14471 */ 'R', 'C', 'R', '6', '4', 'r', 'i', 0,
  /* 14479 */ 'S', 'H', 'R', '6', '4', 'r', 'i', 0,
  /* 14487 */ 'R', 'O', 'R', '6', '4', 'r', 'i', 0,
  /* 14495 */ 'M', 'O', 'V', '6', '4', 'r', 'i', 0,
  /* 14503 */ 'R', 'O', 'R', 'X', '6', '4', 'r', 'i', 0,
  /* 14512 */ 'S', 'B', 'B', '1', '6', 'r', 'i', 0,
  /* 14520 */ 'S', 'U', 'B', '1', '6', 'r', 'i', 0,
  /* 14528 */ 'A', 'D', 'C', '1', '6', 'r', 'i', 0,
  /* 14536 */ 'A', 'D', 'D', '1', '6', 'r', 'i', 0,
  /* 14544 */ 'A', 'N', 'D', '1', '6', 'r', 'i', 0,
  /* 14552 */ 'R', 'C', 'L', '1', '6', 'r', 'i', 0,
  /* 14560 */ 'S', 'H', 'L', '1', '6', 'r', 'i', 0,
  /* 14568 */ 'R', 'O', 'L', '1', '6', 'r', 'i', 0,
  /* 14576 */ 'I', 'N', '1', '6', 'r', 'i', 0,
  /* 14583 */ 'C', 'M', 'P', '1', '6', 'r', 'i', 0,
  /* 14591 */ 'S', 'A', 'R', '1', '6', 'r', 'i', 0,
  /* 14599 */ 'R', 'C', 'R', '1', '6', 'r', 'i', 0,
  /* 14607 */ 'S', 'H', 'R', '1', '6', 'r', 'i', 0,
  /* 14615 */ 'R', 'O', 'R', '1', '6', 'r', 'i', 0,
  /* 14623 */ 'X', 'O', 'R', '1', '6', 'r', 'i', 0,
  /* 14631 */ 'T', 'E', 'S', 'T', '1', '6', 'r', 'i', 0,
  /* 14640 */ 'M', 'O', 'V', '1', '6', 'r', 'i', 0,
  /* 14648 */ 'S', 'B', 'B', '8', 'r', 'i', 0,
  /* 14655 */ 'S', 'U', 'B', '8', 'r', 'i', 0,
  /* 14662 */ 'A', 'D', 'C', '8', 'r', 'i', 0,
  /* 14669 */ 'A', 'D', 'D', '8', 'r', 'i', 0,
  /* 14676 */ 'A', 'N', 'D', '8', 'r', 'i', 0,
  /* 14683 */ 'R', 'C', 'L', '8', 'r', 'i', 0,
  /* 14690 */ 'S', 'H', 'L', '8', 'r', 'i', 0,
  /* 14697 */ 'R', 'O', 'L', '8', 'r', 'i', 0,
  /* 14704 */ 'I', 'N', '8', 'r', 'i', 0,
  /* 14710 */ 'C', 'M', 'P', '8', 'r', 'i', 0,
  /* 14717 */ 'S', 'A', 'R', '8', 'r', 'i', 0,
  /* 14724 */ 'R', 'C', 'R', '8', 'r', 'i', 0,
  /* 14731 */ 'S', 'H', 'R', '8', 'r', 'i', 0,
  /* 14738 */ 'R', 'O', 'R', '8', 'r', 'i', 0,
  /* 14745 */ 'X', 'O', 'R', '8', 'r', 'i', 0,
  /* 14752 */ 'T', 'E', 'S', 'T', '8', 'r', 'i', 0,
  /* 14760 */ 'M', 'O', 'V', '8', 'r', 'i', 0,
  /* 14767 */ 'V', 'P', 'C', 'O', 'M', 'B', 'r', 'i', 0,
  /* 14776 */ 'V', 'P', 'R', 'O', 'T', 'B', 'r', 'i', 0,
  /* 14785 */ 'V', 'P', 'C', 'O', 'M', 'U', 'B', 'r', 'i', 0,
  /* 14795 */ 'V', 'P', 'S', 'R', 'A', 'D', 'r', 'i', 0,
  /* 14804 */ 'M', 'M', 'X', '_', 'P', 'S', 'R', 'A', 'D', 'r', 'i', 0,
  /* 14816 */ 'V', 'P', 'S', 'H', 'U', 'F', 'D', 'r', 'i', 0,
  /* 14826 */ 'V', 'P', 'S', 'L', 'L', 'D', 'r', 'i', 0,
  /* 14835 */ 'M', 'M', 'X', '_', 'P', 'S', 'L', 'L', 'D', 'r', 'i', 0,
  /* 14847 */ 'V', 'P', 'S', 'R', 'L', 'D', 'r', 'i', 0,
  /* 14856 */ 'M', 'M', 'X', '_', 'P', 'S', 'R', 'L', 'D', 'r', 'i', 0,
  /* 14868 */ 'V', 'P', 'C', 'O', 'M', 'D', 'r', 'i', 0,
  /* 14877 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', 'P', 'D', 'r', 'i', 0,
  /* 14889 */ 'V', 'P', 'R', 'O', 'T', 'D', 'r', 'i', 0,
  /* 14898 */ 'V', 'P', 'C', 'O', 'M', 'U', 'D', 'r', 'i', 0,
  /* 14908 */ 'T', 'C', 'R', 'E', 'T', 'U', 'R', 'N', 'r', 'i', 0,
  /* 14919 */ 'V', 'P', 'S', 'L', 'L', 'D', 'Q', 'r', 'i', 0,
  /* 14929 */ 'V', 'P', 'S', 'R', 'L', 'D', 'Q', 'r', 'i', 0,
  /* 14939 */ 'V', 'P', 'S', 'L', 'L', 'Q', 'r', 'i', 0,
  /* 14948 */ 'M', 'M', 'X', '_', 'P', 'S', 'L', 'L', 'Q', 'r', 'i', 0,
  /* 14960 */ 'V', 'P', 'S', 'R', 'L', 'Q', 'r', 'i', 0,
  /* 14969 */ 'M', 'M', 'X', '_', 'P', 'S', 'R', 'L', 'Q', 'r', 'i', 0,
  /* 14981 */ 'V', 'P', 'C', 'O', 'M', 'Q', 'r', 'i', 0,
  /* 14990 */ 'V', 'P', 'R', 'O', 'T', 'Q', 'r', 'i', 0,
  /* 14999 */ 'V', 'P', 'C', 'O', 'M', 'U', 'Q', 'r', 'i', 0,
  /* 15009 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', 'P', 'S', 'r', 'i', 0,
  /* 15021 */ 'V', 'P', 'S', 'R', 'A', 'W', 'r', 'i', 0,
  /* 15030 */ 'M', 'M', 'X', '_', 'P', 'S', 'R', 'A', 'W', 'r', 'i', 0,
  /* 15042 */ 'M', 'M', 'X', '_', 'P', 'S', 'H', 'U', 'F', 'W', 'r', 'i', 0,
  /* 15055 */ 'V', 'P', 'S', 'H', 'U', 'F', 'H', 'W', 'r', 'i', 0,
  /* 15066 */ 'V', 'P', 'S', 'H', 'U', 'F', 'L', 'W', 'r', 'i', 0,
  /* 15077 */ 'V', 'P', 'S', 'L', 'L', 'W', 'r', 'i', 0,
  /* 15086 */ 'M', 'M', 'X', '_', 'P', 'S', 'L', 'L', 'W', 'r', 'i', 0,
  /* 15098 */ 'V', 'P', 'S', 'R', 'L', 'W', 'r', 'i', 0,
  /* 15107 */ 'M', 'M', 'X', '_', 'P', 'S', 'R', 'L', 'W', 'r', 'i', 0,
  /* 15119 */ 'V', 'P', 'C', 'O', 'M', 'W', 'r', 'i', 0,
  /* 15128 */ 'V', 'P', 'E', 'X', 'T', 'R', 'W', 'r', 'i', 0,
  /* 15138 */ 'V', 'P', 'R', 'O', 'T', 'W', 'r', 'i', 0,
  /* 15147 */ 'V', 'P', 'C', 'O', 'M', 'U', 'W', 'r', 'i', 0,
  /* 15157 */ 'V', 'P', 'S', 'R', 'A', 'D', 'Y', 'r', 'i', 0,
  /* 15167 */ 'V', 'P', 'S', 'H', 'U', 'F', 'D', 'Y', 'r', 'i', 0,
  /* 15178 */ 'V', 'P', 'S', 'L', 'L', 'D', 'Y', 'r', 'i', 0,
  /* 15188 */ 'V', 'P', 'S', 'R', 'L', 'D', 'Y', 'r', 'i', 0,
  /* 15198 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', 'P', 'D', 'Y', 'r', 'i', 0,
  /* 15211 */ 'V', 'P', 'E', 'R', 'M', 'P', 'D', 'Y', 'r', 'i', 0,
  /* 15222 */ 'V', 'P', 'S', 'L', 'L', 'D', 'Q', 'Y', 'r', 'i', 0,
  /* 15233 */ 'V', 'P', 'S', 'R', 'L', 'D', 'Q', 'Y', 'r', 'i', 0,
  /* 15244 */ 'V', 'P', 'S', 'L', 'L', 'Q', 'Y', 'r', 'i', 0,
  /* 15254 */ 'V', 'P', 'S', 'R', 'L', 'Q', 'Y', 'r', 'i', 0,
  /* 15264 */ 'V', 'P', 'E', 'R', 'M', 'Q', 'Y', 'r', 'i', 0,
  /* 15274 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', 'P', 'S', 'Y', 'r', 'i', 0,
  /* 15287 */ 'V', 'P', 'S', 'R', 'A', 'W', 'Y', 'r', 'i', 0,
  /* 15297 */ 'V', 'P', 'S', 'H', 'U', 'F', 'H', 'W', 'Y', 'r', 'i', 0,
  /* 15309 */ 'V', 'P', 'S', 'H', 'U', 'F', 'L', 'W', 'Y', 'r', 'i', 0,
  /* 15321 */ 'V', 'P', 'S', 'L', 'L', 'W', 'Y', 'r', 'i', 0,
  /* 15331 */ 'V', 'P', 'S', 'R', 'L', 'W', 'Y', 'r', 'i', 0,
  /* 15341 */ 'I', 'M', 'U', 'L', '3', '2', 'r', 'r', 'i', 0,
  /* 15351 */ 'I', 'M', 'U', 'L', '1', '6', 'r', 'r', 'i', 0,
  /* 15361 */ 'V', 'P', 'B', 'L', 'E', 'N', 'D', 'D', 'r', 'r', 'i', 0,
  /* 15373 */ 'V', 'B', 'L', 'E', 'N', 'D', 'P', 'D', 'r', 'r', 'i', 0,
  /* 15385 */ 'V', 'S', 'H', 'U', 'F', 'P', 'D', 'r', 'r', 'i', 0,
  /* 15396 */ 'V', 'D', 'P', 'P', 'D', 'r', 'r', 'i', 0,
  /* 15405 */ 'V', 'C', 'M', 'P', 'P', 'D', 'r', 'r', 'i', 0,
  /* 15415 */ 'V', 'B', 'L', 'E', 'N', 'D', 'P', 'S', 'r', 'r', 'i', 0,
  /* 15427 */ 'V', 'S', 'H', 'U', 'F', 'P', 'S', 'r', 'r', 'i', 0,
  /* 15438 */ 'V', 'D', 'P', 'P', 'S', 'r', 'r', 'i', 0,
  /* 15447 */ 'V', 'C', 'M', 'P', 'P', 'S', 'r', 'r', 'i', 0,
  /* 15457 */ 'V', 'M', 'P', 'S', 'A', 'D', 'B', 'W', 'r', 'r', 'i', 0,
  /* 15469 */ 'V', 'P', 'B', 'L', 'E', 'N', 'D', 'W', 'r', 'r', 'i', 0,
  /* 15481 */ 'V', 'P', 'I', 'N', 'S', 'R', 'W', 'r', 'r', 'i', 0,
  /* 15492 */ 'V', 'P', 'B', 'L', 'E', 'N', 'D', 'D', 'Y', 'r', 'r', 'i', 0,
  /* 15505 */ 'V', 'B', 'L', 'E', 'N', 'D', 'P', 'D', 'Y', 'r', 'r', 'i', 0,
  /* 15518 */ 'V', 'S', 'H', 'U', 'F', 'P', 'D', 'Y', 'r', 'r', 'i', 0,
  /* 15530 */ 'V', 'C', 'M', 'P', 'P', 'D', 'Y', 'r', 'r', 'i', 0,
  /* 15541 */ 'V', 'B', 'L', 'E', 'N', 'D', 'P', 'S', 'Y', 'r', 'r', 'i', 0,
  /* 15554 */ 'V', 'S', 'H', 'U', 'F', 'P', 'S', 'Y', 'r', 'r', 'i', 0,
  /* 15566 */ 'V', 'D', 'P', 'P', 'S', 'Y', 'r', 'r', 'i', 0,
  /* 15576 */ 'V', 'C', 'M', 'P', 'P', 'S', 'Y', 'r', 'r', 'i', 0,
  /* 15587 */ 'V', 'M', 'P', 'S', 'A', 'D', 'B', 'W', 'Y', 'r', 'r', 'i', 0,
  /* 15600 */ 'V', 'P', 'B', 'L', 'E', 'N', 'D', 'W', 'Y', 'r', 'r', 'i', 0,
  /* 15613 */ 'M', 'M', 'X', '_', 'P', 'I', 'N', 'S', 'R', 'W', 'i', 'r', 'r', 'i', 0,
  /* 15628 */ 'M', 'M', 'X', '_', 'P', 'E', 'X', 'T', 'R', 'W', 'i', 'r', 'r', 'i', 0,
  /* 15643 */ 'L', 'D', '_', 'F', '8', '0', 'm', 0,
  /* 15651 */ 'S', 'T', '_', 'F', 'P', '8', '0', 'm', 0,
  /* 15660 */ 'S', 'T', '_', 'F', 'p', 'P', '8', '0', 'm', 0,
  /* 15670 */ 'L', 'D', '_', 'F', 'p', '8', '0', 'm', 0,
  /* 15679 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', 'r', '2', '3', '1', 'm', 0,
  /* 15696 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '2', '3', '1', 'm', 0,
  /* 15710 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '2', '3', '1', 'm', 0,
  /* 15725 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', 'r', '2', '3', '1', 'm', 0,
  /* 15742 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '2', '3', '1', 'm', 0,
  /* 15756 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '2', '3', '1', 'm', 0,
  /* 15771 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'D', 'r', '2', '3', '1', 'm', 0,
  /* 15785 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'D', 'r', '2', '3', '1', 'm', 0,
  /* 15800 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'D', 'r', '2', '3', '1', 'm', 0,
  /* 15814 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'D', 'r', '2', '3', '1', 'm', 0,
  /* 15829 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', 'r', '2', '3', '1', 'm', 0,
  /* 15846 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '2', '3', '1', 'm', 0,
  /* 15860 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '2', '3', '1', 'm', 0,
  /* 15875 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', 'r', '2', '3', '1', 'm', 0,
  /* 15892 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '2', '3', '1', 'm', 0,
  /* 15906 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '2', '3', '1', 'm', 0,
  /* 15921 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'S', 'r', '2', '3', '1', 'm', 0,
  /* 15935 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'S', 'r', '2', '3', '1', 'm', 0,
  /* 15950 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'S', 'r', '2', '3', '1', 'm', 0,
  /* 15964 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'S', 'r', '2', '3', '1', 'm', 0,
  /* 15979 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', 'r', '1', '3', '2', 'm', 0,
  /* 15996 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '1', '3', '2', 'm', 0,
  /* 16010 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '1', '3', '2', 'm', 0,
  /* 16025 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', 'r', '1', '3', '2', 'm', 0,
  /* 16042 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '1', '3', '2', 'm', 0,
  /* 16056 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '1', '3', '2', 'm', 0,
  /* 16071 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'D', 'r', '1', '3', '2', 'm', 0,
  /* 16085 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'D', 'r', '1', '3', '2', 'm', 0,
  /* 16100 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'D', 'r', '1', '3', '2', 'm', 0,
  /* 16114 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'D', 'r', '1', '3', '2', 'm', 0,
  /* 16129 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', 'r', '1', '3', '2', 'm', 0,
  /* 16146 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '1', '3', '2', 'm', 0,
  /* 16160 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '1', '3', '2', 'm', 0,
  /* 16175 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', 'r', '1', '3', '2', 'm', 0,
  /* 16192 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '1', '3', '2', 'm', 0,
  /* 16206 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '1', '3', '2', 'm', 0,
  /* 16221 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'S', 'r', '1', '3', '2', 'm', 0,
  /* 16235 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'S', 'r', '1', '3', '2', 'm', 0,
  /* 16250 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'S', 'r', '1', '3', '2', 'm', 0,
  /* 16264 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'S', 'r', '1', '3', '2', 'm', 0,
  /* 16279 */ 'L', 'O', 'C', 'K', '_', 'D', 'E', 'C', '3', '2', 'm', 0,
  /* 16291 */ 'L', 'O', 'C', 'K', '_', 'I', 'N', 'C', '3', '2', 'm', 0,
  /* 16303 */ 'S', 'U', 'B', '_', 'F', '3', '2', 'm', 0,
  /* 16312 */ 'A', 'D', 'D', '_', 'F', '3', '2', 'm', 0,
  /* 16321 */ 'I', 'L', 'D', '_', 'F', '3', '2', 'm', 0,
  /* 16330 */ 'M', 'U', 'L', '_', 'F', '3', '2', 'm', 0,
  /* 16339 */ 'S', 'U', 'B', 'R', '_', 'F', '3', '2', 'm', 0,
  /* 16349 */ 'D', 'I', 'V', 'R', '_', 'F', '3', '2', 'm', 0,
  /* 16359 */ 'I', 'S', 'T', '_', 'F', '3', '2', 'm', 0,
  /* 16368 */ 'D', 'I', 'V', '_', 'F', '3', '2', 'm', 0,
  /* 16377 */ 'N', 'E', 'G', '3', '2', 'm', 0,
  /* 16384 */ 'S', 'U', 'B', '_', 'F', 'I', '3', '2', 'm', 0,
  /* 16394 */ 'A', 'D', 'D', '_', 'F', 'I', '3', '2', 'm', 0,
  /* 16404 */ 'M', 'U', 'L', '_', 'F', 'I', '3', '2', 'm', 0,
  /* 16414 */ 'S', 'U', 'B', 'R', '_', 'F', 'I', '3', '2', 'm', 0,
  /* 16425 */ 'D', 'I', 'V', 'R', '_', 'F', 'I', '3', '2', 'm', 0,
  /* 16436 */ 'D', 'I', 'V', '_', 'F', 'I', '3', '2', 'm', 0,
  /* 16446 */ 'F', 'A', 'R', 'C', 'A', 'L', 'L', '3', '2', 'm', 0,
  /* 16457 */ 'I', 'M', 'U', 'L', '3', '2', 'm', 0,
  /* 16465 */ 'F', 'C', 'O', 'M', '3', '2', 'm', 0,
  /* 16473 */ 'F', 'I', 'C', 'O', 'M', '3', '2', 'm', 0,
  /* 16482 */ 'I', 'S', 'T', '_', 'F', 'P', '3', '2', 'm', 0,
  /* 16492 */ 'I', 'S', 'T', 'T', '_', 'F', 'P', '3', '2', 'm', 0,
  /* 16503 */ 'F', 'A', 'R', 'J', 'M', 'P', '3', '2', 'm', 0,
  /* 16513 */ 'F', 'C', 'O', 'M', 'P', '3', '2', 'm', 0,
  /* 16522 */ 'F', 'I', 'C', 'O', 'M', 'P', '3', '2', 'm', 0,
  /* 16532 */ 'S', 'T', '_', 'F', 'p', 'P', '3', '2', 'm', 0,
  /* 16542 */ 'N', 'O', 'T', '3', '2', 'm', 0,
  /* 16549 */ 'I', 'D', 'I', 'V', '3', '2', 'm', 0,
  /* 16557 */ 'D', 'E', 'C', '6', '4', '_', '3', '2', 'm', 0,
  /* 16567 */ 'I', 'N', 'C', '6', '4', '_', '3', '2', 'm', 0,
  /* 16577 */ 'S', 'U', 'B', '_', 'F', 'p', '3', '2', 'm', 0,
  /* 16587 */ 'A', 'D', 'D', '_', 'F', 'p', '3', '2', 'm', 0,
  /* 16597 */ 'L', 'D', '_', 'F', 'p', '3', '2', 'm', 0,
  /* 16606 */ 'M', 'U', 'L', '_', 'F', 'p', '3', '2', 'm', 0,
  /* 16616 */ 'S', 'U', 'B', 'R', '_', 'F', 'p', '3', '2', 'm', 0,
  /* 16627 */ 'D', 'I', 'V', 'R', '_', 'F', 'p', '3', '2', 'm', 0,
  /* 16638 */ 'S', 'T', '_', 'F', 'p', '3', '2', 'm', 0,
  /* 16647 */ 'D', 'I', 'V', '_', 'F', 'p', '3', '2', 'm', 0,
  /* 16657 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', 'r', '2', '1', '3', 'm', 0,
  /* 16674 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '2', '1', '3', 'm', 0,
  /* 16688 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '2', '1', '3', 'm', 0,
  /* 16703 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', 'r', '2', '1', '3', 'm', 0,
  /* 16720 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '2', '1', '3', 'm', 0,
  /* 16734 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '2', '1', '3', 'm', 0,
  /* 16749 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'D', 'r', '2', '1', '3', 'm', 0,
  /* 16763 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'D', 'r', '2', '1', '3', 'm', 0,
  /* 16778 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'D', 'r', '2', '1', '3', 'm', 0,
  /* 16792 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'D', 'r', '2', '1', '3', 'm', 0,
  /* 16807 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', 'r', '2', '1', '3', 'm', 0,
  /* 16824 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '2', '1', '3', 'm', 0,
  /* 16838 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '2', '1', '3', 'm', 0,
  /* 16853 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', 'r', '2', '1', '3', 'm', 0,
  /* 16870 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '2', '1', '3', 'm', 0,
  /* 16884 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '2', '1', '3', 'm', 0,
  /* 16899 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'S', 'r', '2', '1', '3', 'm', 0,
  /* 16913 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'S', 'r', '2', '1', '3', 'm', 0,
  /* 16928 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'S', 'r', '2', '1', '3', 'm', 0,
  /* 16942 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'S', 'r', '2', '1', '3', 'm', 0,
  /* 16957 */ 'L', 'O', 'C', 'K', '_', 'D', 'E', 'C', '6', '4', 'm', 0,
  /* 16969 */ 'L', 'O', 'C', 'K', '_', 'I', 'N', 'C', '6', '4', 'm', 0,
  /* 16981 */ 'S', 'U', 'B', '_', 'F', '6', '4', 'm', 0,
  /* 16990 */ 'A', 'D', 'D', '_', 'F', '6', '4', 'm', 0,
  /* 16999 */ 'I', 'L', 'D', '_', 'F', '6', '4', 'm', 0,
  /* 17008 */ 'M', 'U', 'L', '_', 'F', '6', '4', 'm', 0,
  /* 17017 */ 'S', 'U', 'B', 'R', '_', 'F', '6', '4', 'm', 0,
  /* 17027 */ 'D', 'I', 'V', 'R', '_', 'F', '6', '4', 'm', 0,
  /* 17037 */ 'S', 'T', '_', 'F', '6', '4', 'm', 0,
  /* 17045 */ 'D', 'I', 'V', '_', 'F', '6', '4', 'm', 0,
  /* 17054 */ 'N', 'E', 'G', '6', '4', 'm', 0,
  /* 17061 */ 'C', 'A', 'L', 'L', '6', '4', 'm', 0,
  /* 17069 */ 'I', 'M', 'U', 'L', '6', '4', 'm', 0,
  /* 17077 */ 'F', 'C', 'O', 'M', '6', '4', 'm', 0,
  /* 17085 */ 'I', 'S', 'T', '_', 'F', 'P', '6', '4', 'm', 0,
  /* 17095 */ 'I', 'S', 'T', 'T', '_', 'F', 'P', '6', '4', 'm', 0,
  /* 17106 */ 'J', 'M', 'P', '6', '4', 'm', 0,
  /* 17113 */ 'F', 'C', 'O', 'M', 'P', '6', '4', 'm', 0,
  /* 17122 */ 'S', 'T', '_', 'F', 'p', 'P', '6', '4', 'm', 0,
  /* 17132 */ 'S', 'L', 'D', 'T', '6', '4', 'm', 0,
  /* 17140 */ 'N', 'O', 'T', '6', '4', 'm', 0,
  /* 17147 */ 'I', 'D', 'I', 'V', '6', '4', 'm', 0,
  /* 17155 */ 'S', 'U', 'B', '_', 'F', 'p', '6', '4', 'm', 0,
  /* 17165 */ 'A', 'D', 'D', '_', 'F', 'p', '6', '4', 'm', 0,
  /* 17175 */ 'L', 'D', '_', 'F', 'p', '6', '4', 'm', 0,
  /* 17184 */ 'M', 'U', 'L', '_', 'F', 'p', '6', '4', 'm', 0,
  /* 17194 */ 'S', 'U', 'B', 'R', '_', 'F', 'p', '6', '4', 'm', 0,
  /* 17205 */ 'D', 'I', 'V', 'R', '_', 'F', 'p', '6', '4', 'm', 0,
  /* 17216 */ 'S', 'T', '_', 'F', 'p', '6', '4', 'm', 0,
  /* 17225 */ 'D', 'I', 'V', '_', 'F', 'p', '6', '4', 'm', 0,
  /* 17235 */ 'L', 'O', 'C', 'K', '_', 'D', 'E', 'C', '1', '6', 'm', 0,
  /* 17247 */ 'L', 'O', 'C', 'K', '_', 'I', 'N', 'C', '1', '6', 'm', 0,
  /* 17259 */ 'I', 'L', 'D', '_', 'F', '1', '6', 'm', 0,
  /* 17268 */ 'I', 'S', 'T', '_', 'F', '1', '6', 'm', 0,
  /* 17277 */ 'N', 'E', 'G', '1', '6', 'm', 0,
  /* 17284 */ 'S', 'U', 'B', '_', 'F', 'I', '1', '6', 'm', 0,
  /* 17294 */ 'A', 'D', 'D', '_', 'F', 'I', '1', '6', 'm', 0,
  /* 17304 */ 'M', 'U', 'L', '_', 'F', 'I', '1', '6', 'm', 0,
  /* 17314 */ 'S', 'U', 'B', 'R', '_', 'F', 'I', '1', '6', 'm', 0,
  /* 17325 */ 'D', 'I', 'V', 'R', '_', 'F', 'I', '1', '6', 'm', 0,
  /* 17336 */ 'D', 'I', 'V', '_', 'F', 'I', '1', '6', 'm', 0,
  /* 17346 */ 'F', 'A', 'R', 'C', 'A', 'L', 'L', '1', '6', 'm', 0,
  /* 17357 */ 'I', 'M', 'U', 'L', '1', '6', 'm', 0,
  /* 17365 */ 'F', 'I', 'C', 'O', 'M', '1', '6', 'm', 0,
  /* 17374 */ 'I', 'S', 'T', '_', 'F', 'P', '1', '6', 'm', 0,
  /* 17384 */ 'I', 'S', 'T', 'T', '_', 'F', 'P', '1', '6', 'm', 0,
  /* 17395 */ 'F', 'A', 'R', 'J', 'M', 'P', '1', '6', 'm', 0,
  /* 17405 */ 'F', 'I', 'C', 'O', 'M', 'P', '1', '6', 'm', 0,
  /* 17415 */ 'L', 'G', 'D', 'T', '1', '6', 'm', 0,
  /* 17423 */ 'S', 'G', 'D', 'T', '1', '6', 'm', 0,
  /* 17431 */ 'L', 'I', 'D', 'T', '1', '6', 'm', 0,
  /* 17439 */ 'S', 'I', 'D', 'T', '1', '6', 'm', 0,
  /* 17447 */ 'L', 'L', 'D', 'T', '1', '6', 'm', 0,
  /* 17455 */ 'S', 'L', 'D', 'T', '1', '6', 'm', 0,
  /* 17463 */ 'N', 'O', 'T', '1', '6', 'm', 0,
  /* 17470 */ 'I', 'D', 'I', 'V', '1', '6', 'm', 0,
  /* 17478 */ 'F', 'L', 'D', 'C', 'W', '1', '6', 'm', 0,
  /* 17487 */ 'F', 'N', 'S', 'T', 'C', 'W', '1', '6', 'm', 0,
  /* 17497 */ 'L', 'M', 'S', 'W', '1', '6', 'm', 0,
  /* 17505 */ 'S', 'M', 'S', 'W', '1', '6', 'm', 0,
  /* 17513 */ 'D', 'E', 'C', '6', '4', '_', '1', '6', 'm', 0,
  /* 17523 */ 'I', 'N', 'C', '6', '4', '_', '1', '6', 'm', 0,
  /* 17533 */ 'L', 'O', 'C', 'K', '_', 'D', 'E', 'C', '8', 'm', 0,
  /* 17544 */ 'L', 'O', 'C', 'K', '_', 'I', 'N', 'C', '8', 'm', 0,
  /* 17555 */ 'N', 'E', 'G', '8', 'm', 0,
  /* 17561 */ 'I', 'M', 'U', 'L', '8', 'm', 0,
  /* 17568 */ 'N', 'O', 'T', '8', 'm', 0,
  /* 17574 */ 'I', 'D', 'I', 'V', '8', 'm', 0,
  /* 17581 */ 'S', 'E', 'T', 'A', 'm', 0,
  /* 17587 */ 'S', 'E', 'T', 'B', 'm', 0,
  /* 17593 */ 'F', 'B', 'L', 'D', 'm', 0,
  /* 17599 */ 'V', 'M', 'P', 'T', 'R', 'L', 'D', 'm', 0,
  /* 17608 */ 'V', 'R', 'O', 'U', 'N', 'D', 'P', 'D', 'm', 0,
  /* 17618 */ 'V', 'S', 'Q', 'R', 'T', 'P', 'D', 'm', 0,
  /* 17627 */ 'V', 'R', 'O', 'U', 'N', 'D', 'Y', 'P', 'D', 'm', 0,
  /* 17638 */ 'V', 'R', 'O', 'U', 'N', 'D', 'S', 'D', 'm', 0,
  /* 17648 */ 'V', 'S', 'Q', 'R', 'T', 'S', 'D', 'm', 0,
  /* 17657 */ 'S', 'E', 'T', 'A', 'E', 'm', 0,
  /* 17664 */ 'S', 'E', 'T', 'B', 'E', 'm', 0,
  /* 17671 */ 'S', 'E', 'T', 'G', 'E', 'm', 0,
  /* 17678 */ 'S', 'E', 'T', 'L', 'E', 'm', 0,
  /* 17685 */ 'S', 'E', 'T', 'N', 'E', 'm', 0,
  /* 17692 */ 'S', 'E', 'T', 'E', 'm', 0,
  /* 17698 */ 'F', 'S', 'A', 'V', 'E', 'm', 0,
  /* 17705 */ 'S', 'E', 'T', 'G', 'm', 0,
  /* 17711 */ 'S', 'E', 'T', 'L', 'm', 0,
  /* 17717 */ 'S', 'E', 'T', 'N', 'O', 'm', 0,
  /* 17724 */ 'S', 'E', 'T', 'O', 'm', 0,
  /* 17730 */ 'T', 'A', 'I', 'L', 'J', 'M', 'P', 'm', 0,
  /* 17739 */ 'S', 'E', 'T', 'N', 'P', 'm', 0,
  /* 17746 */ 'S', 'E', 'T', 'P', 'm', 0,
  /* 17752 */ 'F', 'B', 'S', 'T', 'P', 'm', 0,
  /* 17759 */ 'V', 'M', 'C', 'L', 'E', 'A', 'R', 'm', 0,
  /* 17768 */ 'F', 'R', 'S', 'T', 'O', 'R', 'm', 0,
  /* 17776 */ 'V', 'E', 'R', 'R', 'm', 0,
  /* 17782 */ 'L', 'T', 'R', 'm', 0,
  /* 17787 */ 'S', 'T', 'R', 'm', 0,
  /* 17792 */ 'S', 'E', 'T', 'N', 'S', 'm', 0,
  /* 17799 */ 'V', 'R', 'O', 'U', 'N', 'D', 'P', 'S', 'm', 0,
  /* 17809 */ 'V', 'R', 'C', 'P', 'P', 'S', 'm', 0,
  /* 17817 */ 'V', 'R', 'S', 'Q', 'R', 'T', 'P', 'S', 'm', 0,
  /* 17827 */ 'V', 'S', 'Q', 'R', 'T', 'P', 'S', 'm', 0,
  /* 17836 */ 'V', 'R', 'O', 'U', 'N', 'D', 'Y', 'P', 'S', 'm', 0,
  /* 17847 */ 'V', 'R', 'O', 'U', 'N', 'D', 'S', 'S', 'm', 0,
  /* 17857 */ 'V', 'R', 'C', 'P', 'S', 'S', 'm', 0,
  /* 17865 */ 'V', 'R', 'S', 'Q', 'R', 'T', 'S', 'S', 'm', 0,
  /* 17875 */ 'V', 'S', 'Q', 'R', 'T', 'S', 'S', 'm', 0,
  /* 17884 */ 'S', 'E', 'T', 'S', 'm', 0,
  /* 17890 */ 'L', 'G', 'D', 'T', 'm', 0,
  /* 17896 */ 'S', 'G', 'D', 'T', 'm', 0,
  /* 17902 */ 'L', 'I', 'D', 'T', 'm', 0,
  /* 17908 */ 'S', 'I', 'D', 'T', 'm', 0,
  /* 17914 */ 'V', 'M', 'P', 'T', 'R', 'S', 'T', 'm', 0,
  /* 17923 */ 'F', 'L', 'D', 'E', 'N', 'V', 'm', 0,
  /* 17931 */ 'F', 'S', 'T', 'E', 'N', 'V', 'm', 0,
  /* 17939 */ 'V', 'E', 'R', 'W', 'm', 0,
  /* 17945 */ 'F', 'N', 'S', 'T', 'S', 'W', 'm', 0,
  /* 17953 */ 'V', 'S', 'Q', 'R', 'T', 'P', 'D', 'Y', 'm', 0,
  /* 17963 */ 'V', 'R', 'C', 'P', 'P', 'S', 'Y', 'm', 0,
  /* 17972 */ 'V', 'R', 'S', 'Q', 'R', 'T', 'P', 'S', 'Y', 'm', 0,
  /* 17983 */ 'V', 'S', 'Q', 'R', 'T', 'P', 'S', 'Y', 'm', 0,
  /* 17993 */ 'P', 'U', 'S', 'H', '3', '2', 'r', 'm', 'm', 0,
  /* 18003 */ 'P', 'O', 'P', '3', '2', 'r', 'm', 'm', 0,
  /* 18012 */ 'P', 'U', 'S', 'H', '6', '4', 'r', 'm', 'm', 0,
  /* 18022 */ 'P', 'O', 'P', '6', '4', 'r', 'm', 'm', 0,
  /* 18031 */ 'P', 'U', 'S', 'H', '1', '6', 'r', 'm', 'm', 0,
  /* 18041 */ 'P', 'O', 'P', '1', '6', 'r', 'm', 'm', 0,
  /* 18050 */ 'P', 'F', 'R', 'C', 'P', 'I', 'T', '1', 'r', 'm', 0,
  /* 18061 */ 'P', 'F', 'R', 'S', 'Q', 'I', 'T', '1', 'r', 'm', 0,
  /* 18072 */ 'C', 'M', 'O', 'V', 'A', '3', '2', 'r', 'm', 0,
  /* 18082 */ 'S', 'B', 'B', '3', '2', 'r', 'm', 0,
  /* 18090 */ 'S', 'U', 'B', '3', '2', 'r', 'm', 0,
  /* 18098 */ 'C', 'M', 'O', 'V', 'B', '3', '2', 'r', 'm', 0,
  /* 18108 */ 'A', 'D', 'C', '3', '2', 'r', 'm', 0,
  /* 18116 */ 'V', 'M', 'R', 'E', 'A', 'D', '3', '2', 'r', 'm', 0,
  /* 18127 */ 'X', 'A', 'D', 'D', '3', '2', 'r', 'm', 0,
  /* 18136 */ 'A', 'N', 'D', '3', '2', 'r', 'm', 0,
  /* 18144 */ 'C', 'M', 'O', 'V', 'A', 'E', '3', '2', 'r', 'm', 0,
  /* 18155 */ 'C', 'M', 'O', 'V', 'B', 'E', '3', '2', 'r', 'm', 0,
  /* 18166 */ 'C', 'M', 'O', 'V', 'G', 'E', '3', '2', 'r', 'm', 0,
  /* 18177 */ 'C', 'M', 'O', 'V', 'L', 'E', '3', '2', 'r', 'm', 0,
  /* 18188 */ 'C', 'M', 'O', 'V', 'N', 'E', '3', '2', 'r', 'm', 0,
  /* 18199 */ 'V', 'M', 'W', 'R', 'I', 'T', 'E', '3', '2', 'r', 'm', 0,
  /* 18211 */ 'C', 'M', 'O', 'V', 'E', '3', '2', 'r', 'm', 0,
  /* 18221 */ 'B', 'S', 'F', '3', '2', 'r', 'm', 0,
  /* 18229 */ 'C', 'M', 'P', 'X', 'C', 'H', 'G', '3', '2', 'r', 'm', 0,
  /* 18241 */ 'C', 'M', 'O', 'V', 'G', '3', '2', 'r', 'm', 0,
  /* 18251 */ 'B', 'Z', 'H', 'I', '3', '2', 'r', 'm', 0,
  /* 18260 */ 'B', 'L', 'S', 'I', '3', '2', 'r', 'm', 0,
  /* 18269 */ 'B', 'L', 'S', 'M', 'S', 'K', '3', '2', 'r', 'm', 0,
  /* 18280 */ 'L', 'S', 'L', '3', '2', 'r', 'm', 0,
  /* 18288 */ 'I', 'M', 'U', 'L', '3', '2', 'r', 'm', 0,
  /* 18297 */ 'C', 'M', 'O', 'V', 'L', '3', '2', 'r', 'm', 0,
  /* 18307 */ 'A', 'N', 'D', 'N', '3', '2', 'r', 'm', 0,
  /* 18316 */ 'C', 'M', 'O', 'V', 'N', 'O', '3', '2', 'r', 'm', 0,
  /* 18327 */ 'C', 'M', 'O', 'V', 'O', '3', '2', 'r', 'm', 0,
  /* 18337 */ 'P', 'D', 'E', 'P', '3', '2', 'r', 'm', 0,
  /* 18346 */ 'C', 'M', 'P', '3', '2', 'r', 'm', 0,
  /* 18354 */ 'C', 'M', 'O', 'V', 'N', 'P', '3', '2', 'r', 'm', 0,
  /* 18365 */ 'C', 'M', 'O', 'V', 'P', '3', '2', 'r', 'm', 0,
  /* 18375 */ 'L', 'A', 'R', '3', '2', 'r', 'm', 0,
  /* 18383 */ 'X', 'O', 'R', '3', '2', 'r', 'm', 0,
  /* 18391 */ 'B', 'S', 'R', '3', '2', 'r', 'm', 0,
  /* 18399 */ 'B', 'L', 'S', 'R', '3', '2', 'r', 'm', 0,
  /* 18408 */ 'B', 'E', 'X', 'T', 'R', '3', '2', 'r', 'm', 0,
  /* 18418 */ 'L', 'D', 'S', '3', '2', 'r', 'm', 0,
  /* 18426 */ 'B', 'O', 'U', 'N', 'D', 'S', '3', '2', 'r', 'm', 0,
  /* 18437 */ 'L', 'E', 'S', '3', '2', 'r', 'm', 0,
  /* 18445 */ 'L', 'F', 'S', '3', '2', 'r', 'm', 0,
  /* 18453 */ 'L', 'G', 'S', '3', '2', 'r', 'm', 0,
  /* 18461 */ 'C', 'M', 'O', 'V', 'N', 'S', '3', '2', 'r', 'm', 0,
  /* 18472 */ 'L', 'S', 'S', '3', '2', 'r', 'm', 0,
  /* 18480 */ 'C', 'M', 'O', 'V', 'S', '3', '2', 'r', 'm', 0,
  /* 18490 */ 'P', 'O', 'P', 'C', 'N', 'T', '3', '2', 'r', 'm', 0,
  /* 18501 */ 'L', 'Z', 'C', 'N', 'T', '3', '2', 'r', 'm', 0,
  /* 18511 */ 'T', 'Z', 'C', 'N', 'T', '3', '2', 'r', 'm', 0,
  /* 18521 */ 'T', 'E', 'S', 'T', '3', '2', 'r', 'm', 0,
  /* 18530 */ 'P', 'E', 'X', 'T', '3', '2', 'r', 'm', 0,
  /* 18539 */ 'A', 'C', 'Q', 'U', 'I', 'R', 'E', '_', 'M', 'O', 'V', '3', '2', 'r', 'm', 0,
  /* 18555 */ 'S', 'H', 'L', 'X', '3', '2', 'r', 'm', 0,
  /* 18564 */ 'M', 'U', 'L', 'X', '3', '2', 'r', 'm', 0,
  /* 18573 */ 'S', 'A', 'R', 'X', '3', '2', 'r', 'm', 0,
  /* 18582 */ 'S', 'H', 'R', 'X', '3', '2', 'r', 'm', 0,
  /* 18591 */ 'P', 'F', 'R', 'C', 'P', 'I', 'T', '2', 'r', 'm', 0,
  /* 18602 */ 'C', 'M', 'O', 'V', 'A', '6', '4', 'r', 'm', 0,
  /* 18612 */ 'S', 'B', 'B', '6', '4', 'r', 'm', 0,
  /* 18620 */ 'S', 'U', 'B', '6', '4', 'r', 'm', 0,
  /* 18628 */ 'C', 'M', 'O', 'V', 'B', '6', '4', 'r', 'm', 0,
  /* 18638 */ 'A', 'D', 'C', '6', '4', 'r', 'm', 0,
  /* 18646 */ 'V', 'M', 'R', 'E', 'A', 'D', '6', '4', 'r', 'm', 0,
  /* 18657 */ 'X', 'A', 'D', 'D', '6', '4', 'r', 'm', 0,
  /* 18666 */ 'A', 'N', 'D', '6', '4', 'r', 'm', 0,
  /* 18674 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'S', 'I', '2', 'S', 'D', '6', '4', 'r', 'm', 0,
  /* 18692 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'S', 'I', '2', 'S', 'D', '6', '4', 'r', 'm', 0,
  /* 18709 */ 'M', 'M', 'X', '_', 'M', 'O', 'V', 'D', '6', '4', 'r', 'm', 0,
  /* 18722 */ 'C', 'M', 'O', 'V', 'A', 'E', '6', '4', 'r', 'm', 0,
  /* 18733 */ 'C', 'M', 'O', 'V', 'B', 'E', '6', '4', 'r', 'm', 0,
  /* 18744 */ 'C', 'M', 'O', 'V', 'G', 'E', '6', '4', 'r', 'm', 0,
  /* 18755 */ 'C', 'M', 'O', 'V', 'L', 'E', '6', '4', 'r', 'm', 0,
  /* 18766 */ 'C', 'M', 'O', 'V', 'N', 'E', '6', '4', 'r', 'm', 0,
  /* 18777 */ 'V', 'M', 'W', 'R', 'I', 'T', 'E', '6', '4', 'r', 'm', 0,
  /* 18789 */ 'C', 'M', 'O', 'V', 'E', '6', '4', 'r', 'm', 0,
  /* 18799 */ 'B', 'S', 'F', '6', '4', 'r', 'm', 0,
  /* 18807 */ 'C', 'M', 'P', 'X', 'C', 'H', 'G', '6', '4', 'r', 'm', 0,
  /* 18819 */ 'C', 'M', 'O', 'V', 'G', '6', '4', 'r', 'm', 0,
  /* 18829 */ 'B', 'Z', 'H', 'I', '6', '4', 'r', 'm', 0,
  /* 18838 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'T', 'S', 'D', '2', 'S', 'I', '6', '4', 'r', 'm', 0,
  /* 18857 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'T', 'S', 'D', '2', 'S', 'I', '6', '4', 'r', 'm', 0,
  /* 18875 */ 'V', 'C', 'V', 'T', 'S', 'D', '2', 'S', 'I', '6', '4', 'r', 'm', 0,
  /* 18889 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'T', 'S', 'S', '2', 'S', 'I', '6', '4', 'r', 'm', 0,
  /* 18908 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'T', 'S', 'S', '2', 'S', 'I', '6', '4', 'r', 'm', 0,
  /* 18926 */ 'V', 'C', 'V', 'T', 'S', 'S', '2', 'S', 'I', '6', '4', 'r', 'm', 0,
  /* 18940 */ 'B', 'L', 'S', 'I', '6', '4', 'r', 'm', 0,
  /* 18949 */ 'B', 'L', 'S', 'M', 'S', 'K', '6', '4', 'r', 'm', 0,
  /* 18960 */ 'L', 'S', 'L', '6', '4', 'r', 'm', 0,
  /* 18968 */ 'I', 'M', 'U', 'L', '6', '4', 'r', 'm', 0,
  /* 18977 */ 'C', 'M', 'O', 'V', 'L', '6', '4', 'r', 'm', 0,
  /* 18987 */ 'A', 'N', 'D', 'N', '6', '4', 'r', 'm', 0,
  /* 18996 */ 'C', 'M', 'O', 'V', 'N', 'O', '6', '4', 'r', 'm', 0,
  /* 19007 */ 'C', 'M', 'O', 'V', 'O', '6', '4', 'r', 'm', 0,
  /* 19017 */ 'P', 'D', 'E', 'P', '6', '4', 'r', 'm', 0,
  /* 19026 */ 'C', 'M', 'P', '6', '4', 'r', 'm', 0,
  /* 19034 */ 'C', 'M', 'O', 'V', 'N', 'P', '6', '4', 'r', 'm', 0,
  /* 19045 */ 'C', 'M', 'O', 'V', 'P', '6', '4', 'r', 'm', 0,
  /* 19055 */ 'M', 'M', 'X', '_', 'M', 'O', 'V', 'Q', '6', '4', 'r', 'm', 0,
  /* 19068 */ 'L', 'A', 'R', '6', '4', 'r', 'm', 0,
  /* 19076 */ 'X', 'O', 'R', '6', '4', 'r', 'm', 0,
  /* 19084 */ 'B', 'S', 'R', '6', '4', 'r', 'm', 0,
  /* 19092 */ 'B', 'L', 'S', 'R', '6', '4', 'r', 'm', 0,
  /* 19101 */ 'B', 'E', 'X', 'T', 'R', '6', '4', 'r', 'm', 0,
  /* 19111 */ 'L', 'F', 'S', '6', '4', 'r', 'm', 0,
  /* 19119 */ 'L', 'G', 'S', '6', '4', 'r', 'm', 0,
  /* 19127 */ 'C', 'M', 'O', 'V', 'N', 'S', '6', '4', 'r', 'm', 0,
  /* 19138 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'S', 'I', '2', 'S', 'S', '6', '4', 'r', 'm', 0,
  /* 19156 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'S', 'I', '2', 'S', 'S', '6', '4', 'r', 'm', 0,
  /* 19173 */ 'L', 'S', 'S', '6', '4', 'r', 'm', 0,
  /* 19181 */ 'C', 'M', 'O', 'V', 'S', '6', '4', 'r', 'm', 0,
  /* 19191 */ 'P', 'O', 'P', 'C', 'N', 'T', '6', '4', 'r', 'm', 0,
  /* 19202 */ 'L', 'Z', 'C', 'N', 'T', '6', '4', 'r', 'm', 0,
  /* 19212 */ 'T', 'Z', 'C', 'N', 'T', '6', '4', 'r', 'm', 0,
  /* 19222 */ 'T', 'E', 'S', 'T', '6', '4', 'r', 'm', 0,
  /* 19231 */ 'P', 'E', 'X', 'T', '6', '4', 'r', 'm', 0,
  /* 19240 */ 'A', 'C', 'Q', 'U', 'I', 'R', 'E', '_', 'M', 'O', 'V', '6', '4', 'r', 'm', 0,
  /* 19256 */ 'S', 'H', 'L', 'X', '6', '4', 'r', 'm', 0,
  /* 19265 */ 'M', 'U', 'L', 'X', '6', '4', 'r', 'm', 0,
  /* 19274 */ 'S', 'A', 'R', 'X', '6', '4', 'r', 'm', 0,
  /* 19283 */ 'S', 'H', 'R', 'X', '6', '4', 'r', 'm', 0,
  /* 19292 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', '4', 'r', 'm', 0,
  /* 19307 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', '4', 'r', 'm', 0,
  /* 19319 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', '4', 'r', 'm', 0,
  /* 19332 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', '4', 'r', 'm', 0,
  /* 19347 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', '4', 'r', 'm', 0,
  /* 19359 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', '4', 'r', 'm', 0,
  /* 19372 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'D', '4', 'r', 'm', 0,
  /* 19384 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'D', '4', 'r', 'm', 0,
  /* 19397 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'D', '4', 'r', 'm', 0,
  /* 19409 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'D', '4', 'r', 'm', 0,
  /* 19422 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', '4', 'r', 'm', 0,
  /* 19437 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', '4', 'r', 'm', 0,
  /* 19449 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', '4', 'r', 'm', 0,
  /* 19462 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', '4', 'r', 'm', 0,
  /* 19477 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', '4', 'r', 'm', 0,
  /* 19489 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', '4', 'r', 'm', 0,
  /* 19502 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'S', '4', 'r', 'm', 0,
  /* 19514 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'S', '4', 'r', 'm', 0,
  /* 19527 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'S', '4', 'r', 'm', 0,
  /* 19539 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'S', '4', 'r', 'm', 0,
  /* 19552 */ 'C', 'M', 'O', 'V', 'A', '1', '6', 'r', 'm', 0,
  /* 19562 */ 'S', 'B', 'B', '1', '6', 'r', 'm', 0,
  /* 19570 */ 'S', 'U', 'B', '1', '6', 'r', 'm', 0,
  /* 19578 */ 'C', 'M', 'O', 'V', 'B', '1', '6', 'r', 'm', 0,
  /* 19588 */ 'A', 'D', 'C', '1', '6', 'r', 'm', 0,
  /* 19596 */ 'X', 'A', 'D', 'D', '1', '6', 'r', 'm', 0,
  /* 19605 */ 'A', 'N', 'D', '1', '6', 'r', 'm', 0,
  /* 19613 */ 'C', 'M', 'O', 'V', 'A', 'E', '1', '6', 'r', 'm', 0,
  /* 19624 */ 'C', 'M', 'O', 'V', 'B', 'E', '1', '6', 'r', 'm', 0,
  /* 19635 */ 'C', 'M', 'O', 'V', 'G', 'E', '1', '6', 'r', 'm', 0,
  /* 19646 */ 'C', 'M', 'O', 'V', 'L', 'E', '1', '6', 'r', 'm', 0,
  /* 19657 */ 'C', 'M', 'O', 'V', 'N', 'E', '1', '6', 'r', 'm', 0,
  /* 19668 */ 'C', 'M', 'O', 'V', 'E', '1', '6', 'r', 'm', 0,
  /* 19678 */ 'B', 'S', 'F', '1', '6', 'r', 'm', 0,
  /* 19686 */ 'C', 'M', 'P', 'X', 'C', 'H', 'G', '1', '6', 'r', 'm', 0,
  /* 19698 */ 'C', 'M', 'O', 'V', 'G', '1', '6', 'r', 'm', 0,
  /* 19708 */ 'L', 'S', 'L', '1', '6', 'r', 'm', 0,
  /* 19716 */ 'I', 'M', 'U', 'L', '1', '6', 'r', 'm', 0,
  /* 19725 */ 'C', 'M', 'O', 'V', 'L', '1', '6', 'r', 'm', 0,
  /* 19735 */ 'C', 'M', 'O', 'V', 'N', 'O', '1', '6', 'r', 'm', 0,
  /* 19746 */ 'C', 'M', 'O', 'V', 'O', '1', '6', 'r', 'm', 0,
  /* 19756 */ 'C', 'M', 'P', '1', '6', 'r', 'm', 0,
  /* 19764 */ 'C', 'M', 'O', 'V', 'N', 'P', '1', '6', 'r', 'm', 0,
  /* 19775 */ 'C', 'M', 'O', 'V', 'P', '1', '6', 'r', 'm', 0,
  /* 19785 */ 'L', 'A', 'R', '1', '6', 'r', 'm', 0,
  /* 19793 */ 'X', 'O', 'R', '1', '6', 'r', 'm', 0,
  /* 19801 */ 'B', 'S', 'R', '1', '6', 'r', 'm', 0,
  /* 19809 */ 'L', 'D', 'S', '1', '6', 'r', 'm', 0,
  /* 19817 */ 'B', 'O', 'U', 'N', 'D', 'S', '1', '6', 'r', 'm', 0,
  /* 19828 */ 'L', 'E', 'S', '1', '6', 'r', 'm', 0,
  /* 19836 */ 'L', 'F', 'S', '1', '6', 'r', 'm', 0,
  /* 19844 */ 'L', 'G', 'S', '1', '6', 'r', 'm', 0,
  /* 19852 */ 'C', 'M', 'O', 'V', 'N', 'S', '1', '6', 'r', 'm', 0,
  /* 19863 */ 'L', 'S', 'S', '1', '6', 'r', 'm', 0,
  /* 19871 */ 'C', 'M', 'O', 'V', 'S', '1', '6', 'r', 'm', 0,
  /* 19881 */ 'P', 'O', 'P', 'C', 'N', 'T', '1', '6', 'r', 'm', 0,
  /* 19892 */ 'L', 'Z', 'C', 'N', 'T', '1', '6', 'r', 'm', 0,
  /* 19902 */ 'T', 'Z', 'C', 'N', 'T', '1', '6', 'r', 'm', 0,
  /* 19912 */ 'T', 'E', 'S', 'T', '1', '6', 'r', 'm', 0,
  /* 19921 */ 'A', 'C', 'Q', 'U', 'I', 'R', 'E', '_', 'M', 'O', 'V', '1', '6', 'r', 'm', 0,
  /* 19937 */ 'V', 'P', 'A', 'L', 'I', 'G', 'N', 'R', '2', '5', '6', 'r', 'm', 0,
  /* 19951 */ 'V', 'P', 'E', 'R', 'M', '2', 'F', '1', '2', '8', 'r', 'm', 0,
  /* 19964 */ 'V', 'I', 'N', 'S', 'E', 'R', 'T', 'F', '1', '2', '8', 'r', 'm', 0,
  /* 19978 */ 'V', 'P', 'E', 'R', 'M', '2', 'I', '1', '2', '8', 'r', 'm', 0,
  /* 19991 */ 'V', 'I', 'N', 'S', 'E', 'R', 'T', 'I', '1', '2', '8', 'r', 'm', 0,
  /* 20005 */ 'V', 'P', 'C', 'M', 'P', 'E', 'S', 'T', 'R', 'M', '1', '2', '8', 'r', 'm', 0,
  /* 20021 */ 'V', 'P', 'C', 'M', 'P', 'I', 'S', 'T', 'R', 'M', '1', '2', '8', 'r', 'm', 0,
  /* 20037 */ 'V', 'P', 'A', 'L', 'I', 'G', 'N', 'R', '1', '2', '8', 'r', 'm', 0,
  /* 20051 */ 'V', 'A', 'E', 'S', 'K', 'E', 'Y', 'G', 'E', 'N', 'A', 'S', 'S', 'I', 'S', 'T', '1', '2', '8', 'r', 'm', 0,
  /* 20073 */ 'S', 'B', 'B', '8', 'r', 'm', 0,
  /* 20080 */ 'S', 'U', 'B', '8', 'r', 'm', 0,
  /* 20087 */ 'A', 'D', 'C', '8', 'r', 'm', 0,
  /* 20094 */ 'X', 'A', 'D', 'D', '8', 'r', 'm', 0,
  /* 20102 */ 'A', 'N', 'D', '8', 'r', 'm', 0,
  /* 20109 */ 'C', 'M', 'P', 'X', 'C', 'H', 'G', '8', 'r', 'm', 0,
  /* 20120 */ 'C', 'M', 'P', '8', 'r', 'm', 0,
  /* 20127 */ 'X', 'O', 'R', '8', 'r', 'm', 0,
  /* 20134 */ 'T', 'E', 'S', 'T', '8', 'r', 'm', 0,
  /* 20142 */ 'A', 'C', 'Q', 'U', 'I', 'R', 'E', '_', 'M', 'O', 'V', '8', 'r', 'm', 0,
  /* 20157 */ 'V', 'P', 'C', 'M', 'P', 'E', 'S', 'T', 'R', 'I', 'A', 'r', 'm', 0,
  /* 20171 */ 'V', 'P', 'C', 'M', 'P', 'I', 'S', 'T', 'R', 'I', 'A', 'r', 'm', 0,
  /* 20185 */ 'V', 'M', 'O', 'V', 'N', 'T', 'D', 'Q', 'A', 'r', 'm', 0,
  /* 20197 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'A', 'r', 'm', 0,
  /* 20207 */ 'V', 'P', 'S', 'H', 'A', 'B', 'r', 'm', 0,
  /* 20216 */ 'V', 'P', 'S', 'U', 'B', 'B', 'r', 'm', 0,
  /* 20225 */ 'V', 'P', 'A', 'D', 'D', 'B', 'r', 'm', 0,
  /* 20234 */ 'V', 'P', 'S', 'H', 'U', 'F', 'B', 'r', 'm', 0,
  /* 20244 */ 'V', 'P', 'A', 'V', 'G', 'B', 'r', 'm', 0,
  /* 20253 */ 'V', 'P', 'S', 'H', 'L', 'B', 'r', 'm', 0,
  /* 20262 */ 'V', 'P', 'S', 'I', 'G', 'N', 'B', 'r', 'm', 0,
  /* 20272 */ 'V', 'P', 'C', 'M', 'P', 'E', 'Q', 'B', 'r', 'm', 0,
  /* 20283 */ 'V', 'P', 'I', 'N', 'S', 'R', 'B', 'r', 'm', 0,
  /* 20293 */ 'V', 'P', 'S', 'U', 'B', 'S', 'B', 'r', 'm', 0,
  /* 20303 */ 'V', 'P', 'A', 'D', 'D', 'S', 'B', 'r', 'm', 0,
  /* 20313 */ 'V', 'P', 'M', 'I', 'N', 'S', 'B', 'r', 'm', 0,
  /* 20323 */ 'V', 'P', 'S', 'U', 'B', 'U', 'S', 'B', 'r', 'm', 0,
  /* 20334 */ 'V', 'P', 'A', 'D', 'D', 'U', 'S', 'B', 'r', 'm', 0,
  /* 20345 */ 'P', 'A', 'V', 'G', 'U', 'S', 'B', 'r', 'm', 0,
  /* 20355 */ 'V', 'P', 'M', 'A', 'X', 'S', 'B', 'r', 'm', 0,
  /* 20365 */ 'V', 'P', 'C', 'M', 'P', 'G', 'T', 'B', 'r', 'm', 0,
  /* 20376 */ 'V', 'P', 'R', 'O', 'T', 'B', 'r', 'm', 0,
  /* 20385 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'B', 'r', 'm', 0,
  /* 20400 */ 'V', 'P', 'M', 'I', 'N', 'U', 'B', 'r', 'm', 0,
  /* 20410 */ 'P', 'F', 'S', 'U', 'B', 'r', 'm', 0,
  /* 20418 */ 'V', 'P', 'M', 'A', 'X', 'U', 'B', 'r', 'm', 0,
  /* 20428 */ 'V', 'P', 'B', 'L', 'E', 'N', 'D', 'V', 'B', 'r', 'm', 0,
  /* 20440 */ 'V', 'P', 'A', 'C', 'K', 'S', 'S', 'W', 'B', 'r', 'm', 0,
  /* 20452 */ 'V', 'P', 'A', 'C', 'K', 'U', 'S', 'W', 'B', 'r', 'm', 0,
  /* 20464 */ 'P', 'F', 'A', 'C', 'C', 'r', 'm', 0,
  /* 20472 */ 'P', 'F', 'N', 'A', 'C', 'C', 'r', 'm', 0,
  /* 20481 */ 'P', 'F', 'P', 'N', 'A', 'C', 'C', 'r', 'm', 0,
  /* 20491 */ 'V', 'A', 'E', 'S', 'D', 'E', 'C', 'r', 'm', 0,
  /* 20501 */ 'V', 'P', 'C', 'M', 'P', 'E', 'S', 'T', 'R', 'I', 'C', 'r', 'm', 0,
  /* 20515 */ 'V', 'P', 'C', 'M', 'P', 'I', 'S', 'T', 'R', 'I', 'C', 'r', 'm', 0,
  /* 20529 */ 'V', 'A', 'E', 'S', 'I', 'M', 'C', 'r', 'm', 0,
  /* 20539 */ 'V', 'A', 'E', 'S', 'E', 'N', 'C', 'r', 'm', 0,
  /* 20549 */ 'V', 'P', 'S', 'H', 'A', 'D', 'r', 'm', 0,
  /* 20558 */ 'V', 'P', 'S', 'R', 'A', 'D', 'r', 'm', 0,
  /* 20567 */ 'M', 'M', 'X', '_', 'P', 'S', 'R', 'A', 'D', 'r', 'm', 0,
  /* 20579 */ 'V', 'P', 'H', 'A', 'D', 'D', 'B', 'D', 'r', 'm', 0,
  /* 20590 */ 'V', 'P', 'H', 'A', 'D', 'D', 'U', 'B', 'D', 'r', 'm', 0,
  /* 20602 */ 'V', 'P', 'H', 'S', 'U', 'B', 'D', 'r', 'm', 0,
  /* 20612 */ 'V', 'P', 'S', 'U', 'B', 'D', 'r', 'm', 0,
  /* 20621 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'B', 'D', 'r', 'm', 0,
  /* 20633 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'B', 'D', 'r', 'm', 0,
  /* 20645 */ 'P', 'F', 'A', 'D', 'D', 'r', 'm', 0,
  /* 20653 */ 'V', 'P', 'H', 'A', 'D', 'D', 'D', 'r', 'm', 0,
  /* 20663 */ 'V', 'P', 'A', 'D', 'D', 'D', 'r', 'm', 0,
  /* 20672 */ 'V', 'P', 'M', 'A', 'C', 'S', 'D', 'D', 'r', 'm', 0,
  /* 20683 */ 'V', 'P', 'M', 'A', 'C', 'S', 'S', 'D', 'D', 'r', 'm', 0,
  /* 20695 */ 'P', 'I', '2', 'F', 'D', 'r', 'm', 0,
  /* 20703 */ 'P', 'F', '2', 'I', 'D', 'r', 'm', 0,
  /* 20711 */ 'V', 'P', 'S', 'H', 'L', 'D', 'r', 'm', 0,
  /* 20720 */ 'V', 'P', 'S', 'L', 'L', 'D', 'r', 'm', 0,
  /* 20729 */ 'M', 'M', 'X', '_', 'P', 'S', 'L', 'L', 'D', 'r', 'm', 0,
  /* 20741 */ 'V', 'P', 'M', 'U', 'L', 'L', 'D', 'r', 'm', 0,
  /* 20751 */ 'V', 'P', 'S', 'R', 'L', 'D', 'r', 'm', 0,
  /* 20760 */ 'M', 'M', 'X', '_', 'P', 'S', 'R', 'L', 'D', 'r', 'm', 0,
  /* 20772 */ 'V', 'P', 'A', 'N', 'D', 'r', 'm', 0,
  /* 20780 */ 'V', 'P', 'S', 'I', 'G', 'N', 'D', 'r', 'm', 0,
  /* 20790 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', '2', 'P', 'D', 'r', 'm', 0,
  /* 20803 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'D', 'Q', '2', 'P', 'D', 'r', 'm', 0,
  /* 20819 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'D', 'Q', '2', 'P', 'D', 'r', 'm', 0,
  /* 20834 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'P', 'S', '2', 'P', 'D', 'r', 'm', 0,
  /* 20850 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'P', 'S', '2', 'P', 'D', 'r', 'm', 0,
  /* 20865 */ 'F', 's', 'V', 'M', 'O', 'V', 'A', 'P', 'D', 'r', 'm', 0,
  /* 20877 */ 'F', 's', 'M', 'O', 'V', 'A', 'P', 'D', 'r', 'm', 0,
  /* 20888 */ 'P', 'S', 'W', 'A', 'P', 'D', 'r', 'm', 0,
  /* 20897 */ 'V', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', 'r', 'm', 0,
  /* 20909 */ 'V', 'H', 'S', 'U', 'B', 'P', 'D', 'r', 'm', 0,
  /* 20919 */ 'V', 'S', 'U', 'B', 'P', 'D', 'r', 'm', 0,
  /* 20928 */ 'V', 'H', 'A', 'D', 'D', 'P', 'D', 'r', 'm', 0,
  /* 20938 */ 'V', 'A', 'D', 'D', 'P', 'D', 'r', 'm', 0,
  /* 20947 */ 'V', 'A', 'N', 'D', 'P', 'D', 'r', 'm', 0,
  /* 20956 */ 'V', 'F', 's', 'A', 'N', 'D', 'P', 'D', 'r', 'm', 0,
  /* 20967 */ 'V', 'U', 'N', 'P', 'C', 'K', 'H', 'P', 'D', 'r', 'm', 0,
  /* 20979 */ 'V', 'M', 'O', 'V', 'H', 'P', 'D', 'r', 'm', 0,
  /* 20989 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', 'P', 'D', 'r', 'm', 0,
  /* 21001 */ 'V', 'U', 'N', 'P', 'C', 'K', 'L', 'P', 'D', 'r', 'm', 0,
  /* 21013 */ 'V', 'M', 'U', 'L', 'P', 'D', 'r', 'm', 0,
  /* 21022 */ 'V', 'M', 'O', 'V', 'L', 'P', 'D', 'r', 'm', 0,
  /* 21032 */ 'V', 'A', 'N', 'D', 'N', 'P', 'D', 'r', 'm', 0,
  /* 21042 */ 'V', 'F', 's', 'A', 'N', 'D', 'N', 'P', 'D', 'r', 'm', 0,
  /* 21054 */ 'V', 'M', 'I', 'N', 'P', 'D', 'r', 'm', 0,
  /* 21063 */ 'V', 'O', 'R', 'P', 'D', 'r', 'm', 0,
  /* 21071 */ 'V', 'X', 'O', 'R', 'P', 'D', 'r', 'm', 0,
  /* 21080 */ 'V', 'F', 's', 'X', 'O', 'R', 'P', 'D', 'r', 'm', 0,
  /* 21091 */ 'V', 'F', 's', 'O', 'R', 'P', 'D', 'r', 'm', 0,
  /* 21101 */ 'V', 'T', 'E', 'S', 'T', 'P', 'D', 'r', 'm', 0,
  /* 21111 */ 'V', 'M', 'O', 'V', 'U', 'P', 'D', 'r', 'm', 0,
  /* 21121 */ 'V', 'B', 'L', 'E', 'N', 'D', 'V', 'P', 'D', 'r', 'm', 0,
  /* 21133 */ 'V', 'D', 'I', 'V', 'P', 'D', 'r', 'm', 0,
  /* 21142 */ 'V', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'P', 'D', 'r', 'm', 0,
  /* 21155 */ 'V', 'M', 'A', 'X', 'P', 'D', 'r', 'm', 0,
  /* 21164 */ 'V', 'F', 'R', 'C', 'Z', 'P', 'D', 'r', 'm', 0,
  /* 21174 */ 'V', 'P', 'C', 'M', 'P', 'E', 'Q', 'D', 'r', 'm', 0,
  /* 21185 */ 'V', 'P', 'I', 'N', 'S', 'R', 'D', 'r', 'm', 0,
  /* 21195 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'S', 'I', '2', 'S', 'D', 'r', 'm', 0,
  /* 21211 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'S', 'I', '2', 'S', 'D', 'r', 'm', 0,
  /* 21226 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'S', 'S', '2', 'S', 'D', 'r', 'm', 0,
  /* 21242 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'S', 'S', '2', 'S', 'D', 'r', 'm', 0,
  /* 21257 */ 'V', 'S', 'U', 'B', 'S', 'D', 'r', 'm', 0,
  /* 21266 */ 'V', 'A', 'D', 'D', 'S', 'D', 'r', 'm', 0,
  /* 21275 */ 'I', 'n', 't', '_', 'V', 'U', 'C', 'O', 'M', 'I', 'S', 'D', 'r', 'm', 0,
  /* 21290 */ 'I', 'n', 't', '_', 'U', 'C', 'O', 'M', 'I', 'S', 'D', 'r', 'm', 0,
  /* 21304 */ 'I', 'n', 't', '_', 'V', 'C', 'O', 'M', 'I', 'S', 'D', 'r', 'm', 0,
  /* 21318 */ 'I', 'n', 't', '_', 'C', 'O', 'M', 'I', 'S', 'D', 'r', 'm', 0,
  /* 21331 */ 'V', 'M', 'U', 'L', 'S', 'D', 'r', 'm', 0,
  /* 21340 */ 'V', 'P', 'M', 'I', 'N', 'S', 'D', 'r', 'm', 0,
  /* 21350 */ 'V', 'M', 'I', 'N', 'S', 'D', 'r', 'm', 0,
  /* 21359 */ 'I', 'n', 't', '_', 'V', 'C', 'M', 'P', 'S', 'D', 'r', 'm', 0,
  /* 21372 */ 'I', 'n', 't', '_', 'C', 'M', 'P', 'S', 'D', 'r', 'm', 0,
  /* 21384 */ 'V', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'S', 'D', 'r', 'm', 0,
  /* 21399 */ 'V', 'D', 'I', 'V', 'S', 'D', 'r', 'm', 0,
  /* 21408 */ 'V', 'M', 'O', 'V', 'S', 'D', 'r', 'm', 0,
  /* 21417 */ 'V', 'P', 'M', 'A', 'X', 'S', 'D', 'r', 'm', 0,
  /* 21427 */ 'V', 'M', 'A', 'X', 'S', 'D', 'r', 'm', 0,
  /* 21436 */ 'V', 'F', 'R', 'C', 'Z', 'S', 'D', 'r', 'm', 0,
  /* 21446 */ 'V', 'M', 'O', 'V', '6', '4', 't', 'o', 'S', 'D', 'r', 'm', 0,
  /* 21459 */ 'V', 'P', 'C', 'M', 'P', 'G', 'T', 'D', 'r', 'm', 0,
  /* 21470 */ 'V', 'P', 'R', 'O', 'T', 'D', 'r', 'm', 0,
  /* 21479 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'D', 'r', 'm', 0,
  /* 21494 */ 'V', 'P', 'M', 'I', 'N', 'U', 'D', 'r', 'm', 0,
  /* 21504 */ 'V', 'P', 'M', 'A', 'X', 'U', 'D', 'r', 'm', 0,
  /* 21514 */ 'V', 'P', 'S', 'R', 'A', 'V', 'D', 'r', 'm', 0,
  /* 21524 */ 'V', 'P', 'S', 'L', 'L', 'V', 'D', 'r', 'm', 0,
  /* 21534 */ 'V', 'P', 'S', 'R', 'L', 'V', 'D', 'r', 'm', 0,
  /* 21544 */ 'V', 'P', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'D', 'r', 'm', 0,
  /* 21557 */ 'V', 'P', 'H', 'S', 'U', 'B', 'W', 'D', 'r', 'm', 0,
  /* 21568 */ 'V', 'P', 'H', 'A', 'D', 'D', 'W', 'D', 'r', 'm', 0,
  /* 21579 */ 'V', 'P', 'M', 'A', 'D', 'D', 'W', 'D', 'r', 'm', 0,
  /* 21590 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'W', 'D', 'r', 'm', 0,
  /* 21603 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'W', 'D', 'r', 'm', 0,
  /* 21616 */ 'V', 'P', 'M', 'A', 'C', 'S', 'W', 'D', 'r', 'm', 0,
  /* 21627 */ 'V', 'P', 'M', 'A', 'D', 'C', 'S', 'W', 'D', 'r', 'm', 0,
  /* 21639 */ 'V', 'P', 'M', 'A', 'C', 'S', 'S', 'W', 'D', 'r', 'm', 0,
  /* 21651 */ 'V', 'P', 'M', 'A', 'D', 'C', 'S', 'S', 'W', 'D', 'r', 'm', 0,
  /* 21664 */ 'V', 'P', 'H', 'A', 'D', 'D', 'U', 'W', 'D', 'r', 'm', 0,
  /* 21676 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'W', 'D', 'r', 'm', 0,
  /* 21688 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'W', 'D', 'r', 'm', 0,
  /* 21700 */ 'P', 'F', 'C', 'M', 'P', 'G', 'E', 'r', 'm', 0,
  /* 21710 */ 'V', 'P', 'M', 'A', 'C', 'S', 'D', 'Q', 'H', 'r', 'm', 0,
  /* 21722 */ 'V', 'P', 'M', 'A', 'C', 'S', 'S', 'D', 'Q', 'H', 'r', 'm', 0,
  /* 21735 */ 'V', 'M', 'O', 'V', 'D', 'I', '2', 'P', 'D', 'I', 'r', 'm', 0,
  /* 21748 */ 'V', 'M', 'O', 'V', 'Z', 'D', 'I', '2', 'P', 'D', 'I', 'r', 'm', 0,
  /* 21762 */ 'M', 'M', 'X', '_', 'M', 'O', 'V', 'Z', 'D', 'I', '2', 'P', 'D', 'I', 'r', 'm', 0,
  /* 21779 */ 'V', 'M', 'O', 'V', 'Q', 'I', '2', 'P', 'Q', 'I', 'r', 'm', 0,
  /* 21792 */ 'V', 'M', 'O', 'V', 'Z', 'Q', 'I', '2', 'P', 'Q', 'I', 'r', 'm', 0,
  /* 21806 */ 'V', 'M', 'O', 'V', 'Z', 'P', 'Q', 'I', 'L', 'o', '2', 'P', 'Q', 'I', 'r', 'm', 0,
  /* 21823 */ 'V', 'P', 'C', 'M', 'P', 'E', 'S', 'T', 'R', 'I', 'r', 'm', 0,
  /* 21836 */ 'V', 'P', 'C', 'M', 'P', 'I', 'S', 'T', 'R', 'I', 'r', 'm', 0,
  /* 21849 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'T', 'S', 'D', '2', 'S', 'I', 'r', 'm', 0,
  /* 21866 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'T', 'S', 'D', '2', 'S', 'I', 'r', 'm', 0,
  /* 21882 */ 'V', 'C', 'V', 'T', 'S', 'D', '2', 'S', 'I', 'r', 'm', 0,
  /* 21894 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'T', 'S', 'S', '2', 'S', 'I', 'r', 'm', 0,
  /* 21911 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'T', 'S', 'S', '2', 'S', 'I', 'r', 'm', 0,
  /* 21927 */ 'V', 'C', 'V', 'T', 'S', 'S', '2', 'S', 'I', 'r', 'm', 0,
  /* 21939 */ 'V', 'C', 'V', 'T', 'S', 'I', '2', 'S', 'D', 'L', 'r', 'm', 0,
  /* 21952 */ 'V', 'P', 'M', 'A', 'C', 'S', 'D', 'Q', 'L', 'r', 'm', 0,
  /* 21964 */ 'V', 'P', 'M', 'A', 'C', 'S', 'S', 'D', 'Q', 'L', 'r', 'm', 0,
  /* 21977 */ 'P', 'F', 'M', 'U', 'L', 'r', 'm', 0,
  /* 21985 */ 'V', 'P', 'P', 'E', 'R', 'M', 'r', 'm', 0,
  /* 21994 */ 'V', 'P', 'A', 'N', 'D', 'N', 'r', 'm', 0,
  /* 22003 */ 'P', 'F', 'M', 'I', 'N', 'r', 'm', 0,
  /* 22011 */ 'V', 'P', 'C', 'M', 'P', 'E', 'S', 'T', 'R', 'I', 'O', 'r', 'm', 0,
  /* 22025 */ 'V', 'P', 'C', 'M', 'P', 'I', 'S', 'T', 'R', 'I', 'O', 'r', 'm', 0,
  /* 22039 */ 'P', 'F', 'R', 'C', 'P', 'r', 'm', 0,
  /* 22047 */ 'V', 'M', 'O', 'V', 'D', 'D', 'U', 'P', 'r', 'm', 0,
  /* 22058 */ 'V', 'M', 'O', 'V', 'S', 'H', 'D', 'U', 'P', 'r', 'm', 0,
  /* 22070 */ 'V', 'M', 'O', 'V', 'S', 'L', 'D', 'U', 'P', 'r', 'm', 0,
  /* 22082 */ 'V', 'P', 'S', 'H', 'A', 'Q', 'r', 'm', 0,
  /* 22091 */ 'V', 'P', 'H', 'A', 'D', 'D', 'B', 'Q', 'r', 'm', 0,
  /* 22102 */ 'V', 'P', 'H', 'A', 'D', 'D', 'U', 'B', 'Q', 'r', 'm', 0,
  /* 22114 */ 'V', 'P', 'S', 'U', 'B', 'Q', 'r', 'm', 0,
  /* 22123 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'B', 'Q', 'r', 'm', 0,
  /* 22135 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'B', 'Q', 'r', 'm', 0,
  /* 22147 */ 'V', 'C', 'V', 'T', 'T', 'P', 'D', '2', 'D', 'Q', 'r', 'm', 0,
  /* 22160 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'P', 'D', '2', 'D', 'Q', 'r', 'm', 0,
  /* 22176 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'P', 'D', '2', 'D', 'Q', 'r', 'm', 0,
  /* 22191 */ 'V', 'C', 'V', 'T', 'T', 'P', 'S', '2', 'D', 'Q', 'r', 'm', 0,
  /* 22204 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'P', 'S', '2', 'D', 'Q', 'r', 'm', 0,
  /* 22220 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'P', 'S', '2', 'D', 'Q', 'r', 'm', 0,
  /* 22235 */ 'V', 'P', 'H', 'S', 'U', 'B', 'D', 'Q', 'r', 'm', 0,
  /* 22246 */ 'V', 'P', 'A', 'D', 'D', 'Q', 'r', 'm', 0,
  /* 22255 */ 'V', 'P', 'H', 'A', 'D', 'D', 'D', 'Q', 'r', 'm', 0,
  /* 22266 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'D', 'Q', 'r', 'm', 0,
  /* 22279 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'D', 'Q', 'r', 'm', 0,
  /* 22292 */ 'V', 'P', 'M', 'U', 'L', 'D', 'Q', 'r', 'm', 0,
  /* 22302 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'Q', 'D', 'Q', 'r', 'm', 0,
  /* 22316 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'Q', 'D', 'Q', 'r', 'm', 0,
  /* 22330 */ 'V', 'P', 'C', 'L', 'M', 'U', 'L', 'Q', 'D', 'Q', 'r', 'm', 0,
  /* 22343 */ 'V', 'P', 'H', 'A', 'D', 'D', 'U', 'D', 'Q', 'r', 'm', 0,
  /* 22355 */ 'V', 'P', 'M', 'U', 'L', 'U', 'D', 'Q', 'r', 'm', 0,
  /* 22366 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'D', 'Q', 'r', 'm', 0,
  /* 22378 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'D', 'Q', 'r', 'm', 0,
  /* 22390 */ 'P', 'F', 'C', 'M', 'P', 'E', 'Q', 'r', 'm', 0,
  /* 22400 */ 'V', 'P', 'S', 'H', 'L', 'Q', 'r', 'm', 0,
  /* 22409 */ 'V', 'P', 'S', 'L', 'L', 'Q', 'r', 'm', 0,
  /* 22418 */ 'M', 'M', 'X', '_', 'P', 'S', 'L', 'L', 'Q', 'r', 'm', 0,
  /* 22430 */ 'V', 'P', 'S', 'R', 'L', 'Q', 'r', 'm', 0,
  /* 22439 */ 'M', 'M', 'X', '_', 'P', 'S', 'R', 'L', 'Q', 'r', 'm', 0,
  /* 22451 */ 'V', 'P', 'C', 'M', 'P', 'E', 'Q', 'Q', 'r', 'm', 0,
  /* 22462 */ 'V', 'P', 'I', 'N', 'S', 'R', 'Q', 'r', 'm', 0,
  /* 22472 */ 'V', 'P', 'C', 'M', 'P', 'G', 'T', 'Q', 'r', 'm', 0,
  /* 22483 */ 'V', 'P', 'R', 'O', 'T', 'Q', 'r', 'm', 0,
  /* 22492 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'Q', 'r', 'm', 0,
  /* 22507 */ 'V', 'P', 'S', 'L', 'L', 'V', 'Q', 'r', 'm', 0,
  /* 22517 */ 'V', 'P', 'S', 'R', 'L', 'V', 'Q', 'r', 'm', 0,
  /* 22527 */ 'V', 'P', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'Q', 'r', 'm', 0,
  /* 22540 */ 'V', 'P', 'H', 'A', 'D', 'D', 'W', 'Q', 'r', 'm', 0,
  /* 22551 */ 'V', 'P', 'H', 'A', 'D', 'D', 'U', 'W', 'Q', 'r', 'm', 0,
  /* 22563 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'W', 'Q', 'r', 'm', 0,
  /* 22575 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'W', 'Q', 'r', 'm', 0,
  /* 22587 */ 'P', 'F', 'S', 'U', 'B', 'R', 'r', 'm', 0,
  /* 22596 */ 'V', 'P', 'O', 'R', 'r', 'm', 0,
  /* 22603 */ 'V', 'P', 'X', 'O', 'R', 'r', 'm', 0,
  /* 22611 */ 'V', 'P', 'C', 'M', 'P', 'E', 'S', 'T', 'R', 'I', 'S', 'r', 'm', 0,
  /* 22625 */ 'V', 'P', 'C', 'M', 'P', 'I', 'S', 'T', 'R', 'I', 'S', 'r', 'm', 0,
  /* 22639 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'P', 'D', '2', 'P', 'S', 'r', 'm', 0,
  /* 22655 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'P', 'D', '2', 'P', 'S', 'r', 'm', 0,
  /* 22670 */ 'V', 'C', 'V', 'T', 'P', 'H', '2', 'P', 'S', 'r', 'm', 0,
  /* 22682 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', '2', 'P', 'S', 'r', 'm', 0,
  /* 22695 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'D', 'Q', '2', 'P', 'S', 'r', 'm', 0,
  /* 22711 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'D', 'Q', '2', 'P', 'S', 'r', 'm', 0,
  /* 22726 */ 'F', 's', 'V', 'M', 'O', 'V', 'A', 'P', 'S', 'r', 'm', 0,
  /* 22738 */ 'F', 's', 'M', 'O', 'V', 'A', 'P', 'S', 'r', 'm', 0,
  /* 22749 */ 'V', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', 'r', 'm', 0,
  /* 22761 */ 'V', 'H', 'S', 'U', 'B', 'P', 'S', 'r', 'm', 0,
  /* 22771 */ 'V', 'S', 'U', 'B', 'P', 'S', 'r', 'm', 0,
  /* 22780 */ 'V', 'H', 'A', 'D', 'D', 'P', 'S', 'r', 'm', 0,
  /* 22790 */ 'V', 'A', 'D', 'D', 'P', 'S', 'r', 'm', 0,
  /* 22799 */ 'V', 'A', 'N', 'D', 'P', 'S', 'r', 'm', 0,
  /* 22808 */ 'V', 'F', 's', 'A', 'N', 'D', 'P', 'S', 'r', 'm', 0,
  /* 22819 */ 'V', 'U', 'N', 'P', 'C', 'K', 'H', 'P', 'S', 'r', 'm', 0,
  /* 22831 */ 'V', 'M', 'O', 'V', 'H', 'P', 'S', 'r', 'm', 0,
  /* 22841 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', 'P', 'S', 'r', 'm', 0,
  /* 22853 */ 'V', 'U', 'N', 'P', 'C', 'K', 'L', 'P', 'S', 'r', 'm', 0,
  /* 22865 */ 'V', 'M', 'U', 'L', 'P', 'S', 'r', 'm', 0,
  /* 22874 */ 'V', 'M', 'O', 'V', 'L', 'P', 'S', 'r', 'm', 0,
  /* 22884 */ 'V', 'A', 'N', 'D', 'N', 'P', 'S', 'r', 'm', 0,
  /* 22894 */ 'V', 'F', 's', 'A', 'N', 'D', 'N', 'P', 'S', 'r', 'm', 0,
  /* 22906 */ 'V', 'M', 'I', 'N', 'P', 'S', 'r', 'm', 0,
  /* 22915 */ 'V', 'O', 'R', 'P', 'S', 'r', 'm', 0,
  /* 22923 */ 'V', 'X', 'O', 'R', 'P', 'S', 'r', 'm', 0,
  /* 22932 */ 'V', 'F', 's', 'X', 'O', 'R', 'P', 'S', 'r', 'm', 0,
  /* 22943 */ 'V', 'F', 's', 'O', 'R', 'P', 'S', 'r', 'm', 0,
  /* 22953 */ 'V', 'I', 'N', 'S', 'E', 'R', 'T', 'P', 'S', 'r', 'm', 0,
  /* 22965 */ 'V', 'T', 'E', 'S', 'T', 'P', 'S', 'r', 'm', 0,
  /* 22975 */ 'V', 'M', 'O', 'V', 'U', 'P', 'S', 'r', 'm', 0,
  /* 22985 */ 'V', 'B', 'L', 'E', 'N', 'D', 'V', 'P', 'S', 'r', 'm', 0,
  /* 22997 */ 'V', 'D', 'I', 'V', 'P', 'S', 'r', 'm', 0,
  /* 23006 */ 'V', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'P', 'S', 'r', 'm', 0,
  /* 23019 */ 'V', 'M', 'A', 'X', 'P', 'S', 'r', 'm', 0,
  /* 23028 */ 'V', 'F', 'R', 'C', 'Z', 'P', 'S', 'r', 'm', 0,
  /* 23038 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'S', 'D', '2', 'S', 'S', 'r', 'm', 0,
  /* 23054 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'S', 'D', '2', 'S', 'S', 'r', 'm', 0,
  /* 23069 */ 'V', 'M', 'O', 'V', 'D', 'I', '2', 'S', 'S', 'r', 'm', 0,
  /* 23081 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'S', 'I', '2', 'S', 'S', 'r', 'm', 0,
  /* 23097 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'S', 'I', '2', 'S', 'S', 'r', 'm', 0,
  /* 23112 */ 'V', 'S', 'U', 'B', 'S', 'S', 'r', 'm', 0,
  /* 23121 */ 'V', 'A', 'D', 'D', 'S', 'S', 'r', 'm', 0,
  /* 23130 */ 'I', 'n', 't', '_', 'V', 'U', 'C', 'O', 'M', 'I', 'S', 'S', 'r', 'm', 0,
  /* 23145 */ 'I', 'n', 't', '_', 'U', 'C', 'O', 'M', 'I', 'S', 'S', 'r', 'm', 0,
  /* 23159 */ 'I', 'n', 't', '_', 'V', 'C', 'O', 'M', 'I', 'S', 'S', 'r', 'm', 0,
  /* 23173 */ 'I', 'n', 't', '_', 'C', 'O', 'M', 'I', 'S', 'S', 'r', 'm', 0,
  /* 23186 */ 'V', 'M', 'U', 'L', 'S', 'S', 'r', 'm', 0,
  /* 23195 */ 'V', 'M', 'I', 'N', 'S', 'S', 'r', 'm', 0,
  /* 23204 */ 'I', 'n', 't', '_', 'V', 'C', 'M', 'P', 'S', 'S', 'r', 'm', 0,
  /* 23217 */ 'I', 'n', 't', '_', 'C', 'M', 'P', 'S', 'S', 'r', 'm', 0,
  /* 23229 */ 'V', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'S', 'S', 'r', 'm', 0,
  /* 23244 */ 'V', 'D', 'I', 'V', 'S', 'S', 'r', 'm', 0,
  /* 23253 */ 'V', 'M', 'O', 'V', 'S', 'S', 'r', 'm', 0,
  /* 23262 */ 'V', 'M', 'A', 'X', 'S', 'S', 'r', 'm', 0,
  /* 23271 */ 'V', 'F', 'R', 'C', 'Z', 'S', 'S', 'r', 'm', 0,
  /* 23281 */ 'P', 'F', 'C', 'M', 'P', 'G', 'T', 'r', 'm', 0,
  /* 23291 */ 'P', 'F', 'R', 'S', 'Q', 'R', 'T', 'r', 'm', 0,
  /* 23301 */ 'V', 'A', 'E', 'S', 'D', 'E', 'C', 'L', 'A', 'S', 'T', 'r', 'm', 0,
  /* 23315 */ 'V', 'A', 'E', 'S', 'E', 'N', 'C', 'L', 'A', 'S', 'T', 'r', 'm', 0,
  /* 23329 */ 'V', 'P', 'T', 'E', 'S', 'T', 'r', 'm', 0,
  /* 23338 */ 'V', 'L', 'D', 'D', 'Q', 'U', 'r', 'm', 0,
  /* 23347 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'U', 'r', 'm', 0,
  /* 23357 */ 'V', 'P', 'C', 'M', 'O', 'V', 'r', 'm', 0,
  /* 23366 */ 'V', 'P', 'S', 'H', 'A', 'W', 'r', 'm', 0,
  /* 23375 */ 'V', 'P', 'S', 'R', 'A', 'W', 'r', 'm', 0,
  /* 23384 */ 'M', 'M', 'X', '_', 'P', 'S', 'R', 'A', 'W', 'r', 'm', 0,
  /* 23396 */ 'V', 'P', 'H', 'S', 'U', 'B', 'B', 'W', 'r', 'm', 0,
  /* 23407 */ 'V', 'P', 'S', 'A', 'D', 'B', 'W', 'r', 'm', 0,
  /* 23417 */ 'V', 'P', 'H', 'A', 'D', 'D', 'B', 'W', 'r', 'm', 0,
  /* 23428 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'B', 'W', 'r', 'm', 0,
  /* 23441 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'B', 'W', 'r', 'm', 0,
  /* 23454 */ 'V', 'P', 'H', 'A', 'D', 'D', 'U', 'B', 'W', 'r', 'm', 0,
  /* 23466 */ 'V', 'P', 'H', 'S', 'U', 'B', 'W', 'r', 'm', 0,
  /* 23476 */ 'V', 'P', 'S', 'U', 'B', 'W', 'r', 'm', 0,
  /* 23485 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'B', 'W', 'r', 'm', 0,
  /* 23497 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'B', 'W', 'r', 'm', 0,
  /* 23509 */ 'V', 'P', 'H', 'A', 'D', 'D', 'W', 'r', 'm', 0,
  /* 23519 */ 'V', 'P', 'A', 'D', 'D', 'W', 'r', 'm', 0,
  /* 23528 */ 'V', 'P', 'A', 'C', 'K', 'S', 'S', 'D', 'W', 'r', 'm', 0,
  /* 23540 */ 'V', 'P', 'A', 'C', 'K', 'U', 'S', 'D', 'W', 'r', 'm', 0,
  /* 23552 */ 'P', 'I', '2', 'F', 'W', 'r', 'm', 0,
  /* 23560 */ 'V', 'P', 'A', 'V', 'G', 'W', 'r', 'm', 0,
  /* 23569 */ 'V', 'P', 'M', 'U', 'L', 'H', 'W', 'r', 'm', 0,
  /* 23579 */ 'P', 'F', '2', 'I', 'W', 'r', 'm', 0,
  /* 23587 */ 'V', 'P', 'S', 'H', 'L', 'W', 'r', 'm', 0,
  /* 23596 */ 'V', 'P', 'S', 'L', 'L', 'W', 'r', 'm', 0,
  /* 23605 */ 'M', 'M', 'X', '_', 'P', 'S', 'L', 'L', 'W', 'r', 'm', 0,
  /* 23617 */ 'V', 'P', 'M', 'U', 'L', 'L', 'W', 'r', 'm', 0,
  /* 23627 */ 'V', 'P', 'S', 'R', 'L', 'W', 'r', 'm', 0,
  /* 23636 */ 'M', 'M', 'X', '_', 'P', 'S', 'R', 'L', 'W', 'r', 'm', 0,
  /* 23648 */ 'V', 'P', 'S', 'I', 'G', 'N', 'W', 'r', 'm', 0,
  /* 23658 */ 'V', 'P', 'C', 'M', 'P', 'E', 'Q', 'W', 'r', 'm', 0,
  /* 23669 */ 'P', 'M', 'U', 'L', 'H', 'R', 'W', 'r', 'm', 0,
  /* 23679 */ 'V', 'P', 'S', 'U', 'B', 'S', 'W', 'r', 'm', 0,
  /* 23689 */ 'V', 'P', 'A', 'D', 'D', 'S', 'W', 'r', 'm', 0,
  /* 23699 */ 'V', 'P', 'M', 'I', 'N', 'S', 'W', 'r', 'm', 0,
  /* 23709 */ 'V', 'P', 'S', 'U', 'B', 'U', 'S', 'W', 'r', 'm', 0,
  /* 23720 */ 'V', 'P', 'A', 'D', 'D', 'U', 'S', 'W', 'r', 'm', 0,
  /* 23731 */ 'V', 'P', 'M', 'A', 'X', 'S', 'W', 'r', 'm', 0,
  /* 23741 */ 'V', 'P', 'C', 'M', 'P', 'G', 'T', 'W', 'r', 'm', 0,
  /* 23752 */ 'V', 'P', 'R', 'O', 'T', 'W', 'r', 'm', 0,
  /* 23761 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'W', 'r', 'm', 0,
  /* 23776 */ 'V', 'P', 'M', 'U', 'L', 'H', 'U', 'W', 'r', 'm', 0,
  /* 23787 */ 'V', 'P', 'M', 'I', 'N', 'U', 'W', 'r', 'm', 0,
  /* 23797 */ 'V', 'P', 'M', 'A', 'X', 'U', 'W', 'r', 'm', 0,
  /* 23807 */ 'V', 'P', 'M', 'A', 'C', 'S', 'W', 'W', 'r', 'm', 0,
  /* 23818 */ 'V', 'P', 'M', 'A', 'C', 'S', 'S', 'W', 'W', 'r', 'm', 0,
  /* 23830 */ 'P', 'F', 'M', 'A', 'X', 'r', 'm', 0,
  /* 23838 */ 'V', 'C', 'V', 'T', 'T', 'P', 'D', '2', 'D', 'Q', 'X', 'r', 'm', 0,
  /* 23852 */ 'V', 'C', 'V', 'T', 'P', 'D', '2', 'D', 'Q', 'X', 'r', 'm', 0,
  /* 23865 */ 'V', 'C', 'V', 'T', 'P', 'D', '2', 'P', 'S', 'X', 'r', 'm', 0,
  /* 23878 */ 'V', 'M', 'O', 'V', 'N', 'T', 'D', 'Q', 'A', 'Y', 'r', 'm', 0,
  /* 23891 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'A', 'Y', 'r', 'm', 0,
  /* 23902 */ 'V', 'P', 'S', 'U', 'B', 'B', 'Y', 'r', 'm', 0,
  /* 23912 */ 'V', 'P', 'A', 'D', 'D', 'B', 'Y', 'r', 'm', 0,
  /* 23922 */ 'V', 'P', 'S', 'H', 'U', 'F', 'B', 'Y', 'r', 'm', 0,
  /* 23933 */ 'V', 'P', 'A', 'V', 'G', 'B', 'Y', 'r', 'm', 0,
  /* 23943 */ 'V', 'P', 'S', 'I', 'G', 'N', 'B', 'Y', 'r', 'm', 0,
  /* 23954 */ 'V', 'P', 'C', 'M', 'P', 'E', 'Q', 'B', 'Y', 'r', 'm', 0,
  /* 23966 */ 'V', 'P', 'S', 'U', 'B', 'S', 'B', 'Y', 'r', 'm', 0,
  /* 23977 */ 'V', 'P', 'A', 'D', 'D', 'S', 'B', 'Y', 'r', 'm', 0,
  /* 23988 */ 'V', 'P', 'M', 'I', 'N', 'S', 'B', 'Y', 'r', 'm', 0,
  /* 23999 */ 'V', 'P', 'S', 'U', 'B', 'U', 'S', 'B', 'Y', 'r', 'm', 0,
  /* 24011 */ 'V', 'P', 'A', 'D', 'D', 'U', 'S', 'B', 'Y', 'r', 'm', 0,
  /* 24023 */ 'V', 'P', 'M', 'A', 'X', 'S', 'B', 'Y', 'r', 'm', 0,
  /* 24034 */ 'V', 'P', 'C', 'M', 'P', 'G', 'T', 'B', 'Y', 'r', 'm', 0,
  /* 24046 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'B', 'Y', 'r', 'm', 0,
  /* 24062 */ 'V', 'P', 'M', 'I', 'N', 'U', 'B', 'Y', 'r', 'm', 0,
  /* 24073 */ 'V', 'P', 'M', 'A', 'X', 'U', 'B', 'Y', 'r', 'm', 0,
  /* 24084 */ 'V', 'P', 'B', 'L', 'E', 'N', 'D', 'V', 'B', 'Y', 'r', 'm', 0,
  /* 24097 */ 'V', 'P', 'A', 'C', 'K', 'S', 'S', 'W', 'B', 'Y', 'r', 'm', 0,
  /* 24110 */ 'V', 'P', 'A', 'C', 'K', 'U', 'S', 'W', 'B', 'Y', 'r', 'm', 0,
  /* 24123 */ 'V', 'P', 'S', 'R', 'A', 'D', 'Y', 'r', 'm', 0,
  /* 24133 */ 'V', 'P', 'H', 'S', 'U', 'B', 'D', 'Y', 'r', 'm', 0,
  /* 24144 */ 'V', 'P', 'S', 'U', 'B', 'D', 'Y', 'r', 'm', 0,
  /* 24154 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'B', 'D', 'Y', 'r', 'm', 0,
  /* 24167 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'B', 'D', 'Y', 'r', 'm', 0,
  /* 24180 */ 'V', 'P', 'H', 'A', 'D', 'D', 'D', 'Y', 'r', 'm', 0,
  /* 24191 */ 'V', 'P', 'A', 'D', 'D', 'D', 'Y', 'r', 'm', 0,
  /* 24201 */ 'V', 'P', 'S', 'L', 'L', 'D', 'Y', 'r', 'm', 0,
  /* 24211 */ 'V', 'P', 'M', 'U', 'L', 'L', 'D', 'Y', 'r', 'm', 0,
  /* 24222 */ 'V', 'P', 'S', 'R', 'L', 'D', 'Y', 'r', 'm', 0,
  /* 24232 */ 'V', 'P', 'E', 'R', 'M', 'D', 'Y', 'r', 'm', 0,
  /* 24242 */ 'V', 'P', 'A', 'N', 'D', 'Y', 'r', 'm', 0,
  /* 24251 */ 'V', 'P', 'S', 'I', 'G', 'N', 'D', 'Y', 'r', 'm', 0,
  /* 24262 */ 'V', 'C', 'V', 'T', 'D', 'Q', '2', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 24275 */ 'V', 'C', 'V', 'T', 'P', 'S', '2', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 24288 */ 'V', 'M', 'O', 'V', 'A', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 24299 */ 'V', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 24312 */ 'V', 'H', 'S', 'U', 'B', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 24323 */ 'V', 'S', 'U', 'B', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 24333 */ 'V', 'H', 'A', 'D', 'D', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 24344 */ 'V', 'A', 'D', 'D', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 24354 */ 'V', 'A', 'N', 'D', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 24364 */ 'V', 'U', 'N', 'P', 'C', 'K', 'H', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 24377 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 24390 */ 'V', 'U', 'N', 'P', 'C', 'K', 'L', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 24403 */ 'V', 'M', 'U', 'L', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 24413 */ 'V', 'A', 'N', 'D', 'N', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 24424 */ 'V', 'M', 'I', 'N', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 24434 */ 'V', 'O', 'R', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 24443 */ 'V', 'X', 'O', 'R', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 24453 */ 'V', 'T', 'E', 'S', 'T', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 24464 */ 'V', 'M', 'O', 'V', 'U', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 24475 */ 'V', 'B', 'L', 'E', 'N', 'D', 'V', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 24488 */ 'V', 'D', 'I', 'V', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 24498 */ 'V', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 24512 */ 'V', 'M', 'A', 'X', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 24522 */ 'V', 'P', 'C', 'M', 'P', 'E', 'Q', 'D', 'Y', 'r', 'm', 0,
  /* 24534 */ 'V', 'P', 'M', 'I', 'N', 'S', 'D', 'Y', 'r', 'm', 0,
  /* 24545 */ 'V', 'P', 'M', 'A', 'X', 'S', 'D', 'Y', 'r', 'm', 0,
  /* 24556 */ 'V', 'P', 'C', 'M', 'P', 'G', 'T', 'D', 'Y', 'r', 'm', 0,
  /* 24568 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'D', 'Y', 'r', 'm', 0,
  /* 24584 */ 'V', 'P', 'M', 'I', 'N', 'U', 'D', 'Y', 'r', 'm', 0,
  /* 24595 */ 'V', 'P', 'M', 'A', 'X', 'U', 'D', 'Y', 'r', 'm', 0,
  /* 24606 */ 'V', 'P', 'S', 'R', 'A', 'V', 'D', 'Y', 'r', 'm', 0,
  /* 24617 */ 'V', 'P', 'S', 'L', 'L', 'V', 'D', 'Y', 'r', 'm', 0,
  /* 24628 */ 'V', 'P', 'S', 'R', 'L', 'V', 'D', 'Y', 'r', 'm', 0,
  /* 24639 */ 'V', 'P', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'D', 'Y', 'r', 'm', 0,
  /* 24653 */ 'V', 'P', 'M', 'A', 'D', 'D', 'W', 'D', 'Y', 'r', 'm', 0,
  /* 24665 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'W', 'D', 'Y', 'r', 'm', 0,
  /* 24679 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'W', 'D', 'Y', 'r', 'm', 0,
  /* 24693 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'W', 'D', 'Y', 'r', 'm', 0,
  /* 24706 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'W', 'D', 'Y', 'r', 'm', 0,
  /* 24719 */ 'V', 'P', 'A', 'N', 'D', 'N', 'Y', 'r', 'm', 0,
  /* 24729 */ 'V', 'M', 'O', 'V', 'D', 'D', 'U', 'P', 'Y', 'r', 'm', 0,
  /* 24741 */ 'V', 'M', 'O', 'V', 'S', 'H', 'D', 'U', 'P', 'Y', 'r', 'm', 0,
  /* 24754 */ 'V', 'M', 'O', 'V', 'S', 'L', 'D', 'U', 'P', 'Y', 'r', 'm', 0,
  /* 24767 */ 'V', 'P', 'S', 'U', 'B', 'Q', 'Y', 'r', 'm', 0,
  /* 24777 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'B', 'Q', 'Y', 'r', 'm', 0,
  /* 24790 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'B', 'Q', 'Y', 'r', 'm', 0,
  /* 24803 */ 'V', 'C', 'V', 'T', 'T', 'P', 'D', '2', 'D', 'Q', 'Y', 'r', 'm', 0,
  /* 24817 */ 'V', 'C', 'V', 'T', 'P', 'D', '2', 'D', 'Q', 'Y', 'r', 'm', 0,
  /* 24830 */ 'V', 'C', 'V', 'T', 'T', 'P', 'S', '2', 'D', 'Q', 'Y', 'r', 'm', 0,
  /* 24844 */ 'V', 'C', 'V', 'T', 'P', 'S', '2', 'D', 'Q', 'Y', 'r', 'm', 0,
  /* 24857 */ 'V', 'P', 'A', 'D', 'D', 'Q', 'Y', 'r', 'm', 0,
  /* 24867 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'D', 'Q', 'Y', 'r', 'm', 0,
  /* 24881 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'D', 'Q', 'Y', 'r', 'm', 0,
  /* 24895 */ 'V', 'P', 'M', 'U', 'L', 'D', 'Q', 'Y', 'r', 'm', 0,
  /* 24906 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'Q', 'D', 'Q', 'Y', 'r', 'm', 0,
  /* 24921 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'Q', 'D', 'Q', 'Y', 'r', 'm', 0,
  /* 24936 */ 'V', 'P', 'M', 'U', 'L', 'U', 'D', 'Q', 'Y', 'r', 'm', 0,
  /* 24948 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'D', 'Q', 'Y', 'r', 'm', 0,
  /* 24961 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'D', 'Q', 'Y', 'r', 'm', 0,
  /* 24974 */ 'V', 'P', 'S', 'L', 'L', 'Q', 'Y', 'r', 'm', 0,
  /* 24984 */ 'V', 'P', 'S', 'R', 'L', 'Q', 'Y', 'r', 'm', 0,
  /* 24994 */ 'V', 'P', 'C', 'M', 'P', 'E', 'Q', 'Q', 'Y', 'r', 'm', 0,
  /* 25006 */ 'V', 'P', 'C', 'M', 'P', 'G', 'T', 'Q', 'Y', 'r', 'm', 0,
  /* 25018 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'Q', 'Y', 'r', 'm', 0,
  /* 25034 */ 'V', 'P', 'S', 'L', 'L', 'V', 'Q', 'Y', 'r', 'm', 0,
  /* 25045 */ 'V', 'P', 'S', 'R', 'L', 'V', 'Q', 'Y', 'r', 'm', 0,
  /* 25056 */ 'V', 'P', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'Q', 'Y', 'r', 'm', 0,
  /* 25070 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'W', 'Q', 'Y', 'r', 'm', 0,
  /* 25083 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'W', 'Q', 'Y', 'r', 'm', 0,
  /* 25096 */ 'V', 'P', 'O', 'R', 'Y', 'r', 'm', 0,
  /* 25104 */ 'V', 'P', 'X', 'O', 'R', 'Y', 'r', 'm', 0,
  /* 25113 */ 'V', 'C', 'V', 'T', 'P', 'D', '2', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 25126 */ 'V', 'C', 'V', 'T', 'P', 'H', '2', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 25139 */ 'V', 'C', 'V', 'T', 'D', 'Q', '2', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 25152 */ 'V', 'M', 'O', 'V', 'A', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 25163 */ 'V', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 25176 */ 'V', 'H', 'S', 'U', 'B', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 25187 */ 'V', 'S', 'U', 'B', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 25197 */ 'V', 'H', 'A', 'D', 'D', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 25208 */ 'V', 'A', 'D', 'D', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 25218 */ 'V', 'A', 'N', 'D', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 25228 */ 'V', 'U', 'N', 'P', 'C', 'K', 'H', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 25241 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 25254 */ 'V', 'U', 'N', 'P', 'C', 'K', 'L', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 25267 */ 'V', 'M', 'U', 'L', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 25277 */ 'V', 'P', 'E', 'R', 'M', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 25288 */ 'V', 'A', 'N', 'D', 'N', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 25299 */ 'V', 'M', 'I', 'N', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 25309 */ 'V', 'O', 'R', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 25318 */ 'V', 'X', 'O', 'R', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 25328 */ 'V', 'T', 'E', 'S', 'T', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 25339 */ 'V', 'M', 'O', 'V', 'U', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 25350 */ 'V', 'B', 'L', 'E', 'N', 'D', 'V', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 25363 */ 'V', 'D', 'I', 'V', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 25373 */ 'V', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 25387 */ 'V', 'M', 'A', 'X', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 25397 */ 'V', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'S', 'S', 'Y', 'r', 'm', 0,
  /* 25413 */ 'V', 'P', 'T', 'E', 'S', 'T', 'Y', 'r', 'm', 0,
  /* 25423 */ 'V', 'L', 'D', 'D', 'Q', 'U', 'Y', 'r', 'm', 0,
  /* 25433 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'U', 'Y', 'r', 'm', 0,
  /* 25444 */ 'V', 'P', 'S', 'R', 'A', 'W', 'Y', 'r', 'm', 0,
  /* 25454 */ 'V', 'P', 'S', 'A', 'D', 'B', 'W', 'Y', 'r', 'm', 0,
  /* 25465 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'B', 'W', 'Y', 'r', 'm', 0,
  /* 25479 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'B', 'W', 'Y', 'r', 'm', 0,
  /* 25493 */ 'V', 'P', 'H', 'S', 'U', 'B', 'W', 'Y', 'r', 'm', 0,
  /* 25504 */ 'V', 'P', 'S', 'U', 'B', 'W', 'Y', 'r', 'm', 0,
  /* 25514 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'B', 'W', 'Y', 'r', 'm', 0,
  /* 25527 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'B', 'W', 'Y', 'r', 'm', 0,
  /* 25540 */ 'V', 'P', 'H', 'A', 'D', 'D', 'W', 'Y', 'r', 'm', 0,
  /* 25551 */ 'V', 'P', 'A', 'D', 'D', 'W', 'Y', 'r', 'm', 0,
  /* 25561 */ 'V', 'P', 'A', 'C', 'K', 'S', 'S', 'D', 'W', 'Y', 'r', 'm', 0,
  /* 25574 */ 'V', 'P', 'A', 'C', 'K', 'U', 'S', 'D', 'W', 'Y', 'r', 'm', 0,
  /* 25587 */ 'V', 'P', 'A', 'V', 'G', 'W', 'Y', 'r', 'm', 0,
  /* 25597 */ 'V', 'P', 'M', 'U', 'L', 'H', 'W', 'Y', 'r', 'm', 0,
  /* 25608 */ 'V', 'P', 'S', 'L', 'L', 'W', 'Y', 'r', 'm', 0,
  /* 25618 */ 'V', 'P', 'M', 'U', 'L', 'L', 'W', 'Y', 'r', 'm', 0,
  /* 25629 */ 'V', 'P', 'S', 'R', 'L', 'W', 'Y', 'r', 'm', 0,
  /* 25639 */ 'V', 'P', 'S', 'I', 'G', 'N', 'W', 'Y', 'r', 'm', 0,
  /* 25650 */ 'V', 'P', 'C', 'M', 'P', 'E', 'Q', 'W', 'Y', 'r', 'm', 0,
  /* 25662 */ 'V', 'P', 'S', 'U', 'B', 'S', 'W', 'Y', 'r', 'm', 0,
  /* 25673 */ 'V', 'P', 'A', 'D', 'D', 'S', 'W', 'Y', 'r', 'm', 0,
  /* 25684 */ 'V', 'P', 'M', 'I', 'N', 'S', 'W', 'Y', 'r', 'm', 0,
  /* 25695 */ 'V', 'P', 'S', 'U', 'B', 'U', 'S', 'W', 'Y', 'r', 'm', 0,
  /* 25707 */ 'V', 'P', 'A', 'D', 'D', 'U', 'S', 'W', 'Y', 'r', 'm', 0,
  /* 25719 */ 'V', 'P', 'M', 'A', 'X', 'S', 'W', 'Y', 'r', 'm', 0,
  /* 25730 */ 'V', 'P', 'C', 'M', 'P', 'G', 'T', 'W', 'Y', 'r', 'm', 0,
  /* 25742 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'W', 'Y', 'r', 'm', 0,
  /* 25758 */ 'V', 'P', 'M', 'U', 'L', 'H', 'U', 'W', 'Y', 'r', 'm', 0,
  /* 25770 */ 'V', 'P', 'M', 'I', 'N', 'U', 'W', 'Y', 'r', 'm', 0,
  /* 25781 */ 'V', 'P', 'M', 'A', 'X', 'U', 'W', 'Y', 'r', 'm', 0,
  /* 25792 */ 'V', 'P', 'C', 'M', 'P', 'E', 'S', 'T', 'R', 'I', 'Z', 'r', 'm', 0,
  /* 25806 */ 'V', 'P', 'C', 'M', 'P', 'I', 'S', 'T', 'R', 'I', 'Z', 'r', 'm', 0,
  /* 25820 */ 'M', 'M', 'X', '_', 'P', 'A', 'L', 'I', 'G', 'N', 'R', '6', '4', 'i', 'r', 'm', 0,
  /* 25837 */ 'M', 'M', 'X', '_', 'P', 'S', 'U', 'B', 'B', 'i', 'r', 'm', 0,
  /* 25850 */ 'M', 'M', 'X', '_', 'P', 'A', 'D', 'D', 'B', 'i', 'r', 'm', 0,
  /* 25863 */ 'M', 'M', 'X', '_', 'P', 'A', 'V', 'G', 'B', 'i', 'r', 'm', 0,
  /* 25876 */ 'M', 'M', 'X', '_', 'P', 'C', 'M', 'P', 'E', 'Q', 'B', 'i', 'r', 'm', 0,
  /* 25891 */ 'M', 'M', 'X', '_', 'P', 'S', 'U', 'B', 'S', 'B', 'i', 'r', 'm', 0,
  /* 25905 */ 'M', 'M', 'X', '_', 'P', 'A', 'D', 'D', 'S', 'B', 'i', 'r', 'm', 0,
  /* 25919 */ 'M', 'M', 'X', '_', 'P', 'S', 'U', 'B', 'U', 'S', 'B', 'i', 'r', 'm', 0,
  /* 25934 */ 'M', 'M', 'X', '_', 'P', 'A', 'D', 'D', 'U', 'S', 'B', 'i', 'r', 'm', 0,
  /* 25949 */ 'M', 'M', 'X', '_', 'P', 'C', 'M', 'P', 'G', 'T', 'B', 'i', 'r', 'm', 0,
  /* 25964 */ 'M', 'M', 'X', '_', 'P', 'M', 'I', 'N', 'U', 'B', 'i', 'r', 'm', 0,
  /* 25978 */ 'M', 'M', 'X', '_', 'P', 'M', 'A', 'X', 'U', 'B', 'i', 'r', 'm', 0,
  /* 25992 */ 'M', 'M', 'X', '_', 'P', 'A', 'C', 'K', 'S', 'S', 'W', 'B', 'i', 'r', 'm', 0,
  /* 26008 */ 'M', 'M', 'X', '_', 'P', 'A', 'C', 'K', 'U', 'S', 'W', 'B', 'i', 'r', 'm', 0,
  /* 26024 */ 'M', 'M', 'X', '_', 'P', 'S', 'U', 'B', 'D', 'i', 'r', 'm', 0,
  /* 26037 */ 'M', 'M', 'X', '_', 'P', 'A', 'D', 'D', 'D', 'i', 'r', 'm', 0,
  /* 26050 */ 'M', 'M', 'X', '_', 'P', 'A', 'N', 'D', 'i', 'r', 'm', 0,
  /* 26062 */ 'M', 'M', 'X', '_', 'C', 'V', 'T', 'P', 'I', '2', 'P', 'D', 'i', 'r', 'm', 0,
  /* 26078 */ 'M', 'M', 'X', '_', 'P', 'C', 'M', 'P', 'E', 'Q', 'D', 'i', 'r', 'm', 0,
  /* 26093 */ 'M', 'M', 'X', '_', 'P', 'C', 'M', 'P', 'G', 'T', 'D', 'i', 'r', 'm', 0,
  /* 26108 */ 'M', 'M', 'X', '_', 'P', 'M', 'A', 'D', 'D', 'W', 'D', 'i', 'r', 'm', 0,
  /* 26123 */ 'M', 'M', 'X', '_', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'W', 'D', 'i', 'r', 'm', 0,
  /* 26140 */ 'M', 'M', 'X', '_', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'W', 'D', 'i', 'r', 'm', 0,
  /* 26157 */ 'M', 'M', 'X', '_', 'C', 'V', 'T', 'T', 'P', 'D', '2', 'P', 'I', 'i', 'r', 'm', 0,
  /* 26174 */ 'M', 'M', 'X', '_', 'C', 'V', 'T', 'P', 'D', '2', 'P', 'I', 'i', 'r', 'm', 0,
  /* 26190 */ 'M', 'M', 'X', '_', 'C', 'V', 'T', 'T', 'P', 'S', '2', 'P', 'I', 'i', 'r', 'm', 0,
  /* 26207 */ 'M', 'M', 'X', '_', 'C', 'V', 'T', 'P', 'S', '2', 'P', 'I', 'i', 'r', 'm', 0,
  /* 26223 */ 'M', 'M', 'X', '_', 'P', 'A', 'N', 'D', 'N', 'i', 'r', 'm', 0,
  /* 26236 */ 'M', 'M', 'X', '_', 'P', 'S', 'U', 'B', 'Q', 'i', 'r', 'm', 0,
  /* 26249 */ 'M', 'M', 'X', '_', 'P', 'A', 'D', 'D', 'Q', 'i', 'r', 'm', 0,
  /* 26262 */ 'M', 'M', 'X', '_', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'D', 'Q', 'i', 'r', 'm', 0,
  /* 26279 */ 'M', 'M', 'X', '_', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'D', 'Q', 'i', 'r', 'm', 0,
  /* 26296 */ 'M', 'M', 'X', '_', 'P', 'M', 'U', 'L', 'U', 'D', 'Q', 'i', 'r', 'm', 0,
  /* 26311 */ 'M', 'M', 'X', '_', 'P', 'O', 'R', 'i', 'r', 'm', 0,
  /* 26322 */ 'M', 'M', 'X', '_', 'P', 'X', 'O', 'R', 'i', 'r', 'm', 0,
  /* 26334 */ 'M', 'M', 'X', '_', 'C', 'V', 'T', 'P', 'I', '2', 'P', 'S', 'i', 'r', 'm', 0,
  /* 26350 */ 'M', 'M', 'X', '_', 'P', 'S', 'A', 'D', 'B', 'W', 'i', 'r', 'm', 0,
  /* 26364 */ 'M', 'M', 'X', '_', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'B', 'W', 'i', 'r', 'm', 0,
  /* 26381 */ 'M', 'M', 'X', '_', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'B', 'W', 'i', 'r', 'm', 0,
  /* 26398 */ 'M', 'M', 'X', '_', 'P', 'S', 'U', 'B', 'W', 'i', 'r', 'm', 0,
  /* 26411 */ 'M', 'M', 'X', '_', 'P', 'A', 'D', 'D', 'W', 'i', 'r', 'm', 0,
  /* 26424 */ 'M', 'M', 'X', '_', 'P', 'A', 'C', 'K', 'S', 'S', 'D', 'W', 'i', 'r', 'm', 0,
  /* 26440 */ 'M', 'M', 'X', '_', 'P', 'A', 'V', 'G', 'W', 'i', 'r', 'm', 0,
  /* 26453 */ 'M', 'M', 'X', '_', 'P', 'M', 'U', 'L', 'H', 'W', 'i', 'r', 'm', 0,
  /* 26467 */ 'M', 'M', 'X', '_', 'P', 'M', 'U', 'L', 'L', 'W', 'i', 'r', 'm', 0,
  /* 26481 */ 'M', 'M', 'X', '_', 'P', 'C', 'M', 'P', 'E', 'Q', 'W', 'i', 'r', 'm', 0,
  /* 26496 */ 'M', 'M', 'X', '_', 'P', 'S', 'U', 'B', 'S', 'W', 'i', 'r', 'm', 0,
  /* 26510 */ 'M', 'M', 'X', '_', 'P', 'A', 'D', 'D', 'S', 'W', 'i', 'r', 'm', 0,
  /* 26524 */ 'M', 'M', 'X', '_', 'P', 'M', 'I', 'N', 'S', 'W', 'i', 'r', 'm', 0,
  /* 26538 */ 'M', 'M', 'X', '_', 'P', 'S', 'U', 'B', 'U', 'S', 'W', 'i', 'r', 'm', 0,
  /* 26553 */ 'M', 'M', 'X', '_', 'P', 'A', 'D', 'D', 'U', 'S', 'W', 'i', 'r', 'm', 0,
  /* 26568 */ 'M', 'M', 'X', '_', 'P', 'M', 'A', 'X', 'S', 'W', 'i', 'r', 'm', 0,
  /* 26582 */ 'M', 'M', 'X', '_', 'P', 'C', 'M', 'P', 'G', 'T', 'W', 'i', 'r', 'm', 0,
  /* 26597 */ 'M', 'M', 'X', '_', 'P', 'M', 'U', 'L', 'H', 'U', 'W', 'i', 'r', 'm', 0,
  /* 26612 */ 'M', 'O', 'V', '3', '2', 's', 'm', 0,
  /* 26620 */ 'M', 'O', 'V', '6', '4', 's', 'm', 0,
  /* 26628 */ 'M', 'O', 'V', '1', '6', 's', 'm', 0,
  /* 26636 */ 'S', 'U', 'B', '_', 'F', 'S', 'T', '0', 'r', 0,
  /* 26646 */ 'A', 'D', 'D', '_', 'F', 'S', 'T', '0', 'r', 0,
  /* 26656 */ 'M', 'U', 'L', '_', 'F', 'S', 'T', '0', 'r', 0,
  /* 26666 */ 'C', 'O', 'M', '_', 'F', 'S', 'T', '0', 'r', 0,
  /* 26676 */ 'C', 'O', 'M', 'P', '_', 'F', 'S', 'T', '0', 'r', 0,
  /* 26687 */ 'S', 'U', 'B', 'R', '_', 'F', 'S', 'T', '0', 'r', 0,
  /* 26698 */ 'D', 'I', 'V', 'R', '_', 'F', 'S', 'T', '0', 'r', 0,
  /* 26709 */ 'D', 'I', 'V', '_', 'F', 'S', 'T', '0', 'r', 0,
  /* 26719 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', 'r', '2', '3', '1', 'r', 0,
  /* 26736 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '2', '3', '1', 'r', 0,
  /* 26750 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '2', '3', '1', 'r', 0,
  /* 26765 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', 'r', '2', '3', '1', 'r', 0,
  /* 26782 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '2', '3', '1', 'r', 0,
  /* 26796 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '2', '3', '1', 'r', 0,
  /* 26811 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'D', 'r', '2', '3', '1', 'r', 0,
  /* 26825 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'D', 'r', '2', '3', '1', 'r', 0,
  /* 26840 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'D', 'r', '2', '3', '1', 'r', 0,
  /* 26854 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'D', 'r', '2', '3', '1', 'r', 0,
  /* 26869 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', 'r', '2', '3', '1', 'r', 0,
  /* 26886 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '2', '3', '1', 'r', 0,
  /* 26900 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '2', '3', '1', 'r', 0,
  /* 26915 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', 'r', '2', '3', '1', 'r', 0,
  /* 26932 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '2', '3', '1', 'r', 0,
  /* 26946 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '2', '3', '1', 'r', 0,
  /* 26961 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'S', 'r', '2', '3', '1', 'r', 0,
  /* 26975 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'S', 'r', '2', '3', '1', 'r', 0,
  /* 26990 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'S', 'r', '2', '3', '1', 'r', 0,
  /* 27004 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'S', 'r', '2', '3', '1', 'r', 0,
  /* 27019 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', 'r', '1', '3', '2', 'r', 0,
  /* 27036 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '1', '3', '2', 'r', 0,
  /* 27050 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '1', '3', '2', 'r', 0,
  /* 27065 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', 'r', '1', '3', '2', 'r', 0,
  /* 27082 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '1', '3', '2', 'r', 0,
  /* 27096 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '1', '3', '2', 'r', 0,
  /* 27111 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'D', 'r', '1', '3', '2', 'r', 0,
  /* 27125 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'D', 'r', '1', '3', '2', 'r', 0,
  /* 27140 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'D', 'r', '1', '3', '2', 'r', 0,
  /* 27154 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'D', 'r', '1', '3', '2', 'r', 0,
  /* 27169 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', 'r', '1', '3', '2', 'r', 0,
  /* 27186 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '1', '3', '2', 'r', 0,
  /* 27200 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '1', '3', '2', 'r', 0,
  /* 27215 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', 'r', '1', '3', '2', 'r', 0,
  /* 27232 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '1', '3', '2', 'r', 0,
  /* 27246 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '1', '3', '2', 'r', 0,
  /* 27261 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'S', 'r', '1', '3', '2', 'r', 0,
  /* 27275 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'S', 'r', '1', '3', '2', 'r', 0,
  /* 27290 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'S', 'r', '1', '3', '2', 'r', 0,
  /* 27304 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'S', 'r', '1', '3', '2', 'r', 0,
  /* 27319 */ 'L', 'E', 'A', '3', '2', 'r', 0,
  /* 27326 */ 'D', 'E', 'C', '3', '2', 'r', 0,
  /* 27333 */ 'I', 'N', 'C', '3', '2', 'r', 0,
  /* 27340 */ 'M', 'O', 'V', 'P', 'C', '3', '2', 'r', 0,
  /* 27349 */ 'S', 'E', 'T', 'B', '_', 'C', '3', '2', 'r', 0,
  /* 27359 */ 'R', 'D', 'R', 'A', 'N', 'D', '3', '2', 'r', 0,
  /* 27369 */ 'N', 'E', 'G', '3', '2', 'r', 0,
  /* 27376 */ 'P', 'U', 'S', 'H', '3', '2', 'r', 0,
  /* 27384 */ 'C', 'A', 'L', 'L', '3', '2', 'r', 0,
  /* 27392 */ 'I', 'M', 'U', 'L', '3', '2', 'r', 0,
  /* 27400 */ 'B', 'S', 'W', 'A', 'P', '3', '2', 'r', 0,
  /* 27409 */ 'J', 'M', 'P', '3', '2', 'r', 0,
  /* 27416 */ 'P', 'O', 'P', '3', '2', 'r', 0,
  /* 27423 */ 'S', 'T', 'R', '3', '2', 'r', 0,
  /* 27430 */ 'S', 'L', 'D', 'T', '3', '2', 'r', 0,
  /* 27438 */ 'N', 'O', 'T', '3', '2', 'r', 0,
  /* 27445 */ 'I', 'D', 'I', 'V', '3', '2', 'r', 0,
  /* 27453 */ 'S', 'M', 'S', 'W', '3', '2', 'r', 0,
  /* 27461 */ 'L', 'E', 'A', '6', '4', '_', '3', '2', 'r', 0,
  /* 27471 */ 'D', 'E', 'C', '6', '4', '_', '3', '2', 'r', 0,
  /* 27481 */ 'I', 'N', 'C', '6', '4', '_', '3', '2', 'r', 0,
  /* 27491 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', 'r', '2', '1', '3', 'r', 0,
  /* 27508 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '2', '1', '3', 'r', 0,
  /* 27522 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '2', '1', '3', 'r', 0,
  /* 27537 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', 'r', '2', '1', '3', 'r', 0,
  /* 27554 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '2', '1', '3', 'r', 0,
  /* 27568 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '2', '1', '3', 'r', 0,
  /* 27583 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'D', 'r', '2', '1', '3', 'r', 0,
  /* 27597 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'D', 'r', '2', '1', '3', 'r', 0,
  /* 27612 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'D', 'r', '2', '1', '3', 'r', 0,
  /* 27626 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'D', 'r', '2', '1', '3', 'r', 0,
  /* 27641 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', 'r', '2', '1', '3', 'r', 0,
  /* 27658 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '2', '1', '3', 'r', 0,
  /* 27672 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '2', '1', '3', 'r', 0,
  /* 27687 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', 'r', '2', '1', '3', 'r', 0,
  /* 27704 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '2', '1', '3', 'r', 0,
  /* 27718 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '2', '1', '3', 'r', 0,
  /* 27733 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'S', 'r', '2', '1', '3', 'r', 0,
  /* 27747 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'S', 'r', '2', '1', '3', 'r', 0,
  /* 27762 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'S', 'r', '2', '1', '3', 'r', 0,
  /* 27776 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'S', 'r', '2', '1', '3', 'r', 0,
  /* 27791 */ 'L', 'E', 'A', '6', '4', 'r', 0,
  /* 27798 */ 'D', 'E', 'C', '6', '4', 'r', 0,
  /* 27805 */ 'I', 'N', 'C', '6', '4', 'r', 0,
  /* 27812 */ 'S', 'E', 'T', 'B', '_', 'C', '6', '4', 'r', 0,
  /* 27822 */ 'R', 'D', 'R', 'A', 'N', 'D', '6', '4', 'r', 0,
  /* 27832 */ 'N', 'E', 'G', '6', '4', 'r', 0,
  /* 27839 */ 'P', 'U', 'S', 'H', '6', '4', 'r', 0,
  /* 27847 */ 'C', 'A', 'L', 'L', '6', '4', 'r', 0,
  /* 27855 */ 'I', 'M', 'U', 'L', '6', '4', 'r', 0,
  /* 27863 */ 'B', 'S', 'W', 'A', 'P', '6', '4', 'r', 0,
  /* 27872 */ 'J', 'M', 'P', '6', '4', 'r', 0,
  /* 27879 */ 'P', 'O', 'P', '6', '4', 'r', 0,
  /* 27886 */ 'S', 'T', 'R', '6', '4', 'r', 0,
  /* 27893 */ 'S', 'L', 'D', 'T', '6', '4', 'r', 0,
  /* 27901 */ 'N', 'O', 'T', '6', '4', 'r', 0,
  /* 27908 */ 'I', 'D', 'I', 'V', '6', '4', 'r', 0,
  /* 27916 */ 'S', 'M', 'S', 'W', '6', '4', 'r', 0,
  /* 27924 */ 'V', 'P', 'M', 'O', 'V', 'M', 'S', 'K', 'B', 'r', '6', '4', 'r', 0,
  /* 27938 */ 'V', 'M', 'O', 'V', 'M', 'S', 'K', 'P', 'D', 'r', '6', '4', 'r', 0,
  /* 27952 */ 'V', 'M', 'O', 'V', 'M', 'S', 'K', 'P', 'S', 'r', '6', '4', 'r', 0,
  /* 27966 */ 'V', 'P', 'M', 'O', 'V', 'M', 'S', 'K', 'B', 'Y', 'r', '6', '4', 'r', 0,
  /* 27981 */ 'V', 'M', 'O', 'V', 'M', 'S', 'K', 'P', 'D', 'Y', 'r', '6', '4', 'r', 0,
  /* 27996 */ 'V', 'M', 'O', 'V', 'M', 'S', 'K', 'P', 'S', 'Y', 'r', '6', '4', 'r', 0,
  /* 28011 */ 'L', 'E', 'A', '1', '6', 'r', 0,
  /* 28018 */ 'D', 'E', 'C', '1', '6', 'r', 0,
  /* 28025 */ 'I', 'N', 'C', '1', '6', 'r', 0,
  /* 28032 */ 'S', 'E', 'T', 'B', '_', 'C', '1', '6', 'r', 0,
  /* 28042 */ 'R', 'D', 'R', 'A', 'N', 'D', '1', '6', 'r', 0,
  /* 28052 */ 'N', 'E', 'G', '1', '6', 'r', 0,
  /* 28059 */ 'P', 'U', 'S', 'H', '1', '6', 'r', 0,
  /* 28067 */ 'I', 'M', 'U', 'L', '1', '6', 'r', 0,
  /* 28075 */ 'P', 'O', 'P', '1', '6', 'r', 0,
  /* 28082 */ 'S', 'T', 'R', '1', '6', 'r', 0,
  /* 28089 */ 'L', 'L', 'D', 'T', '1', '6', 'r', 0,
  /* 28097 */ 'S', 'L', 'D', 'T', '1', '6', 'r', 0,
  /* 28105 */ 'N', 'O', 'T', '1', '6', 'r', 0,
  /* 28112 */ 'I', 'D', 'I', 'V', '1', '6', 'r', 0,
  /* 28120 */ 'L', 'M', 'S', 'W', '1', '6', 'r', 0,
  /* 28128 */ 'S', 'M', 'S', 'W', '1', '6', 'r', 0,
  /* 28136 */ 'D', 'E', 'C', '6', '4', '_', '1', '6', 'r', 0,
  /* 28146 */ 'I', 'N', 'C', '6', '4', '_', '1', '6', 'r', 0,
  /* 28156 */ 'D', 'E', 'C', '8', 'r', 0,
  /* 28162 */ 'I', 'N', 'C', '8', 'r', 0,
  /* 28168 */ 'S', 'E', 'T', 'B', '_', 'C', '8', 'r', 0,
  /* 28177 */ 'N', 'E', 'G', '8', 'r', 0,
  /* 28183 */ 'I', 'M', 'U', 'L', '8', 'r', 0,
  /* 28190 */ 'N', 'O', 'T', '8', 'r', 0,
  /* 28196 */ 'I', 'D', 'I', 'V', '8', 'r', 0,
  /* 28203 */ 'F', 'N', 'S', 'T', 'S', 'W', '8', 'r', 0,
  /* 28212 */ 'S', 'E', 'T', 'A', 'r', 0,
  /* 28218 */ 'S', 'E', 'T', 'B', 'r', 0,
  /* 28224 */ 'V', 'R', 'O', 'U', 'N', 'D', 'P', 'D', 'r', 0,
  /* 28234 */ 'V', 'S', 'Q', 'R', 'T', 'P', 'D', 'r', 0,
  /* 28243 */ 'V', 'R', 'O', 'U', 'N', 'D', 'Y', 'P', 'D', 'r', 0,
  /* 28254 */ 'V', 'R', 'O', 'U', 'N', 'D', 'S', 'D', 'r', 0,
  /* 28264 */ 'V', 'S', 'Q', 'R', 'T', 'S', 'D', 'r', 0,
  /* 28273 */ 'S', 'E', 'T', 'A', 'E', 'r', 0,
  /* 28280 */ 'S', 'E', 'T', 'B', 'E', 'r', 0,
  /* 28287 */ 'S', 'E', 'T', 'G', 'E', 'r', 0,
  /* 28294 */ 'S', 'E', 'T', 'L', 'E', 'r', 0,
  /* 28301 */ 'S', 'E', 'T', 'N', 'E', 'r', 0,
  /* 28308 */ 'S', 'E', 'T', 'E', 'r', 0,
  /* 28314 */ 'U', 'C', 'O', 'M', '_', 'F', 'r', 0,
  /* 28322 */ 'S', 'E', 'T', 'G', 'r', 0,
  /* 28328 */ 'U', 'C', 'O', 'M', '_', 'F', 'I', 'r', 0,
  /* 28337 */ 'S', 'E', 'T', 'L', 'r', 0,
  /* 28343 */ 'S', 'E', 'T', 'N', 'O', 'r', 0,
  /* 28350 */ 'S', 'E', 'T', 'O', 'r', 0,
  /* 28356 */ 'U', 'C', 'O', 'M', '_', 'F', 'P', 'r', 0,
  /* 28365 */ 'U', 'C', 'O', 'M', '_', 'F', 'I', 'P', 'r', 0,
  /* 28375 */ 'T', 'A', 'I', 'L', 'J', 'M', 'P', 'r', 0,
  /* 28384 */ 'S', 'E', 'T', 'N', 'P', 'r', 0,
  /* 28391 */ 'U', 'C', 'O', 'M', '_', 'F', 'P', 'P', 'r', 0,
  /* 28401 */ 'S', 'E', 'T', 'P', 'r', 0,
  /* 28407 */ 'V', 'E', 'R', 'R', 'r', 0,
  /* 28413 */ 'L', 'T', 'R', 'r', 0,
  /* 28418 */ 'S', 'E', 'T', 'N', 'S', 'r', 0,
  /* 28425 */ 'V', 'R', 'O', 'U', 'N', 'D', 'P', 'S', 'r', 0,
  /* 28435 */ 'V', 'R', 'C', 'P', 'P', 'S', 'r', 0,
  /* 28443 */ 'V', 'R', 'S', 'Q', 'R', 'T', 'P', 'S', 'r', 0,
  /* 28453 */ 'V', 'S', 'Q', 'R', 'T', 'P', 'S', 'r', 0,
  /* 28462 */ 'V', 'R', 'O', 'U', 'N', 'D', 'Y', 'P', 'S', 'r', 0,
  /* 28473 */ 'V', 'R', 'O', 'U', 'N', 'D', 'S', 'S', 'r', 0,
  /* 28483 */ 'V', 'R', 'C', 'P', 'S', 'S', 'r', 0,
  /* 28491 */ 'V', 'R', 'S', 'Q', 'R', 'T', 'S', 'S', 'r', 0,
  /* 28501 */ 'V', 'S', 'Q', 'R', 'T', 'S', 'S', 'r', 0,
  /* 28510 */ 'S', 'E', 'T', 'S', 'r', 0,
  /* 28516 */ 'V', 'E', 'R', 'W', 'r', 0,
  /* 28522 */ 'V', 'S', 'Q', 'R', 'T', 'P', 'D', 'Y', 'r', 0,
  /* 28532 */ 'V', 'R', 'C', 'P', 'P', 'S', 'Y', 'r', 0,
  /* 28541 */ 'V', 'R', 'S', 'Q', 'R', 'T', 'P', 'S', 'Y', 'r', 0,
  /* 28552 */ 'V', 'S', 'Q', 'R', 'T', 'P', 'S', 'Y', 'r', 0,
  /* 28562 */ 'V', 'C', 'V', 'T', 'T', 'P', 'D', '2', 'D', 'Q', 'X', 'r', 'Y', 'r', 0,
  /* 28577 */ 'V', 'C', 'V', 'T', 'P', 'D', '2', 'D', 'Q', 'X', 'r', 'Y', 'r', 0,
  /* 28591 */ 'V', 'C', 'V', 'T', 'P', 'D', '2', 'P', 'S', 'X', 'r', 'Y', 'r', 0,
  /* 28605 */ 'X', 'C', 'H', 'G', '3', '2', 'a', 'r', 0,
  /* 28614 */ 'X', 'C', 'H', 'G', '6', '4', 'a', 'r', 0,
  /* 28623 */ 'X', 'C', 'H', 'G', '1', '6', 'a', 'r', 0,
  /* 28632 */ 'M', 'O', 'V', '3', '2', 'c', 'r', 0,
  /* 28640 */ 'M', 'O', 'V', '6', '4', 'c', 'r', 0,
  /* 28648 */ 'M', 'O', 'V', '3', '2', 'd', 'r', 0,
  /* 28656 */ 'M', 'O', 'V', '6', '4', 'd', 'r', 0,
  /* 28664 */ 'I', 'n', 't', '_', 'M', 'e', 'm', 'B', 'a', 'r', 'r', 'i', 'e', 'r', 0,
  /* 28679 */ 'O', 'U', 'T', '3', '2', 'i', 'r', 0,
  /* 28687 */ 'O', 'U', 'T', '1', '6', 'i', 'r', 0,
  /* 28695 */ 'O', 'U', 'T', '8', 'i', 'r', 0,
  /* 28702 */ 'S', 'B', 'B', '3', '2', 'm', 'r', 0,
  /* 28710 */ 'L', 'O', 'C', 'K', '_', 'S', 'U', 'B', '3', '2', 'm', 'r', 0,
  /* 28723 */ 'A', 'D', 'C', '3', '2', 'm', 'r', 0,
  /* 28731 */ 'B', 'T', 'C', '3', '2', 'm', 'r', 0,
  /* 28739 */ 'L', 'O', 'C', 'K', '_', 'A', 'D', 'D', '3', '2', 'm', 'r', 0,
  /* 28752 */ 'L', 'O', 'C', 'K', '_', 'A', 'N', 'D', '3', '2', 'm', 'r', 0,
  /* 28765 */ 'M', 'O', 'V', 'B', 'E', '3', '2', 'm', 'r', 0,
  /* 28775 */ 'C', 'M', 'P', '3', '2', 'm', 'r', 0,
  /* 28783 */ 'L', 'O', 'C', 'K', '_', 'X', 'O', 'R', '3', '2', 'm', 'r', 0,
  /* 28796 */ 'L', 'O', 'C', 'K', '_', 'O', 'R', '3', '2', 'm', 'r', 0,
  /* 28808 */ 'B', 'T', 'R', '3', '2', 'm', 'r', 0,
  /* 28816 */ 'B', 'T', 'S', '3', '2', 'm', 'r', 0,
  /* 28824 */ 'B', 'T', '3', '2', 'm', 'r', 0,
  /* 28831 */ 'R', 'E', 'L', 'E', 'A', 'S', 'E', '_', 'M', 'O', 'V', '3', '2', 'm', 'r', 0,
  /* 28847 */ 'S', 'B', 'B', '6', '4', 'm', 'r', 0,
  /* 28855 */ 'L', 'O', 'C', 'K', '_', 'S', 'U', 'B', '6', '4', 'm', 'r', 0,
  /* 28868 */ 'A', 'D', 'C', '6', '4', 'm', 'r', 0,
  /* 28876 */ 'B', 'T', 'C', '6', '4', 'm', 'r', 0,
  /* 28884 */ 'L', 'O', 'C', 'K', '_', 'A', 'D', 'D', '6', '4', 'm', 'r', 0,
  /* 28897 */ 'L', 'O', 'C', 'K', '_', 'A', 'N', 'D', '6', '4', 'm', 'r', 0,
  /* 28910 */ 'M', 'M', 'X', '_', 'M', 'O', 'V', 'D', '6', '4', 'm', 'r', 0,
  /* 28923 */ 'M', 'O', 'V', 'B', 'E', '6', '4', 'm', 'r', 0,
  /* 28933 */ 'C', 'M', 'P', '6', '4', 'm', 'r', 0,
  /* 28941 */ 'M', 'M', 'X', '_', 'M', 'O', 'V', 'Q', '6', '4', 'm', 'r', 0,
  /* 28954 */ 'L', 'O', 'C', 'K', '_', 'X', 'O', 'R', '6', '4', 'm', 'r', 0,
  /* 28967 */ 'L', 'O', 'C', 'K', '_', 'O', 'R', '6', '4', 'm', 'r', 0,
  /* 28979 */ 'B', 'T', 'R', '6', '4', 'm', 'r', 0,
  /* 28987 */ 'B', 'T', 'S', '6', '4', 'm', 'r', 0,
  /* 28995 */ 'B', 'T', '6', '4', 'm', 'r', 0,
  /* 29002 */ 'R', 'E', 'L', 'E', 'A', 'S', 'E', '_', 'M', 'O', 'V', '6', '4', 'm', 'r', 0,
  /* 29018 */ 'M', 'O', 'V', 'N', 'T', 'I', '_', '6', '4', 'm', 'r', 0,
  /* 29030 */ 'V', 'M', 'O', 'V', 'S', 'D', 't', 'o', '6', '4', 'm', 'r', 0,
  /* 29043 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', '4', 'm', 'r', 0,
  /* 29058 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', '4', 'm', 'r', 0,
  /* 29070 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', '4', 'm', 'r', 0,
  /* 29083 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', '4', 'm', 'r', 0,
  /* 29098 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', '4', 'm', 'r', 0,
  /* 29110 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', '4', 'm', 'r', 0,
  /* 29123 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'D', '4', 'm', 'r', 0,
  /* 29135 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'D', '4', 'm', 'r', 0,
  /* 29148 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'D', '4', 'm', 'r', 0,
  /* 29160 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'D', '4', 'm', 'r', 0,
  /* 29173 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', '4', 'm', 'r', 0,
  /* 29188 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', '4', 'm', 'r', 0,
  /* 29200 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', '4', 'm', 'r', 0,
  /* 29213 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', '4', 'm', 'r', 0,
  /* 29228 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', '4', 'm', 'r', 0,
  /* 29240 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', '4', 'm', 'r', 0,
  /* 29253 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'S', '4', 'm', 'r', 0,
  /* 29265 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'S', '4', 'm', 'r', 0,
  /* 29278 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'S', '4', 'm', 'r', 0,
  /* 29290 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'S', '4', 'm', 'r', 0,
  /* 29303 */ 'S', 'B', 'B', '1', '6', 'm', 'r', 0,
  /* 29311 */ 'L', 'O', 'C', 'K', '_', 'S', 'U', 'B', '1', '6', 'm', 'r', 0,
  /* 29324 */ 'A', 'D', 'C', '1', '6', 'm', 'r', 0,
  /* 29332 */ 'B', 'T', 'C', '1', '6', 'm', 'r', 0,
  /* 29340 */ 'L', 'O', 'C', 'K', '_', 'A', 'D', 'D', '1', '6', 'm', 'r', 0,
  /* 29353 */ 'L', 'O', 'C', 'K', '_', 'A', 'N', 'D', '1', '6', 'm', 'r', 0,
  /* 29366 */ 'M', 'O', 'V', 'B', 'E', '1', '6', 'm', 'r', 0,
  /* 29376 */ 'A', 'R', 'P', 'L', '1', '6', 'm', 'r', 0,
  /* 29385 */ 'C', 'M', 'P', '1', '6', 'm', 'r', 0,
  /* 29393 */ 'L', 'O', 'C', 'K', '_', 'X', 'O', 'R', '1', '6', 'm', 'r', 0,
  /* 29406 */ 'L', 'O', 'C', 'K', '_', 'O', 'R', '1', '6', 'm', 'r', 0,
  /* 29418 */ 'B', 'T', 'R', '1', '6', 'm', 'r', 0,
  /* 29426 */ 'B', 'T', 'S', '1', '6', 'm', 'r', 0,
  /* 29434 */ 'B', 'T', '1', '6', 'm', 'r', 0,
  /* 29441 */ 'R', 'E', 'L', 'E', 'A', 'S', 'E', '_', 'M', 'O', 'V', '1', '6', 'm', 'r', 0,
  /* 29457 */ 'V', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'F', '1', '2', '8', 'm', 'r', 0,
  /* 29472 */ 'V', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'I', '1', '2', '8', 'm', 'r', 0,
  /* 29487 */ 'V', 'M', 'O', 'V', 'L', 'Q', '1', '2', '8', 'm', 'r', 0,
  /* 29499 */ 'S', 'B', 'B', '8', 'm', 'r', 0,
  /* 29506 */ 'L', 'O', 'C', 'K', '_', 'S', 'U', 'B', '8', 'm', 'r', 0,
  /* 29518 */ 'A', 'D', 'C', '8', 'm', 'r', 0,
  /* 29525 */ 'L', 'O', 'C', 'K', '_', 'A', 'D', 'D', '8', 'm', 'r', 0,
  /* 29537 */ 'L', 'O', 'C', 'K', '_', 'A', 'N', 'D', '8', 'm', 'r', 0,
  /* 29549 */ 'C', 'M', 'P', '8', 'm', 'r', 0,
  /* 29556 */ 'L', 'O', 'C', 'K', '_', 'X', 'O', 'R', '8', 'm', 'r', 0,
  /* 29568 */ 'L', 'O', 'C', 'K', '_', 'O', 'R', '8', 'm', 'r', 0,
  /* 29579 */ 'R', 'E', 'L', 'E', 'A', 'S', 'E', '_', 'M', 'O', 'V', '8', 'm', 'r', 0,
  /* 29594 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'A', 'm', 'r', 0,
  /* 29604 */ 'V', 'P', 'S', 'H', 'A', 'B', 'm', 'r', 0,
  /* 29613 */ 'V', 'P', 'S', 'H', 'L', 'B', 'm', 'r', 0,
  /* 29622 */ 'V', 'P', 'E', 'X', 'T', 'R', 'B', 'm', 'r', 0,
  /* 29632 */ 'V', 'P', 'R', 'O', 'T', 'B', 'm', 'r', 0,
  /* 29641 */ 'V', 'P', 'S', 'H', 'A', 'D', 'm', 'r', 0,
  /* 29650 */ 'V', 'P', 'S', 'H', 'L', 'D', 'm', 'r', 0,
  /* 29659 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', '2', 'P', 'D', 'm', 'r', 0,
  /* 29672 */ 'V', 'M', 'O', 'V', 'A', 'P', 'D', 'm', 'r', 0,
  /* 29682 */ 'V', 'M', 'O', 'V', 'H', 'P', 'D', 'm', 'r', 0,
  /* 29692 */ 'V', 'M', 'O', 'V', 'L', 'P', 'D', 'm', 'r', 0,
  /* 29702 */ 'V', 'M', 'O', 'V', 'N', 'T', 'P', 'D', 'm', 'r', 0,
  /* 29713 */ 'V', 'M', 'O', 'V', 'U', 'P', 'D', 'm', 'r', 0,
  /* 29723 */ 'V', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'P', 'D', 'm', 'r', 0,
  /* 29736 */ 'V', 'P', 'E', 'X', 'T', 'R', 'D', 'm', 'r', 0,
  /* 29746 */ 'V', 'M', 'O', 'V', 'S', 'D', 'm', 'r', 0,
  /* 29755 */ 'V', 'P', 'R', 'O', 'T', 'D', 'm', 'r', 0,
  /* 29764 */ 'V', 'P', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'D', 'm', 'r', 0,
  /* 29777 */ 'V', 'C', 'V', 'T', 'P', 'S', '2', 'P', 'H', 'm', 'r', 0,
  /* 29789 */ 'V', 'M', 'O', 'V', 'P', 'D', 'I', '2', 'D', 'I', 'm', 'r', 0,
  /* 29802 */ 'V', 'M', 'O', 'V', 'S', 'S', '2', 'D', 'I', 'm', 'r', 0,
  /* 29814 */ 'V', 'M', 'O', 'V', 'P', 'Q', 'I', '2', 'Q', 'I', 'm', 'r', 0,
  /* 29827 */ 'M', 'O', 'V', 'N', 'T', 'I', 'm', 'r', 0,
  /* 29836 */ 'V', 'P', 'P', 'E', 'R', 'M', 'm', 'r', 0,
  /* 29845 */ 'V', 'P', 'S', 'H', 'A', 'Q', 'm', 'r', 0,
  /* 29854 */ 'V', 'M', 'O', 'V', 'N', 'T', 'D', 'Q', 'm', 'r', 0,
  /* 29865 */ 'V', 'P', 'S', 'H', 'L', 'Q', 'm', 'r', 0,
  /* 29874 */ 'V', 'P', 'E', 'X', 'T', 'R', 'Q', 'm', 'r', 0,
  /* 29884 */ 'M', 'M', 'X', '_', 'M', 'O', 'V', 'N', 'T', 'Q', 'm', 'r', 0,
  /* 29897 */ 'V', 'P', 'R', 'O', 'T', 'Q', 'm', 'r', 0,
  /* 29906 */ 'V', 'P', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'Q', 'm', 'r', 0,
  /* 29919 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', '2', 'P', 'S', 'm', 'r', 0,
  /* 29932 */ 'V', 'M', 'O', 'V', 'A', 'P', 'S', 'm', 'r', 0,
  /* 29942 */ 'V', 'M', 'O', 'V', 'H', 'P', 'S', 'm', 'r', 0,
  /* 29952 */ 'V', 'M', 'O', 'V', 'L', 'P', 'S', 'm', 'r', 0,
  /* 29962 */ 'V', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'P', 'S', 'm', 'r', 0,
  /* 29975 */ 'V', 'M', 'O', 'V', 'N', 'T', 'P', 'S', 'm', 'r', 0,
  /* 29986 */ 'V', 'M', 'O', 'V', 'U', 'P', 'S', 'm', 'r', 0,
  /* 29996 */ 'V', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'P', 'S', 'm', 'r', 0,
  /* 30009 */ 'V', 'M', 'O', 'V', 'S', 'S', 'm', 'r', 0,
  /* 30018 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'U', 'm', 'r', 0,
  /* 30028 */ 'V', 'P', 'C', 'M', 'O', 'V', 'm', 'r', 0,
  /* 30037 */ 'V', 'P', 'S', 'H', 'A', 'W', 'm', 'r', 0,
  /* 30046 */ 'V', 'P', 'S', 'H', 'L', 'W', 'm', 'r', 0,
  /* 30055 */ 'V', 'P', 'E', 'X', 'T', 'R', 'W', 'm', 'r', 0,
  /* 30065 */ 'V', 'P', 'R', 'O', 'T', 'W', 'm', 'r', 0,
  /* 30074 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'A', 'Y', 'm', 'r', 0,
  /* 30085 */ 'V', 'M', 'O', 'V', 'A', 'P', 'D', 'Y', 'm', 'r', 0,
  /* 30096 */ 'V', 'M', 'O', 'V', 'N', 'T', 'P', 'D', 'Y', 'm', 'r', 0,
  /* 30108 */ 'V', 'M', 'O', 'V', 'U', 'P', 'D', 'Y', 'm', 'r', 0,
  /* 30119 */ 'V', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'P', 'D', 'Y', 'm', 'r', 0,
  /* 30133 */ 'V', 'P', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'D', 'Y', 'm', 'r', 0,
  /* 30147 */ 'V', 'C', 'V', 'T', 'P', 'S', '2', 'P', 'H', 'Y', 'm', 'r', 0,
  /* 30160 */ 'V', 'M', 'O', 'V', 'N', 'T', 'D', 'Q', 'Y', 'm', 'r', 0,
  /* 30172 */ 'V', 'P', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'Q', 'Y', 'm', 'r', 0,
  /* 30186 */ 'V', 'M', 'O', 'V', 'A', 'P', 'S', 'Y', 'm', 'r', 0,
  /* 30197 */ 'V', 'M', 'O', 'V', 'N', 'T', 'P', 'S', 'Y', 'm', 'r', 0,
  /* 30209 */ 'V', 'M', 'O', 'V', 'U', 'P', 'S', 'Y', 'm', 'r', 0,
  /* 30220 */ 'V', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'P', 'S', 'Y', 'm', 'r', 0,
  /* 30234 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'U', 'Y', 'm', 'r', 0,
  /* 30245 */ 'P', 'U', 'S', 'H', '3', '2', 'r', 'm', 'r', 0,
  /* 30255 */ 'P', 'O', 'P', '3', '2', 'r', 'm', 'r', 0,
  /* 30264 */ 'P', 'U', 'S', 'H', '6', '4', 'r', 'm', 'r', 0,
  /* 30274 */ 'P', 'O', 'P', '6', '4', 'r', 'm', 'r', 0,
  /* 30283 */ 'P', 'U', 'S', 'H', '1', '6', 'r', 'm', 'r', 0,
  /* 30293 */ 'P', 'O', 'P', '1', '6', 'r', 'm', 'r', 0,
  /* 30302 */ 'P', 'F', 'R', 'C', 'P', 'I', 'T', '1', 'r', 'r', 0,
  /* 30313 */ 'P', 'F', 'R', 'S', 'Q', 'I', 'T', '1', 'r', 'r', 0,
  /* 30324 */ 'C', 'M', 'O', 'V', 'A', '3', '2', 'r', 'r', 0,
  /* 30334 */ 'S', 'B', 'B', '3', '2', 'r', 'r', 0,
  /* 30342 */ 'S', 'U', 'B', '3', '2', 'r', 'r', 0,
  /* 30350 */ 'C', 'M', 'O', 'V', 'B', '3', '2', 'r', 'r', 0,
  /* 30360 */ 'A', 'D', 'C', '3', '2', 'r', 'r', 0,
  /* 30368 */ 'B', 'T', 'C', '3', '2', 'r', 'r', 0,
  /* 30376 */ 'V', 'M', 'R', 'E', 'A', 'D', '3', '2', 'r', 'r', 0,
  /* 30387 */ 'X', 'A', 'D', 'D', '3', '2', 'r', 'r', 0,
  /* 30396 */ 'A', 'N', 'D', '3', '2', 'r', 'r', 0,
  /* 30404 */ 'C', 'M', 'O', 'V', 'A', 'E', '3', '2', 'r', 'r', 0,
  /* 30415 */ 'C', 'M', 'O', 'V', 'B', 'E', '3', '2', 'r', 'r', 0,
  /* 30426 */ 'C', 'M', 'O', 'V', 'G', 'E', '3', '2', 'r', 'r', 0,
  /* 30437 */ 'C', 'M', 'O', 'V', 'L', 'E', '3', '2', 'r', 'r', 0,
  /* 30448 */ 'C', 'M', 'O', 'V', 'N', 'E', '3', '2', 'r', 'r', 0,
  /* 30459 */ 'V', 'M', 'W', 'R', 'I', 'T', 'E', '3', '2', 'r', 'r', 0,
  /* 30471 */ 'C', 'M', 'O', 'V', 'E', '3', '2', 'r', 'r', 0,
  /* 30481 */ 'B', 'S', 'F', '3', '2', 'r', 'r', 0,
  /* 30489 */ 'C', 'M', 'P', 'X', 'C', 'H', 'G', '3', '2', 'r', 'r', 0,
  /* 30501 */ 'C', 'M', 'O', 'V', 'G', '3', '2', 'r', 'r', 0,
  /* 30511 */ 'B', 'Z', 'H', 'I', '3', '2', 'r', 'r', 0,
  /* 30520 */ 'B', 'L', 'S', 'I', '3', '2', 'r', 'r', 0,
  /* 30529 */ 'B', 'L', 'S', 'M', 'S', 'K', '3', '2', 'r', 'r', 0,
  /* 30540 */ 'L', 'S', 'L', '3', '2', 'r', 'r', 0,
  /* 30548 */ 'I', 'M', 'U', 'L', '3', '2', 'r', 'r', 0,
  /* 30557 */ 'C', 'M', 'O', 'V', 'L', '3', '2', 'r', 'r', 0,
  /* 30567 */ 'A', 'N', 'D', 'N', '3', '2', 'r', 'r', 0,
  /* 30576 */ 'I', 'N', '3', '2', 'r', 'r', 0,
  /* 30583 */ 'C', 'M', 'O', 'V', 'N', 'O', '3', '2', 'r', 'r', 0,
  /* 30594 */ 'C', 'M', 'O', 'V', 'O', '3', '2', 'r', 'r', 0,
  /* 30604 */ 'P', 'D', 'E', 'P', '3', '2', 'r', 'r', 0,
  /* 30613 */ 'C', 'M', 'P', '3', '2', 'r', 'r', 0,
  /* 30621 */ 'C', 'M', 'O', 'V', 'N', 'P', '3', '2', 'r', 'r', 0,
  /* 30632 */ 'C', 'M', 'O', 'V', 'P', '3', '2', 'r', 'r', 0,
  /* 30642 */ 'L', 'A', 'R', '3', '2', 'r', 'r', 0,
  /* 30650 */ 'X', 'O', 'R', '3', '2', 'r', 'r', 0,
  /* 30658 */ 'B', 'S', 'R', '3', '2', 'r', 'r', 0,
  /* 30666 */ 'B', 'L', 'S', 'R', '3', '2', 'r', 'r', 0,
  /* 30675 */ 'B', 'T', 'R', '3', '2', 'r', 'r', 0,
  /* 30683 */ 'B', 'E', 'X', 'T', 'R', '3', '2', 'r', 'r', 0,
  /* 30693 */ 'C', 'M', 'O', 'V', 'N', 'S', '3', '2', 'r', 'r', 0,
  /* 30704 */ 'B', 'T', 'S', '3', '2', 'r', 'r', 0,
  /* 30712 */ 'C', 'M', 'O', 'V', 'S', '3', '2', 'r', 'r', 0,
  /* 30722 */ 'B', 'T', '3', '2', 'r', 'r', 0,
  /* 30729 */ 'P', 'O', 'P', 'C', 'N', 'T', '3', '2', 'r', 'r', 0,
  /* 30740 */ 'L', 'Z', 'C', 'N', 'T', '3', '2', 'r', 'r', 0,
  /* 30750 */ 'T', 'Z', 'C', 'N', 'T', '3', '2', 'r', 'r', 0,
  /* 30760 */ 'T', 'E', 'S', 'T', '3', '2', 'r', 'r', 0,
  /* 30769 */ 'O', 'U', 'T', '3', '2', 'r', 'r', 0,
  /* 30777 */ 'P', 'E', 'X', 'T', '3', '2', 'r', 'r', 0,
  /* 30786 */ 'M', 'O', 'V', '3', '2', 'r', 'r', 0,
  /* 30794 */ 'S', 'H', 'L', 'X', '3', '2', 'r', 'r', 0,
  /* 30803 */ 'M', 'U', 'L', 'X', '3', '2', 'r', 'r', 0,
  /* 30812 */ 'S', 'A', 'R', 'X', '3', '2', 'r', 'r', 0,
  /* 30821 */ 'S', 'H', 'R', 'X', '3', '2', 'r', 'r', 0,
  /* 30830 */ 'P', 'F', 'R', 'C', 'P', 'I', 'T', '2', 'r', 'r', 0,
  /* 30841 */ 'C', 'M', 'O', 'V', 'A', '6', '4', 'r', 'r', 0,
  /* 30851 */ 'S', 'B', 'B', '6', '4', 'r', 'r', 0,
  /* 30859 */ 'S', 'U', 'B', '6', '4', 'r', 'r', 0,
  /* 30867 */ 'C', 'M', 'O', 'V', 'B', '6', '4', 'r', 'r', 0,
  /* 30877 */ 'A', 'D', 'C', '6', '4', 'r', 'r', 0,
  /* 30885 */ 'B', 'T', 'C', '6', '4', 'r', 'r', 0,
  /* 30893 */ 'V', 'M', 'R', 'E', 'A', 'D', '6', '4', 'r', 'r', 0,
  /* 30904 */ 'X', 'A', 'D', 'D', '6', '4', 'r', 'r', 0,
  /* 30913 */ 'A', 'N', 'D', '6', '4', 'r', 'r', 0,
  /* 30921 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'S', 'I', '2', 'S', 'D', '6', '4', 'r', 'r', 0,
  /* 30939 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'S', 'I', '2', 'S', 'D', '6', '4', 'r', 'r', 0,
  /* 30956 */ 'M', 'M', 'X', '_', 'M', 'O', 'V', 'D', '6', '4', 'r', 'r', 0,
  /* 30969 */ 'C', 'M', 'O', 'V', 'A', 'E', '6', '4', 'r', 'r', 0,
  /* 30980 */ 'C', 'M', 'O', 'V', 'B', 'E', '6', '4', 'r', 'r', 0,
  /* 30991 */ 'C', 'M', 'O', 'V', 'G', 'E', '6', '4', 'r', 'r', 0,
  /* 31002 */ 'C', 'M', 'O', 'V', 'L', 'E', '6', '4', 'r', 'r', 0,
  /* 31013 */ 'C', 'M', 'O', 'V', 'N', 'E', '6', '4', 'r', 'r', 0,
  /* 31024 */ 'V', 'M', 'W', 'R', 'I', 'T', 'E', '6', '4', 'r', 'r', 0,
  /* 31036 */ 'C', 'M', 'O', 'V', 'E', '6', '4', 'r', 'r', 0,
  /* 31046 */ 'B', 'S', 'F', '6', '4', 'r', 'r', 0,
  /* 31054 */ 'C', 'M', 'P', 'X', 'C', 'H', 'G', '6', '4', 'r', 'r', 0,
  /* 31066 */ 'C', 'M', 'O', 'V', 'G', '6', '4', 'r', 'r', 0,
  /* 31076 */ 'B', 'Z', 'H', 'I', '6', '4', 'r', 'r', 0,
  /* 31085 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'T', 'S', 'D', '2', 'S', 'I', '6', '4', 'r', 'r', 0,
  /* 31104 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'T', 'S', 'D', '2', 'S', 'I', '6', '4', 'r', 'r', 0,
  /* 31122 */ 'V', 'C', 'V', 'T', 'S', 'D', '2', 'S', 'I', '6', '4', 'r', 'r', 0,
  /* 31136 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'T', 'S', 'S', '2', 'S', 'I', '6', '4', 'r', 'r', 0,
  /* 31155 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'T', 'S', 'S', '2', 'S', 'I', '6', '4', 'r', 'r', 0,
  /* 31173 */ 'V', 'C', 'V', 'T', 'S', 'S', '2', 'S', 'I', '6', '4', 'r', 'r', 0,
  /* 31187 */ 'B', 'L', 'S', 'I', '6', '4', 'r', 'r', 0,
  /* 31196 */ 'B', 'L', 'S', 'M', 'S', 'K', '6', '4', 'r', 'r', 0,
  /* 31207 */ 'L', 'S', 'L', '6', '4', 'r', 'r', 0,
  /* 31215 */ 'I', 'M', 'U', 'L', '6', '4', 'r', 'r', 0,
  /* 31224 */ 'C', 'M', 'O', 'V', 'L', '6', '4', 'r', 'r', 0,
  /* 31234 */ 'A', 'N', 'D', 'N', '6', '4', 'r', 'r', 0,
  /* 31243 */ 'C', 'M', 'O', 'V', 'N', 'O', '6', '4', 'r', 'r', 0,
  /* 31254 */ 'C', 'M', 'O', 'V', 'O', '6', '4', 'r', 'r', 0,
  /* 31264 */ 'P', 'D', 'E', 'P', '6', '4', 'r', 'r', 0,
  /* 31273 */ 'C', 'M', 'P', '6', '4', 'r', 'r', 0,
  /* 31281 */ 'C', 'M', 'O', 'V', 'N', 'P', '6', '4', 'r', 'r', 0,
  /* 31292 */ 'C', 'M', 'O', 'V', 'P', '6', '4', 'r', 'r', 0,
  /* 31302 */ 'M', 'M', 'X', '_', 'M', 'O', 'V', 'Q', '6', '4', 'r', 'r', 0,
  /* 31315 */ 'L', 'A', 'R', '6', '4', 'r', 'r', 0,
  /* 31323 */ 'M', 'M', 'X', '_', 'M', 'O', 'V', 'Q', '2', 'F', 'R', '6', '4', 'r', 'r', 0,
  /* 31339 */ 'X', 'O', 'R', '6', '4', 'r', 'r', 0,
  /* 31347 */ 'B', 'S', 'R', '6', '4', 'r', 'r', 0,
  /* 31355 */ 'B', 'L', 'S', 'R', '6', '4', 'r', 'r', 0,
  /* 31364 */ 'B', 'T', 'R', '6', '4', 'r', 'r', 0,
  /* 31372 */ 'B', 'E', 'X', 'T', 'R', '6', '4', 'r', 'r', 0,
  /* 31382 */ 'C', 'M', 'O', 'V', 'N', 'S', '6', '4', 'r', 'r', 0,
  /* 31393 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'S', 'I', '2', 'S', 'S', '6', '4', 'r', 'r', 0,
  /* 31411 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'S', 'I', '2', 'S', 'S', '6', '4', 'r', 'r', 0,
  /* 31428 */ 'B', 'T', 'S', '6', '4', 'r', 'r', 0,
  /* 31436 */ 'C', 'M', 'O', 'V', 'S', '6', '4', 'r', 'r', 0,
  /* 31446 */ 'B', 'T', '6', '4', 'r', 'r', 0,
  /* 31453 */ 'P', 'O', 'P', 'C', 'N', 'T', '6', '4', 'r', 'r', 0,
  /* 31464 */ 'L', 'Z', 'C', 'N', 'T', '6', '4', 'r', 'r', 0,
  /* 31474 */ 'T', 'Z', 'C', 'N', 'T', '6', '4', 'r', 'r', 0,
  /* 31484 */ 'T', 'E', 'S', 'T', '6', '4', 'r', 'r', 0,
  /* 31493 */ 'P', 'E', 'X', 'T', '6', '4', 'r', 'r', 0,
  /* 31502 */ 'M', 'O', 'V', '6', '4', 'r', 'r', 0,
  /* 31510 */ 'S', 'H', 'L', 'X', '6', '4', 'r', 'r', 0,
  /* 31519 */ 'M', 'U', 'L', 'X', '6', '4', 'r', 'r', 0,
  /* 31528 */ 'S', 'A', 'R', 'X', '6', '4', 'r', 'r', 0,
  /* 31537 */ 'S', 'H', 'R', 'X', '6', '4', 'r', 'r', 0,
  /* 31546 */ 'V', 'M', 'O', 'V', 'Q', 'd', '6', '4', 'r', 'r', 0,
  /* 31557 */ 'M', 'M', 'X', '_', 'M', 'O', 'V', 'D', '6', '4', 'f', 'r', 'o', 'm', '6', '4', 'r', 'r', 0,
  /* 31576 */ 'M', 'M', 'X', '_', 'M', 'O', 'V', 'D', '6', '4', 't', 'o', '6', '4', 'r', 'r', 0,
  /* 31593 */ 'V', 'M', 'O', 'V', 'S', 'D', 't', 'o', '6', '4', 'r', 'r', 0,
  /* 31606 */ 'V', 'M', 'O', 'V', 'P', 'Q', 'I', 't', 'o', '6', '4', 'r', 'r', 0,
  /* 31620 */ 'V', 'M', 'O', 'V', 'Q', 's', '6', '4', 'r', 'r', 0,
  /* 31631 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', '4', 'r', 'r', 0,
  /* 31646 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', '4', 'r', 'r', 0,
  /* 31658 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', '4', 'r', 'r', 0,
  /* 31671 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', '4', 'r', 'r', 0,
  /* 31686 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', '4', 'r', 'r', 0,
  /* 31698 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', '4', 'r', 'r', 0,
  /* 31711 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'D', '4', 'r', 'r', 0,
  /* 31723 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'D', '4', 'r', 'r', 0,
  /* 31736 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'D', '4', 'r', 'r', 0,
  /* 31748 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'D', '4', 'r', 'r', 0,
  /* 31761 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', '4', 'r', 'r', 0,
  /* 31776 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', '4', 'r', 'r', 0,
  /* 31788 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', '4', 'r', 'r', 0,
  /* 31801 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', '4', 'r', 'r', 0,
  /* 31816 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', '4', 'r', 'r', 0,
  /* 31828 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', '4', 'r', 'r', 0,
  /* 31841 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'S', '4', 'r', 'r', 0,
  /* 31853 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'S', '4', 'r', 'r', 0,
  /* 31866 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'S', '4', 'r', 'r', 0,
  /* 31878 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'S', '4', 'r', 'r', 0,
  /* 31891 */ 'C', 'M', 'O', 'V', 'A', '1', '6', 'r', 'r', 0,
  /* 31901 */ 'S', 'B', 'B', '1', '6', 'r', 'r', 0,
  /* 31909 */ 'S', 'U', 'B', '1', '6', 'r', 'r', 0,
  /* 31917 */ 'C', 'M', 'O', 'V', 'B', '1', '6', 'r', 'r', 0,
  /* 31927 */ 'A', 'D', 'C', '1', '6', 'r', 'r', 0,
  /* 31935 */ 'B', 'T', 'C', '1', '6', 'r', 'r', 0,
  /* 31943 */ 'X', 'A', 'D', 'D', '1', '6', 'r', 'r', 0,
  /* 31952 */ 'A', 'N', 'D', '1', '6', 'r', 'r', 0,
  /* 31960 */ 'C', 'M', 'O', 'V', 'A', 'E', '1', '6', 'r', 'r', 0,
  /* 31971 */ 'C', 'M', 'O', 'V', 'B', 'E', '1', '6', 'r', 'r', 0,
  /* 31982 */ 'C', 'M', 'O', 'V', 'G', 'E', '1', '6', 'r', 'r', 0,
  /* 31993 */ 'C', 'M', 'O', 'V', 'L', 'E', '1', '6', 'r', 'r', 0,
  /* 32004 */ 'C', 'M', 'O', 'V', 'N', 'E', '1', '6', 'r', 'r', 0,
  /* 32015 */ 'C', 'M', 'O', 'V', 'E', '1', '6', 'r', 'r', 0,
  /* 32025 */ 'B', 'S', 'F', '1', '6', 'r', 'r', 0,
  /* 32033 */ 'C', 'M', 'P', 'X', 'C', 'H', 'G', '1', '6', 'r', 'r', 0,
  /* 32045 */ 'C', 'M', 'O', 'V', 'G', '1', '6', 'r', 'r', 0,
  /* 32055 */ 'A', 'R', 'P', 'L', '1', '6', 'r', 'r', 0,
  /* 32064 */ 'L', 'S', 'L', '1', '6', 'r', 'r', 0,
  /* 32072 */ 'I', 'M', 'U', 'L', '1', '6', 'r', 'r', 0,
  /* 32081 */ 'C', 'M', 'O', 'V', 'L', '1', '6', 'r', 'r', 0,
  /* 32091 */ 'I', 'N', '1', '6', 'r', 'r', 0,
  /* 32098 */ 'C', 'M', 'O', 'V', 'N', 'O', '1', '6', 'r', 'r', 0,
  /* 32109 */ 'C', 'M', 'O', 'V', 'O', '1', '6', 'r', 'r', 0,
  /* 32119 */ 'C', 'M', 'P', '1', '6', 'r', 'r', 0,
  /* 32127 */ 'C', 'M', 'O', 'V', 'N', 'P', '1', '6', 'r', 'r', 0,
  /* 32138 */ 'C', 'M', 'O', 'V', 'P', '1', '6', 'r', 'r', 0,
  /* 32148 */ 'L', 'A', 'R', '1', '6', 'r', 'r', 0,
  /* 32156 */ 'X', 'O', 'R', '1', '6', 'r', 'r', 0,
  /* 32164 */ 'B', 'S', 'R', '1', '6', 'r', 'r', 0,
  /* 32172 */ 'B', 'T', 'R', '1', '6', 'r', 'r', 0,
  /* 32180 */ 'C', 'M', 'O', 'V', 'N', 'S', '1', '6', 'r', 'r', 0,
  /* 32191 */ 'B', 'T', 'S', '1', '6', 'r', 'r', 0,
  /* 32199 */ 'C', 'M', 'O', 'V', 'S', '1', '6', 'r', 'r', 0,
  /* 32209 */ 'B', 'T', '1', '6', 'r', 'r', 0,
  /* 32216 */ 'P', 'O', 'P', 'C', 'N', 'T', '1', '6', 'r', 'r', 0,
  /* 32227 */ 'L', 'Z', 'C', 'N', 'T', '1', '6', 'r', 'r', 0,
  /* 32237 */ 'T', 'Z', 'C', 'N', 'T', '1', '6', 'r', 'r', 0,
  /* 32247 */ 'T', 'E', 'S', 'T', '1', '6', 'r', 'r', 0,
  /* 32256 */ 'O', 'U', 'T', '1', '6', 'r', 'r', 0,
  /* 32264 */ 'M', 'O', 'V', '1', '6', 'r', 'r', 0,
  /* 32272 */ 'V', 'P', 'A', 'L', 'I', 'G', 'N', 'R', '2', '5', '6', 'r', 'r', 0,
  /* 32286 */ 'V', 'P', 'E', 'R', 'M', '2', 'F', '1', '2', '8', 'r', 'r', 0,
  /* 32299 */ 'V', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'F', '1', '2', '8', 'r', 'r', 0,
  /* 32314 */ 'V', 'I', 'N', 'S', 'E', 'R', 'T', 'F', '1', '2', '8', 'r', 'r', 0,
  /* 32328 */ 'V', 'P', 'E', 'R', 'M', '2', 'I', '1', '2', '8', 'r', 'r', 0,
  /* 32341 */ 'V', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'I', '1', '2', '8', 'r', 'r', 0,
  /* 32356 */ 'V', 'I', 'N', 'S', 'E', 'R', 'T', 'I', '1', '2', '8', 'r', 'r', 0,
  /* 32370 */ 'V', 'P', 'C', 'M', 'P', 'E', 'S', 'T', 'R', 'M', '1', '2', '8', 'r', 'r', 0,
  /* 32386 */ 'V', 'P', 'C', 'M', 'P', 'I', 'S', 'T', 'R', 'M', '1', '2', '8', 'r', 'r', 0,
  /* 32402 */ 'V', 'P', 'A', 'L', 'I', 'G', 'N', 'R', '1', '2', '8', 'r', 'r', 0,
  /* 32416 */ 'V', 'A', 'E', 'S', 'K', 'E', 'Y', 'G', 'E', 'N', 'A', 'S', 'S', 'I', 'S', 'T', '1', '2', '8', 'r', 'r', 0,
  /* 32438 */ 'S', 'B', 'B', '8', 'r', 'r', 0,
  /* 32445 */ 'S', 'U', 'B', '8', 'r', 'r', 0,
  /* 32452 */ 'A', 'D', 'C', '8', 'r', 'r', 0,
  /* 32459 */ 'X', 'A', 'D', 'D', '8', 'r', 'r', 0,
  /* 32467 */ 'A', 'N', 'D', '8', 'r', 'r', 0,
  /* 32474 */ 'C', 'M', 'P', 'X', 'C', 'H', 'G', '8', 'r', 'r', 0,
  /* 32485 */ 'I', 'N', '8', 'r', 'r', 0,
  /* 32491 */ 'C', 'M', 'P', '8', 'r', 'r', 0,
  /* 32498 */ 'X', 'O', 'R', '8', 'r', 'r', 0,
  /* 32505 */ 'T', 'E', 'S', 'T', '8', 'r', 'r', 0,
  /* 32513 */ 'O', 'U', 'T', '8', 'r', 'r', 0,
  /* 32520 */ 'M', 'O', 'V', '8', 'r', 'r', 0,
  /* 32527 */ 'V', 'P', 'C', 'M', 'P', 'E', 'S', 'T', 'R', 'I', 'A', 'r', 'r', 0,
  /* 32541 */ 'V', 'P', 'C', 'M', 'P', 'I', 'S', 'T', 'R', 'I', 'A', 'r', 'r', 0,
  /* 32555 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'A', 'r', 'r', 0,
  /* 32565 */ 'V', 'P', 'S', 'H', 'A', 'B', 'r', 'r', 0,
  /* 32574 */ 'V', 'P', 'S', 'U', 'B', 'B', 'r', 'r', 0,
  /* 32583 */ 'V', 'P', 'A', 'D', 'D', 'B', 'r', 'r', 0,
  /* 32592 */ 'V', 'P', 'S', 'H', 'U', 'F', 'B', 'r', 'r', 0,
  /* 32602 */ 'V', 'P', 'A', 'V', 'G', 'B', 'r', 'r', 0,
  /* 32611 */ 'V', 'P', 'M', 'O', 'V', 'M', 'S', 'K', 'B', 'r', 'r', 0,
  /* 32623 */ 'M', 'M', 'X', '_', 'P', 'M', 'O', 'V', 'M', 'S', 'K', 'B', 'r', 'r', 0,
  /* 32638 */ 'V', 'P', 'S', 'H', 'L', 'B', 'r', 'r', 0,
  /* 32647 */ 'V', 'P', 'S', 'I', 'G', 'N', 'B', 'r', 'r', 0,
  /* 32657 */ 'V', 'P', 'C', 'M', 'P', 'E', 'Q', 'B', 'r', 'r', 0,
  /* 32668 */ 'V', 'P', 'I', 'N', 'S', 'R', 'B', 'r', 'r', 0,
  /* 32678 */ 'V', 'P', 'E', 'X', 'T', 'R', 'B', 'r', 'r', 0,
  /* 32688 */ 'V', 'P', 'S', 'U', 'B', 'S', 'B', 'r', 'r', 0,
  /* 32698 */ 'V', 'P', 'A', 'D', 'D', 'S', 'B', 'r', 'r', 0,
  /* 32708 */ 'V', 'P', 'M', 'I', 'N', 'S', 'B', 'r', 'r', 0,
  /* 32718 */ 'V', 'P', 'S', 'U', 'B', 'U', 'S', 'B', 'r', 'r', 0,
  /* 32729 */ 'V', 'P', 'A', 'D', 'D', 'U', 'S', 'B', 'r', 'r', 0,
  /* 32740 */ 'P', 'A', 'V', 'G', 'U', 'S', 'B', 'r', 'r', 0,
  /* 32750 */ 'V', 'P', 'M', 'A', 'X', 'S', 'B', 'r', 'r', 0,
  /* 32760 */ 'V', 'P', 'C', 'M', 'P', 'G', 'T', 'B', 'r', 'r', 0,
  /* 32771 */ 'V', 'P', 'R', 'O', 'T', 'B', 'r', 'r', 0,
  /* 32780 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'B', 'r', 'r', 0,
  /* 32795 */ 'V', 'P', 'M', 'I', 'N', 'U', 'B', 'r', 'r', 0,
  /* 32805 */ 'P', 'F', 'S', 'U', 'B', 'r', 'r', 0,
  /* 32813 */ 'V', 'P', 'M', 'A', 'X', 'U', 'B', 'r', 'r', 0,
  /* 32823 */ 'V', 'P', 'B', 'L', 'E', 'N', 'D', 'V', 'B', 'r', 'r', 0,
  /* 32835 */ 'V', 'P', 'A', 'C', 'K', 'S', 'S', 'W', 'B', 'r', 'r', 0,
  /* 32847 */ 'V', 'P', 'A', 'C', 'K', 'U', 'S', 'W', 'B', 'r', 'r', 0,
  /* 32859 */ 'P', 'F', 'A', 'C', 'C', 'r', 'r', 0,
  /* 32867 */ 'P', 'F', 'N', 'A', 'C', 'C', 'r', 'r', 0,
  /* 32876 */ 'P', 'F', 'P', 'N', 'A', 'C', 'C', 'r', 'r', 0,
  /* 32886 */ 'V', 'A', 'E', 'S', 'D', 'E', 'C', 'r', 'r', 0,
  /* 32896 */ 'V', 'P', 'C', 'M', 'P', 'E', 'S', 'T', 'R', 'I', 'C', 'r', 'r', 0,
  /* 32910 */ 'V', 'P', 'C', 'M', 'P', 'I', 'S', 'T', 'R', 'I', 'C', 'r', 'r', 0,
  /* 32924 */ 'V', 'A', 'E', 'S', 'I', 'M', 'C', 'r', 'r', 0,
  /* 32934 */ 'V', 'A', 'E', 'S', 'E', 'N', 'C', 'r', 'r', 0,
  /* 32944 */ 'V', 'P', 'S', 'H', 'A', 'D', 'r', 'r', 0,
  /* 32953 */ 'V', 'P', 'S', 'R', 'A', 'D', 'r', 'r', 0,
  /* 32962 */ 'M', 'M', 'X', '_', 'P', 'S', 'R', 'A', 'D', 'r', 'r', 0,
  /* 32974 */ 'V', 'P', 'H', 'A', 'D', 'D', 'B', 'D', 'r', 'r', 0,
  /* 32985 */ 'V', 'P', 'H', 'A', 'D', 'D', 'U', 'B', 'D', 'r', 'r', 0,
  /* 32997 */ 'V', 'P', 'H', 'S', 'U', 'B', 'D', 'r', 'r', 0,
  /* 33007 */ 'V', 'P', 'S', 'U', 'B', 'D', 'r', 'r', 0,
  /* 33016 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'B', 'D', 'r', 'r', 0,
  /* 33028 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'B', 'D', 'r', 'r', 0,
  /* 33040 */ 'P', 'F', 'A', 'D', 'D', 'r', 'r', 0,
  /* 33048 */ 'V', 'P', 'H', 'A', 'D', 'D', 'D', 'r', 'r', 0,
  /* 33058 */ 'V', 'P', 'A', 'D', 'D', 'D', 'r', 'r', 0,
  /* 33067 */ 'V', 'P', 'M', 'A', 'C', 'S', 'D', 'D', 'r', 'r', 0,
  /* 33078 */ 'V', 'P', 'M', 'A', 'C', 'S', 'S', 'D', 'D', 'r', 'r', 0,
  /* 33090 */ 'P', 'I', '2', 'F', 'D', 'r', 'r', 0,
  /* 33098 */ 'P', 'F', '2', 'I', 'D', 'r', 'r', 0,
  /* 33106 */ 'V', 'P', 'S', 'H', 'L', 'D', 'r', 'r', 0,
  /* 33115 */ 'V', 'P', 'S', 'L', 'L', 'D', 'r', 'r', 0,
  /* 33124 */ 'M', 'M', 'X', '_', 'P', 'S', 'L', 'L', 'D', 'r', 'r', 0,
  /* 33136 */ 'V', 'P', 'M', 'U', 'L', 'L', 'D', 'r', 'r', 0,
  /* 33146 */ 'V', 'P', 'S', 'R', 'L', 'D', 'r', 'r', 0,
  /* 33155 */ 'M', 'M', 'X', '_', 'P', 'S', 'R', 'L', 'D', 'r', 'r', 0,
  /* 33167 */ 'V', 'P', 'A', 'N', 'D', 'r', 'r', 0,
  /* 33175 */ 'V', 'P', 'S', 'I', 'G', 'N', 'D', 'r', 'r', 0,
  /* 33185 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', '2', 'P', 'D', 'r', 'r', 0,
  /* 33198 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'D', 'Q', '2', 'P', 'D', 'r', 'r', 0,
  /* 33214 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'D', 'Q', '2', 'P', 'D', 'r', 'r', 0,
  /* 33229 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'P', 'S', '2', 'P', 'D', 'r', 'r', 0,
  /* 33245 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'P', 'S', '2', 'P', 'D', 'r', 'r', 0,
  /* 33260 */ 'F', 's', 'V', 'M', 'O', 'V', 'A', 'P', 'D', 'r', 'r', 0,
  /* 33272 */ 'F', 's', 'M', 'O', 'V', 'A', 'P', 'D', 'r', 'r', 0,
  /* 33283 */ 'P', 'S', 'W', 'A', 'P', 'D', 'r', 'r', 0,
  /* 33292 */ 'V', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', 'r', 'r', 0,
  /* 33304 */ 'V', 'H', 'S', 'U', 'B', 'P', 'D', 'r', 'r', 0,
  /* 33314 */ 'V', 'S', 'U', 'B', 'P', 'D', 'r', 'r', 0,
  /* 33323 */ 'V', 'H', 'A', 'D', 'D', 'P', 'D', 'r', 'r', 0,
  /* 33333 */ 'V', 'A', 'D', 'D', 'P', 'D', 'r', 'r', 0,
  /* 33342 */ 'V', 'A', 'N', 'D', 'P', 'D', 'r', 'r', 0,
  /* 33351 */ 'V', 'F', 's', 'A', 'N', 'D', 'P', 'D', 'r', 'r', 0,
  /* 33362 */ 'V', 'U', 'N', 'P', 'C', 'K', 'H', 'P', 'D', 'r', 'r', 0,
  /* 33374 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', 'P', 'D', 'r', 'r', 0,
  /* 33386 */ 'V', 'U', 'N', 'P', 'C', 'K', 'L', 'P', 'D', 'r', 'r', 0,
  /* 33398 */ 'V', 'M', 'U', 'L', 'P', 'D', 'r', 'r', 0,
  /* 33407 */ 'V', 'A', 'N', 'D', 'N', 'P', 'D', 'r', 'r', 0,
  /* 33417 */ 'V', 'F', 's', 'A', 'N', 'D', 'N', 'P', 'D', 'r', 'r', 0,
  /* 33429 */ 'V', 'M', 'I', 'N', 'P', 'D', 'r', 'r', 0,
  /* 33438 */ 'V', 'O', 'R', 'P', 'D', 'r', 'r', 0,
  /* 33446 */ 'V', 'X', 'O', 'R', 'P', 'D', 'r', 'r', 0,
  /* 33455 */ 'V', 'F', 's', 'X', 'O', 'R', 'P', 'D', 'r', 'r', 0,
  /* 33466 */ 'V', 'F', 's', 'O', 'R', 'P', 'D', 'r', 'r', 0,
  /* 33476 */ 'V', 'T', 'E', 'S', 'T', 'P', 'D', 'r', 'r', 0,
  /* 33486 */ 'V', 'M', 'O', 'V', 'U', 'P', 'D', 'r', 'r', 0,
  /* 33496 */ 'V', 'B', 'L', 'E', 'N', 'D', 'V', 'P', 'D', 'r', 'r', 0,
  /* 33508 */ 'V', 'D', 'I', 'V', 'P', 'D', 'r', 'r', 0,
  /* 33517 */ 'V', 'M', 'A', 'X', 'P', 'D', 'r', 'r', 0,
  /* 33526 */ 'V', 'F', 'R', 'C', 'Z', 'P', 'D', 'r', 'r', 0,
  /* 33536 */ 'V', 'P', 'C', 'M', 'P', 'E', 'Q', 'D', 'r', 'r', 0,
  /* 33547 */ 'V', 'P', 'I', 'N', 'S', 'R', 'D', 'r', 'r', 0,
  /* 33557 */ 'V', 'P', 'E', 'X', 'T', 'R', 'D', 'r', 'r', 0,
  /* 33567 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'S', 'I', '2', 'S', 'D', 'r', 'r', 0,
  /* 33583 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'S', 'I', '2', 'S', 'D', 'r', 'r', 0,
  /* 33598 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'S', 'S', '2', 'S', 'D', 'r', 'r', 0,
  /* 33614 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'S', 'S', '2', 'S', 'D', 'r', 'r', 0,
  /* 33629 */ 'V', 'S', 'U', 'B', 'S', 'D', 'r', 'r', 0,
  /* 33638 */ 'V', 'A', 'D', 'D', 'S', 'D', 'r', 'r', 0,
  /* 33647 */ 'I', 'n', 't', '_', 'V', 'U', 'C', 'O', 'M', 'I', 'S', 'D', 'r', 'r', 0,
  /* 33662 */ 'I', 'n', 't', '_', 'U', 'C', 'O', 'M', 'I', 'S', 'D', 'r', 'r', 0,
  /* 33676 */ 'I', 'n', 't', '_', 'V', 'C', 'O', 'M', 'I', 'S', 'D', 'r', 'r', 0,
  /* 33690 */ 'I', 'n', 't', '_', 'C', 'O', 'M', 'I', 'S', 'D', 'r', 'r', 0,
  /* 33703 */ 'V', 'M', 'U', 'L', 'S', 'D', 'r', 'r', 0,
  /* 33712 */ 'V', 'P', 'M', 'I', 'N', 'S', 'D', 'r', 'r', 0,
  /* 33722 */ 'V', 'M', 'I', 'N', 'S', 'D', 'r', 'r', 0,
  /* 33731 */ 'I', 'n', 't', '_', 'V', 'C', 'M', 'P', 'S', 'D', 'r', 'r', 0,
  /* 33744 */ 'I', 'n', 't', '_', 'C', 'M', 'P', 'S', 'D', 'r', 'r', 0,
  /* 33756 */ 'V', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'S', 'D', 'r', 'r', 0,
  /* 33771 */ 'V', 'D', 'I', 'V', 'S', 'D', 'r', 'r', 0,
  /* 33780 */ 'V', 'M', 'O', 'V', 'S', 'D', 'r', 'r', 0,
  /* 33789 */ 'V', 'P', 'M', 'A', 'X', 'S', 'D', 'r', 'r', 0,
  /* 33799 */ 'V', 'M', 'A', 'X', 'S', 'D', 'r', 'r', 0,
  /* 33808 */ 'V', 'F', 'R', 'C', 'Z', 'S', 'D', 'r', 'r', 0,
  /* 33818 */ 'V', 'M', 'O', 'V', '6', '4', 't', 'o', 'S', 'D', 'r', 'r', 0,
  /* 33831 */ 'V', 'P', 'C', 'M', 'P', 'G', 'T', 'D', 'r', 'r', 0,
  /* 33842 */ 'V', 'P', 'R', 'O', 'T', 'D', 'r', 'r', 0,
  /* 33851 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'D', 'r', 'r', 0,
  /* 33866 */ 'V', 'P', 'M', 'I', 'N', 'U', 'D', 'r', 'r', 0,
  /* 33876 */ 'V', 'P', 'M', 'A', 'X', 'U', 'D', 'r', 'r', 0,
  /* 33886 */ 'V', 'P', 'S', 'R', 'A', 'V', 'D', 'r', 'r', 0,
  /* 33896 */ 'V', 'P', 'S', 'L', 'L', 'V', 'D', 'r', 'r', 0,
  /* 33906 */ 'V', 'P', 'S', 'R', 'L', 'V', 'D', 'r', 'r', 0,
  /* 33916 */ 'V', 'P', 'H', 'S', 'U', 'B', 'W', 'D', 'r', 'r', 0,
  /* 33927 */ 'V', 'P', 'H', 'A', 'D', 'D', 'W', 'D', 'r', 'r', 0,
  /* 33938 */ 'V', 'P', 'M', 'A', 'D', 'D', 'W', 'D', 'r', 'r', 0,
  /* 33949 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'W', 'D', 'r', 'r', 0,
  /* 33962 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'W', 'D', 'r', 'r', 0,
  /* 33975 */ 'V', 'P', 'M', 'A', 'C', 'S', 'W', 'D', 'r', 'r', 0,
  /* 33986 */ 'V', 'P', 'M', 'A', 'D', 'C', 'S', 'W', 'D', 'r', 'r', 0,
  /* 33998 */ 'V', 'P', 'M', 'A', 'C', 'S', 'S', 'W', 'D', 'r', 'r', 0,
  /* 34010 */ 'V', 'P', 'M', 'A', 'D', 'C', 'S', 'S', 'W', 'D', 'r', 'r', 0,
  /* 34023 */ 'V', 'P', 'H', 'A', 'D', 'D', 'U', 'W', 'D', 'r', 'r', 0,
  /* 34035 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'W', 'D', 'r', 'r', 0,
  /* 34047 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'W', 'D', 'r', 'r', 0,
  /* 34059 */ 'P', 'F', 'C', 'M', 'P', 'G', 'E', 'r', 'r', 0,
  /* 34069 */ 'L', 'D', '_', 'F', 'r', 'r', 0,
  /* 34076 */ 'S', 'T', '_', 'F', 'r', 'r', 0,
  /* 34083 */ 'V', 'C', 'V', 'T', 'P', 'S', '2', 'P', 'H', 'r', 'r', 0,
  /* 34095 */ 'V', 'P', 'M', 'A', 'C', 'S', 'D', 'Q', 'H', 'r', 'r', 0,
  /* 34107 */ 'V', 'P', 'M', 'A', 'C', 'S', 'S', 'D', 'Q', 'H', 'r', 'r', 0,
  /* 34120 */ 'V', 'M', 'O', 'V', 'P', 'D', 'I', '2', 'D', 'I', 'r', 'r', 0,
  /* 34133 */ 'V', 'M', 'O', 'V', 'S', 'S', '2', 'D', 'I', 'r', 'r', 0,
  /* 34145 */ 'V', 'M', 'O', 'V', 'D', 'I', '2', 'P', 'D', 'I', 'r', 'r', 0,
  /* 34158 */ 'V', 'M', 'O', 'V', 'Z', 'D', 'I', '2', 'P', 'D', 'I', 'r', 'r', 0,
  /* 34172 */ 'M', 'M', 'X', '_', 'M', 'O', 'V', 'Z', 'D', 'I', '2', 'P', 'D', 'I', 'r', 'r', 0,
  /* 34189 */ 'V', 'M', 'O', 'V', 'Z', 'Q', 'I', '2', 'P', 'Q', 'I', 'r', 'r', 0,
  /* 34203 */ 'V', 'M', 'O', 'V', 'Z', 'P', 'Q', 'I', 'L', 'o', '2', 'P', 'Q', 'I', 'r', 'r', 0,
  /* 34220 */ 'V', 'M', 'O', 'V', '6', '4', 't', 'o', 'P', 'Q', 'I', 'r', 'r', 0,
  /* 34234 */ 'V', 'P', 'C', 'M', 'P', 'E', 'S', 'T', 'R', 'I', 'r', 'r', 0,
  /* 34247 */ 'V', 'P', 'C', 'M', 'P', 'I', 'S', 'T', 'R', 'I', 'r', 'r', 0,
  /* 34260 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'T', 'S', 'D', '2', 'S', 'I', 'r', 'r', 0,
  /* 34277 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'T', 'S', 'D', '2', 'S', 'I', 'r', 'r', 0,
  /* 34293 */ 'V', 'C', 'V', 'T', 'S', 'D', '2', 'S', 'I', 'r', 'r', 0,
  /* 34305 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'T', 'S', 'S', '2', 'S', 'I', 'r', 'r', 0,
  /* 34322 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'T', 'S', 'S', '2', 'S', 'I', 'r', 'r', 0,
  /* 34338 */ 'V', 'C', 'V', 'T', 'S', 'S', '2', 'S', 'I', 'r', 'r', 0,
  /* 34350 */ 'V', 'C', 'V', 'T', 'S', 'I', '2', 'S', 'D', 'L', 'r', 'r', 0,
  /* 34363 */ 'V', 'P', 'M', 'A', 'C', 'S', 'D', 'Q', 'L', 'r', 'r', 0,
  /* 34375 */ 'V', 'P', 'M', 'A', 'C', 'S', 'S', 'D', 'Q', 'L', 'r', 'r', 0,
  /* 34388 */ 'P', 'F', 'M', 'U', 'L', 'r', 'r', 0,
  /* 34396 */ 'V', 'P', 'P', 'E', 'R', 'M', 'r', 'r', 0,
  /* 34405 */ 'V', 'P', 'A', 'N', 'D', 'N', 'r', 'r', 0,
  /* 34414 */ 'P', 'F', 'M', 'I', 'N', 'r', 'r', 0,
  /* 34422 */ 'V', 'P', 'C', 'M', 'P', 'E', 'S', 'T', 'R', 'I', 'O', 'r', 'r', 0,
  /* 34436 */ 'V', 'P', 'C', 'M', 'P', 'I', 'S', 'T', 'R', 'I', 'O', 'r', 'r', 0,
  /* 34450 */ 'P', 'F', 'R', 'C', 'P', 'r', 'r', 0,
  /* 34458 */ 'S', 'T', '_', 'F', 'P', 'r', 'r', 0,
  /* 34466 */ 'V', 'M', 'O', 'V', 'D', 'D', 'U', 'P', 'r', 'r', 0,
  /* 34477 */ 'V', 'M', 'O', 'V', 'S', 'H', 'D', 'U', 'P', 'r', 'r', 0,
  /* 34489 */ 'V', 'M', 'O', 'V', 'S', 'L', 'D', 'U', 'P', 'r', 'r', 0,
  /* 34501 */ 'M', 'M', 'X', '_', 'M', 'O', 'V', 'F', 'R', '6', '4', '2', 'Q', 'r', 'r', 0,
  /* 34517 */ 'M', 'M', 'X', '_', 'M', 'O', 'V', 'D', 'Q', '2', 'Q', 'r', 'r', 0,
  /* 34531 */ 'V', 'P', 'S', 'H', 'A', 'Q', 'r', 'r', 0,
  /* 34540 */ 'V', 'P', 'H', 'A', 'D', 'D', 'B', 'Q', 'r', 'r', 0,
  /* 34551 */ 'V', 'P', 'H', 'A', 'D', 'D', 'U', 'B', 'Q', 'r', 'r', 0,
  /* 34563 */ 'V', 'P', 'S', 'U', 'B', 'Q', 'r', 'r', 0,
  /* 34572 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'B', 'Q', 'r', 'r', 0,
  /* 34584 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'B', 'Q', 'r', 'r', 0,
  /* 34596 */ 'V', 'C', 'V', 'T', 'T', 'P', 'D', '2', 'D', 'Q', 'r', 'r', 0,
  /* 34609 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'P', 'D', '2', 'D', 'Q', 'r', 'r', 0,
  /* 34625 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'P', 'D', '2', 'D', 'Q', 'r', 'r', 0,
  /* 34640 */ 'M', 'M', 'X', '_', 'M', 'O', 'V', 'Q', '2', 'D', 'Q', 'r', 'r', 0,
  /* 34654 */ 'V', 'C', 'V', 'T', 'T', 'P', 'S', '2', 'D', 'Q', 'r', 'r', 0,
  /* 34667 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'P', 'S', '2', 'D', 'Q', 'r', 'r', 0,
  /* 34683 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'P', 'S', '2', 'D', 'Q', 'r', 'r', 0,
  /* 34698 */ 'V', 'P', 'H', 'S', 'U', 'B', 'D', 'Q', 'r', 'r', 0,
  /* 34709 */ 'V', 'P', 'A', 'D', 'D', 'Q', 'r', 'r', 0,
  /* 34718 */ 'V', 'P', 'H', 'A', 'D', 'D', 'D', 'Q', 'r', 'r', 0,
  /* 34729 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'D', 'Q', 'r', 'r', 0,
  /* 34742 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'D', 'Q', 'r', 'r', 0,
  /* 34755 */ 'V', 'P', 'M', 'U', 'L', 'D', 'Q', 'r', 'r', 0,
  /* 34765 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'Q', 'D', 'Q', 'r', 'r', 0,
  /* 34779 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'Q', 'D', 'Q', 'r', 'r', 0,
  /* 34793 */ 'V', 'P', 'C', 'L', 'M', 'U', 'L', 'Q', 'D', 'Q', 'r', 'r', 0,
  /* 34806 */ 'V', 'P', 'H', 'A', 'D', 'D', 'U', 'D', 'Q', 'r', 'r', 0,
  /* 34818 */ 'V', 'P', 'M', 'U', 'L', 'U', 'D', 'Q', 'r', 'r', 0,
  /* 34829 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'D', 'Q', 'r', 'r', 0,
  /* 34841 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'D', 'Q', 'r', 'r', 0,
  /* 34853 */ 'P', 'F', 'C', 'M', 'P', 'E', 'Q', 'r', 'r', 0,
  /* 34863 */ 'V', 'P', 'S', 'H', 'L', 'Q', 'r', 'r', 0,
  /* 34872 */ 'V', 'P', 'S', 'L', 'L', 'Q', 'r', 'r', 0,
  /* 34881 */ 'M', 'M', 'X', '_', 'P', 'S', 'L', 'L', 'Q', 'r', 'r', 0,
  /* 34893 */ 'V', 'P', 'S', 'R', 'L', 'Q', 'r', 'r', 0,
  /* 34902 */ 'M', 'M', 'X', '_', 'P', 'S', 'R', 'L', 'Q', 'r', 'r', 0,
  /* 34914 */ 'V', 'P', 'C', 'M', 'P', 'E', 'Q', 'Q', 'r', 'r', 0,
  /* 34925 */ 'V', 'P', 'I', 'N', 'S', 'R', 'Q', 'r', 'r', 0,
  /* 34935 */ 'V', 'P', 'E', 'X', 'T', 'R', 'Q', 'r', 'r', 0,
  /* 34945 */ 'V', 'P', 'C', 'M', 'P', 'G', 'T', 'Q', 'r', 'r', 0,
  /* 34956 */ 'V', 'P', 'R', 'O', 'T', 'Q', 'r', 'r', 0,
  /* 34965 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'Q', 'r', 'r', 0,
  /* 34980 */ 'V', 'P', 'S', 'L', 'L', 'V', 'Q', 'r', 'r', 0,
  /* 34990 */ 'V', 'P', 'S', 'R', 'L', 'V', 'Q', 'r', 'r', 0,
  /* 35000 */ 'V', 'P', 'H', 'A', 'D', 'D', 'W', 'Q', 'r', 'r', 0,
  /* 35011 */ 'V', 'P', 'H', 'A', 'D', 'D', 'U', 'W', 'Q', 'r', 'r', 0,
  /* 35023 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'W', 'Q', 'r', 'r', 0,
  /* 35035 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'W', 'Q', 'r', 'r', 0,
  /* 35047 */ 'P', 'F', 'S', 'U', 'B', 'R', 'r', 'r', 0,
  /* 35056 */ 'V', 'P', 'O', 'R', 'r', 'r', 0,
  /* 35063 */ 'V', 'P', 'X', 'O', 'R', 'r', 'r', 0,
  /* 35071 */ 'V', 'P', 'C', 'M', 'P', 'E', 'S', 'T', 'R', 'I', 'S', 'r', 'r', 0,
  /* 35085 */ 'V', 'P', 'C', 'M', 'P', 'I', 'S', 'T', 'R', 'I', 'S', 'r', 'r', 0,
  /* 35099 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'P', 'D', '2', 'P', 'S', 'r', 'r', 0,
  /* 35115 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'P', 'D', '2', 'P', 'S', 'r', 'r', 0,
  /* 35130 */ 'V', 'C', 'V', 'T', 'P', 'H', '2', 'P', 'S', 'r', 'r', 0,
  /* 35142 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', '2', 'P', 'S', 'r', 'r', 0,
  /* 35155 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'D', 'Q', '2', 'P', 'S', 'r', 'r', 0,
  /* 35171 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'D', 'Q', '2', 'P', 'S', 'r', 'r', 0,
  /* 35186 */ 'F', 's', 'V', 'M', 'O', 'V', 'A', 'P', 'S', 'r', 'r', 0,
  /* 35198 */ 'F', 's', 'M', 'O', 'V', 'A', 'P', 'S', 'r', 'r', 0,
  /* 35209 */ 'V', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', 'r', 'r', 0,
  /* 35221 */ 'V', 'H', 'S', 'U', 'B', 'P', 'S', 'r', 'r', 0,
  /* 35231 */ 'V', 'S', 'U', 'B', 'P', 'S', 'r', 'r', 0,
  /* 35240 */ 'V', 'H', 'A', 'D', 'D', 'P', 'S', 'r', 'r', 0,
  /* 35250 */ 'V', 'A', 'D', 'D', 'P', 'S', 'r', 'r', 0,
  /* 35259 */ 'V', 'A', 'N', 'D', 'P', 'S', 'r', 'r', 0,
  /* 35268 */ 'V', 'F', 's', 'A', 'N', 'D', 'P', 'S', 'r', 'r', 0,
  /* 35279 */ 'V', 'U', 'N', 'P', 'C', 'K', 'H', 'P', 'S', 'r', 'r', 0,
  /* 35291 */ 'V', 'M', 'O', 'V', 'L', 'H', 'P', 'S', 'r', 'r', 0,
  /* 35302 */ 'V', 'M', 'O', 'V', 'H', 'L', 'P', 'S', 'r', 'r', 0,
  /* 35313 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', 'P', 'S', 'r', 'r', 0,
  /* 35325 */ 'V', 'U', 'N', 'P', 'C', 'K', 'L', 'P', 'S', 'r', 'r', 0,
  /* 35337 */ 'V', 'M', 'U', 'L', 'P', 'S', 'r', 'r', 0,
  /* 35346 */ 'V', 'A', 'N', 'D', 'N', 'P', 'S', 'r', 'r', 0,
  /* 35356 */ 'V', 'F', 's', 'A', 'N', 'D', 'N', 'P', 'S', 'r', 'r', 0,
  /* 35368 */ 'V', 'M', 'I', 'N', 'P', 'S', 'r', 'r', 0,
  /* 35377 */ 'V', 'O', 'R', 'P', 'S', 'r', 'r', 0,
  /* 35385 */ 'V', 'X', 'O', 'R', 'P', 'S', 'r', 'r', 0,
  /* 35394 */ 'V', 'F', 's', 'X', 'O', 'R', 'P', 'S', 'r', 'r', 0,
  /* 35405 */ 'V', 'F', 's', 'O', 'R', 'P', 'S', 'r', 'r', 0,
  /* 35415 */ 'V', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'P', 'S', 'r', 'r', 0,
  /* 35428 */ 'V', 'I', 'N', 'S', 'E', 'R', 'T', 'P', 'S', 'r', 'r', 0,
  /* 35440 */ 'V', 'T', 'E', 'S', 'T', 'P', 'S', 'r', 'r', 0,
  /* 35450 */ 'V', 'M', 'O', 'V', 'U', 'P', 'S', 'r', 'r', 0,
  /* 35460 */ 'V', 'B', 'L', 'E', 'N', 'D', 'V', 'P', 'S', 'r', 'r', 0,
  /* 35472 */ 'V', 'D', 'I', 'V', 'P', 'S', 'r', 'r', 0,
  /* 35481 */ 'V', 'M', 'A', 'X', 'P', 'S', 'r', 'r', 0,
  /* 35490 */ 'V', 'F', 'R', 'C', 'Z', 'P', 'S', 'r', 'r', 0,
  /* 35500 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'S', 'D', '2', 'S', 'S', 'r', 'r', 0,
  /* 35516 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'S', 'D', '2', 'S', 'S', 'r', 'r', 0,
  /* 35531 */ 'V', 'M', 'O', 'V', 'D', 'I', '2', 'S', 'S', 'r', 'r', 0,
  /* 35543 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'S', 'I', '2', 'S', 'S', 'r', 'r', 0,
  /* 35559 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'S', 'I', '2', 'S', 'S', 'r', 'r', 0,
  /* 35574 */ 'V', 'S', 'U', 'B', 'S', 'S', 'r', 'r', 0,
  /* 35583 */ 'V', 'A', 'D', 'D', 'S', 'S', 'r', 'r', 0,
  /* 35592 */ 'I', 'n', 't', '_', 'V', 'U', 'C', 'O', 'M', 'I', 'S', 'S', 'r', 'r', 0,
  /* 35607 */ 'I', 'n', 't', '_', 'U', 'C', 'O', 'M', 'I', 'S', 'S', 'r', 'r', 0,
  /* 35621 */ 'I', 'n', 't', '_', 'V', 'C', 'O', 'M', 'I', 'S', 'S', 'r', 'r', 0,
  /* 35635 */ 'I', 'n', 't', '_', 'C', 'O', 'M', 'I', 'S', 'S', 'r', 'r', 0,
  /* 35648 */ 'V', 'M', 'U', 'L', 'S', 'S', 'r', 'r', 0,
  /* 35657 */ 'V', 'M', 'I', 'N', 'S', 'S', 'r', 'r', 0,
  /* 35666 */ 'I', 'n', 't', '_', 'V', 'C', 'M', 'P', 'S', 'S', 'r', 'r', 0,
  /* 35679 */ 'I', 'n', 't', '_', 'C', 'M', 'P', 'S', 'S', 'r', 'r', 0,
  /* 35691 */ 'V', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'S', 'S', 'r', 'r', 0,
  /* 35706 */ 'V', 'D', 'I', 'V', 'S', 'S', 'r', 'r', 0,
  /* 35715 */ 'V', 'M', 'O', 'V', 'S', 'S', 'r', 'r', 0,
  /* 35724 */ 'V', 'M', 'A', 'X', 'S', 'S', 'r', 'r', 0,
  /* 35733 */ 'V', 'F', 'R', 'C', 'Z', 'S', 'S', 'r', 'r', 0,
  /* 35743 */ 'P', 'F', 'C', 'M', 'P', 'G', 'T', 'r', 'r', 0,
  /* 35753 */ 'M', 'W', 'A', 'I', 'T', 'r', 'r', 0,
  /* 35761 */ 'P', 'F', 'R', 'S', 'Q', 'R', 'T', 'r', 'r', 0,
  /* 35771 */ 'V', 'A', 'E', 'S', 'D', 'E', 'C', 'L', 'A', 'S', 'T', 'r', 'r', 0,
  /* 35785 */ 'V', 'A', 'E', 'S', 'E', 'N', 'C', 'L', 'A', 'S', 'T', 'r', 'r', 0,
  /* 35799 */ 'V', 'P', 'T', 'E', 'S', 'T', 'r', 'r', 0,
  /* 35808 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'U', 'r', 'r', 0,
  /* 35818 */ 'V', 'P', 'C', 'M', 'O', 'V', 'r', 'r', 0,
  /* 35827 */ 'V', 'P', 'S', 'H', 'A', 'W', 'r', 'r', 0,
  /* 35836 */ 'V', 'P', 'S', 'R', 'A', 'W', 'r', 'r', 0,
  /* 35845 */ 'M', 'M', 'X', '_', 'P', 'S', 'R', 'A', 'W', 'r', 'r', 0,
  /* 35857 */ 'V', 'P', 'H', 'S', 'U', 'B', 'B', 'W', 'r', 'r', 0,
  /* 35868 */ 'V', 'P', 'S', 'A', 'D', 'B', 'W', 'r', 'r', 0,
  /* 35878 */ 'V', 'P', 'H', 'A', 'D', 'D', 'B', 'W', 'r', 'r', 0,
  /* 35889 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'B', 'W', 'r', 'r', 0,
  /* 35902 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'B', 'W', 'r', 'r', 0,
  /* 35915 */ 'V', 'P', 'H', 'A', 'D', 'D', 'U', 'B', 'W', 'r', 'r', 0,
  /* 35927 */ 'V', 'P', 'H', 'S', 'U', 'B', 'W', 'r', 'r', 0,
  /* 35937 */ 'V', 'P', 'S', 'U', 'B', 'W', 'r', 'r', 0,
  /* 35946 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'B', 'W', 'r', 'r', 0,
  /* 35958 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'B', 'W', 'r', 'r', 0,
  /* 35970 */ 'V', 'P', 'H', 'A', 'D', 'D', 'W', 'r', 'r', 0,
  /* 35980 */ 'V', 'P', 'A', 'D', 'D', 'W', 'r', 'r', 0,
  /* 35989 */ 'V', 'P', 'A', 'C', 'K', 'S', 'S', 'D', 'W', 'r', 'r', 0,
  /* 36001 */ 'V', 'P', 'A', 'C', 'K', 'U', 'S', 'D', 'W', 'r', 'r', 0,
  /* 36013 */ 'P', 'I', '2', 'F', 'W', 'r', 'r', 0,
  /* 36021 */ 'V', 'P', 'A', 'V', 'G', 'W', 'r', 'r', 0,
  /* 36030 */ 'V', 'P', 'M', 'U', 'L', 'H', 'W', 'r', 'r', 0,
  /* 36040 */ 'P', 'F', '2', 'I', 'W', 'r', 'r', 0,
  /* 36048 */ 'V', 'P', 'S', 'H', 'L', 'W', 'r', 'r', 0,
  /* 36057 */ 'V', 'P', 'S', 'L', 'L', 'W', 'r', 'r', 0,
  /* 36066 */ 'M', 'M', 'X', '_', 'P', 'S', 'L', 'L', 'W', 'r', 'r', 0,
  /* 36078 */ 'V', 'P', 'M', 'U', 'L', 'L', 'W', 'r', 'r', 0,
  /* 36088 */ 'V', 'P', 'S', 'R', 'L', 'W', 'r', 'r', 0,
  /* 36097 */ 'M', 'M', 'X', '_', 'P', 'S', 'R', 'L', 'W', 'r', 'r', 0,
  /* 36109 */ 'V', 'P', 'S', 'I', 'G', 'N', 'W', 'r', 'r', 0,
  /* 36119 */ 'V', 'P', 'C', 'M', 'P', 'E', 'Q', 'W', 'r', 'r', 0,
  /* 36130 */ 'P', 'M', 'U', 'L', 'H', 'R', 'W', 'r', 'r', 0,
  /* 36140 */ 'V', 'P', 'S', 'U', 'B', 'S', 'W', 'r', 'r', 0,
  /* 36150 */ 'V', 'P', 'A', 'D', 'D', 'S', 'W', 'r', 'r', 0,
  /* 36160 */ 'V', 'P', 'M', 'I', 'N', 'S', 'W', 'r', 'r', 0,
  /* 36170 */ 'V', 'P', 'S', 'U', 'B', 'U', 'S', 'W', 'r', 'r', 0,
  /* 36181 */ 'V', 'P', 'A', 'D', 'D', 'U', 'S', 'W', 'r', 'r', 0,
  /* 36192 */ 'V', 'P', 'M', 'A', 'X', 'S', 'W', 'r', 'r', 0,
  /* 36202 */ 'V', 'P', 'C', 'M', 'P', 'G', 'T', 'W', 'r', 'r', 0,
  /* 36213 */ 'V', 'P', 'R', 'O', 'T', 'W', 'r', 'r', 0,
  /* 36222 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'W', 'r', 'r', 0,
  /* 36237 */ 'V', 'P', 'M', 'U', 'L', 'H', 'U', 'W', 'r', 'r', 0,
  /* 36248 */ 'V', 'P', 'M', 'I', 'N', 'U', 'W', 'r', 'r', 0,
  /* 36258 */ 'V', 'P', 'M', 'A', 'X', 'U', 'W', 'r', 'r', 0,
  /* 36268 */ 'V', 'P', 'M', 'A', 'C', 'S', 'W', 'W', 'r', 'r', 0,
  /* 36279 */ 'V', 'P', 'M', 'A', 'C', 'S', 'S', 'W', 'W', 'r', 'r', 0,
  /* 36291 */ 'P', 'F', 'M', 'A', 'X', 'r', 'r', 0,
  /* 36299 */ 'V', 'C', 'V', 'T', 'T', 'P', 'D', '2', 'D', 'Q', 'X', 'r', 'r', 0,
  /* 36313 */ 'V', 'C', 'V', 'T', 'P', 'D', '2', 'D', 'Q', 'X', 'r', 'r', 0,
  /* 36326 */ 'V', 'C', 'V', 'T', 'P', 'D', '2', 'P', 'S', 'X', 'r', 'r', 0,
  /* 36339 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'A', 'Y', 'r', 'r', 0,
  /* 36350 */ 'V', 'P', 'S', 'U', 'B', 'B', 'Y', 'r', 'r', 0,
  /* 36360 */ 'V', 'P', 'A', 'D', 'D', 'B', 'Y', 'r', 'r', 0,
  /* 36370 */ 'V', 'P', 'S', 'H', 'U', 'F', 'B', 'Y', 'r', 'r', 0,
  /* 36381 */ 'V', 'P', 'A', 'V', 'G', 'B', 'Y', 'r', 'r', 0,
  /* 36391 */ 'V', 'P', 'M', 'O', 'V', 'M', 'S', 'K', 'B', 'Y', 'r', 'r', 0,
  /* 36404 */ 'V', 'P', 'S', 'I', 'G', 'N', 'B', 'Y', 'r', 'r', 0,
  /* 36415 */ 'V', 'P', 'C', 'M', 'P', 'E', 'Q', 'B', 'Y', 'r', 'r', 0,
  /* 36427 */ 'V', 'P', 'S', 'U', 'B', 'S', 'B', 'Y', 'r', 'r', 0,
  /* 36438 */ 'V', 'P', 'A', 'D', 'D', 'S', 'B', 'Y', 'r', 'r', 0,
  /* 36449 */ 'V', 'P', 'M', 'I', 'N', 'S', 'B', 'Y', 'r', 'r', 0,
  /* 36460 */ 'V', 'P', 'S', 'U', 'B', 'U', 'S', 'B', 'Y', 'r', 'r', 0,
  /* 36472 */ 'V', 'P', 'A', 'D', 'D', 'U', 'S', 'B', 'Y', 'r', 'r', 0,
  /* 36484 */ 'V', 'P', 'M', 'A', 'X', 'S', 'B', 'Y', 'r', 'r', 0,
  /* 36495 */ 'V', 'P', 'C', 'M', 'P', 'G', 'T', 'B', 'Y', 'r', 'r', 0,
  /* 36507 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'B', 'Y', 'r', 'r', 0,
  /* 36523 */ 'V', 'P', 'M', 'I', 'N', 'U', 'B', 'Y', 'r', 'r', 0,
  /* 36534 */ 'V', 'P', 'M', 'A', 'X', 'U', 'B', 'Y', 'r', 'r', 0,
  /* 36545 */ 'V', 'P', 'B', 'L', 'E', 'N', 'D', 'V', 'B', 'Y', 'r', 'r', 0,
  /* 36558 */ 'V', 'P', 'A', 'C', 'K', 'S', 'S', 'W', 'B', 'Y', 'r', 'r', 0,
  /* 36571 */ 'V', 'P', 'A', 'C', 'K', 'U', 'S', 'W', 'B', 'Y', 'r', 'r', 0,
  /* 36584 */ 'V', 'P', 'S', 'R', 'A', 'D', 'Y', 'r', 'r', 0,
  /* 36594 */ 'V', 'P', 'H', 'S', 'U', 'B', 'D', 'Y', 'r', 'r', 0,
  /* 36605 */ 'V', 'P', 'S', 'U', 'B', 'D', 'Y', 'r', 'r', 0,
  /* 36615 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'B', 'D', 'Y', 'r', 'r', 0,
  /* 36628 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'B', 'D', 'Y', 'r', 'r', 0,
  /* 36641 */ 'V', 'P', 'H', 'A', 'D', 'D', 'D', 'Y', 'r', 'r', 0,
  /* 36652 */ 'V', 'P', 'A', 'D', 'D', 'D', 'Y', 'r', 'r', 0,
  /* 36662 */ 'V', 'P', 'S', 'L', 'L', 'D', 'Y', 'r', 'r', 0,
  /* 36672 */ 'V', 'P', 'M', 'U', 'L', 'L', 'D', 'Y', 'r', 'r', 0,
  /* 36683 */ 'V', 'P', 'S', 'R', 'L', 'D', 'Y', 'r', 'r', 0,
  /* 36693 */ 'V', 'P', 'E', 'R', 'M', 'D', 'Y', 'r', 'r', 0,
  /* 36703 */ 'V', 'P', 'A', 'N', 'D', 'Y', 'r', 'r', 0,
  /* 36712 */ 'V', 'P', 'S', 'I', 'G', 'N', 'D', 'Y', 'r', 'r', 0,
  /* 36723 */ 'V', 'C', 'V', 'T', 'D', 'Q', '2', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 36736 */ 'V', 'C', 'V', 'T', 'P', 'S', '2', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 36749 */ 'V', 'M', 'O', 'V', 'A', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 36760 */ 'V', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 36773 */ 'V', 'H', 'S', 'U', 'B', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 36784 */ 'V', 'S', 'U', 'B', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 36794 */ 'V', 'H', 'A', 'D', 'D', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 36805 */ 'V', 'A', 'D', 'D', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 36815 */ 'V', 'A', 'N', 'D', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 36825 */ 'V', 'U', 'N', 'P', 'C', 'K', 'H', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 36838 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 36851 */ 'V', 'U', 'N', 'P', 'C', 'K', 'L', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 36864 */ 'V', 'M', 'U', 'L', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 36874 */ 'V', 'A', 'N', 'D', 'N', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 36885 */ 'V', 'M', 'I', 'N', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 36895 */ 'V', 'O', 'R', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 36904 */ 'V', 'X', 'O', 'R', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 36914 */ 'V', 'T', 'E', 'S', 'T', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 36925 */ 'V', 'M', 'O', 'V', 'U', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 36936 */ 'V', 'B', 'L', 'E', 'N', 'D', 'V', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 36949 */ 'V', 'D', 'I', 'V', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 36959 */ 'V', 'M', 'A', 'X', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 36969 */ 'V', 'P', 'C', 'M', 'P', 'E', 'Q', 'D', 'Y', 'r', 'r', 0,
  /* 36981 */ 'V', 'P', 'M', 'I', 'N', 'S', 'D', 'Y', 'r', 'r', 0,
  /* 36992 */ 'V', 'P', 'M', 'A', 'X', 'S', 'D', 'Y', 'r', 'r', 0,
  /* 37003 */ 'V', 'P', 'C', 'M', 'P', 'G', 'T', 'D', 'Y', 'r', 'r', 0,
  /* 37015 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'D', 'Y', 'r', 'r', 0,
  /* 37031 */ 'V', 'P', 'M', 'I', 'N', 'U', 'D', 'Y', 'r', 'r', 0,
  /* 37042 */ 'V', 'P', 'M', 'A', 'X', 'U', 'D', 'Y', 'r', 'r', 0,
  /* 37053 */ 'V', 'P', 'S', 'R', 'A', 'V', 'D', 'Y', 'r', 'r', 0,
  /* 37064 */ 'V', 'P', 'S', 'L', 'L', 'V', 'D', 'Y', 'r', 'r', 0,
  /* 37075 */ 'V', 'P', 'S', 'R', 'L', 'V', 'D', 'Y', 'r', 'r', 0,
  /* 37086 */ 'V', 'P', 'M', 'A', 'D', 'D', 'W', 'D', 'Y', 'r', 'r', 0,
  /* 37098 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'W', 'D', 'Y', 'r', 'r', 0,
  /* 37112 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'W', 'D', 'Y', 'r', 'r', 0,
  /* 37126 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'W', 'D', 'Y', 'r', 'r', 0,
  /* 37139 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'W', 'D', 'Y', 'r', 'r', 0,
  /* 37152 */ 'V', 'C', 'V', 'T', 'P', 'S', '2', 'P', 'H', 'Y', 'r', 'r', 0,
  /* 37165 */ 'V', 'P', 'A', 'N', 'D', 'N', 'Y', 'r', 'r', 0,
  /* 37175 */ 'V', 'M', 'O', 'V', 'D', 'D', 'U', 'P', 'Y', 'r', 'r', 0,
  /* 37187 */ 'V', 'M', 'O', 'V', 'S', 'H', 'D', 'U', 'P', 'Y', 'r', 'r', 0,
  /* 37200 */ 'V', 'M', 'O', 'V', 'S', 'L', 'D', 'U', 'P', 'Y', 'r', 'r', 0,
  /* 37213 */ 'V', 'P', 'S', 'U', 'B', 'Q', 'Y', 'r', 'r', 0,
  /* 37223 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'B', 'Q', 'Y', 'r', 'r', 0,
  /* 37236 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'B', 'Q', 'Y', 'r', 'r', 0,
  /* 37249 */ 'V', 'C', 'V', 'T', 'T', 'P', 'D', '2', 'D', 'Q', 'Y', 'r', 'r', 0,
  /* 37263 */ 'V', 'C', 'V', 'T', 'P', 'D', '2', 'D', 'Q', 'Y', 'r', 'r', 0,
  /* 37276 */ 'V', 'C', 'V', 'T', 'T', 'P', 'S', '2', 'D', 'Q', 'Y', 'r', 'r', 0,
  /* 37290 */ 'V', 'C', 'V', 'T', 'P', 'S', '2', 'D', 'Q', 'Y', 'r', 'r', 0,
  /* 37303 */ 'V', 'P', 'A', 'D', 'D', 'Q', 'Y', 'r', 'r', 0,
  /* 37313 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'D', 'Q', 'Y', 'r', 'r', 0,
  /* 37327 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'D', 'Q', 'Y', 'r', 'r', 0,
  /* 37341 */ 'V', 'P', 'M', 'U', 'L', 'D', 'Q', 'Y', 'r', 'r', 0,
  /* 37352 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'Q', 'D', 'Q', 'Y', 'r', 'r', 0,
  /* 37367 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'Q', 'D', 'Q', 'Y', 'r', 'r', 0,
  /* 37382 */ 'V', 'P', 'M', 'U', 'L', 'U', 'D', 'Q', 'Y', 'r', 'r', 0,
  /* 37394 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'D', 'Q', 'Y', 'r', 'r', 0,
  /* 37407 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'D', 'Q', 'Y', 'r', 'r', 0,
  /* 37420 */ 'V', 'P', 'S', 'L', 'L', 'Q', 'Y', 'r', 'r', 0,
  /* 37430 */ 'V', 'P', 'S', 'R', 'L', 'Q', 'Y', 'r', 'r', 0,
  /* 37440 */ 'V', 'P', 'C', 'M', 'P', 'E', 'Q', 'Q', 'Y', 'r', 'r', 0,
  /* 37452 */ 'V', 'P', 'C', 'M', 'P', 'G', 'T', 'Q', 'Y', 'r', 'r', 0,
  /* 37464 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'Q', 'Y', 'r', 'r', 0,
  /* 37480 */ 'V', 'P', 'S', 'L', 'L', 'V', 'Q', 'Y', 'r', 'r', 0,
  /* 37491 */ 'V', 'P', 'S', 'R', 'L', 'V', 'Q', 'Y', 'r', 'r', 0,
  /* 37502 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'W', 'Q', 'Y', 'r', 'r', 0,
  /* 37515 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'W', 'Q', 'Y', 'r', 'r', 0,
  /* 37528 */ 'V', 'P', 'O', 'R', 'Y', 'r', 'r', 0,
  /* 37536 */ 'V', 'P', 'X', 'O', 'R', 'Y', 'r', 'r', 0,
  /* 37545 */ 'V', 'C', 'V', 'T', 'P', 'D', '2', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 37558 */ 'V', 'C', 'V', 'T', 'P', 'H', '2', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 37571 */ 'V', 'C', 'V', 'T', 'D', 'Q', '2', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 37584 */ 'V', 'M', 'O', 'V', 'A', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 37595 */ 'V', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 37608 */ 'V', 'H', 'S', 'U', 'B', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 37619 */ 'V', 'S', 'U', 'B', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 37629 */ 'V', 'H', 'A', 'D', 'D', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 37640 */ 'V', 'A', 'D', 'D', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 37650 */ 'V', 'A', 'N', 'D', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 37660 */ 'V', 'U', 'N', 'P', 'C', 'K', 'H', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 37673 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 37686 */ 'V', 'U', 'N', 'P', 'C', 'K', 'L', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 37699 */ 'V', 'M', 'U', 'L', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 37709 */ 'V', 'P', 'E', 'R', 'M', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 37720 */ 'V', 'A', 'N', 'D', 'N', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 37731 */ 'V', 'M', 'I', 'N', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 37741 */ 'V', 'O', 'R', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 37750 */ 'V', 'X', 'O', 'R', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 37760 */ 'V', 'T', 'E', 'S', 'T', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 37771 */ 'V', 'M', 'O', 'V', 'U', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 37782 */ 'V', 'B', 'L', 'E', 'N', 'D', 'V', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 37795 */ 'V', 'D', 'I', 'V', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 37805 */ 'V', 'M', 'A', 'X', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 37815 */ 'V', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'S', 'S', 'Y', 'r', 'r', 0,
  /* 37831 */ 'V', 'P', 'T', 'E', 'S', 'T', 'Y', 'r', 'r', 0,
  /* 37841 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'U', 'Y', 'r', 'r', 0,
  /* 37852 */ 'V', 'P', 'S', 'R', 'A', 'W', 'Y', 'r', 'r', 0,
  /* 37862 */ 'V', 'P', 'S', 'A', 'D', 'B', 'W', 'Y', 'r', 'r', 0,
  /* 37873 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'B', 'W', 'Y', 'r', 'r', 0,
  /* 37887 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'B', 'W', 'Y', 'r', 'r', 0,
  /* 37901 */ 'V', 'P', 'H', 'S', 'U', 'B', 'W', 'Y', 'r', 'r', 0,
  /* 37912 */ 'V', 'P', 'S', 'U', 'B', 'W', 'Y', 'r', 'r', 0,
  /* 37922 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'B', 'W', 'Y', 'r', 'r', 0,
  /* 37935 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'B', 'W', 'Y', 'r', 'r', 0,
  /* 37948 */ 'V', 'P', 'H', 'A', 'D', 'D', 'W', 'Y', 'r', 'r', 0,
  /* 37959 */ 'V', 'P', 'A', 'D', 'D', 'W', 'Y', 'r', 'r', 0,
  /* 37969 */ 'V', 'P', 'A', 'C', 'K', 'S', 'S', 'D', 'W', 'Y', 'r', 'r', 0,
  /* 37982 */ 'V', 'P', 'A', 'C', 'K', 'U', 'S', 'D', 'W', 'Y', 'r', 'r', 0,
  /* 37995 */ 'V', 'P', 'A', 'V', 'G', 'W', 'Y', 'r', 'r', 0,
  /* 38005 */ 'V', 'P', 'M', 'U', 'L', 'H', 'W', 'Y', 'r', 'r', 0,
  /* 38016 */ 'V', 'P', 'S', 'L', 'L', 'W', 'Y', 'r', 'r', 0,
  /* 38026 */ 'V', 'P', 'M', 'U', 'L', 'L', 'W', 'Y', 'r', 'r', 0,
  /* 38037 */ 'V', 'P', 'S', 'R', 'L', 'W', 'Y', 'r', 'r', 0,
  /* 38047 */ 'V', 'P', 'S', 'I', 'G', 'N', 'W', 'Y', 'r', 'r', 0,
  /* 38058 */ 'V', 'P', 'C', 'M', 'P', 'E', 'Q', 'W', 'Y', 'r', 'r', 0,
  /* 38070 */ 'V', 'P', 'S', 'U', 'B', 'S', 'W', 'Y', 'r', 'r', 0,
  /* 38081 */ 'V', 'P', 'A', 'D', 'D', 'S', 'W', 'Y', 'r', 'r', 0,
  /* 38092 */ 'V', 'P', 'M', 'I', 'N', 'S', 'W', 'Y', 'r', 'r', 0,
  /* 38103 */ 'V', 'P', 'S', 'U', 'B', 'U', 'S', 'W', 'Y', 'r', 'r', 0,
  /* 38115 */ 'V', 'P', 'A', 'D', 'D', 'U', 'S', 'W', 'Y', 'r', 'r', 0,
  /* 38127 */ 'V', 'P', 'M', 'A', 'X', 'S', 'W', 'Y', 'r', 'r', 0,
  /* 38138 */ 'V', 'P', 'C', 'M', 'P', 'G', 'T', 'W', 'Y', 'r', 'r', 0,
  /* 38150 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'W', 'Y', 'r', 'r', 0,
  /* 38166 */ 'V', 'P', 'M', 'U', 'L', 'H', 'U', 'W', 'Y', 'r', 'r', 0,
  /* 38178 */ 'V', 'P', 'M', 'I', 'N', 'U', 'W', 'Y', 'r', 'r', 0,
  /* 38189 */ 'V', 'P', 'M', 'A', 'X', 'U', 'W', 'Y', 'r', 'r', 0,
  /* 38200 */ 'V', 'P', 'C', 'M', 'P', 'E', 'S', 'T', 'R', 'I', 'Z', 'r', 'r', 0,
  /* 38214 */ 'V', 'P', 'C', 'M', 'P', 'I', 'S', 'T', 'R', 'I', 'Z', 'r', 'r', 0,
  /* 38228 */ 'M', 'M', 'X', '_', 'M', 'O', 'V', 'D', '6', '4', 'g', 'r', 'r', 0,
  /* 38242 */ 'M', 'M', 'X', '_', 'P', 'A', 'L', 'I', 'G', 'N', 'R', '6', '4', 'i', 'r', 'r', 0,
  /* 38259 */ 'M', 'M', 'X', '_', 'P', 'S', 'U', 'B', 'B', 'i', 'r', 'r', 0,
  /* 38272 */ 'M', 'M', 'X', '_', 'P', 'A', 'D', 'D', 'B', 'i', 'r', 'r', 0,
  /* 38285 */ 'M', 'M', 'X', '_', 'P', 'A', 'V', 'G', 'B', 'i', 'r', 'r', 0,
  /* 38298 */ 'M', 'M', 'X', '_', 'P', 'C', 'M', 'P', 'E', 'Q', 'B', 'i', 'r', 'r', 0,
  /* 38313 */ 'M', 'M', 'X', '_', 'P', 'S', 'U', 'B', 'S', 'B', 'i', 'r', 'r', 0,
  /* 38327 */ 'M', 'M', 'X', '_', 'P', 'A', 'D', 'D', 'S', 'B', 'i', 'r', 'r', 0,
  /* 38341 */ 'M', 'M', 'X', '_', 'P', 'S', 'U', 'B', 'U', 'S', 'B', 'i', 'r', 'r', 0,
  /* 38356 */ 'M', 'M', 'X', '_', 'P', 'A', 'D', 'D', 'U', 'S', 'B', 'i', 'r', 'r', 0,
  /* 38371 */ 'M', 'M', 'X', '_', 'P', 'C', 'M', 'P', 'G', 'T', 'B', 'i', 'r', 'r', 0,
  /* 38386 */ 'M', 'M', 'X', '_', 'P', 'M', 'I', 'N', 'U', 'B', 'i', 'r', 'r', 0,
  /* 38400 */ 'M', 'M', 'X', '_', 'P', 'M', 'A', 'X', 'U', 'B', 'i', 'r', 'r', 0,
  /* 38414 */ 'M', 'M', 'X', '_', 'P', 'A', 'C', 'K', 'S', 'S', 'W', 'B', 'i', 'r', 'r', 0,
  /* 38430 */ 'M', 'M', 'X', '_', 'P', 'A', 'C', 'K', 'U', 'S', 'W', 'B', 'i', 'r', 'r', 0,
  /* 38446 */ 'M', 'M', 'X', '_', 'P', 'S', 'U', 'B', 'D', 'i', 'r', 'r', 0,
  /* 38459 */ 'M', 'M', 'X', '_', 'P', 'A', 'D', 'D', 'D', 'i', 'r', 'r', 0,
  /* 38472 */ 'M', 'M', 'X', '_', 'P', 'A', 'N', 'D', 'i', 'r', 'r', 0,
  /* 38484 */ 'M', 'M', 'X', '_', 'C', 'V', 'T', 'P', 'I', '2', 'P', 'D', 'i', 'r', 'r', 0,
  /* 38500 */ 'M', 'M', 'X', '_', 'P', 'C', 'M', 'P', 'E', 'Q', 'D', 'i', 'r', 'r', 0,
  /* 38515 */ 'M', 'M', 'X', '_', 'P', 'C', 'M', 'P', 'G', 'T', 'D', 'i', 'r', 'r', 0,
  /* 38530 */ 'M', 'M', 'X', '_', 'P', 'M', 'A', 'D', 'D', 'W', 'D', 'i', 'r', 'r', 0,
  /* 38545 */ 'M', 'M', 'X', '_', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'W', 'D', 'i', 'r', 'r', 0,
  /* 38562 */ 'M', 'M', 'X', '_', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'W', 'D', 'i', 'r', 'r', 0,
  /* 38579 */ 'M', 'M', 'X', '_', 'C', 'V', 'T', 'T', 'P', 'D', '2', 'P', 'I', 'i', 'r', 'r', 0,
  /* 38596 */ 'M', 'M', 'X', '_', 'C', 'V', 'T', 'P', 'D', '2', 'P', 'I', 'i', 'r', 'r', 0,
  /* 38612 */ 'M', 'M', 'X', '_', 'C', 'V', 'T', 'T', 'P', 'S', '2', 'P', 'I', 'i', 'r', 'r', 0,
  /* 38629 */ 'M', 'M', 'X', '_', 'C', 'V', 'T', 'P', 'S', '2', 'P', 'I', 'i', 'r', 'r', 0,
  /* 38645 */ 'M', 'M', 'X', '_', 'P', 'A', 'N', 'D', 'N', 'i', 'r', 'r', 0,
  /* 38658 */ 'M', 'M', 'X', '_', 'P', 'S', 'U', 'B', 'Q', 'i', 'r', 'r', 0,
  /* 38671 */ 'M', 'M', 'X', '_', 'P', 'A', 'D', 'D', 'Q', 'i', 'r', 'r', 0,
  /* 38684 */ 'M', 'M', 'X', '_', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'D', 'Q', 'i', 'r', 'r', 0,
  /* 38701 */ 'M', 'M', 'X', '_', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'D', 'Q', 'i', 'r', 'r', 0,
  /* 38718 */ 'M', 'M', 'X', '_', 'P', 'M', 'U', 'L', 'U', 'D', 'Q', 'i', 'r', 'r', 0,
  /* 38733 */ 'M', 'M', 'X', '_', 'P', 'O', 'R', 'i', 'r', 'r', 0,
  /* 38744 */ 'M', 'M', 'X', '_', 'P', 'X', 'O', 'R', 'i', 'r', 'r', 0,
  /* 38756 */ 'M', 'M', 'X', '_', 'C', 'V', 'T', 'P', 'I', '2', 'P', 'S', 'i', 'r', 'r', 0,
  /* 38772 */ 'M', 'M', 'X', '_', 'P', 'S', 'A', 'D', 'B', 'W', 'i', 'r', 'r', 0,
  /* 38786 */ 'M', 'M', 'X', '_', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'B', 'W', 'i', 'r', 'r', 0,
  /* 38803 */ 'M', 'M', 'X', '_', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'B', 'W', 'i', 'r', 'r', 0,
  /* 38820 */ 'M', 'M', 'X', '_', 'P', 'S', 'U', 'B', 'W', 'i', 'r', 'r', 0,
  /* 38833 */ 'M', 'M', 'X', '_', 'P', 'A', 'D', 'D', 'W', 'i', 'r', 'r', 0,
  /* 38846 */ 'M', 'M', 'X', '_', 'P', 'A', 'C', 'K', 'S', 'S', 'D', 'W', 'i', 'r', 'r', 0,
  /* 38862 */ 'M', 'M', 'X', '_', 'P', 'A', 'V', 'G', 'W', 'i', 'r', 'r', 0,
  /* 38875 */ 'M', 'M', 'X', '_', 'P', 'M', 'U', 'L', 'H', 'W', 'i', 'r', 'r', 0,
  /* 38889 */ 'M', 'M', 'X', '_', 'P', 'M', 'U', 'L', 'L', 'W', 'i', 'r', 'r', 0,
  /* 38903 */ 'M', 'M', 'X', '_', 'P', 'C', 'M', 'P', 'E', 'Q', 'W', 'i', 'r', 'r', 0,
  /* 38918 */ 'M', 'M', 'X', '_', 'P', 'S', 'U', 'B', 'S', 'W', 'i', 'r', 'r', 0,
  /* 38932 */ 'M', 'M', 'X', '_', 'P', 'A', 'D', 'D', 'S', 'W', 'i', 'r', 'r', 0,
  /* 38946 */ 'M', 'M', 'X', '_', 'P', 'M', 'I', 'N', 'S', 'W', 'i', 'r', 'r', 0,
  /* 38960 */ 'M', 'M', 'X', '_', 'P', 'S', 'U', 'B', 'U', 'S', 'W', 'i', 'r', 'r', 0,
  /* 38975 */ 'M', 'M', 'X', '_', 'P', 'A', 'D', 'D', 'U', 'S', 'W', 'i', 'r', 'r', 0,
  /* 38990 */ 'M', 'M', 'X', '_', 'P', 'M', 'A', 'X', 'S', 'W', 'i', 'r', 'r', 0,
  /* 39004 */ 'M', 'M', 'X', '_', 'P', 'C', 'M', 'P', 'G', 'T', 'W', 'i', 'r', 'r', 0,
  /* 39019 */ 'M', 'M', 'X', '_', 'P', 'M', 'U', 'L', 'H', 'U', 'W', 'i', 'r', 'r', 0,
  /* 39034 */ 'M', 'O', 'N', 'I', 'T', 'O', 'R', 'r', 'r', 'r', 0,
  /* 39045 */ 'M', 'O', 'V', '3', '2', 's', 'r', 0,
  /* 39053 */ 'M', 'O', 'V', '6', '4', 's', 'r', 0,
  /* 39061 */ 'M', 'O', 'V', '1', '6', 's', 'r', 0,
  /* 39069 */ 'V', 'M', 'O', 'V', 'Q', 'x', 'r', 'x', 'r', 0,
  /* 39079 */ 'M', 'O', 'V', '3', '2', 'm', 's', 0,
  /* 39087 */ 'M', 'O', 'V', '6', '4', 'm', 's', 0,
  /* 39095 */ 'M', 'O', 'V', '1', '6', 'm', 's', 0,
  /* 39103 */ 'M', 'O', 'V', '3', '2', 'r', 's', 0,
  /* 39111 */ 'M', 'O', 'V', '6', '4', 'r', 's', 0,
  /* 39119 */ 'M', 'O', 'V', '1', '6', 'r', 's', 0,
  /* 39127 */ 'V', 'C', 'M', 'P', 'P', 'D', 'r', 'm', 'i', '_', 'a', 'l', 't', 0,
  /* 39141 */ 'V', 'C', 'M', 'P', 'P', 'S', 'r', 'm', 'i', '_', 'a', 'l', 't', 0,
  /* 39155 */ 'V', 'C', 'M', 'P', 'P', 'D', 'Y', 'r', 'm', 'i', '_', 'a', 'l', 't', 0,
  /* 39170 */ 'V', 'C', 'M', 'P', 'P', 'S', 'Y', 'r', 'm', 'i', '_', 'a', 'l', 't', 0,
  /* 39185 */ 'V', 'C', 'M', 'P', 'P', 'D', 'r', 'r', 'i', '_', 'a', 'l', 't', 0,
  /* 39199 */ 'V', 'C', 'M', 'P', 'P', 'S', 'r', 'r', 'i', '_', 'a', 'l', 't', 0,
  /* 39213 */ 'V', 'C', 'M', 'P', 'P', 'D', 'Y', 'r', 'r', 'i', '_', 'a', 'l', 't', 0,
  /* 39228 */ 'V', 'C', 'M', 'P', 'P', 'S', 'Y', 'r', 'r', 'i', '_', 'a', 'l', 't', 0,
  /* 39243 */ 'V', 'C', 'M', 'P', 'S', 'D', 'r', 'm', '_', 'a', 'l', 't', 0,
  /* 39256 */ 'V', 'C', 'M', 'P', 'S', 'S', 'r', 'm', '_', 'a', 'l', 't', 0,
  /* 39269 */ 'V', 'M', 'O', 'V', 'Q', 'd', '6', '4', 'r', 'r', '_', 'a', 'l', 't', 0,
  /* 39284 */ 'V', 'C', 'M', 'P', 'S', 'D', 'r', 'r', '_', 'a', 'l', 't', 0,
  /* 39297 */ 'V', 'C', 'M', 'P', 'S', 'S', 'r', 'r', '_', 'a', 'l', 't', 0,
  /* 39310 */ 'V', 'S', 'Q', 'R', 'T', 'P', 'D', 'm', '_', 'I', 'n', 't', 0,
  /* 39323 */ 'V', 'S', 'Q', 'R', 'T', 'S', 'D', 'm', '_', 'I', 'n', 't', 0,
  /* 39336 */ 'V', 'R', 'C', 'P', 'P', 'S', 'm', '_', 'I', 'n', 't', 0,
  /* 39348 */ 'V', 'R', 'S', 'Q', 'R', 'T', 'P', 'S', 'm', '_', 'I', 'n', 't', 0,
  /* 39362 */ 'V', 'S', 'Q', 'R', 'T', 'P', 'S', 'm', '_', 'I', 'n', 't', 0,
  /* 39375 */ 'V', 'R', 'C', 'P', 'S', 'S', 'm', '_', 'I', 'n', 't', 0,
  /* 39387 */ 'V', 'R', 'S', 'Q', 'R', 'T', 'S', 'S', 'm', '_', 'I', 'n', 't', 0,
  /* 39401 */ 'V', 'S', 'Q', 'R', 'T', 'S', 'S', 'm', '_', 'I', 'n', 't', 0,
  /* 39414 */ 'V', 'S', 'Q', 'R', 'T', 'P', 'D', 'Y', 'm', '_', 'I', 'n', 't', 0,
  /* 39428 */ 'V', 'R', 'C', 'P', 'P', 'S', 'Y', 'm', '_', 'I', 'n', 't', 0,
  /* 39441 */ 'V', 'R', 'S', 'Q', 'R', 'T', 'P', 'S', 'Y', 'm', '_', 'I', 'n', 't', 0,
  /* 39456 */ 'V', 'S', 'Q', 'R', 'T', 'P', 'S', 'Y', 'm', '_', 'I', 'n', 't', 0,
  /* 39470 */ 'V', 'M', 'I', 'N', 'P', 'D', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 39483 */ 'V', 'M', 'A', 'X', 'P', 'D', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 39496 */ 'V', 'S', 'U', 'B', 'S', 'D', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 39509 */ 'V', 'A', 'D', 'D', 'S', 'D', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 39522 */ 'V', 'M', 'U', 'L', 'S', 'D', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 39535 */ 'V', 'M', 'I', 'N', 'S', 'D', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 39548 */ 'V', 'D', 'I', 'V', 'S', 'D', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 39561 */ 'V', 'M', 'A', 'X', 'S', 'D', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 39574 */ 'V', 'M', 'I', 'N', 'P', 'S', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 39587 */ 'V', 'M', 'A', 'X', 'P', 'S', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 39600 */ 'V', 'S', 'U', 'B', 'S', 'S', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 39613 */ 'V', 'A', 'D', 'D', 'S', 'S', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 39626 */ 'V', 'M', 'U', 'L', 'S', 'S', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 39639 */ 'V', 'M', 'I', 'N', 'S', 'S', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 39652 */ 'V', 'D', 'I', 'V', 'S', 'S', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 39665 */ 'V', 'M', 'A', 'X', 'S', 'S', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 39678 */ 'V', 'M', 'I', 'N', 'P', 'D', 'Y', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 39692 */ 'V', 'M', 'A', 'X', 'P', 'D', 'Y', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 39706 */ 'V', 'M', 'I', 'N', 'P', 'S', 'Y', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 39720 */ 'V', 'M', 'A', 'X', 'P', 'S', 'Y', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 39734 */ 'V', 'S', 'Q', 'R', 'T', 'P', 'D', 'r', '_', 'I', 'n', 't', 0,
  /* 39747 */ 'V', 'R', 'O', 'U', 'N', 'D', 'S', 'D', 'r', '_', 'I', 'n', 't', 0,
  /* 39761 */ 'S', 'Q', 'R', 'T', 'S', 'D', 'r', '_', 'I', 'n', 't', 0,
  /* 39773 */ 'V', 'R', 'C', 'P', 'P', 'S', 'r', '_', 'I', 'n', 't', 0,
  /* 39785 */ 'V', 'R', 'S', 'Q', 'R', 'T', 'P', 'S', 'r', '_', 'I', 'n', 't', 0,
  /* 39799 */ 'V', 'S', 'Q', 'R', 'T', 'P', 'S', 'r', '_', 'I', 'n', 't', 0,
  /* 39812 */ 'V', 'R', 'O', 'U', 'N', 'D', 'S', 'S', 'r', '_', 'I', 'n', 't', 0,
  /* 39826 */ 'R', 'C', 'P', 'S', 'S', 'r', '_', 'I', 'n', 't', 0,
  /* 39837 */ 'R', 'S', 'Q', 'R', 'T', 'S', 'S', 'r', '_', 'I', 'n', 't', 0,
  /* 39850 */ 'V', 'S', 'Q', 'R', 'T', 'P', 'D', 'Y', 'r', '_', 'I', 'n', 't', 0,
  /* 39864 */ 'V', 'R', 'C', 'P', 'P', 'S', 'Y', 'r', '_', 'I', 'n', 't', 0,
  /* 39877 */ 'V', 'R', 'S', 'Q', 'R', 'T', 'P', 'S', 'Y', 'r', '_', 'I', 'n', 't', 0,
  /* 39892 */ 'V', 'S', 'Q', 'R', 'T', 'P', 'S', 'Y', 'r', '_', 'I', 'n', 't', 0,
  /* 39906 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'U', 'm', 'r', '_', 'I', 'n', 't', 0,
  /* 39920 */ 'V', 'M', 'I', 'N', 'P', 'D', 'r', 'r', '_', 'I', 'n', 't', 0,
  /* 39933 */ 'V', 'M', 'A', 'X', 'P', 'D', 'r', 'r', '_', 'I', 'n', 't', 0,
  /* 39946 */ 'V', 'S', 'U', 'B', 'S', 'D', 'r', 'r', '_', 'I', 'n', 't', 0,
  /* 39959 */ 'V', 'A', 'D', 'D', 'S', 'D', 'r', 'r', '_', 'I', 'n', 't', 0,
  /* 39972 */ 'V', 'M', 'U', 'L', 'S', 'D', 'r', 'r', '_', 'I', 'n', 't', 0,
  /* 39985 */ 'V', 'M', 'I', 'N', 'S', 'D', 'r', 'r', '_', 'I', 'n', 't', 0,
  /* 39998 */ 'V', 'D', 'I', 'V', 'S', 'D', 'r', 'r', '_', 'I', 'n', 't', 0,
  /* 40011 */ 'V', 'M', 'A', 'X', 'S', 'D', 'r', 'r', '_', 'I', 'n', 't', 0,
  /* 40024 */ 'V', 'M', 'I', 'N', 'P', 'S', 'r', 'r', '_', 'I', 'n', 't', 0,
  /* 40037 */ 'V', 'M', 'A', 'X', 'P', 'S', 'r', 'r', '_', 'I', 'n', 't', 0,
  /* 40050 */ 'V', 'S', 'U', 'B', 'S', 'S', 'r', 'r', '_', 'I', 'n', 't', 0,
  /* 40063 */ 'V', 'A', 'D', 'D', 'S', 'S', 'r', 'r', '_', 'I', 'n', 't', 0,
  /* 40076 */ 'V', 'M', 'U', 'L', 'S', 'S', 'r', 'r', '_', 'I', 'n', 't', 0,
  /* 40089 */ 'V', 'M', 'I', 'N', 'S', 'S', 'r', 'r', '_', 'I', 'n', 't', 0,
  /* 40102 */ 'V', 'D', 'I', 'V', 'S', 'S', 'r', 'r', '_', 'I', 'n', 't', 0,
  /* 40115 */ 'V', 'M', 'A', 'X', 'S', 'S', 'r', 'r', '_', 'I', 'n', 't', 0,
  /* 40128 */ 'V', 'M', 'I', 'N', 'P', 'D', 'Y', 'r', 'r', '_', 'I', 'n', 't', 0,
  /* 40142 */ 'V', 'M', 'A', 'X', 'P', 'D', 'Y', 'r', 'r', '_', 'I', 'n', 't', 0,
  /* 40156 */ 'V', 'M', 'I', 'N', 'P', 'S', 'Y', 'r', 'r', '_', 'I', 'n', 't', 0,
  /* 40170 */ 'V', 'M', 'A', 'X', 'P', 'S', 'Y', 'r', 'r', '_', 'I', 'n', 't', 0,
};

extern const unsigned X86InstrNameIndices[] = {
    8268U, 9249U, 8936U, 8949U, 8927U, 8990U, 8182U, 8197U, 
    8005U, 8211U, 9635U, 7982U, 7868U, 11167U, 7899U, 7514U, 
    6354U, 6375U, 9522U, 8117U, 3086U, 4790U, 456U, 19921U, 
    18539U, 19240U, 20142U, 5589U, 13449U, 6696U, 29324U, 14528U, 
    7051U, 19588U, 31927U, 10549U, 2018U, 13214U, 6434U, 28723U, 
    14310U, 6855U, 18108U, 30360U, 10017U, 2091U, 2202U, 6565U, 
    28868U, 2334U, 6953U, 18638U, 30877U, 10113U, 6347U, 13608U, 
    29518U, 14662U, 20087U, 32452U, 10643U, 5598U, 13462U, 6719U, 
    29345U, 14536U, 7069U, 7630U, 7653U, 19597U, 31944U, 7686U, 
    10561U, 2027U, 13227U, 6457U, 28744U, 14318U, 6873U, 7606U, 
    7642U, 18128U, 30388U, 7664U, 10029U, 2100U, 2217U, 6588U, 
    28889U, 2344U, 7593U, 6971U, 7618U, 18658U, 30905U, 7675U, 
    10125U, 6361U, 13620U, 29530U, 14669U, 20095U, 32460U, 10654U, 
    20930U, 33325U, 22782U, 35242U, 21267U, 39510U, 33639U, 39960U, 
    23122U, 39614U, 35584U, 40064U, 20898U, 33293U, 22750U, 35210U, 
    16312U, 16990U, 17294U, 16394U, 641U, 26646U, 2988U, 16587U, 
    4692U, 17165U, 2706U, 358U, 2480U, 4065U, 2818U, 4317U, 
    222U, 2566U, 4151U, 68U, 578U, 1645U, 3593U, 1675U, 
    3632U, 23302U, 35772U, 20492U, 32887U, 23316U, 35786U, 20540U, 
    32935U, 20530U, 32925U, 20052U, 32417U, 5607U, 13475U, 6733U, 
    29358U, 14544U, 7078U, 19605U, 31952U, 10573U, 2036U, 13240U, 
    6471U, 28757U, 14326U, 6882U, 18136U, 30396U, 10041U, 2109U, 
    2232U, 6602U, 28902U, 2354U, 6980U, 18666U, 30913U, 10137U, 
    6368U, 13632U, 29542U, 14676U, 20102U, 32467U, 10665U, 18307U, 
    30567U, 18987U, 31234U, 21033U, 33408U, 22885U, 35347U, 20948U, 
    33343U, 22800U, 35260U, 29376U, 32055U, 1403U, 5328U, 1538U, 
    3381U, 1415U, 6253U, 5540U, 1855U, 3811U, 5375U, 1616U, 
    3552U, 5338U, 1548U, 3391U, 1427U, 6262U, 5406U, 1712U, 
    3674U, 1453U, 6295U, 1391U, 1440U, 5550U, 1865U, 3821U, 
    5385U, 1626U, 3562U, 5415U, 1721U, 3693U, 1464U, 6303U, 
    540U, 9530U, 11155U, 11172U, 9559U, 18408U, 30683U, 19101U, 
    31372U, 14040U, 15374U, 14082U, 15416U, 710U, 777U, 722U, 
    789U, 18260U, 30520U, 18940U, 31187U, 18269U, 30529U, 18949U, 
    31196U, 18399U, 30666U, 19092U, 31355U, 19817U, 18426U, 19678U, 
    32025U, 18221U, 30481U, 18799U, 31046U, 19801U, 32164U, 18391U, 
    30658U, 19084U, 31347U, 27400U, 27863U, 6796U, 29434U, 7123U, 
    32209U, 6534U, 28824U, 6927U, 30722U, 6665U, 28995U, 7025U, 
    31446U, 6705U, 29332U, 7060U, 31935U, 6443U, 28731U, 6864U, 
    30368U, 6574U, 28876U, 6962U, 30885U, 6778U, 29418U, 7105U, 
    32172U, 6516U, 28808U, 6909U, 30675U, 6647U, 28979U, 7007U, 
    31364U, 6787U, 29426U, 7114U, 32191U, 6525U, 28816U, 6918U, 
    30704U, 6656U, 28987U, 7016U, 31428U, 18251U, 30511U, 18829U, 
    31076U, 16449U, 27384U, 17061U, 2417U, 27847U, 5652U, 2444U, 
    10909U, 9351U, 7928U, 8123U, 3095U, 4799U, 465U, 7751U, 
    7788U, 8250U, 8258U, 8272U, 9652U, 7755U, 19552U, 31891U, 
    18072U, 30324U, 18602U, 30841U, 19613U, 31960U, 18144U, 30404U, 
    18722U, 30969U, 19578U, 31917U, 18098U, 30350U, 18628U, 30867U, 
    19624U, 31971U, 18155U, 30415U, 18733U, 30980U, 8062U, 3010U, 
    4714U, 380U, 8044U, 2977U, 4681U, 347U, 19668U, 32015U, 
    18211U, 30471U, 18789U, 31036U, 8080U, 3034U, 4738U, 404U, 
    19698U, 32045U, 18241U, 30501U, 18819U, 31066U, 19635U, 31982U, 
    18166U, 30426U, 18744U, 30991U, 19725U, 32081U, 18297U, 30557U, 
    18977U, 31224U, 19646U, 31993U, 18177U, 30437U, 18755U, 31002U, 
    8052U, 2997U, 4701U, 367U, 8035U, 2956U, 4660U, 326U, 
    19657U, 32004U, 18188U, 30448U, 18766U, 31013U, 8071U, 3022U, 
    4726U, 392U, 19735U, 32098U, 18316U, 30583U, 18996U, 31243U, 
    19764U, 32127U, 18354U, 30621U, 19034U, 31281U, 8100U, 3063U, 
    4767U, 433U, 19852U, 32180U, 18461U, 30693U, 19127U, 31382U, 
    19746U, 32109U, 18327U, 30594U, 19007U, 31254U, 19775U, 32138U, 
    18365U, 30632U, 19045U, 31292U, 8109U, 3075U, 4779U, 445U, 
    19871U, 32199U, 18480U, 30712U, 19181U, 31436U, 1692U, 3664U, 
    5396U, 1702U, 6286U, 1664U, 3612U, 44U, 3472U, 3520U, 
    1568U, 3483U, 3531U, 1579U, 5616U, 13507U, 6742U, 29385U, 
    14583U, 7087U, 19756U, 32119U, 10585U, 2045U, 13272U, 6480U, 
    28775U, 14365U, 6891U, 18346U, 30613U, 10053U, 2128U, 2242U, 
    6611U, 28933U, 2364U, 6989U, 19026U, 31273U, 10149U, 6382U, 
    13660U, 29549U, 14710U, 20120U, 32491U, 10676U, 14072U, 39128U, 
    15406U, 39186U, 14114U, 39142U, 15448U, 39200U, 5509U, 1815U, 
    3744U, 6318U, 21364U, 39244U, 33736U, 39285U, 23209U, 39257U, 
    35671U, 39298U, 7561U, 19686U, 32033U, 18229U, 30489U, 18807U, 
    31054U, 7573U, 20109U, 32474U, 21281U, 33653U, 23136U, 35598U, 
    26676U, 28366U, 28329U, 26666U, 8129U, 3104U, 4808U, 474U, 
    7782U, 9292U, 5664U, 2670U, 7296U, 5734U, 3141U, 7409U, 
    4292U, 7307U, 4845U, 7420U, 11095U, 20808U, 33203U, 22700U, 
    35160U, 22165U, 34614U, 22644U, 35104U, 22209U, 34672U, 20839U, 
    33234U, 18876U, 31123U, 21883U, 34294U, 23043U, 35505U, 18679U, 
    30926U, 21200U, 33572U, 19143U, 31398U, 23086U, 35548U, 21231U, 
    33603U, 18927U, 31174U, 21928U, 34339U, 22148U, 34597U, 22192U, 
    34655U, 18843U, 31090U, 21854U, 34265U, 18894U, 31141U, 21899U, 
    34310U, 7836U, 7881U, 7518U, 9526U, 11045U, 17240U, 28018U, 
    16284U, 27326U, 17513U, 28136U, 16557U, 27471U, 16962U, 27798U, 
    17538U, 28156U, 17471U, 28113U, 16550U, 27446U, 17148U, 27909U, 
    17575U, 28197U, 21134U, 33509U, 22998U, 35473U, 16349U, 17027U, 
    17325U, 16425U, 675U, 26698U, 16627U, 17205U, 2755U, 2517U, 
    4102U, 2858U, 4357U, 262U, 2606U, 4191U, 108U, 609U, 
    21400U, 39549U, 33772U, 39999U, 23245U, 39653U, 35707U, 40103U, 
    16368U, 17045U, 17336U, 16436U, 687U, 26709U, 3132U, 16647U, 
    4836U, 17225U, 2793U, 502U, 2541U, 4126U, 2872U, 4371U, 
    276U, 2620U, 4205U, 122U, 620U, 14063U, 15397U, 14105U, 
    15439U, 11105U, 9282U, 3573U, 9460U, 11115U, 29963U, 35416U, 
    820U, 13161U, 17346U, 13127U, 16446U, 3542U, 13172U, 17395U, 
    13138U, 16503U, 3623U, 17593U, 17752U, 16465U, 17077U, 16513U, 
    17113U, 9328U, 9335U, 9603U, 7886U, 17365U, 16473U, 17405U, 
    16522U, 9343U, 17478U, 17923U, 7840U, 9657U, 3269U, 3276U, 
    8276U, 10972U, 9711U, 9313U, 17487U, 28203U, 17945U, 9201U, 
    9075U, 9138U, 9222U, 9096U, 9159U, 9180U, 9054U, 9117U, 
    9263U, 9243U, 813U, 9270U, 9730U, 17768U, 17698U, 7892U, 
    9618U, 17931U, 11125U, 9015U, 9474U, 3683U, 7998U, 3463U, 
    9669U, 10966U, 826U, 8292U, 21043U, 33418U, 22895U, 35357U, 
    20957U, 33352U, 22809U, 35269U, 7792U, 9626U, 20877U, 33272U, 
    22738U, 35198U, 21092U, 33467U, 22944U, 35406U, 20865U, 33260U, 
    22726U, 35186U, 21081U, 33456U, 22933U, 35395U, 11135U, 20929U, 
    33324U, 22781U, 35241U, 9726U, 20910U, 33305U, 22762U, 35222U, 
    17470U, 28112U, 16549U, 27445U, 17147U, 27908U, 17574U, 28196U, 
    17259U, 16321U, 16999U, 2885U, 4384U, 289U, 2633U, 4218U, 
    135U, 2718U, 4255U, 172U, 17357U, 28067U, 19716U, 14017U, 
    6826U, 32072U, 15351U, 7285U, 16457U, 27392U, 18288U, 14007U, 
    6804U, 30548U, 15341U, 7219U, 17069U, 27855U, 18968U, 2302U, 
    6815U, 31215U, 2405U, 7252U, 17561U, 28183U, 5380U, 14576U, 
    32091U, 1621U, 14358U, 30576U, 6282U, 14704U, 32485U, 17252U, 
    28025U, 16296U, 27333U, 17523U, 28146U, 16567U, 27481U, 16974U, 
    27805U, 17549U, 28162U, 22954U, 35429U, 9734U, 3294U, 9296U, 
    7831U, 1846U, 3777U, 8225U, 1476U, 3334U, 1518U, 3361U, 
    1528U, 3371U, 5533U, 1839U, 3751U, 17384U, 16492U, 17095U, 
    2909U, 4408U, 313U, 2657U, 4242U, 159U, 2780U, 4279U, 
    196U, 17268U, 16359U, 17374U, 16482U, 17085U, 2897U, 4396U, 
    301U, 2645U, 4230U, 147U, 2768U, 4267U, 184U, 21372U, 
    33744U, 23217U, 35679U, 21318U, 33690U, 23173U, 35635U, 20819U, 
    33214U, 22711U, 35171U, 22176U, 34625U, 22655U, 35115U, 22220U, 
    34683U, 20850U, 33245U, 23054U, 35516U, 18692U, 30939U, 21211U, 
    33583U, 19156U, 31411U, 23097U, 35559U, 21242U, 33614U, 18857U, 
    31104U, 21866U, 34277U, 18908U, 31155U, 21911U, 34322U, 28664U, 
    21290U, 33662U, 23145U, 35607U, 21359U, 33731U, 23204U, 35666U, 
    21304U, 33676U, 23159U, 35621U, 20803U, 33198U, 22695U, 35155U, 
    22160U, 34609U, 22639U, 35099U, 22204U, 34667U, 20834U, 33229U, 
    23038U, 35500U, 18674U, 30921U, 21195U, 33567U, 19138U, 31393U, 
    23081U, 35543U, 21226U, 33598U, 18838U, 31085U, 21849U, 34260U, 
    18889U, 31136U, 21894U, 34305U, 21275U, 33647U, 23130U, 35592U, 
    855U, 5236U, 845U, 5226U, 861U, 5242U, 850U, 5231U, 
    13034U, 1980U, 3971U, 873U, 5254U, 867U, 5248U, 890U, 
    5271U, 878U, 5259U, 895U, 5276U, 16506U, 27409U, 17106U, 
    2431U, 27872U, 916U, 5297U, 884U, 5265U, 905U, 5286U, 
    922U, 5303U, 933U, 5314U, 900U, 5281U, 911U, 5292U, 
    13039U, 928U, 5309U, 8025U, 19785U, 32148U, 18375U, 30642U, 
    19068U, 31315U, 5364U, 7560U, 1605U, 3509U, 6272U, 7572U, 
    23339U, 9483U, 19809U, 18418U, 534U, 807U, 16322U, 17000U, 
    15643U, 1373U, 3299U, 26U, 1382U, 3308U, 35U, 16597U, 
    4219U, 136U, 17175U, 173U, 15670U, 34069U, 28011U, 27319U, 
    27461U, 27791U, 7992U, 3446U, 19828U, 18437U, 7847U, 19836U, 
    18445U, 19111U, 17415U, 17890U, 19844U, 18453U, 19119U, 17431U, 
    17902U, 17447U, 28089U, 17497U, 28120U, 13457U, 6714U, 29340U, 
    13222U, 6452U, 28739U, 2212U, 6583U, 28884U, 13615U, 29525U, 
    13470U, 6728U, 29353U, 13235U, 6466U, 28752U, 2227U, 6597U, 
    28897U, 13627U, 29537U, 17235U, 16279U, 16957U, 17533U, 17247U, 
    16291U, 16969U, 17544U, 13560U, 6765U, 29406U, 13325U, 6503U, 
    28796U, 2267U, 6634U, 28967U, 13707U, 29568U, 11072U, 13436U, 
    6682U, 29311U, 13201U, 6420U, 28710U, 2187U, 6551U, 28855U, 
    13596U, 29506U, 13547U, 6751U, 29393U, 13312U, 6489U, 28783U, 
    2252U, 6620U, 28954U, 13695U, 29556U, 7717U, 7801U, 9355U, 
    10936U, 9318U, 7922U, 7915U, 8282U, 10923U, 9001U, 9373U, 
    10960U, 19708U, 32064U, 18280U, 30540U, 18960U, 31207U, 19863U, 
    18472U, 19173U, 17782U, 28413U, 5320U, 1510U, 3353U, 6246U, 
    19892U, 32227U, 18501U, 30740U, 19202U, 31464U, 9748U, 3798U, 
    21156U, 39484U, 33518U, 39934U, 23020U, 39588U, 35482U, 40038U, 
    21419U, 39562U, 33791U, 40012U, 23263U, 39666U, 35725U, 40116U, 
    7854U, 21055U, 39471U, 33430U, 39921U, 22907U, 39575U, 35369U, 
    40025U, 21342U, 39536U, 33714U, 39986U, 23196U, 39640U, 35658U, 
    40090U, 26174U, 38596U, 26062U, 38484U, 26334U, 38756U, 26207U, 
    38629U, 26157U, 38579U, 26190U, 38612U, 9609U, 9379U, 3649U, 
    31557U, 38228U, 28910U, 18709U, 30956U, 3317U, 31576U, 34517U, 
    34501U, 29884U, 34640U, 31323U, 28941U, 19055U, 31302U, 21762U, 
    34172U, 4462U, 4955U, 4520U, 5027U, 4579U, 5115U, 26424U, 
    38846U, 25992U, 38414U, 26008U, 38430U, 25850U, 38272U, 26037U, 
    38459U, 26249U, 38671U, 25905U, 38327U, 26510U, 38932U, 25934U, 
    38356U, 26553U, 38975U, 26411U, 38833U, 25820U, 38242U, 26223U, 
    38645U, 26050U, 38472U, 25863U, 38285U, 26440U, 38862U, 25876U, 
    38298U, 26078U, 38500U, 26481U, 38903U, 25949U, 38371U, 26093U, 
    38515U, 26582U, 39004U, 15628U, 4627U, 5163U, 4549U, 5085U, 
    4491U, 4984U, 4476U, 4969U, 4611U, 5147U, 4534U, 5070U, 
    14279U, 15613U, 4593U, 5129U, 26108U, 38530U, 26568U, 38990U, 
    25978U, 38400U, 26524U, 38946U, 25964U, 38386U, 32623U, 4643U, 
    5179U, 26597U, 39019U, 26453U, 38875U, 26467U, 38889U, 26296U, 
    38718U, 26311U, 38733U, 26350U, 38772U, 4432U, 4913U, 13862U, 
    15042U, 4447U, 4928U, 4505U, 4998U, 4564U, 5100U, 14835U, 
    20729U, 33124U, 14948U, 22418U, 34881U, 15086U, 23605U, 36066U, 
    14804U, 20567U, 32962U, 15030U, 23384U, 35845U, 14856U, 20760U, 
    33155U, 14969U, 22439U, 34902U, 15107U, 23636U, 36097U, 25837U, 
    38259U, 26024U, 38446U, 26236U, 38658U, 25891U, 38313U, 26496U, 
    38918U, 25919U, 38341U, 26538U, 38960U, 26398U, 38820U, 26364U, 
    38786U, 26262U, 38684U, 26123U, 38545U, 26381U, 38803U, 26279U, 
    38701U, 26140U, 38562U, 26322U, 38744U, 9466U, 39034U, 9007U, 
    9684U, 0U, 5724U, 13581U, 29449U, 39095U, 13055U, 750U, 
    14640U, 19929U, 32264U, 10609U, 39119U, 26628U, 39061U, 2946U, 
    28632U, 28648U, 13346U, 28839U, 39079U, 13045U, 734U, 13073U, 
    13111U, 14422U, 18547U, 30786U, 10077U, 39103U, 26612U, 39045U, 
    28640U, 28656U, 2292U, 29010U, 39087U, 742U, 13081U, 13119U, 
    14495U, 2395U, 2156U, 19248U, 31502U, 10173U, 39111U, 26620U, 
    39053U, 34221U, 21447U, 33819U, 7401U, 13726U, 29587U, 11006U, 
    13065U, 758U, 14760U, 20150U, 10993U, 32520U, 11019U, 10698U, 
    29673U, 20868U, 33263U, 10724U, 29933U, 22729U, 35189U, 10765U, 
    29366U, 19625U, 28765U, 18156U, 28923U, 18734U, 22048U, 34467U, 
    21736U, 34146U, 23070U, 35532U, 29595U, 20198U, 32556U, 10710U, 
    30019U, 39907U, 23348U, 35809U, 10806U, 35303U, 29683U, 20980U, 
    29943U, 22832U, 35292U, 29693U, 21023U, 29953U, 22875U, 29488U, 
    3212U, 5014U, 3226U, 5042U, 20186U, 29855U, 29018U, 29827U, 
    29703U, 29976U, 27340U, 29790U, 34121U, 29815U, 31607U, 21780U, 
    39070U, 7735U, 7819U, 29747U, 21409U, 33781U, 10752U, 29031U, 
    31594U, 22059U, 34478U, 22071U, 34490U, 9367U, 29803U, 34134U, 
    30010U, 23254U, 35716U, 10793U, 10954U, 7362U, 7475U, 5676U, 
    7318U, 5746U, 7431U, 5700U, 2922U, 7340U, 5770U, 3187U, 
    7453U, 29714U, 21112U, 33487U, 10738U, 29987U, 22976U, 35451U, 
    10779U, 21749U, 34159U, 21807U, 34204U, 21793U, 34190U, 7373U, 
    7486U, 7384U, 7497U, 5688U, 7329U, 5758U, 7442U, 5712U, 
    9392U, 2934U, 7351U, 9420U, 5782U, 9406U, 3199U, 7464U, 
    9433U, 14124U, 15458U, 17358U, 28068U, 16458U, 27393U, 17070U, 
    27856U, 17562U, 28184U, 21014U, 33399U, 22866U, 35338U, 21332U, 
    39523U, 33704U, 39973U, 23187U, 39627U, 35649U, 40077U, 18564U, 
    30803U, 19265U, 31519U, 16330U, 17008U, 17304U, 16404U, 652U, 
    26656U, 3045U, 16606U, 4749U, 17184U, 2730U, 415U, 2492U, 
    4077U, 2831U, 4330U, 235U, 2579U, 4164U, 81U, 588U, 
    9698U, 35753U, 17277U, 28052U, 16377U, 27369U, 17054U, 27832U, 
    17555U, 28177U, 9323U, 8995U, 10930U, 17463U, 28105U, 16542U, 
    27438U, 17140U, 27901U, 17568U, 28190U, 5626U, 13540U, 6757U, 
    29399U, 14616U, 7097U, 19794U, 32157U, 10598U, 2055U, 13305U, 
    6495U, 28789U, 13098U, 14398U, 6901U, 18384U, 30651U, 10066U, 
    2138U, 2258U, 6626U, 28960U, 2375U, 6999U, 19077U, 31340U, 
    10162U, 6390U, 13689U, 29562U, 14739U, 20128U, 32499U, 10688U, 
    21064U, 33439U, 22916U, 35378U, 28687U, 32256U, 28679U, 30769U, 
    28695U, 32513U, 7729U, 7813U, 10948U, 6023U, 6135U, 6035U, 
    6147U, 6047U, 6159U, 23529U, 35990U, 20441U, 32836U, 23541U, 
    36002U, 20453U, 32848U, 20226U, 32584U, 20664U, 33059U, 22247U, 
    34710U, 20304U, 32699U, 23690U, 36151U, 20335U, 32730U, 23721U, 
    36182U, 23520U, 35981U, 20038U, 32403U, 21995U, 34406U, 20773U, 
    33168U, 7976U, 20245U, 32603U, 20345U, 32740U, 23561U, 36022U, 
    698U, 765U, 14136U, 15470U, 22331U, 34794U, 20273U, 32658U, 
    21175U, 33537U, 22452U, 34915U, 23659U, 36120U, 20158U, 32528U, 
    20502U, 32897U, 22012U, 34423U, 22612U, 35072U, 25793U, 38201U, 
    21824U, 34235U, 9021U, 8149U, 20006U, 32371U, 20366U, 32761U, 
    21460U, 33832U, 22473U, 34946U, 23742U, 36203U, 20172U, 32542U, 
    20516U, 32911U, 22026U, 34437U, 22626U, 35086U, 25807U, 38215U, 
    21837U, 34248U, 9038U, 8166U, 20022U, 32387U, 18337U, 30604U, 
    19017U, 31264U, 18530U, 30777U, 19231U, 31493U, 29623U, 32679U, 
    29737U, 33558U, 29875U, 34936U, 30056U, 15129U, 20703U, 33098U, 
    23579U, 36040U, 20464U, 32859U, 20645U, 33040U, 22390U, 34853U, 
    21700U, 34059U, 23281U, 35743U, 23830U, 36291U, 22003U, 34414U, 
    21977U, 34388U, 20472U, 32867U, 20481U, 32876U, 18050U, 30302U, 
    18591U, 30830U, 22039U, 34450U, 18061U, 30313U, 23291U, 35761U, 
    22587U, 35047U, 20410U, 32805U, 20654U, 33049U, 6089U, 6201U, 
    23510U, 35971U, 6118U, 6230U, 20603U, 32998U, 6075U, 6187U, 
    23467U, 35928U, 20695U, 33090U, 23552U, 36013U, 20284U, 32669U, 
    21186U, 33548U, 22463U, 34926U, 14148U, 15482U, 6059U, 6171U, 
    21580U, 33939U, 20356U, 32751U, 21418U, 33790U, 23732U, 36193U, 
    20419U, 32814U, 21505U, 33877U, 23798U, 36259U, 20314U, 32709U, 
    21341U, 33713U, 23700U, 36161U, 20401U, 32796U, 21495U, 33867U, 
    23788U, 36249U, 32612U, 20622U, 33017U, 22124U, 34573U, 23486U, 
    35947U, 22367U, 34830U, 21677U, 34036U, 22564U, 35024U, 20634U, 
    33029U, 22136U, 34585U, 23498U, 35959U, 22379U, 34842U, 21689U, 
    34048U, 22576U, 35036U, 22293U, 34756U, 6103U, 6215U, 23669U, 
    36130U, 23777U, 36238U, 23570U, 36031U, 20742U, 33137U, 23618U, 
    36079U, 22356U, 34819U, 28075U, 18041U, 30293U, 27416U, 18003U, 
    30255U, 27879U, 18022U, 30274U, 1494U, 19881U, 32216U, 18490U, 
    30729U, 19191U, 31453U, 5450U, 1756U, 5467U, 1773U, 5357U, 
    1598U, 3502U, 5484U, 1790U, 3719U, 5501U, 1807U, 3736U, 
    5525U, 1831U, 22597U, 35057U, 8241U, 7543U, 557U, 834U, 
    3283U, 10913U, 23408U, 35869U, 20235U, 32593U, 13762U, 14817U, 
    13876U, 15056U, 13887U, 15067U, 20263U, 32648U, 20781U, 33176U, 
    23649U, 36110U, 14920U, 14827U, 20721U, 33116U, 14940U, 22410U, 
    34873U, 15078U, 23597U, 36058U, 14796U, 20559U, 32954U, 15022U, 
    23376U, 35837U, 14930U, 14848U, 20752U, 33147U, 14961U, 22431U, 
    34894U, 15099U, 23628U, 36089U, 20217U, 32575U, 20613U, 33008U, 
    22115U, 34564U, 20294U, 32689U, 23680U, 36141U, 20324U, 32719U, 
    23710U, 36171U, 23477U, 35938U, 20888U, 33283U, 23330U, 35800U, 
    23429U, 35890U, 22267U, 34730U, 22303U, 34766U, 21591U, 33950U, 
    23442U, 35903U, 22280U, 34743U, 22317U, 34780U, 21604U, 33963U, 
    28059U, 18031U, 30283U, 27376U, 17993U, 30245U, 5561U, 2118U, 
    6324U, 27839U, 18012U, 30264U, 1486U, 5432U, 1738U, 5441U, 
    1747U, 5458U, 1764U, 5349U, 1590U, 3494U, 5475U, 1781U, 
    3710U, 5492U, 1798U, 3727U, 5516U, 1822U, 5644U, 2169U, 
    6404U, 22604U, 35064U, 1051U, 8431U, 13483U, 1268U, 8676U, 
    14552U, 939U, 8305U, 13248U, 1156U, 8550U, 14334U, 995U, 
    8368U, 13363U, 1212U, 8613U, 14439U, 1107U, 8494U, 13639U, 
    1324U, 8739U, 14683U, 17810U, 39337U, 28436U, 39774U, 17858U, 
    39376U, 28484U, 39826U, 1083U, 8467U, 13523U, 1300U, 8712U, 
    14599U, 971U, 8341U, 13288U, 1188U, 8586U, 14381U, 1027U, 
    8404U, 13395U, 1244U, 8649U, 14471U, 1135U, 8526U, 13674U, 
    1352U, 8771U, 14724U, 7940U, 3402U, 7958U, 3424U, 9500U, 
    7759U, 28042U, 27359U, 27822U, 7772U, 9306U, 29441U, 28831U, 
    29002U, 29579U, 11059U, 1903U, 3859U, 1929U, 3885U, 3932U, 
    1967U, 3958U, 11084U, 1890U, 3846U, 1916U, 3872U, 3919U, 
    1954U, 3945U, 9680U, 8283U, 10924U, 10961U, 11032U, 1067U, 
    8449U, 13499U, 1284U, 8694U, 14568U, 955U, 8323U, 13264U, 
    1172U, 8568U, 14350U, 1011U, 8386U, 13379U, 1228U, 8631U, 
    14455U, 1121U, 8510U, 13653U, 1338U, 8755U, 14697U, 1099U, 
    8485U, 13539U, 1316U, 8730U, 14615U, 987U, 8359U, 13304U, 
    1204U, 8604U, 14397U, 1043U, 8422U, 13411U, 1260U, 8667U, 
    14487U, 1149U, 8542U, 13688U, 1366U, 8787U, 14738U, 13354U, 
    14430U, 13419U, 14503U, 17609U, 28225U, 17800U, 28426U, 17639U, 
    28255U, 39748U, 17848U, 28474U, 39813U, 9259U, 17818U, 39349U, 
    28444U, 39786U, 17866U, 39388U, 28492U, 39837U, 8030U, 1075U, 
    8458U, 13515U, 1292U, 8703U, 14591U, 963U, 8332U, 13280U, 
    1180U, 8577U, 14373U, 1019U, 8395U, 13387U, 1236U, 8640U, 
    14463U, 1128U, 8518U, 13667U, 1345U, 8763U, 14717U, 18573U, 
    30812U, 19274U, 31528U, 5571U, 13428U, 6673U, 29303U, 14512U, 
    7033U, 19562U, 31901U, 10525U, 2000U, 13193U, 6411U, 28702U, 
    14294U, 6837U, 18082U, 30334U, 9993U, 2073U, 2177U, 6542U, 
    28847U, 2314U, 6935U, 18612U, 30851U, 10089U, 6333U, 13589U, 
    29499U, 14648U, 20073U, 32438U, 10621U, 5425U, 1731U, 3703U, 
    6312U, 1876U, 3832U, 17657U, 28273U, 17581U, 28212U, 17664U, 
    28280U, 28032U, 27349U, 27812U, 28168U, 17587U, 28218U, 17692U, 
    28308U, 17671U, 28287U, 17705U, 28322U, 17678U, 28294U, 17711U, 
    28337U, 17685U, 28301U, 17717U, 28343U, 17739U, 28384U, 17792U, 
    28418U, 17724U, 28350U, 17746U, 28401U, 17884U, 28510U, 7861U, 
    17423U, 17896U, 1059U, 8440U, 13491U, 1276U, 8685U, 14560U, 
    947U, 8314U, 13256U, 1164U, 8559U, 14342U, 1003U, 8377U, 
    13371U, 1220U, 8622U, 14447U, 1114U, 8502U, 13646U, 1331U, 
    8747U, 14690U, 8839U, 7175U, 8905U, 7263U, 8795U, 7131U, 
    8861U, 7197U, 8817U, 7153U, 8883U, 7230U, 18555U, 30794U, 
    19256U, 31510U, 1091U, 8476U, 13531U, 1308U, 8721U, 14607U, 
    979U, 8350U, 13296U, 1196U, 8595U, 14389U, 1035U, 8413U, 
    13403U, 1252U, 8658U, 14479U, 1142U, 8534U, 13681U, 1359U, 
    8779U, 14731U, 8850U, 7186U, 8916U, 7274U, 8806U, 7142U, 
    8872U, 7208U, 8828U, 7164U, 8894U, 7241U, 18582U, 30821U, 
    19283U, 31537U, 14052U, 15386U, 14094U, 15428U, 17439U, 17908U, 
    8094U, 3054U, 4758U, 424U, 9704U, 17455U, 28097U, 27430U, 
    17132U, 27893U, 17505U, 28128U, 27453U, 27916U, 17619U, 39311U, 
    28235U, 39735U, 17819U, 39350U, 28445U, 39787U, 17649U, 39324U, 
    28265U, 39761U, 17867U, 39389U, 28493U, 39838U, 8135U, 3113U, 
    4817U, 483U, 11145U, 7778U, 7825U, 8263U, 8288U, 9492U, 
    7723U, 7807U, 9361U, 10942U, 28082U, 27423U, 27886U, 17787U, 
    16360U, 17037U, 16483U, 17086U, 15651U, 34458U, 16638U, 17216U, 
    2769U, 2530U, 4115U, 16532U, 17122U, 2682U, 15660U, 2456U, 
    4041U, 34076U, 5580U, 13441U, 6687U, 29316U, 14520U, 7042U, 
    19570U, 31909U, 10537U, 2009U, 13206U, 6425U, 28715U, 14302U, 
    6846U, 18090U, 30342U, 10005U, 2082U, 2192U, 6556U, 28860U, 
    2324U, 6944U, 18620U, 30859U, 10101U, 6340U, 13601U, 29511U, 
    14655U, 20080U, 32445U, 10632U, 20901U, 33296U, 22753U, 35213U, 
    16339U, 17017U, 17314U, 16414U, 663U, 26687U, 16616U, 17194U, 
    2742U, 2504U, 4089U, 2844U, 4343U, 248U, 2592U, 4177U, 
    94U, 598U, 21258U, 39497U, 33630U, 39947U, 23113U, 39601U, 
    35575U, 40051U, 16303U, 16981U, 17284U, 16384U, 630U, 26636U, 
    2968U, 16577U, 4672U, 17155U, 2694U, 338U, 2468U, 4053U, 
    2805U, 4304U, 209U, 2553U, 4138U, 55U, 568U, 9596U, 
    8973U, 9457U, 9718U, 3767U, 9677U, 3758U, 13089U, 3991U, 
    17730U, 4421U, 28375U, 4869U, 13182U, 4002U, 13811U, 4015U, 
    14908U, 4028U, 5634U, 13572U, 14631U, 19912U, 32247U, 2063U, 
    13337U, 14413U, 18521U, 30760U, 2146U, 2281U, 2384U, 19222U, 
    31484U, 6396U, 13718U, 14752U, 10979U, 20134U, 32505U, 1989U, 
    3980U, 3165U, 4891U, 9301U, 8142U, 3123U, 4827U, 493U, 
    19902U, 32237U, 18511U, 30750U, 19212U, 31474U, 21280U, 33652U, 
    23135U, 35597U, 28365U, 28328U, 28391U, 28356U, 3153U, 4857U, 
    511U, 3176U, 4902U, 523U, 28314U, 7555U, 20968U, 33363U, 
    22820U, 35280U, 21002U, 33387U, 22854U, 35326U, 3898U, 24344U, 
    36805U, 20938U, 33333U, 25208U, 37640U, 22790U, 35250U, 21266U, 
    39509U, 33638U, 39959U, 23121U, 39613U, 35583U, 40063U, 24299U, 
    36760U, 20897U, 33292U, 25163U, 37595U, 22749U, 35209U, 23301U, 
    35771U, 20491U, 32886U, 23315U, 35785U, 20539U, 32934U, 20529U, 
    32924U, 20051U, 32416U, 24413U, 36874U, 21032U, 33407U, 25288U, 
    37720U, 22884U, 35346U, 24354U, 36815U, 20947U, 33342U, 25218U, 
    37650U, 22799U, 35259U, 9574U, 14171U, 15505U, 14039U, 15373U, 
    14207U, 15541U, 14081U, 15415U, 24475U, 36936U, 21121U, 33496U, 
    25350U, 37782U, 22985U, 35460U, 5992U, 6007U, 21384U, 33756U, 
    25397U, 37815U, 23229U, 35691U, 14196U, 39155U, 15530U, 39213U, 
    14071U, 39127U, 15405U, 39185U, 14242U, 39170U, 15576U, 39228U, 
    14113U, 39141U, 15447U, 39199U, 21363U, 39243U, 33735U, 39284U, 
    23208U, 39256U, 35670U, 39297U, 21308U, 33680U, 23163U, 35625U, 
    24262U, 36723U, 20807U, 33202U, 25139U, 37571U, 22699U, 35159U, 
    28577U, 23852U, 36313U, 24817U, 37263U, 34613U, 28591U, 23865U, 
    36326U, 25113U, 37545U, 35103U, 25126U, 37558U, 22670U, 35130U, 
    24844U, 37290U, 22208U, 34671U, 24275U, 36736U, 20838U, 33233U, 
    30147U, 37152U, 29777U, 34083U, 18875U, 31122U, 21882U, 34293U, 
    23042U, 35504U, 18678U, 30925U, 21939U, 34350U, 21199U, 33571U, 
    19142U, 31397U, 23085U, 35547U, 21230U, 33602U, 18926U, 31173U, 
    21927U, 34338U, 28562U, 23838U, 36299U, 24803U, 37249U, 22147U, 
    34596U, 24830U, 37276U, 22191U, 34654U, 18842U, 31089U, 21853U, 
    34264U, 18893U, 31140U, 21898U, 34309U, 24488U, 36949U, 21133U, 
    33508U, 25363U, 37795U, 22997U, 35472U, 21399U, 39548U, 33771U, 
    39998U, 23244U, 39652U, 35706U, 40102U, 14062U, 15396U, 14232U, 
    15566U, 14104U, 15438U, 17776U, 28407U, 17939U, 28516U, 29457U, 
    32299U, 29472U, 32341U, 29962U, 35415U, 5055U, 29098U, 12651U, 
    19347U, 11831U, 31686U, 12861U, 9848U, 10256U, 16042U, 11447U, 
    27082U, 12267U, 16720U, 11643U, 27554U, 12463U, 15742U, 11251U, 
    26782U, 12071U, 29228U, 12737U, 19477U, 11917U, 31816U, 12947U, 
    9958U, 10426U, 16192U, 11545U, 27232U, 12365U, 16870U, 11741U, 
    27704U, 12561U, 15892U, 11349U, 26932U, 12169U, 29148U, 19397U, 
    31736U, 10322U, 16100U, 27140U, 16778U, 27612U, 15800U, 26840U, 
    29278U, 19527U, 31866U, 10492U, 16250U, 27290U, 16928U, 27762U, 
    15950U, 26990U, 29043U, 12592U, 19292U, 11772U, 31631U, 12802U, 
    9773U, 10185U, 15979U, 11380U, 27019U, 12200U, 16657U, 11576U, 
    27491U, 12396U, 15679U, 11184U, 26719U, 12004U, 29173U, 12678U, 
    19422U, 11858U, 31761U, 12888U, 9883U, 10355U, 16129U, 11478U, 
    27169U, 12298U, 16807U, 11674U, 27641U, 12494U, 15829U, 11282U, 
    26869U, 12102U, 29083U, 12635U, 19332U, 11815U, 31671U, 12845U, 
    9828U, 10237U, 16025U, 11429U, 27065U, 12249U, 16703U, 11625U, 
    27537U, 12445U, 15725U, 11233U, 26765U, 12053U, 29213U, 12721U, 
    19462U, 11901U, 31801U, 12931U, 9938U, 10407U, 16175U, 11527U, 
    27215U, 12347U, 16853U, 11723U, 27687U, 12543U, 15875U, 11331U, 
    26915U, 12151U, 29058U, 12608U, 19307U, 11788U, 31646U, 12818U, 
    9793U, 10204U, 15996U, 11398U, 27036U, 12218U, 16674U, 11594U, 
    27508U, 12414U, 15696U, 11202U, 26736U, 12022U, 29188U, 12694U, 
    19437U, 11874U, 31776U, 12904U, 9903U, 10374U, 16146U, 11496U, 
    27186U, 12316U, 16824U, 11692U, 27658U, 12512U, 15846U, 11300U, 
    26886U, 12120U, 29123U, 19372U, 31711U, 10289U, 16071U, 27111U, 
    16749U, 27583U, 15771U, 26811U, 29253U, 19502U, 31841U, 10459U, 
    16221U, 27261U, 16899U, 27733U, 15921U, 26961U, 29110U, 12664U, 
    19359U, 11844U, 31698U, 12874U, 9865U, 10272U, 16056U, 11462U, 
    27096U, 12282U, 16734U, 11658U, 27568U, 12478U, 15756U, 11266U, 
    26796U, 12086U, 29240U, 12750U, 19489U, 11930U, 31828U, 12960U, 
    9975U, 10442U, 16206U, 11560U, 27246U, 12380U, 16884U, 11756U, 
    27718U, 12576U, 15906U, 11364U, 26946U, 12184U, 29160U, 19409U, 
    31748U, 10338U, 16114U, 27154U, 16792U, 27626U, 15814U, 26854U, 
    29290U, 19539U, 31878U, 10508U, 16264U, 27304U, 16942U, 27776U, 
    15964U, 27004U, 29070U, 12621U, 19319U, 11801U, 31658U, 12831U, 
    9810U, 10220U, 16010U, 11413U, 27050U, 12233U, 16688U, 11609U, 
    27522U, 12429U, 15710U, 11217U, 26750U, 12037U, 29200U, 12707U, 
    19449U, 11887U, 31788U, 12917U, 9920U, 10390U, 16160U, 11511U, 
    27200U, 12331U, 16838U, 11707U, 27672U, 12527U, 15860U, 11315U, 
    26900U, 12135U, 29135U, 19384U, 31723U, 10305U, 16085U, 27125U, 
    16763U, 27597U, 15785U, 26825U, 29265U, 19514U, 31853U, 10475U, 
    16235U, 27275U, 16913U, 27747U, 15935U, 26975U, 21164U, 11958U, 
    33526U, 12988U, 23028U, 11983U, 35490U, 13013U, 21436U, 33808U, 
    23271U, 35733U, 21042U, 33417U, 22894U, 35356U, 20956U, 33351U, 
    22808U, 35268U, 21091U, 33466U, 22943U, 35405U, 21080U, 33455U, 
    22932U, 35394U, 24333U, 36794U, 20928U, 33323U, 25197U, 37629U, 
    22780U, 35240U, 24312U, 36773U, 20909U, 33304U, 25176U, 37608U, 
    22761U, 35221U, 19964U, 32314U, 19991U, 32356U, 22953U, 35428U, 
    25423U, 23338U, 9482U, 9747U, 3797U, 30119U, 24498U, 29723U, 
    21142U, 30220U, 25373U, 29996U, 23006U, 24512U, 39692U, 36959U, 
    40142U, 21155U, 39483U, 33517U, 39933U, 25387U, 39720U, 37805U, 
    40170U, 23019U, 39587U, 35481U, 40037U, 21427U, 39561U, 33799U, 
    40011U, 23262U, 39665U, 35724U, 40115U, 8966U, 17759U, 7765U, 
    24424U, 39678U, 36885U, 40128U, 21054U, 39470U, 33429U, 39920U, 
    25299U, 39706U, 37731U, 40156U, 22906U, 39574U, 35368U, 40024U, 
    21350U, 39535U, 33722U, 39985U, 23195U, 39639U, 35657U, 40089U, 
    8232U, 1501U, 3344U, 8958U, 34220U, 21446U, 33818U, 30085U, 
    24288U, 36749U, 10834U, 29672U, 20867U, 33262U, 10723U, 30186U, 
    25152U, 37584U, 10864U, 29932U, 22728U, 35188U, 10764U, 24729U, 
    37175U, 22047U, 34466U, 21735U, 34145U, 23069U, 35531U, 30074U, 
    23891U, 36339U, 10819U, 29594U, 20197U, 32555U, 10709U, 30234U, 
    25433U, 37841U, 10894U, 30018U, 39906U, 23347U, 35808U, 10805U, 
    35302U, 29682U, 20979U, 29942U, 22831U, 35291U, 29692U, 21022U, 
    29952U, 22874U, 29487U, 27981U, 3239U, 5196U, 27938U, 3211U, 
    5013U, 27996U, 3254U, 5211U, 27952U, 3225U, 5041U, 23878U, 
    20185U, 30160U, 29854U, 30096U, 29702U, 30197U, 29975U, 29789U, 
    34120U, 29814U, 31606U, 21779U, 31546U, 39269U, 31620U, 39069U, 
    29746U, 21408U, 33780U, 10751U, 29030U, 31593U, 24741U, 37187U, 
    22058U, 34477U, 24754U, 37200U, 22070U, 34489U, 29802U, 34133U, 
    30009U, 23253U, 35715U, 10792U, 30108U, 24464U, 36925U, 10849U, 
    29713U, 21111U, 33486U, 10737U, 30209U, 25339U, 37771U, 10879U, 
    29986U, 22975U, 35450U, 10778U, 21748U, 34158U, 21806U, 34203U, 
    21792U, 34189U, 14253U, 15587U, 14123U, 15457U, 17599U, 17914U, 
    18116U, 30376U, 18646U, 30893U, 7906U, 1637U, 3585U, 1559U, 
    3454U, 24403U, 36864U, 21013U, 33398U, 25267U, 37699U, 22865U, 
    35337U, 21331U, 39522U, 33703U, 39972U, 23186U, 39626U, 35648U, 
    40076U, 18199U, 30459U, 18777U, 31024U, 8018U, 9276U, 24434U, 
    36895U, 21063U, 33438U, 25309U, 37741U, 22915U, 35377U, 6022U, 
    5802U, 6134U, 5897U, 6034U, 5814U, 6146U, 5909U, 6046U, 
    5826U, 6158U, 5921U, 25561U, 37969U, 23528U, 35989U, 24097U, 
    36558U, 20440U, 32835U, 25574U, 37982U, 23540U, 36001U, 24110U, 
    36571U, 20452U, 32847U, 23912U, 36360U, 20225U, 32583U, 24191U, 
    36652U, 20663U, 33058U, 24857U, 37303U, 22246U, 34709U, 23977U, 
    36438U, 20303U, 32698U, 25673U, 38081U, 23689U, 36150U, 24011U, 
    36472U, 20334U, 32729U, 25707U, 38115U, 23720U, 36181U, 25551U, 
    37959U, 23519U, 35980U, 20037U, 32402U, 19937U, 32272U, 24719U, 
    37165U, 21994U, 34405U, 24242U, 36703U, 20772U, 33167U, 23933U, 
    36381U, 20244U, 32602U, 25587U, 37995U, 23560U, 36021U, 14158U, 
    15492U, 14027U, 15361U, 24084U, 36545U, 20428U, 32823U, 14266U, 
    15600U, 14135U, 15469U, 24046U, 36507U, 20385U, 32780U, 24568U, 
    37015U, 21479U, 33851U, 25018U, 37464U, 22492U, 34965U, 25742U, 
    38150U, 23761U, 36222U, 22330U, 34793U, 30028U, 12792U, 23357U, 
    11994U, 35818U, 13024U, 23954U, 36415U, 20272U, 32657U, 24522U, 
    36969U, 21174U, 33536U, 24994U, 37440U, 22451U, 34914U, 25650U, 
    38058U, 23658U, 36119U, 20157U, 32527U, 20501U, 32896U, 22011U, 
    34422U, 22611U, 35071U, 25792U, 38200U, 21823U, 34234U, 9020U, 
    8148U, 20005U, 32370U, 24034U, 36495U, 20365U, 32760U, 24556U, 
    37003U, 21459U, 33831U, 25006U, 37452U, 22472U, 34945U, 25730U, 
    38138U, 23741U, 36202U, 20171U, 32541U, 20515U, 32910U, 22025U, 
    34436U, 22625U, 35085U, 25806U, 38214U, 21836U, 34247U, 9037U, 
    8165U, 20021U, 32386U, 13733U, 14767U, 13771U, 14868U, 13822U, 
    14981U, 13751U, 14785U, 13801U, 14898U, 13840U, 14999U, 13915U, 
    15147U, 13897U, 15119U, 19951U, 32286U, 19978U, 32328U, 24232U, 
    36693U, 29659U, 12764U, 20790U, 11944U, 33185U, 12974U, 29919U, 
    12778U, 22682U, 11969U, 35142U, 12999U, 13936U, 15198U, 24377U, 
    36838U, 13780U, 14877U, 20989U, 33374U, 13970U, 15274U, 25241U, 
    37673U, 13850U, 15009U, 22841U, 35313U, 13949U, 15211U, 25277U, 
    37709U, 13960U, 15264U, 29622U, 32678U, 4943U, 29736U, 33557U, 
    29874U, 34935U, 30055U, 15128U, 20579U, 32974U, 22091U, 34540U, 
    23417U, 35878U, 22255U, 34718U, 24180U, 36641U, 20653U, 33048U, 
    6088U, 5868U, 6200U, 5963U, 20590U, 32985U, 22102U, 34551U, 
    23454U, 35915U, 22343U, 34806U, 21664U, 34023U, 22551U, 35011U, 
    21568U, 33927U, 22540U, 35000U, 25540U, 37948U, 23509U, 35970U, 
    6117U, 6229U, 23396U, 35857U, 22235U, 34698U, 24133U, 36594U, 
    20602U, 32997U, 6074U, 5854U, 6186U, 5949U, 21557U, 33916U, 
    25493U, 37901U, 23466U, 35927U, 20283U, 32668U, 21185U, 33547U, 
    22462U, 34925U, 14147U, 13148U, 15481U, 20672U, 33067U, 21710U, 
    34095U, 21952U, 34363U, 20683U, 33078U, 21722U, 34107U, 21964U, 
    34375U, 21639U, 33998U, 23818U, 36279U, 21616U, 33975U, 23807U, 
    36268U, 21651U, 34010U, 21627U, 33986U, 6058U, 5838U, 6170U, 
    5933U, 24653U, 37086U, 21579U, 33938U, 30133U, 24639U, 29764U, 
    21544U, 30172U, 25056U, 29906U, 22527U, 24023U, 36484U, 20355U, 
    32750U, 24545U, 36992U, 21417U, 33789U, 25719U, 38127U, 23731U, 
    36192U, 24073U, 36534U, 20418U, 32813U, 24595U, 37042U, 21504U, 
    33876U, 25781U, 38189U, 23797U, 36258U, 23988U, 36449U, 20313U, 
    32708U, 24534U, 36981U, 21340U, 33712U, 25684U, 38092U, 23699U, 
    36160U, 24062U, 36523U, 20400U, 32795U, 24584U, 37031U, 21494U, 
    33866U, 25770U, 38178U, 23787U, 36248U, 27966U, 36391U, 27924U, 
    32611U, 24154U, 36615U, 20621U, 33016U, 24777U, 37223U, 22123U, 
    34572U, 25514U, 37922U, 23485U, 35946U, 24948U, 37394U, 22366U, 
    34829U, 24693U, 37126U, 21676U, 34035U, 25070U, 37502U, 22563U, 
    35023U, 24167U, 36628U, 20633U, 33028U, 24790U, 37236U, 22135U, 
    34584U, 25527U, 37935U, 23497U, 35958U, 24961U, 37407U, 22378U, 
    34841U, 24706U, 37139U, 21688U, 34047U, 25083U, 37515U, 22575U, 
    35035U, 24895U, 37341U, 22292U, 34755U, 6102U, 5882U, 6214U, 
    5977U, 25758U, 38166U, 23776U, 36237U, 25597U, 38005U, 23569U, 
    36030U, 24211U, 36672U, 20741U, 33136U, 25618U, 38026U, 23617U, 
    36078U, 24936U, 37382U, 22355U, 34818U, 25096U, 37528U, 22596U, 
    35056U, 29836U, 21985U, 34396U, 13742U, 29632U, 14776U, 20376U, 
    32771U, 13792U, 29755U, 14889U, 21470U, 33842U, 13831U, 29897U, 
    14990U, 22483U, 34956U, 13906U, 30065U, 15138U, 23752U, 36213U, 
    25454U, 37862U, 23407U, 35868U, 29604U, 20207U, 32565U, 29641U, 
    20549U, 32944U, 29845U, 22082U, 34531U, 30037U, 23366U, 35827U, 
    29613U, 20253U, 32638U, 29650U, 20711U, 33106U, 29865U, 22400U, 
    34863U, 30046U, 23587U, 36048U, 23922U, 36370U, 20234U, 32592U, 
    13925U, 15167U, 13761U, 14816U, 13983U, 15297U, 13875U, 15055U, 
    13995U, 15309U, 13886U, 15066U, 23943U, 36404U, 20262U, 32647U, 
    24251U, 36712U, 20780U, 33175U, 25639U, 38047U, 23648U, 36109U, 
    15222U, 14919U, 15178U, 24201U, 36662U, 14826U, 20720U, 33115U, 
    15244U, 24974U, 37420U, 14939U, 22409U, 34872U, 24617U, 37064U, 
    21524U, 33896U, 25034U, 37480U, 22507U, 34980U, 15321U, 25608U, 
    38016U, 15077U, 23596U, 36057U, 15157U, 24123U, 36584U, 14795U, 
    20558U, 32953U, 24606U, 37053U, 21514U, 33886U, 15287U, 25444U, 
    37852U, 15021U, 23375U, 35836U, 15233U, 14929U, 15188U, 24222U, 
    36683U, 14847U, 20751U, 33146U, 15254U, 24984U, 37430U, 14960U, 
    22430U, 34893U, 24628U, 37075U, 21534U, 33906U, 25045U, 37491U, 
    22517U, 34990U, 15331U, 25629U, 38037U, 15098U, 23627U, 36088U, 
    23902U, 36350U, 20216U, 32574U, 24144U, 36605U, 20612U, 33007U, 
    24767U, 37213U, 22114U, 34563U, 23966U, 36427U, 20293U, 32688U, 
    25662U, 38070U, 23679U, 36140U, 23999U, 36460U, 20323U, 32718U, 
    25695U, 38103U, 23709U, 36170U, 25504U, 37912U, 23476U, 35937U, 
    25413U, 37831U, 23329U, 35799U, 25465U, 37873U, 23428U, 35889U, 
    24867U, 37313U, 22266U, 34729U, 24906U, 37352U, 22302U, 34765U, 
    24665U, 37098U, 21590U, 33949U, 25479U, 37887U, 23441U, 35902U, 
    24881U, 37327U, 22279U, 34742U, 24921U, 37367U, 22316U, 34779U, 
    24679U, 37112U, 21603U, 33962U, 25104U, 37536U, 22603U, 35063U, 
    17963U, 39428U, 28532U, 39864U, 17809U, 39336U, 28435U, 39773U, 
    17857U, 39375U, 28483U, 17608U, 28224U, 17799U, 28425U, 17638U, 
    28254U, 39747U, 17847U, 28473U, 39812U, 17627U, 28243U, 17836U, 
    28462U, 17972U, 39441U, 28541U, 39877U, 17817U, 39348U, 28443U, 
    39785U, 17865U, 39387U, 28491U, 14184U, 15518U, 14051U, 15385U, 
    14220U, 15554U, 14093U, 15427U, 17953U, 39414U, 28522U, 39850U, 
    17618U, 39310U, 28234U, 39734U, 17983U, 39456U, 28552U, 39892U, 
    17827U, 39362U, 28453U, 39799U, 17648U, 39323U, 28264U, 17875U, 
    39401U, 28501U, 9491U, 24323U, 36784U, 20919U, 33314U, 25187U, 
    37619U, 22771U, 35231U, 21257U, 39496U, 33629U, 39946U, 23112U, 
    39600U, 35574U, 40050U, 24453U, 36914U, 21101U, 33476U, 25328U, 
    37760U, 22965U, 35440U, 21279U, 33651U, 23134U, 35596U, 24364U, 
    36825U, 20967U, 33362U, 25228U, 37660U, 22819U, 35279U, 24390U, 
    36851U, 21001U, 33386U, 25254U, 37686U, 22853U, 35325U, 24443U, 
    36904U, 21071U, 33446U, 25318U, 37750U, 22923U, 35385U, 8981U, 
    9446U, 550U, 9546U, 7522U, 9699U, 7829U, 7532U, 1942U, 
    3907U, 7949U, 3413U, 7967U, 3435U, 9506U, 19596U, 31943U, 
    18127U, 30387U, 18657U, 30904U, 20094U, 32459U, 28623U, 19689U, 
    32036U, 28605U, 4880U, 18232U, 30492U, 28614U, 18810U, 31057U, 
    20112U, 32477U, 8088U, 7741U, 7697U, 9512U, 7583U, 7707U, 
    9759U, 9664U, 5625U, 13552U, 6756U, 29398U, 14623U, 7096U, 
    19793U, 32156U, 10597U, 2054U, 13317U, 6494U, 28788U, 14405U, 
    6900U, 18383U, 30650U, 10065U, 2137U, 2257U, 6625U, 28959U, 
    2374U, 6998U, 19076U, 31339U, 10161U, 6389U, 13700U, 29561U, 
    14745U, 20127U, 32498U, 10687U, 21072U, 33447U, 22924U, 35386U, 
    9475U, 3684U, 7999U, 3464U, 9738U, 3786U, 9766U, 801U, 
    5794U, 7933U, 
};

static inline void InitX86MCInstrInfo(MCInstrInfo *II) {
  II->InitMCInstrInfo(X86Insts, X86InstrNameIndices, X86InstrNameData, 4474);
}

} // End llvm namespace 
#endif // GET_INSTRINFO_MC_DESC


#ifdef GET_INSTRINFO_HEADER
#undef GET_INSTRINFO_HEADER
namespace llvm {
struct X86GenInstrInfo : public TargetInstrInfoImpl {
  explicit X86GenInstrInfo(int SO = -1, int DO = -1);
};
} // End llvm namespace 
#endif // GET_INSTRINFO_HEADER


#ifdef GET_INSTRINFO_CTOR
#undef GET_INSTRINFO_CTOR
namespace llvm {
extern const MCInstrDesc X86Insts[];
extern const unsigned X86InstrNameIndices[];
extern const char X86InstrNameData[];
X86GenInstrInfo::X86GenInstrInfo(int SO, int DO)
  : TargetInstrInfoImpl(SO, DO) {
  InitMCInstrInfo(X86Insts, X86InstrNameIndices, X86InstrNameData, 4474);
}
} // End llvm namespace 
#endif // GET_INSTRINFO_CTOR

